window.alert("hola chicas");

function Lz(b) {
    return (b < 10 ? "0" : "") + b
}
if (typeof console == "undefined") {
    console = {
        log: function() {}
    }
}
var BLcnt = 0;
var setTimeoutHolder = null;
var TopLeftTabs = null;
var TopRightTabs = null;
var TopRightPreviousTab = "";
var TopRightCurrentTab = "";
var Tree_el_old = null;
var Planning_soc_id = -1;
var Planning_soc_name = "";
var Planning_age_id = -1;
var Planning_age_name = "";
var Planning_date_is_set = true;
var StartTime = new Date();
var Planning_date = StartTime.getFullYear() + "-" + Lz(StartTime.getMonth() + 1) + "-" + Lz(StartTime.getDate());
var heartbeat_timer;
var heartbeat_check_timer;
var StMsgEditINSTANCE = null;
var StMsg_View_Current_Page = 0;
var Is_St_Msg_Editing = 0;
var clients_search_form_ords = new Array(5);
var SelA = new Array(5);
var CheA = new Array(5);
var my_Steps = new Array();
var my_CurrentStep = 0;
var my_LastStepResult = 0;
var my_Execute_Handler = null;
var my_Close_After_Save = false;
var my_Initiator_Obj = null;
var my_LSteps = new Array();
var my_LCurrentStep = 0;
var my_LCurrentIDD = 0;
var my_LCurrentInterID = -1;
var my_LCurrentCallID = -1;
var my_LLastStepResult = 0;
var my_LExecute_Handler = null;
var IE = false;
var HiddenStorageCounter = -1;
var HiddenStorageIsLoaded = false;
var HiddenStorageTimer;
var TempStorageA = "";
var printwindowv = null;
var attachments = null;
var id_inter_pour_agence_virtuelle = -1;
var execute_tool_tip_for_ShowToolTipT = false;
/*
 * jQuery JavaScript Library v1.6.2
 * http://jquery.com/
 *
 * Copyright 2011, John Resig
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 *
 * Includes Sizzle.js
 * http://sizzlejs.com/
 * Copyright 2011, The Dojo Foundation
 * Released under the MIT, BSD, and GPL Licenses.
 *
 * Date: Thu Jun 30 14:16:56 2011 -0400
 */
(function(window, undefined) {
    var document = window.document,
        navigator = window.navigator,
        location = window.location;
    var jQuery = (function() {
        var jQuery = function(selector, context) {
                return new jQuery.fn.init(selector, context, rootjQuery)
            },
            _jQuery = window.jQuery,
            _$ = window.$,
            rootjQuery, quickExpr = /^(?:[^<]*(<[\w\W]+>)[^>]*$|#([\w\-]*)$)/,
            rnotwhite = /\S/,
            trimLeft = /^\s+/,
            trimRight = /\s+$/,
            rdigit = /\d/,
            rsingleTag = /^<(\w+)\s*\/?>(?:<\/\1>)?$/,
            rvalidchars = /^[\],:{}\s]*$/,
            rvalidescape = /\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g,
            rvalidtokens = /"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g,
            rvalidbraces = /(?:^|:|,)(?:\s*\[)+/g,
            rwebkit = /(webkit)[ \/]([\w.]+)/,
            ropera = /(opera)(?:.*version)?[ \/]([\w.]+)/,
            rmsie = /(msie) ([\w.]+)/,
            rmozilla = /(mozilla)(?:.*? rv:([\w.]+))?/,
            rdashAlpha = /-([a-z])/ig,
            fcamelCase = function(all, letter) {
                return letter.toUpperCase()
            },
            userAgent = navigator.userAgent,
            browserMatch, readyList, DOMContentLoaded, toString = Object.prototype.toString,
            hasOwn = Object.prototype.hasOwnProperty,
            push = Array.prototype.push,
            slice = Array.prototype.slice,
            trim = String.prototype.trim,
            indexOf = Array.prototype.indexOf,
            class2type = {};
        jQuery.fn = jQuery.prototype = {
            constructor: jQuery,
            init: function(selector, context, rootjQuery) {
                var match, elem, ret, doc;
                if (!selector) {
                    return this
                }
                if (selector.nodeType) {
                    this.context = this[0] = selector;
                    this.length = 1;
                    return this
                }
                if (selector === "body" && !context && document.body) {
                    this.context = document;
                    this[0] = document.body;
                    this.selector = selector;
                    this.length = 1;
                    return this
                }
                if (typeof selector === "string") {
                    if (selector.charAt(0) === "<" && selector.charAt(selector.length - 1) === ">" && selector.length >= 3) {
                        match = [null, selector, null]
                    } else {
                        match = quickExpr.exec(selector)
                    }
                    if (match && (match[1] || !context)) {
                        if (match[1]) {
                            context = context instanceof jQuery ? context[0] : context;
                            doc = (context ? context.ownerDocument || context : document);
                            ret = rsingleTag.exec(selector);
                            if (ret) {
                                if (jQuery.isPlainObject(context)) {
                                    selector = [document.createElement(ret[1])];
                                    jQuery.fn.attr.call(selector, context, true)
                                } else {
                                    selector = [doc.createElement(ret[1])]
                                }
                            } else {
                                ret = jQuery.buildFragment([match[1]], [doc]);
                                selector = (ret.cacheable ? jQuery.clone(ret.fragment) : ret.fragment).childNodes
                            }
                            return jQuery.merge(this, selector)
                        } else {
                            elem = document.getElementById(match[2]);
                            if (elem && elem.parentNode) {
                                if (elem.id !== match[2]) {
                                    return rootjQuery.find(selector)
                                }
                                this.length = 1;
                                this[0] = elem
                            }
                            this.context = document;
                            this.selector = selector;
                            return this
                        }
                    } else {
                        if (!context || context.jquery) {
                            return (context || rootjQuery).find(selector)
                        } else {
                            return this.constructor(context).find(selector)
                        }
                    }
                } else {
                    if (jQuery.isFunction(selector)) {
                        return rootjQuery.ready(selector)
                    }
                }
                if (selector.selector !== undefined) {
                    this.selector = selector.selector;
                    this.context = selector.context
                }
                return jQuery.makeArray(selector, this)
            },
            selector: "",
            jquery: "1.6.2",
            length: 0,
            size: function() {
                return this.length
            },
            toArray: function() {
                return slice.call(this, 0)
            },
            get: function(num) {
                return num == null ? this.toArray() : (num < 0 ? this[this.length + num] : this[num])
            },
            pushStack: function(elems, name, selector) {
                var ret = this.constructor();
                if (jQuery.isArray(elems)) {
                    push.apply(ret, elems)
                } else {
                    jQuery.merge(ret, elems)
                }
                ret.prevObject = this;
                ret.context = this.context;
                if (name === "find") {
                    ret.selector = this.selector + (this.selector ? " " : "") + selector
                } else {
                    if (name) {
                        ret.selector = this.selector + "." + name + "(" + selector + ")"
                    }
                }
                return ret
            },
            each: function(callback, args) {
                return jQuery.each(this, callback, args)
            },
            ready: function(fn) {
                jQuery.bindReady();
                readyList.done(fn);
                return this
            },
            eq: function(i) {
                return i === -1 ? this.slice(i) : this.slice(i, +i + 1)
            },
            first: function() {
                return this.eq(0)
            },
            last: function() {
                return this.eq(-1)
            },
            slice: function() {
                return this.pushStack(slice.apply(this, arguments), "slice", slice.call(arguments).join(","))
            },
            map: function(callback) {
                return this.pushStack(jQuery.map(this, function(elem, i) {
                    return callback.call(elem, i, elem)
                }))
            },
            end: function() {
                return this.prevObject || this.constructor(null)
            },
            push: push,
            sort: [].sort,
            splice: [].splice
        };
        jQuery.fn.init.prototype = jQuery.fn;
        jQuery.extend = jQuery.fn.extend = function() {
            var options, name, src, copy, copyIsArray, clone, target = arguments[0] || {},
                i = 1,
                length = arguments.length,
                deep = false;
            if (typeof target === "boolean") {
                deep = target;
                target = arguments[1] || {};
                i = 2
            }
            if (typeof target !== "object" && !jQuery.isFunction(target)) {
                target = {}
            }
            if (length === i) {
                target = this;
                --i
            }
            for (; i < length; i++) {
                if ((options = arguments[i]) != null) {
                    for (name in options) {
                        src = target[name];
                        copy = options[name];
                        if (target === copy) {
                            continue
                        }
                        if (deep && copy && (jQuery.isPlainObject(copy) || (copyIsArray = jQuery.isArray(copy)))) {
                            if (copyIsArray) {
                                copyIsArray = false;
                                clone = src && jQuery.isArray(src) ? src : []
                            } else {
                                clone = src && jQuery.isPlainObject(src) ? src : {}
                            }
                            target[name] = jQuery.extend(deep, clone, copy)
                        } else {
                            if (copy !== undefined) {
                                target[name] = copy
                            }
                        }
                    }
                }
            }
            return target
        };
        jQuery.extend({
            noConflict: function(deep) {
                if (window.$ === jQuery) {
                    window.$ = _$
                }
                if (deep && window.jQuery === jQuery) {
                    window.jQuery = _jQuery
                }
                return jQuery
            },
            isReady: false,
            readyWait: 1,
            holdReady: function(hold) {
                if (hold) {
                    jQuery.readyWait++
                } else {
                    jQuery.ready(true)
                }
            },
            ready: function(wait) {
                if ((wait === true && !--jQuery.readyWait) || (wait !== true && !jQuery.isReady)) {
                    if (!document.body) {
                        return setTimeout(jQuery.ready, 1)
                    }
                    jQuery.isReady = true;
                    if (wait !== true && --jQuery.readyWait > 0) {
                        return
                    }
                    readyList.resolveWith(document, [jQuery]);
                    if (jQuery.fn.trigger) {
                        jQuery(document).trigger("ready").unbind("ready")
                    }
                }
            },
            bindReady: function() {
                if (readyList) {
                    return
                }
                readyList = jQuery._Deferred();
                if (document.readyState === "complete") {
                    return setTimeout(jQuery.ready, 1)
                }
                if (document.addEventListener) {
                    document.addEventListener("DOMContentLoaded", DOMContentLoaded, false);
                    window.addEventListener("load", jQuery.ready, false)
                } else {
                    if (document.attachEvent) {
                        document.attachEvent("onreadystatechange", DOMContentLoaded);
                        window.attachEvent("onload", jQuery.ready);
                        var toplevel = false;
                        try {
                            toplevel = window.frameElement == null
                        } catch (e) {}
                        if (document.documentElement.doScroll && toplevel) {
                            doScrollCheck()
                        }
                    }
                }
            },
            isFunction: function(obj) {
                return jQuery.type(obj) === "function"
            },
            isArray: Array.isArray || function(obj) {
                return jQuery.type(obj) === "array"
            },
            isWindow: function(obj) {
                return obj && typeof obj === "object" && "setInterval" in obj
            },
            isNaN: function(obj) {
                return obj == null || !rdigit.test(obj) || isNaN(obj)
            },
            type: function(obj) {
                return obj == null ? String(obj) : class2type[toString.call(obj)] || "object"
            },
            isPlainObject: function(obj) {
                if (!obj || jQuery.type(obj) !== "object" || obj.nodeType || jQuery.isWindow(obj)) {
                    return false
                }
                if (obj.constructor && !hasOwn.call(obj, "constructor") && !hasOwn.call(obj.constructor.prototype, "isPrototypeOf")) {
                    return false
                }
                var key;
                for (key in obj) {}
                return key === undefined || hasOwn.call(obj, key)
            },
            isEmptyObject: function(obj) {
                for (var name in obj) {
                    return false
                }
                return true
            },
            error: function(msg) {
                throw msg
            },
            parseJSON: function(data) {
                if (typeof data !== "string" || !data) {
                    return null
                }
                data = jQuery.trim(data);
                if (window.JSON && window.JSON.parse) {
                    return window.JSON.parse(data)
                }
                if (rvalidchars.test(data.replace(rvalidescape, "@").replace(rvalidtokens, "]").replace(rvalidbraces, ""))) {
                    return (new Function("return " + data))()
                }
                jQuery.error("Invalid JSON: " + data)
            },
            parseXML: function(data, xml, tmp) {
                if (window.DOMParser) {
                    tmp = new DOMParser();
                    xml = tmp.parseFromString(data, "text/xml")
                } else {
                    xml = new ActiveXObject("Microsoft.XMLDOM");
                    xml.async = "false";
                    xml.loadXML(data)
                }
                tmp = xml.documentElement;
                if (!tmp || !tmp.nodeName || tmp.nodeName === "parsererror") {
                    jQuery.error("Invalid XML: " + data)
                }
                return xml
            },
            noop: function() {},
            globalEval: function(data) {
                if (data && rnotwhite.test(data)) {
                    (window.execScript || function(data) {
                        window["eval"].call(window, data)
                    })(data)
                }
            },
            camelCase: function(string) {
                return string.replace(rdashAlpha, fcamelCase)
            },
            nodeName: function(elem, name) {
                return elem.nodeName && elem.nodeName.toUpperCase() === name.toUpperCase()
            },
            each: function(object, callback, args) {
                var name, i = 0,
                    length = object.length,
                    isObj = length === undefined || jQuery.isFunction(object);
                if (args) {
                    if (isObj) {
                        for (name in object) {
                            if (callback.apply(object[name], args) === false) {
                                break
                            }
                        }
                    } else {
                        for (; i < length;) {
                            if (callback.apply(object[i++], args) === false) {
                                break
                            }
                        }
                    }
                } else {
                    if (isObj) {
                        for (name in object) {
                            if (callback.call(object[name], name, object[name]) === false) {
                                break
                            }
                        }
                    } else {
                        for (; i < length;) {
                            if (callback.call(object[i], i, object[i++]) === false) {
                                break
                            }
                        }
                    }
                }
                return object
            },
            trim: trim ? function(text) {
                return text == null ? "" : trim.call(text)
            } : function(text) {
                return text == null ? "" : text.toString().replace(trimLeft, "").replace(trimRight, "")
            },
            makeArray: function(array, results) {
                var ret = results || [];
                if (array != null) {
                    var type = jQuery.type(array);
                    if (array.length == null || type === "string" || type === "function" || type === "regexp" || jQuery.isWindow(array)) {
                        push.call(ret, array)
                    } else {
                        jQuery.merge(ret, array)
                    }
                }
                return ret
            },
            inArray: function(elem, array) {
                if (indexOf) {
                    return indexOf.call(array, elem)
                }
                for (var i = 0, length = array.length; i < length; i++) {
                    if (array[i] === elem) {
                        return i
                    }
                }
                return -1
            },
            merge: function(first, second) {
                var i = first.length,
                    j = 0;
                if (typeof second.length === "number") {
                    for (var l = second.length; j < l; j++) {
                        first[i++] = second[j]
                    }
                } else {
                    while (second[j] !== undefined) {
                        first[i++] = second[j++]
                    }
                }
                first.length = i;
                return first
            },
            grep: function(elems, callback, inv) {
                var ret = [],
                    retVal;
                inv = !!inv;
                for (var i = 0, length = elems.length; i < length; i++) {
                    retVal = !!callback(elems[i], i);
                    if (inv !== retVal) {
                        ret.push(elems[i])
                    }
                }
                return ret
            },
            map: function(elems, callback, arg) {
                var value, key, ret = [],
                    i = 0,
                    length = elems.length,
                    isArray = elems instanceof jQuery || length !== undefined && typeof length === "number" && ((length > 0 && elems[0] && elems[length - 1]) || length === 0 || jQuery.isArray(elems));
                if (isArray) {
                    for (; i < length; i++) {
                        value = callback(elems[i], i, arg);
                        if (value != null) {
                            ret[ret.length] = value
                        }
                    }
                } else {
                    for (key in elems) {
                        value = callback(elems[key], key, arg);
                        if (value != null) {
                            ret[ret.length] = value
                        }
                    }
                }
                return ret.concat.apply([], ret)
            },
            guid: 1,
            proxy: function(fn, context) {
                if (typeof context === "string") {
                    var tmp = fn[context];
                    context = fn;
                    fn = tmp
                }
                if (!jQuery.isFunction(fn)) {
                    return undefined
                }
                var args = slice.call(arguments, 2),
                    proxy = function() {
                        return fn.apply(context, args.concat(slice.call(arguments)))
                    };
                proxy.guid = fn.guid = fn.guid || proxy.guid || jQuery.guid++;
                return proxy
            },
            access: function(elems, key, value, exec, fn, pass) {
                var length = elems.length;
                if (typeof key === "object") {
                    for (var k in key) {
                        jQuery.access(elems, k, key[k], exec, fn, value)
                    }
                    return elems
                }
                if (value !== undefined) {
                    exec = !pass && exec && jQuery.isFunction(value);
                    for (var i = 0; i < length; i++) {
                        fn(elems[i], key, exec ? value.call(elems[i], i, fn(elems[i], key)) : value, pass)
                    }
                    return elems
                }
                return length ? fn(elems[0], key) : undefined
            },
            now: function() {
                return (new Date()).getTime()
            },
            uaMatch: function(ua) {
                ua = ua.toLowerCase();
                var match = rwebkit.exec(ua) || ropera.exec(ua) || rmsie.exec(ua) || ua.indexOf("compatible") < 0 && rmozilla.exec(ua) || [];
                return {
                    browser: match[1] || "",
                    version: match[2] || "0"
                }
            },
            sub: function() {
                function jQuerySub(selector, context) {
                    return new jQuerySub.fn.init(selector, context)
                }
                jQuery.extend(true, jQuerySub, this);
                jQuerySub.superclass = this;
                jQuerySub.fn = jQuerySub.prototype = this();
                jQuerySub.fn.constructor = jQuerySub;
                jQuerySub.sub = this.sub;
                jQuerySub.fn.init = function init(selector, context) {
                    if (context && context instanceof jQuery && !(context instanceof jQuerySub)) {
                        context = jQuerySub(context)
                    }
                    return jQuery.fn.init.call(this, selector, context, rootjQuerySub)
                };
                jQuerySub.fn.init.prototype = jQuerySub.fn;
                var rootjQuerySub = jQuerySub(document);
                return jQuerySub
            },
            browser: {}
        });
        jQuery.each("Boolean Number String Function Array Date RegExp Object".split(" "), function(i, name) {
            class2type["[object " + name + "]"] = name.toLowerCase()
        });
        browserMatch = jQuery.uaMatch(userAgent);
        if (browserMatch.browser) {
            jQuery.browser[browserMatch.browser] = true;
            jQuery.browser.version = browserMatch.version
        }
        if (jQuery.browser.webkit) {
            jQuery.browser.safari = true
        }
        if (rnotwhite.test("\xA0")) {
            trimLeft = /^[\s\xA0]+/;
            trimRight = /[\s\xA0]+$/
        }
        rootjQuery = jQuery(document);
        if (document.addEventListener) {
            DOMContentLoaded = function() {
                document.removeEventListener("DOMContentLoaded", DOMContentLoaded, false);
                jQuery.ready()
            }
        } else {
            if (document.attachEvent) {
                DOMContentLoaded = function() {
                    if (document.readyState === "complete") {
                        document.detachEvent("onreadystatechange", DOMContentLoaded);
                        jQuery.ready()
                    }
                }
            }
        }

        function doScrollCheck() {
            if (jQuery.isReady) {
                return
            }
            try {
                document.documentElement.doScroll("left")
            } catch (e) {
                setTimeout(doScrollCheck, 1);
                return
            }
            jQuery.ready()
        }
        return jQuery
    })();
    var promiseMethods = "done fail isResolved isRejected promise then always pipe".split(" "),
        sliceDeferred = [].slice;
    jQuery.extend({
        _Deferred: function() {
            var callbacks = [],
                fired, firing, cancelled, deferred = {
                    done: function() {
                        if (!cancelled) {
                            var args = arguments,
                                i, length, elem, type, _fired;
                            if (fired) {
                                _fired = fired;
                                fired = 0
                            }
                            for (i = 0, length = args.length; i < length; i++) {
                                elem = args[i];
                                type = jQuery.type(elem);
                                if (type === "array") {
                                    deferred.done.apply(deferred, elem)
                                } else {
                                    if (type === "function") {
                                        callbacks.push(elem)
                                    }
                                }
                            }
                            if (_fired) {
                                deferred.resolveWith(_fired[0], _fired[1])
                            }
                        }
                        return this
                    },
                    resolveWith: function(context, args) {
                        if (!cancelled && !fired && !firing) {
                            args = args || [];
                            firing = 1;
                            try {
                                while (callbacks[0]) {
                                    callbacks.shift().apply(context, args)
                                }
                            } finally {
                                fired = [context, args];
                                firing = 0
                            }
                        }
                        return this
                    },
                    resolve: function() {
                        deferred.resolveWith(this, arguments);
                        return this
                    },
                    isResolved: function() {
                        return !!(firing || fired)
                    },
                    cancel: function() {
                        cancelled = 1;
                        callbacks = [];
                        return this
                    }
                };
            return deferred
        },
        Deferred: function(func) {
            var deferred = jQuery._Deferred(),
                failDeferred = jQuery._Deferred(),
                promise;
            jQuery.extend(deferred, {
                then: function(doneCallbacks, failCallbacks) {
                    deferred.done(doneCallbacks).fail(failCallbacks);
                    return this
                },
                always: function() {
                    return deferred.done.apply(deferred, arguments).fail.apply(this, arguments)
                },
                fail: failDeferred.done,
                rejectWith: failDeferred.resolveWith,
                reject: failDeferred.resolve,
                isRejected: failDeferred.isResolved,
                pipe: function(fnDone, fnFail) {
                    return jQuery.Deferred(function(newDefer) {
                        jQuery.each({
                            done: [fnDone, "resolve"],
                            fail: [fnFail, "reject"]
                        }, function(handler, data) {
                            var fn = data[0],
                                action = data[1],
                                returned;
                            if (jQuery.isFunction(fn)) {
                                deferred[handler](function() {
                                    returned = fn.apply(this, arguments);
                                    if (returned && jQuery.isFunction(returned.promise)) {
                                        returned.promise().then(newDefer.resolve, newDefer.reject)
                                    } else {
                                        newDefer[action](returned)
                                    }
                                })
                            } else {
                                deferred[handler](newDefer[action])
                            }
                        })
                    }).promise()
                },
                promise: function(obj) {
                    if (obj == null) {
                        if (promise) {
                            return promise
                        }
                        promise = obj = {}
                    }
                    var i = promiseMethods.length;
                    while (i--) {
                        obj[promiseMethods[i]] = deferred[promiseMethods[i]]
                    }
                    return obj
                }
            });
            deferred.done(failDeferred.cancel).fail(deferred.cancel);
            delete deferred.cancel;
            if (func) {
                func.call(deferred, deferred)
            }
            return deferred
        },
        when: function(firstParam) {
            var args = arguments,
                i = 0,
                length = args.length,
                count = length,
                deferred = length <= 1 && firstParam && jQuery.isFunction(firstParam.promise) ? firstParam : jQuery.Deferred();

            function resolveFunc(i) {
                return function(value) {
                    args[i] = arguments.length > 1 ? sliceDeferred.call(arguments, 0) : value;
                    if (!(--count)) {
                        deferred.resolveWith(deferred, sliceDeferred.call(args, 0))
                    }
                }
            }
            if (length > 1) {
                for (; i < length; i++) {
                    if (args[i] && jQuery.isFunction(args[i].promise)) {
                        args[i].promise().then(resolveFunc(i), deferred.reject)
                    } else {
                        --count
                    }
                }
                if (!count) {
                    deferred.resolveWith(deferred, args)
                }
            } else {
                if (deferred !== firstParam) {
                    deferred.resolveWith(deferred, length ? [firstParam] : [])
                }
            }
            return deferred.promise()
        }
    });
    jQuery.support = (function() {
        var div = document.createElement("div"),
            documentElement = document.documentElement,
            all, a, select, opt, input, marginDiv, support, fragment, body, testElementParent, testElement, testElementStyle, tds, events, eventName, i, isSupported;
        div.setAttribute("className", "t");
        div.innerHTML = "   <link/><table></table><a href='/a' style='top:1px;float:left;opacity:.55;'>a</a><input type='checkbox'/>";
        all = div.getElementsByTagName("*");
        a = div.getElementsByTagName("a")[0];
        if (!all || !all.length || !a) {
            return {}
        }
        select = document.createElement("select");
        opt = select.appendChild(document.createElement("option"));
        input = div.getElementsByTagName("input")[0];
        support = {
            leadingWhitespace: (div.firstChild.nodeType === 3),
            tbody: !div.getElementsByTagName("tbody").length,
            htmlSerialize: !!div.getElementsByTagName("link").length,
            style: /top/.test(a.getAttribute("style")),
            hrefNormalized: (a.getAttribute("href") === "/a"),
            opacity: /^0.55$/.test(a.style.opacity),
            cssFloat: !!a.style.cssFloat,
            checkOn: (input.value === "on"),
            optSelected: opt.selected,
            getSetAttribute: div.className !== "t",
            submitBubbles: true,
            changeBubbles: true,
            focusinBubbles: false,
            deleteExpando: true,
            noCloneEvent: true,
            inlineBlockNeedsLayout: false,
            shrinkWrapBlocks: false,
            reliableMarginRight: true
        };
        input.checked = true;
        support.noCloneChecked = input.cloneNode(true).checked;
        select.disabled = true;
        support.optDisabled = !opt.disabled;
        try {
            delete div.test
        } catch (e) {
            support.deleteExpando = false
        }
        if (!div.addEventListener && div.attachEvent && div.fireEvent) {
            div.attachEvent("onclick", function() {
                support.noCloneEvent = false
            });
            div.cloneNode(true).fireEvent("onclick")
        }
        input = document.createElement("input");
        input.value = "t";
        input.setAttribute("type", "radio");
        support.radioValue = input.value === "t";
        input.setAttribute("checked", "checked");
        div.appendChild(input);
        fragment = document.createDocumentFragment();
        fragment.appendChild(div.firstChild);
        support.checkClone = fragment.cloneNode(true).cloneNode(true).lastChild.checked;
        div.innerHTML = "";
        div.style.width = div.style.paddingLeft = "1px";
        body = document.getElementsByTagName("body")[0];
        testElement = document.createElement(body ? "div" : "body");
        testElementStyle = {
            visibility: "hidden",
            width: 0,
            height: 0,
            border: 0,
            margin: 0
        };
        if (body) {
            jQuery.extend(testElementStyle, {
                position: "absolute",
                left: -1000,
                top: -1000
            })
        }
        for (i in testElementStyle) {
            testElement.style[i] = testElementStyle[i]
        }
        testElement.appendChild(div);
        testElementParent = body || documentElement;
        testElementParent.insertBefore(testElement, testElementParent.firstChild);
        support.appendChecked = input.checked;
        support.boxModel = div.offsetWidth === 2;
        if ("zoom" in div.style) {
            div.style.display = "inline";
            div.style.zoom = 1;
            support.inlineBlockNeedsLayout = (div.offsetWidth === 2);
            div.style.display = "";
            div.innerHTML = "<div style='width:4px;'></div>";
            support.shrinkWrapBlocks = (div.offsetWidth !== 2)
        }
        div.innerHTML = "<table><tr><td style='padding:0;border:0;display:none'></td><td>t</td></tr></table>";
        tds = div.getElementsByTagName("td");
        isSupported = (tds[0].offsetHeight === 0);
        tds[0].style.display = "";
        tds[1].style.display = "none";
        support.reliableHiddenOffsets = isSupported && (tds[0].offsetHeight === 0);
        div.innerHTML = "";
        if (document.defaultView && document.defaultView.getComputedStyle) {
            marginDiv = document.createElement("div");
            marginDiv.style.width = "0";
            marginDiv.style.marginRight = "0";
            div.appendChild(marginDiv);
            support.reliableMarginRight = (parseInt((document.defaultView.getComputedStyle(marginDiv, null) || {
                marginRight: 0
            }).marginRight, 10) || 0) === 0
        }
        testElement.innerHTML = "";
        testElementParent.removeChild(testElement);
        if (div.attachEvent) {
            for (i in {
                    submit: 1,
                    change: 1,
                    focusin: 1
                }) {
                eventName = "on" + i;
                isSupported = (eventName in div);
                if (!isSupported) {
                    div.setAttribute(eventName, "return;");
                    isSupported = (typeof div[eventName] === "function")
                }
                support[i + "Bubbles"] = isSupported
            }
        }
        testElement = fragment = select = opt = body = marginDiv = div = input = null;
        return support
    })();
    jQuery.boxModel = jQuery.support.boxModel;
    var rbrace = /^(?:\{.*\}|\[.*\])$/,
        rmultiDash = /([a-z])([A-Z])/g;
    jQuery.extend({
        cache: {},
        uuid: 0,
        expando: "jQuery" + (jQuery.fn.jquery + Math.random()).replace(/\D/g, ""),
        noData: {
            embed: true,
            object: "clsid:D27CDB6E-AE6D-11cf-96B8-444553540000",
            applet: true
        },
        hasData: function(elem) {
            elem = elem.nodeType ? jQuery.cache[elem[jQuery.expando]] : elem[jQuery.expando];
            return !!elem && !isEmptyDataObject(elem)
        },
        data: function(elem, name, data, pvt) {
            if (!jQuery.acceptData(elem)) {
                return
            }
            var internalKey = jQuery.expando,
                getByName = typeof name === "string",
                thisCache, isNode = elem.nodeType,
                cache = isNode ? jQuery.cache : elem,
                id = isNode ? elem[jQuery.expando] : elem[jQuery.expando] && jQuery.expando;
            if ((!id || (pvt && id && !cache[id][internalKey])) && getByName && data === undefined) {
                return
            }
            if (!id) {
                if (isNode) {
                    elem[jQuery.expando] = id = ++jQuery.uuid
                } else {
                    id = jQuery.expando
                }
            }
            if (!cache[id]) {
                cache[id] = {};
                if (!isNode) {
                    cache[id].toJSON = jQuery.noop
                }
            }
            if (typeof name === "object" || typeof name === "function") {
                if (pvt) {
                    cache[id][internalKey] = jQuery.extend(cache[id][internalKey], name)
                } else {
                    cache[id] = jQuery.extend(cache[id], name)
                }
            }
            thisCache = cache[id];
            if (pvt) {
                if (!thisCache[internalKey]) {
                    thisCache[internalKey] = {}
                }
                thisCache = thisCache[internalKey]
            }
            if (data !== undefined) {
                thisCache[jQuery.camelCase(name)] = data
            }
            if (name === "events" && !thisCache[name]) {
                return thisCache[internalKey] && thisCache[internalKey].events
            }
            return getByName ? thisCache[jQuery.camelCase(name)] || thisCache[name] : thisCache
        },
        removeData: function(elem, name, pvt) {
            if (!jQuery.acceptData(elem)) {
                return
            }
            var internalKey = jQuery.expando,
                isNode = elem.nodeType,
                cache = isNode ? jQuery.cache : elem,
                id = isNode ? elem[jQuery.expando] : jQuery.expando;
            if (!cache[id]) {
                return
            }
            if (name) {
                var thisCache = pvt ? cache[id][internalKey] : cache[id];
                if (thisCache) {
                    delete thisCache[name];
                    if (!isEmptyDataObject(thisCache)) {
                        return
                    }
                }
            }
            if (pvt) {
                delete cache[id][internalKey];
                if (!isEmptyDataObject(cache[id])) {
                    return
                }
            }
            var internalCache = cache[id][internalKey];
            if (jQuery.support.deleteExpando || cache != window) {
                delete cache[id]
            } else {
                cache[id] = null
            }
            if (internalCache) {
                cache[id] = {};
                if (!isNode) {
                    cache[id].toJSON = jQuery.noop
                }
                cache[id][internalKey] = internalCache
            } else {
                if (isNode) {
                    if (jQuery.support.deleteExpando) {
                        delete elem[jQuery.expando]
                    } else {
                        if (elem.removeAttribute) {
                            elem.removeAttribute(jQuery.expando)
                        } else {
                            elem[jQuery.expando] = null
                        }
                    }
                }
            }
        },
        _data: function(elem, name, data) {
            return jQuery.data(elem, name, data, true)
        },
        acceptData: function(elem) {
            if (elem.nodeName) {
                var match = jQuery.noData[elem.nodeName.toLowerCase()];
                if (match) {
                    return !(match === true || elem.getAttribute("classid") !== match)
                }
            }
            return true
        }
    });
    jQuery.fn.extend({
        data: function(key, value) {
            var data = null;
            if (typeof key === "undefined") {
                if (this.length) {
                    data = jQuery.data(this[0]);
                    if (this[0].nodeType === 1) {
                        var attr = this[0].attributes,
                            name;
                        for (var i = 0, l = attr.length; i < l; i++) {
                            name = attr[i].name;
                            if (name.indexOf("data-") === 0) {
                                name = jQuery.camelCase(name.substring(5));
                                dataAttr(this[0], name, data[name])
                            }
                        }
                    }
                }
                return data
            } else {
                if (typeof key === "object") {
                    return this.each(function() {
                        jQuery.data(this, key)
                    })
                }
            }
            var parts = key.split(".");
            parts[1] = parts[1] ? "." + parts[1] : "";
            if (value === undefined) {
                data = this.triggerHandler("getData" + parts[1] + "!", [parts[0]]);
                if (data === undefined && this.length) {
                    data = jQuery.data(this[0], key);
                    data = dataAttr(this[0], key, data)
                }
                return data === undefined && parts[1] ? this.data(parts[0]) : data
            } else {
                return this.each(function() {
                    var $this = jQuery(this),
                        args = [parts[0], value];
                    $this.triggerHandler("setData" + parts[1] + "!", args);
                    jQuery.data(this, key, value);
                    $this.triggerHandler("changeData" + parts[1] + "!", args)
                })
            }
        },
        removeData: function(key) {
            return this.each(function() {
                jQuery.removeData(this, key)
            })
        }
    });

    function dataAttr(elem, key, data) {
        if (data === undefined && elem.nodeType === 1) {
            var name = "data-" + key.replace(rmultiDash, "$1-$2").toLowerCase();
            data = elem.getAttribute(name);
            if (typeof data === "string") {
                try {
                    data = data === "true" ? true : data === "false" ? false : data === "null" ? null : !jQuery.isNaN(data) ? parseFloat(data) : rbrace.test(data) ? jQuery.parseJSON(data) : data
                } catch (e) {}
                jQuery.data(elem, key, data)
            } else {
                data = undefined
            }
        }
        return data
    }

    function isEmptyDataObject(obj) {
        for (var name in obj) {
            if (name !== "toJSON") {
                return false
            }
        }
        return true
    }

    function handleQueueMarkDefer(elem, type, src) {
        var deferDataKey = type + "defer",
            queueDataKey = type + "queue",
            markDataKey = type + "mark",
            defer = jQuery.data(elem, deferDataKey, undefined, true);
        if (defer && (src === "queue" || !jQuery.data(elem, queueDataKey, undefined, true)) && (src === "mark" || !jQuery.data(elem, markDataKey, undefined, true))) {
            setTimeout(function() {
                if (!jQuery.data(elem, queueDataKey, undefined, true) && !jQuery.data(elem, markDataKey, undefined, true)) {
                    jQuery.removeData(elem, deferDataKey, true);
                    defer.resolve()
                }
            }, 0)
        }
    }
    jQuery.extend({
        _mark: function(elem, type) {
            if (elem) {
                type = (type || "fx") + "mark";
                jQuery.data(elem, type, (jQuery.data(elem, type, undefined, true) || 0) + 1, true)
            }
        },
        _unmark: function(force, elem, type) {
            if (force !== true) {
                type = elem;
                elem = force;
                force = false
            }
            if (elem) {
                type = type || "fx";
                var key = type + "mark",
                    count = force ? 0 : ((jQuery.data(elem, key, undefined, true) || 1) - 1);
                if (count) {
                    jQuery.data(elem, key, count, true)
                } else {
                    jQuery.removeData(elem, key, true);
                    handleQueueMarkDefer(elem, type, "mark")
                }
            }
        },
        queue: function(elem, type, data) {
            if (elem) {
                type = (type || "fx") + "queue";
                var q = jQuery.data(elem, type, undefined, true);
                if (data) {
                    if (!q || jQuery.isArray(data)) {
                        q = jQuery.data(elem, type, jQuery.makeArray(data), true)
                    } else {
                        q.push(data)
                    }
                }
                return q || []
            }
        },
        dequeue: function(elem, type) {
            type = type || "fx";
            var queue = jQuery.queue(elem, type),
                fn = queue.shift(),
                defer;
            if (fn === "inprogress") {
                fn = queue.shift()
            }
            if (fn) {
                if (type === "fx") {
                    queue.unshift("inprogress")
                }
                fn.call(elem, function() {
                    jQuery.dequeue(elem, type)
                })
            }
            if (!queue.length) {
                jQuery.removeData(elem, type + "queue", true);
                handleQueueMarkDefer(elem, type, "queue")
            }
        }
    });
    jQuery.fn.extend({
        queue: function(type, data) {
            if (typeof type !== "string") {
                data = type;
                type = "fx"
            }
            if (data === undefined) {
                return jQuery.queue(this[0], type)
            }
            return this.each(function() {
                var queue = jQuery.queue(this, type, data);
                if (type === "fx" && queue[0] !== "inprogress") {
                    jQuery.dequeue(this, type)
                }
            })
        },
        dequeue: function(type) {
            return this.each(function() {
                jQuery.dequeue(this, type)
            })
        },
        delay: function(time, type) {
            time = jQuery.fx ? jQuery.fx.speeds[time] || time : time;
            type = type || "fx";
            return this.queue(type, function() {
                var elem = this;
                setTimeout(function() {
                    jQuery.dequeue(elem, type)
                }, time)
            })
        },
        clearQueue: function(type) {
            return this.queue(type || "fx", [])
        },
        promise: function(type, object) {
            if (typeof type !== "string") {
                object = type;
                type = undefined
            }
            type = type || "fx";
            var defer = jQuery.Deferred(),
                elements = this,
                i = elements.length,
                count = 1,
                deferDataKey = type + "defer",
                queueDataKey = type + "queue",
                markDataKey = type + "mark",
                tmp;

            function resolve() {
                if (!(--count)) {
                    defer.resolveWith(elements, [elements])
                }
            }
            while (i--) {
                if ((tmp = jQuery.data(elements[i], deferDataKey, undefined, true) || (jQuery.data(elements[i], queueDataKey, undefined, true) || jQuery.data(elements[i], markDataKey, undefined, true)) && jQuery.data(elements[i], deferDataKey, jQuery._Deferred(), true))) {
                    count++;
                    tmp.done(resolve)
                }
            }
            resolve();
            return defer.promise()
        }
    });
    var rclass = /[\n\t\r]/g,
        rspace = /\s+/,
        rreturn = /\r/g,
        rtype = /^(?:button|input)$/i,
        rfocusable = /^(?:button|input|object|select|textarea)$/i,
        rclickable = /^a(?:rea)?$/i,
        rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
        rinvalidChar = /\:|^on/,
        formHook, boolHook;
    jQuery.fn.extend({
        attr: function(name, value) {
            return jQuery.access(this, name, value, true, jQuery.attr)
        },
        removeAttr: function(name) {
            return this.each(function() {
                jQuery.removeAttr(this, name)
            })
        },
        prop: function(name, value) {
            return jQuery.access(this, name, value, true, jQuery.prop)
        },
        removeProp: function(name) {
            name = jQuery.propFix[name] || name;
            return this.each(function() {
                try {
                    this[name] = undefined;
                    delete this[name]
                } catch (e) {}
            })
        },
        addClass: function(value) {
            var classNames, i, l, elem, setClass, c, cl;
            if (jQuery.isFunction(value)) {
                return this.each(function(j) {
                    jQuery(this).addClass(value.call(this, j, this.className))
                })
            }
            if (value && typeof value === "string") {
                classNames = value.split(rspace);
                for (i = 0, l = this.length; i < l; i++) {
                    elem = this[i];
                    if (elem.nodeType === 1) {
                        if (!elem.className && classNames.length === 1) {
                            elem.className = value
                        } else {
                            setClass = " " + elem.className + " ";
                            for (c = 0, cl = classNames.length; c < cl; c++) {
                                if (!~setClass.indexOf(" " + classNames[c] + " ")) {
                                    setClass += classNames[c] + " "
                                }
                            }
                            elem.className = jQuery.trim(setClass)
                        }
                    }
                }
            }
            return this
        },
        removeClass: function(value) {
            var classNames, i, l, elem, className, c, cl;
            if (jQuery.isFunction(value)) {
                return this.each(function(j) {
                    jQuery(this).removeClass(value.call(this, j, this.className))
                })
            }
            if ((value && typeof value === "string") || value === undefined) {
                classNames = (value || "").split(rspace);
                for (i = 0, l = this.length; i < l; i++) {
                    elem = this[i];
                    if (elem.nodeType === 1 && elem.className) {
                        if (value) {
                            className = (" " + elem.className + " ").replace(rclass, " ");
                            for (c = 0, cl = classNames.length; c < cl; c++) {
                                className = className.replace(" " + classNames[c] + " ", " ")
                            }
                            elem.className = jQuery.trim(className)
                        } else {
                            elem.className = ""
                        }
                    }
                }
            }
            return this
        },
        toggleClass: function(value, stateVal) {
            var type = typeof value,
                isBool = typeof stateVal === "boolean";
            if (jQuery.isFunction(value)) {
                return this.each(function(i) {
                    jQuery(this).toggleClass(value.call(this, i, this.className, stateVal), stateVal)
                })
            }
            return this.each(function() {
                if (type === "string") {
                    var className, i = 0,
                        self = jQuery(this),
                        state = stateVal,
                        classNames = value.split(rspace);
                    while ((className = classNames[i++])) {
                        state = isBool ? state : !self.hasClass(className);
                        self[state ? "addClass" : "removeClass"](className)
                    }
                } else {
                    if (type === "undefined" || type === "boolean") {
                        if (this.className) {
                            jQuery._data(this, "__className__", this.className)
                        }
                        this.className = this.className || value === false ? "" : jQuery._data(this, "__className__") || ""
                    }
                }
            })
        },
        hasClass: function(selector) {
            var className = " " + selector + " ";
            for (var i = 0, l = this.length; i < l; i++) {
                if ((" " + this[i].className + " ").replace(rclass, " ").indexOf(className) > -1) {
                    return true
                }
            }
            return false
        },
        val: function(value) {
            var hooks, ret, elem = this[0];
            if (!arguments.length) {
                if (elem) {
                    hooks = jQuery.valHooks[elem.nodeName.toLowerCase()] || jQuery.valHooks[elem.type];
                    if (hooks && "get" in hooks && (ret = hooks.get(elem, "value")) !== undefined) {
                        return ret
                    }
                    ret = elem.value;
                    return typeof ret === "string" ? ret.replace(rreturn, "") : ret == null ? "" : ret
                }
                return undefined
            }
            var isFunction = jQuery.isFunction(value);
            return this.each(function(i) {
                var self = jQuery(this),
                    val;
                if (this.nodeType !== 1) {
                    return
                }
                if (isFunction) {
                    val = value.call(this, i, self.val())
                } else {
                    val = value
                }
                if (val == null) {
                    val = ""
                } else {
                    if (typeof val === "number") {
                        val += ""
                    } else {
                        if (jQuery.isArray(val)) {
                            val = jQuery.map(val, function(value) {
                                return value == null ? "" : value + ""
                            })
                        }
                    }
                }
                hooks = jQuery.valHooks[this.nodeName.toLowerCase()] || jQuery.valHooks[this.type];
                if (!hooks || !("set" in hooks) || hooks.set(this, val, "value") === undefined) {
                    this.value = val
                }
            })
        }
    });
    jQuery.extend({
        valHooks: {
            option: {
                get: function(elem) {
                    var val = elem.attributes.value;
                    return !val || val.specified ? elem.value : elem.text
                }
            },
            select: {
                get: function(elem) {
                    var value, index = elem.selectedIndex,
                        values = [],
                        options = elem.options,
                        one = elem.type === "select-one";
                    if (index < 0) {
                        return null
                    }
                    for (var i = one ? index : 0, max = one ? index + 1 : options.length; i < max; i++) {
                        var option = options[i];
                        if (option.selected && (jQuery.support.optDisabled ? !option.disabled : option.getAttribute("disabled") === null) && (!option.parentNode.disabled || !jQuery.nodeName(option.parentNode, "optgroup"))) {
                            value = jQuery(option).val();
                            if (one) {
                                return value
                            }
                            values.push(value)
                        }
                    }
                    if (one && !values.length && options.length) {
                        return jQuery(options[index]).val()
                    }
                    return values
                },
                set: function(elem, value) {
                    var values = jQuery.makeArray(value);
                    jQuery(elem).find("option").each(function() {
                        this.selected = jQuery.inArray(jQuery(this).val(), values) >= 0
                    });
                    if (!values.length) {
                        elem.selectedIndex = -1
                    }
                    return values
                }
            }
        },
        attrFn: {
            val: true,
            css: true,
            html: true,
            text: true,
            data: true,
            width: true,
            height: true,
            offset: true
        },
        attrFix: {
            tabindex: "tabIndex"
        },
        attr: function(elem, name, value, pass) {
            var nType = elem.nodeType;
            if (!elem || nType === 3 || nType === 8 || nType === 2) {
                return undefined
            }
            if (pass && name in jQuery.attrFn) {
                return jQuery(elem)[name](value)
            }
            if (!("getAttribute" in elem)) {
                return jQuery.prop(elem, name, value)
            }
            var ret, hooks, notxml = nType !== 1 || !jQuery.isXMLDoc(elem);
            if (notxml) {
                name = jQuery.attrFix[name] || name;
                hooks = jQuery.attrHooks[name];
                if (!hooks) {
                    if (rboolean.test(name)) {
                        hooks = boolHook
                    } else {
                        if (formHook && name !== "className" && (jQuery.nodeName(elem, "form") || rinvalidChar.test(name))) {
                            hooks = formHook
                        }
                    }
                }
            }
            if (value !== undefined) {
                if (value === null) {
                    jQuery.removeAttr(elem, name);
                    return undefined
                } else {
                    if (hooks && "set" in hooks && notxml && (ret = hooks.set(elem, value, name)) !== undefined) {
                        return ret
                    } else {
                        elem.setAttribute(name, "" + value);
                        return value
                    }
                }
            } else {
                if (hooks && "get" in hooks && notxml && (ret = hooks.get(elem, name)) !== null) {
                    return ret
                } else {
                    ret = elem.getAttribute(name);
                    return ret === null ? undefined : ret
                }
            }
        },
        removeAttr: function(elem, name) {
            var propName;
            if (elem.nodeType === 1) {
                name = jQuery.attrFix[name] || name;
                if (jQuery.support.getSetAttribute) {
                    elem.removeAttribute(name)
                } else {
                    jQuery.attr(elem, name, "");
                    elem.removeAttributeNode(elem.getAttributeNode(name))
                }
                if (rboolean.test(name) && (propName = jQuery.propFix[name] || name) in elem) {
                    elem[propName] = false
                }
            }
        },
        attrHooks: {
            type: {
                set: function(elem, value) {
                    if (rtype.test(elem.nodeName) && elem.parentNode) {
                        jQuery.error("type property can't be changed")
                    } else {
                        if (!jQuery.support.radioValue && value === "radio" && jQuery.nodeName(elem, "input")) {
                            var val = elem.value;
                            elem.setAttribute("type", value);
                            if (val) {
                                elem.value = val
                            }
                            return value
                        }
                    }
                }
            },
            tabIndex: {
                get: function(elem) {
                    var attributeNode = elem.getAttributeNode("tabIndex");
                    return attributeNode && attributeNode.specified ? parseInt(attributeNode.value, 10) : rfocusable.test(elem.nodeName) || rclickable.test(elem.nodeName) && elem.href ? 0 : undefined
                }
            },
            value: {
                get: function(elem, name) {
                    if (formHook && jQuery.nodeName(elem, "button")) {
                        return formHook.get(elem, name)
                    }
                    return name in elem ? elem.value : null
                },
                set: function(elem, value, name) {
                    if (formHook && jQuery.nodeName(elem, "button")) {
                        return formHook.set(elem, value, name)
                    }
                    elem.value = value
                }
            }
        },
        propFix: {
            tabindex: "tabIndex",
            readonly: "readOnly",
            "for": "htmlFor",
            "class": "className",
            maxlength: "maxLength",
            cellspacing: "cellSpacing",
            cellpadding: "cellPadding",
            rowspan: "rowSpan",
            colspan: "colSpan",
            usemap: "useMap",
            frameborder: "frameBorder",
            contenteditable: "contentEditable"
        },
        prop: function(elem, name, value) {
            var nType = elem.nodeType;
            if (!elem || nType === 3 || nType === 8 || nType === 2) {
                return undefined
            }
            var ret, hooks, notxml = nType !== 1 || !jQuery.isXMLDoc(elem);
            if (notxml) {
                name = jQuery.propFix[name] || name;
                hooks = jQuery.propHooks[name]
            }
            if (value !== undefined) {
                if (hooks && "set" in hooks && (ret = hooks.set(elem, value, name)) !== undefined) {
                    return ret
                } else {
                    return (elem[name] = value)
                }
            } else {
                if (hooks && "get" in hooks && (ret = hooks.get(elem, name)) !== undefined) {
                    return ret
                } else {
                    return elem[name]
                }
            }
        },
        propHooks: {}
    });
    boolHook = {
        get: function(elem, name) {
            return jQuery.prop(elem, name) ? name.toLowerCase() : undefined
        },
        set: function(elem, value, name) {
            var propName;
            if (value === false) {
                jQuery.removeAttr(elem, name)
            } else {
                propName = jQuery.propFix[name] || name;
                if (propName in elem) {
                    elem[propName] = true
                }
                elem.setAttribute(name, name.toLowerCase())
            }
            return name
        }
    };
    if (!jQuery.support.getSetAttribute) {
        jQuery.attrFix = jQuery.propFix;
        formHook = jQuery.attrHooks.name = jQuery.attrHooks.title = jQuery.valHooks.button = {
            get: function(elem, name) {
                var ret;
                ret = elem.getAttributeNode(name);
                return ret && ret.nodeValue !== "" ? ret.nodeValue : undefined
            },
            set: function(elem, value, name) {
                var ret = elem.getAttributeNode(name);
                if (ret) {
                    ret.nodeValue = value;
                    return value
                }
            }
        };
        jQuery.each(["width", "height"], function(i, name) {
            jQuery.attrHooks[name] = jQuery.extend(jQuery.attrHooks[name], {
                set: function(elem, value) {
                    if (value === "") {
                        elem.setAttribute(name, "auto");
                        return value
                    }
                }
            })
        })
    }
    if (!jQuery.support.hrefNormalized) {
        jQuery.each(["href", "src", "width", "height"], function(i, name) {
            jQuery.attrHooks[name] = jQuery.extend(jQuery.attrHooks[name], {
                get: function(elem) {
                    var ret = elem.getAttribute(name, 2);
                    return ret === null ? undefined : ret
                }
            })
        })
    }
    if (!jQuery.support.style) {
        jQuery.attrHooks.style = {
            get: function(elem) {
                return elem.style.cssText.toLowerCase() || undefined
            },
            set: function(elem, value) {
                return (elem.style.cssText = "" + value)
            }
        }
    }
    if (!jQuery.support.optSelected) {
        jQuery.propHooks.selected = jQuery.extend(jQuery.propHooks.selected, {
            get: function(elem) {
                var parent = elem.parentNode;
                if (parent) {
                    parent.selectedIndex;
                    if (parent.parentNode) {
                        parent.parentNode.selectedIndex
                    }
                }
            }
        })
    }
    if (!jQuery.support.checkOn) {
        jQuery.each(["radio", "checkbox"], function() {
            jQuery.valHooks[this] = {
                get: function(elem) {
                    return elem.getAttribute("value") === null ? "on" : elem.value
                }
            }
        })
    }
    jQuery.each(["radio", "checkbox"], function() {
        jQuery.valHooks[this] = jQuery.extend(jQuery.valHooks[this], {
            set: function(elem, value) {
                if (jQuery.isArray(value)) {
                    return (elem.checked = jQuery.inArray(jQuery(elem).val(), value) >= 0)
                }
            }
        })
    });
    var rnamespaces = /\.(.*)$/,
        rformElems = /^(?:textarea|input|select)$/i,
        rperiod = /\./g,
        rspaces = / /g,
        rescape = /[^\w\s.|`]/g,
        fcleanup = function(nm) {
            return nm.replace(rescape, "\\$&")
        };
    jQuery.event = {
        add: function(elem, types, handler, data) {
            if (elem.nodeType === 3 || elem.nodeType === 8) {
                return
            }
            if (handler === false) {
                handler = returnFalse
            } else {
                if (!handler) {
                    return
                }
            }
            var handleObjIn, handleObj;
            if (handler.handler) {
                handleObjIn = handler;
                handler = handleObjIn.handler
            }
            if (!handler.guid) {
                handler.guid = jQuery.guid++
            }
            var elemData = jQuery._data(elem);
            if (!elemData) {
                return
            }
            var events = elemData.events,
                eventHandle = elemData.handle;
            if (!events) {
                elemData.events = events = {}
            }
            if (!eventHandle) {
                elemData.handle = eventHandle = function(e) {
                    return typeof jQuery !== "undefined" && (!e || jQuery.event.triggered !== e.type) ? jQuery.event.handle.apply(eventHandle.elem, arguments) : undefined
                }
            }
            eventHandle.elem = elem;
            types = types.split(" ");
            var type, i = 0,
                namespaces;
            while ((type = types[i++])) {
                handleObj = handleObjIn ? jQuery.extend({}, handleObjIn) : {
                    handler: handler,
                    data: data
                };
                if (type.indexOf(".") > -1) {
                    namespaces = type.split(".");
                    type = namespaces.shift();
                    handleObj.namespace = namespaces.slice(0).sort().join(".")
                } else {
                    namespaces = [];
                    handleObj.namespace = ""
                }
                handleObj.type = type;
                if (!handleObj.guid) {
                    handleObj.guid = handler.guid
                }
                var handlers = events[type],
                    special = jQuery.event.special[type] || {};
                if (!handlers) {
                    handlers = events[type] = [];
                    if (!special.setup || special.setup.call(elem, data, namespaces, eventHandle) === false) {
                        if (elem.addEventListener) {
                            elem.addEventListener(type, eventHandle, false)
                        } else {
                            if (elem.attachEvent) {
                                elem.attachEvent("on" + type, eventHandle)
                            }
                        }
                    }
                }
                if (special.add) {
                    special.add.call(elem, handleObj);
                    if (!handleObj.handler.guid) {
                        handleObj.handler.guid = handler.guid
                    }
                }
                handlers.push(handleObj);
                jQuery.event.global[type] = true
            }
            elem = null
        },
        global: {},
        remove: function(elem, types, handler, pos) {
            if (elem.nodeType === 3 || elem.nodeType === 8) {
                return
            }
            if (handler === false) {
                handler = returnFalse
            }
            var ret, type, fn, j, i = 0,
                all, namespaces, namespace, special, eventType, handleObj, origType, elemData = jQuery.hasData(elem) && jQuery._data(elem),
                events = elemData && elemData.events;
            if (!elemData || !events) {
                return
            }
            if (types && types.type) {
                handler = types.handler;
                types = types.type
            }
            if (!types || typeof types === "string" && types.charAt(0) === ".") {
                types = types || "";
                for (type in events) {
                    jQuery.event.remove(elem, type + types)
                }
                return
            }
            types = types.split(" ");
            while ((type = types[i++])) {
                origType = type;
                handleObj = null;
                all = type.indexOf(".") < 0;
                namespaces = [];
                if (!all) {
                    namespaces = type.split(".");
                    type = namespaces.shift();
                    namespace = new RegExp("(^|\\.)" + jQuery.map(namespaces.slice(0).sort(), fcleanup).join("\\.(?:.*\\.)?") + "(\\.|$)")
                }
                eventType = events[type];
                if (!eventType) {
                    continue
                }
                if (!handler) {
                    for (j = 0; j < eventType.length; j++) {
                        handleObj = eventType[j];
                        if (all || namespace.test(handleObj.namespace)) {
                            jQuery.event.remove(elem, origType, handleObj.handler, j);
                            eventType.splice(j--, 1)
                        }
                    }
                    continue
                }
                special = jQuery.event.special[type] || {};
                for (j = pos || 0; j < eventType.length; j++) {
                    handleObj = eventType[j];
                    if (handler.guid === handleObj.guid) {
                        if (all || namespace.test(handleObj.namespace)) {
                            if (pos == null) {
                                eventType.splice(j--, 1)
                            }
                            if (special.remove) {
                                special.remove.call(elem, handleObj)
                            }
                        }
                        if (pos != null) {
                            break
                        }
                    }
                }
                if (eventType.length === 0 || pos != null && eventType.length === 1) {
                    if (!special.teardown || special.teardown.call(elem, namespaces) === false) {
                        jQuery.removeEvent(elem, type, elemData.handle)
                    }
                    ret = null;
                    delete events[type]
                }
            }
            if (jQuery.isEmptyObject(events)) {
                var handle = elemData.handle;
                if (handle) {
                    handle.elem = null
                }
                delete elemData.events;
                delete elemData.handle;
                if (jQuery.isEmptyObject(elemData)) {
                    jQuery.removeData(elem, undefined, true)
                }
            }
        },
        customEvent: {
            getData: true,
            setData: true,
            changeData: true
        },
        trigger: function(event, data, elem, onlyHandlers) {
            var type = event.type || event,
                namespaces = [],
                exclusive;
            if (type.indexOf("!") >= 0) {
                type = type.slice(0, -1);
                exclusive = true
            }
            if (type.indexOf(".") >= 0) {
                namespaces = type.split(".");
                type = namespaces.shift();
                namespaces.sort()
            }
            if ((!elem || jQuery.event.customEvent[type]) && !jQuery.event.global[type]) {
                return
            }
            event = typeof event === "object" ? event[jQuery.expando] ? event : new jQuery.Event(type, event) : new jQuery.Event(type);
            event.type = type;
            event.exclusive = exclusive;
            event.namespace = namespaces.join(".");
            event.namespace_re = new RegExp("(^|\\.)" + namespaces.join("\\.(?:.*\\.)?") + "(\\.|$)");
            if (onlyHandlers || !elem) {
                event.preventDefault();
                event.stopPropagation()
            }
            if (!elem) {
                jQuery.each(jQuery.cache, function() {
                    var internalKey = jQuery.expando,
                        internalCache = this[internalKey];
                    if (internalCache && internalCache.events && internalCache.events[type]) {
                        jQuery.event.trigger(event, data, internalCache.handle.elem)
                    }
                });
                return
            }
            if (elem.nodeType === 3 || elem.nodeType === 8) {
                return
            }
            event.result = undefined;
            event.target = elem;
            data = data != null ? jQuery.makeArray(data) : [];
            data.unshift(event);
            var cur = elem,
                ontype = type.indexOf(":") < 0 ? "on" + type : "";
            do {
                var handle = jQuery._data(cur, "handle");
                event.currentTarget = cur;
                if (handle) {
                    handle.apply(cur, data)
                }
                if (ontype && jQuery.acceptData(cur) && cur[ontype] && cur[ontype].apply(cur, data) === false) {
                    event.result = false;
                    event.preventDefault()
                }
                cur = cur.parentNode || cur.ownerDocument || cur === event.target.ownerDocument && window
            } while (cur && !event.isPropagationStopped());
            if (!event.isDefaultPrevented()) {
                var old, special = jQuery.event.special[type] || {};
                if ((!special._default || special._default.call(elem.ownerDocument, event) === false) && !(type === "click" && jQuery.nodeName(elem, "a")) && jQuery.acceptData(elem)) {
                    try {
                        if (ontype && elem[type]) {
                            old = elem[ontype];
                            if (old) {
                                elem[ontype] = null
                            }
                            jQuery.event.triggered = type;
                            elem[type]()
                        }
                    } catch (ieError) {}
                    if (old) {
                        elem[ontype] = old
                    }
                    jQuery.event.triggered = undefined
                }
            }
            return event.result
        },
        handle: function(event) {
            event = jQuery.event.fix(event || window.event);
            var handlers = ((jQuery._data(this, "events") || {})[event.type] || []).slice(0),
                run_all = !event.exclusive && !event.namespace,
                args = Array.prototype.slice.call(arguments, 0);
            args[0] = event;
            event.currentTarget = this;
            for (var j = 0, l = handlers.length; j < l; j++) {
                var handleObj = handlers[j];
                if (run_all || event.namespace_re.test(handleObj.namespace)) {
                    event.handler = handleObj.handler;
                    event.data = handleObj.data;
                    event.handleObj = handleObj;
                    var ret = handleObj.handler.apply(this, args);
                    if (ret !== undefined) {
                        event.result = ret;
                        if (ret === false) {
                            event.preventDefault();
                            event.stopPropagation()
                        }
                    }
                    if (event.isImmediatePropagationStopped()) {
                        break
                    }
                }
            }
            return event.result
        },
        props: "altKey attrChange attrName bubbles button cancelable charCode clientX clientY ctrlKey currentTarget data detail eventPhase fromElement handler keyCode layerX layerY metaKey newValue offsetX offsetY pageX pageY prevValue relatedNode relatedTarget screenX screenY shiftKey srcElement target toElement view wheelDelta which".split(" "),
        fix: function(event) {
            if (event[jQuery.expando]) {
                return event
            }
            var originalEvent = event;
            event = jQuery.Event(originalEvent);
            for (var i = this.props.length, prop; i;) {
                prop = this.props[--i];
                event[prop] = originalEvent[prop]
            }
            if (!event.target) {
                event.target = event.srcElement || document
            }
            if (event.target.nodeType === 3) {
                event.target = event.target.parentNode
            }
            if (!event.relatedTarget && event.fromElement) {
                event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement
            }
            if (event.pageX == null && event.clientX != null) {
                var eventDocument = event.target.ownerDocument || document,
                    doc = eventDocument.documentElement,
                    body = eventDocument.body;
                event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);
                event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0)
            }
            if (event.which == null && (event.charCode != null || event.keyCode != null)) {
                event.which = event.charCode != null ? event.charCode : event.keyCode
            }
            if (!event.metaKey && event.ctrlKey) {
                event.metaKey = event.ctrlKey
            }
            if (!event.which && event.button !== undefined) {
                event.which = (event.button & 1 ? 1 : (event.button & 2 ? 3 : (event.button & 4 ? 2 : 0)))
            }
            return event
        },
        guid: 100000000,
        proxy: jQuery.proxy,
        special: {
            ready: {
                setup: jQuery.bindReady,
                teardown: jQuery.noop
            },
            live: {
                add: function(handleObj) {
                    jQuery.event.add(this, liveConvert(handleObj.origType, handleObj.selector), jQuery.extend({}, handleObj, {
                        handler: liveHandler,
                        guid: handleObj.handler.guid
                    }))
                },
                remove: function(handleObj) {
                    jQuery.event.remove(this, liveConvert(handleObj.origType, handleObj.selector), handleObj)
                }
            },
            beforeunload: {
                setup: function(data, namespaces, eventHandle) {
                    if (jQuery.isWindow(this)) {
                        this.onbeforeunload = eventHandle
                    }
                },
                teardown: function(namespaces, eventHandle) {
                    if (this.onbeforeunload === eventHandle) {
                        this.onbeforeunload = null
                    }
                }
            }
        }
    };
    jQuery.removeEvent = document.removeEventListener ? function(elem, type, handle) {
        if (elem.removeEventListener) {
            elem.removeEventListener(type, handle, false)
        }
    } : function(elem, type, handle) {
        if (elem.detachEvent) {
            elem.detachEvent("on" + type, handle)
        }
    };
    jQuery.Event = function(src, props) {
        if (!this.preventDefault) {
            return new jQuery.Event(src, props)
        }
        if (src && src.type) {
            this.originalEvent = src;
            this.type = src.type;
            this.isDefaultPrevented = (src.defaultPrevented || src.returnValue === false || src.getPreventDefault && src.getPreventDefault()) ? returnTrue : returnFalse
        } else {
            this.type = src
        }
        if (props) {
            jQuery.extend(this, props)
        }
        this.timeStamp = jQuery.now();
        this[jQuery.expando] = true
    };

    function returnFalse() {
        return false
    }

    function returnTrue() {
        return true
    }
    jQuery.Event.prototype = {
        preventDefault: function() {
            this.isDefaultPrevented = returnTrue;
            var e = this.originalEvent;
            if (!e) {
                return
            }
            if (e.preventDefault) {
                e.preventDefault()
            } else {
                e.returnValue = false
            }
        },
        stopPropagation: function() {
            this.isPropagationStopped = returnTrue;
            var e = this.originalEvent;
            if (!e) {
                return
            }
            if (e.stopPropagation) {
                e.stopPropagation()
            }
            e.cancelBubble = true
        },
        stopImmediatePropagation: function() {
            this.isImmediatePropagationStopped = returnTrue;
            this.stopPropagation()
        },
        isDefaultPrevented: returnFalse,
        isPropagationStopped: returnFalse,
        isImmediatePropagationStopped: returnFalse
    };
    var withinElement = function(event) {
            var related = event.relatedTarget,
                inside = false,
                eventType = event.type;
            event.type = event.data;
            if (related !== this) {
                if (related) {
                    inside = jQuery.contains(this, related)
                }
                if (!inside) {
                    jQuery.event.handle.apply(this, arguments);
                    event.type = eventType
                }
            }
        },
        delegate = function(event) {
            event.type = event.data;
            jQuery.event.handle.apply(this, arguments)
        };
    jQuery.each({
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    }, function(orig, fix) {
        jQuery.event.special[orig] = {
            setup: function(data) {
                jQuery.event.add(this, fix, data && data.selector ? delegate : withinElement, orig)
            },
            teardown: function(data) {
                jQuery.event.remove(this, fix, data && data.selector ? delegate : withinElement)
            }
        }
    });
    if (!jQuery.support.submitBubbles) {
        jQuery.event.special.submit = {
            setup: function(data, namespaces) {
                if (!jQuery.nodeName(this, "form")) {
                    jQuery.event.add(this, "click.specialSubmit", function(e) {
                        var elem = e.target,
                            type = elem.type;
                        if ((type === "submit" || type === "image") && jQuery(elem).closest("form").length) {
                            trigger("submit", this, arguments)
                        }
                    });
                    jQuery.event.add(this, "keypress.specialSubmit", function(e) {
                        var elem = e.target,
                            type = elem.type;
                        if ((type === "text" || type === "password") && jQuery(elem).closest("form").length && e.keyCode === 13) {
                            trigger("submit", this, arguments)
                        }
                    })
                } else {
                    return false
                }
            },
            teardown: function(namespaces) {
                jQuery.event.remove(this, ".specialSubmit")
            }
        }
    }
    if (!jQuery.support.changeBubbles) {
        var changeFilters, getVal = function(elem) {
                var type = elem.type,
                    val = elem.value;
                if (type === "radio" || type === "checkbox") {
                    val = elem.checked
                } else {
                    if (type === "select-multiple") {
                        val = elem.selectedIndex > -1 ? jQuery.map(elem.options, function(elem) {
                            return elem.selected
                        }).join("-") : ""
                    } else {
                        if (jQuery.nodeName(elem, "select")) {
                            val = elem.selectedIndex
                        }
                    }
                }
                return val
            },
            testChange = function testChange(e) {
                var elem = e.target,
                    data, val;
                if (!rformElems.test(elem.nodeName) || elem.readOnly) {
                    return
                }
                data = jQuery._data(elem, "_change_data");
                val = getVal(elem);
                if (e.type !== "focusout" || elem.type !== "radio") {
                    jQuery._data(elem, "_change_data", val)
                }
                if (data === undefined || val === data) {
                    return
                }
                if (data != null || val) {
                    e.type = "change";
                    e.liveFired = undefined;
                    jQuery.event.trigger(e, arguments[1], elem)
                }
            };
        jQuery.event.special.change = {
            filters: {
                focusout: testChange,
                beforedeactivate: testChange,
                click: function(e) {
                    var elem = e.target,
                        type = jQuery.nodeName(elem, "input") ? elem.type : "";
                    if (type === "radio" || type === "checkbox" || jQuery.nodeName(elem, "select")) {
                        testChange.call(this, e)
                    }
                },
                keydown: function(e) {
                    var elem = e.target,
                        type = jQuery.nodeName(elem, "input") ? elem.type : "";
                    if ((e.keyCode === 13 && !jQuery.nodeName(elem, "textarea")) || (e.keyCode === 32 && (type === "checkbox" || type === "radio")) || type === "select-multiple") {
                        testChange.call(this, e)
                    }
                },
                beforeactivate: function(e) {
                    var elem = e.target;
                    jQuery._data(elem, "_change_data", getVal(elem))
                }
            },
            setup: function(data, namespaces) {
                if (this.type === "file") {
                    return false
                }
                for (var type in changeFilters) {
                    jQuery.event.add(this, type + ".specialChange", changeFilters[type])
                }
                return rformElems.test(this.nodeName)
            },
            teardown: function(namespaces) {
                jQuery.event.remove(this, ".specialChange");
                return rformElems.test(this.nodeName)
            }
        };
        changeFilters = jQuery.event.special.change.filters;
        changeFilters.focus = changeFilters.beforeactivate
    }

    function trigger(type, elem, args) {
        var event = jQuery.extend({}, args[0]);
        event.type = type;
        event.originalEvent = {};
        event.liveFired = undefined;
        jQuery.event.handle.call(elem, event);
        if (event.isDefaultPrevented()) {
            args[0].preventDefault()
        }
    }
    if (!jQuery.support.focusinBubbles) {
        jQuery.each({
            focus: "focusin",
            blur: "focusout"
        }, function(orig, fix) {
            var attaches = 0;
            jQuery.event.special[fix] = {
                setup: function() {
                    if (attaches++ === 0) {
                        document.addEventListener(orig, handler, true)
                    }
                },
                teardown: function() {
                    if (--attaches === 0) {
                        document.removeEventListener(orig, handler, true)
                    }
                }
            };

            function handler(donor) {
                var e = jQuery.event.fix(donor);
                e.type = fix;
                e.originalEvent = {};
                jQuery.event.trigger(e, null, e.target);
                if (e.isDefaultPrevented()) {
                    donor.preventDefault()
                }
            }
        })
    }
    jQuery.each(["bind", "one"], function(i, name) {
        jQuery.fn[name] = function(type, data, fn) {
            var handler;
            if (typeof type === "object") {
                for (var key in type) {
                    this[name](key, data, type[key], fn)
                }
                return this
            }
            if (arguments.length === 2 || data === false) {
                fn = data;
                data = undefined
            }
            if (name === "one") {
                handler = function(event) {
                    jQuery(this).unbind(event, handler);
                    return fn.apply(this, arguments)
                };
                handler.guid = fn.guid || jQuery.guid++
            } else {
                handler = fn
            }
            if (type === "unload" && name !== "one") {
                this.one(type, data, fn)
            } else {
                for (var i = 0, l = this.length; i < l; i++) {
                    jQuery.event.add(this[i], type, handler, data)
                }
            }
            return this
        }
    });
    jQuery.fn.extend({
        unbind: function(type, fn) {
            if (typeof type === "object" && !type.preventDefault) {
                for (var key in type) {
                    this.unbind(key, type[key])
                }
            } else {
                for (var i = 0, l = this.length; i < l; i++) {
                    jQuery.event.remove(this[i], type, fn)
                }
            }
            return this
        },
        delegate: function(selector, types, data, fn) {
            return this.live(types, data, fn, selector)
        },
        undelegate: function(selector, types, fn) {
            if (arguments.length === 0) {
                return this.unbind("live")
            } else {
                return this.die(types, null, fn, selector)
            }
        },
        trigger: function(type, data) {
            return this.each(function() {
                jQuery.event.trigger(type, data, this)
            })
        },
        triggerHandler: function(type, data) {
            if (this[0]) {
                return jQuery.event.trigger(type, data, this[0], true)
            }
        },
        toggle: function(fn) {
            var args = arguments,
                guid = fn.guid || jQuery.guid++,
                i = 0,
                toggler = function(event) {
                    var lastToggle = (jQuery.data(this, "lastToggle" + fn.guid) || 0) % i;
                    jQuery.data(this, "lastToggle" + fn.guid, lastToggle + 1);
                    event.preventDefault();
                    return args[lastToggle].apply(this, arguments) || false
                };
            toggler.guid = guid;
            while (i < args.length) {
                args[i++].guid = guid
            }
            return this.click(toggler)
        },
        hover: function(fnOver, fnOut) {
            return this.mouseenter(fnOver).mouseleave(fnOut || fnOver)
        }
    });
    var liveMap = {
        focus: "focusin",
        blur: "focusout",
        mouseenter: "mouseover",
        mouseleave: "mouseout"
    };
    jQuery.each(["live", "die"], function(i, name) {
        jQuery.fn[name] = function(types, data, fn, origSelector) {
            var type, i = 0,
                match, namespaces, preType, selector = origSelector || this.selector,
                context = origSelector ? this : jQuery(this.context);
            if (typeof types === "object" && !types.preventDefault) {
                for (var key in types) {
                    context[name](key, data, types[key], selector)
                }
                return this
            }
            if (name === "die" && !types && origSelector && origSelector.charAt(0) === ".") {
                context.unbind(origSelector);
                return this
            }
            if (data === false || jQuery.isFunction(data)) {
                fn = data || returnFalse;
                data = undefined
            }
            types = (types || "").split(" ");
            while ((type = types[i++]) != null) {
                match = rnamespaces.exec(type);
                namespaces = "";
                if (match) {
                    namespaces = match[0];
                    type = type.replace(rnamespaces, "")
                }
                if (type === "hover") {
                    types.push("mouseenter" + namespaces, "mouseleave" + namespaces);
                    continue
                }
                preType = type;
                if (liveMap[type]) {
                    types.push(liveMap[type] + namespaces);
                    type = type + namespaces
                } else {
                    type = (liveMap[type] || type) + namespaces
                }
                if (name === "live") {
                    for (var j = 0, l = context.length; j < l; j++) {
                        jQuery.event.add(context[j], "live." + liveConvert(type, selector), {
                            data: data,
                            selector: selector,
                            handler: fn,
                            origType: type,
                            origHandler: fn,
                            preType: preType
                        })
                    }
                } else {
                    context.unbind("live." + liveConvert(type, selector), fn)
                }
            }
            return this
        }
    });

    function liveHandler(event) {
        var stop, maxLevel, related, match, handleObj, elem, j, i, l, data, close, namespace, ret, elems = [],
            selectors = [],
            events = jQuery._data(this, "events");
        if (event.liveFired === this || !events || !events.live || event.target.disabled || event.button && event.type === "click") {
            return
        }
        if (event.namespace) {
            namespace = new RegExp("(^|\\.)" + event.namespace.split(".").join("\\.(?:.*\\.)?") + "(\\.|$)")
        }
        event.liveFired = this;
        var live = events.live.slice(0);
        for (j = 0; j < live.length; j++) {
            handleObj = live[j];
            if (handleObj.origType.replace(rnamespaces, "") === event.type) {
                selectors.push(handleObj.selector)
            } else {
                live.splice(j--, 1)
            }
        }
        match = jQuery(event.target).closest(selectors, event.currentTarget);
        for (i = 0, l = match.length; i < l; i++) {
            close = match[i];
            for (j = 0; j < live.length; j++) {
                handleObj = live[j];
                if (close.selector === handleObj.selector && (!namespace || namespace.test(handleObj.namespace)) && !close.elem.disabled) {
                    elem = close.elem;
                    related = null;
                    if (handleObj.preType === "mouseenter" || handleObj.preType === "mouseleave") {
                        event.type = handleObj.preType;
                        related = jQuery(event.relatedTarget).closest(handleObj.selector)[0];
                        if (related && jQuery.contains(elem, related)) {
                            related = elem
                        }
                    }
                    if (!related || related !== elem) {
                        elems.push({
                            elem: elem,
                            handleObj: handleObj,
                            level: close.level
                        })
                    }
                }
            }
        }
        for (i = 0, l = elems.length; i < l; i++) {
            match = elems[i];
            if (maxLevel && match.level > maxLevel) {
                break
            }
            event.currentTarget = match.elem;
            event.data = match.handleObj.data;
            event.handleObj = match.handleObj;
            ret = match.handleObj.origHandler.apply(match.elem, arguments);
            if (ret === false || event.isPropagationStopped()) {
                maxLevel = match.level;
                if (ret === false) {
                    stop = false
                }
                if (event.isImmediatePropagationStopped()) {
                    break
                }
            }
        }
        return stop
    }

    function liveConvert(type, selector) {
        return (type && type !== "*" ? type + "." : "") + selector.replace(rperiod, "`").replace(rspaces, "&")
    }
    jQuery.each(("blur focus focusin focusout load resize scroll unload click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup error").split(" "), function(i, name) {
        jQuery.fn[name] = function(data, fn) {
            if (fn == null) {
                fn = data;
                data = null
            }
            return arguments.length > 0 ? this.bind(name, data, fn) : this.trigger(name)
        };
        if (jQuery.attrFn) {
            jQuery.attrFn[name] = true
        }
    });
    /*
     * Sizzle CSS Selector Engine
     *  Copyright 2011, The Dojo Foundation
     *  Released under the MIT, BSD, and GPL Licenses.
     *  More information: http://sizzlejs.com/
     */
    (function() {
        var chunker = /((?:\((?:\([^()]+\)|[^()]+)+\)|\[(?:\[[^\[\]]*\]|['"][^'"]*['"]|[^\[\]'"]+)+\]|\\.|[^ >+~,(\[\\]+)+|[>+~])(\s*,\s*)?((?:.|\r|\n)*)/g,
            done = 0,
            toString = Object.prototype.toString,
            hasDuplicate = false,
            baseHasDuplicate = true,
            rBackslash = /\\/g,
            rNonWord = /\W/;
        [0, 0].sort(function() {
            baseHasDuplicate = false;
            return 0
        });
        var Sizzle = function(selector, context, results, seed) {
            results = results || [];
            context = context || document;
            var origContext = context;
            if (context.nodeType !== 1 && context.nodeType !== 9) {
                return []
            }
            if (!selector || typeof selector !== "string") {
                return results
            }
            var m, set, checkSet, extra, ret, cur, pop, i, prune = true,
                contextXML = Sizzle.isXML(context),
                parts = [],
                soFar = selector;
            do {
                chunker.exec("");
                m = chunker.exec(soFar);
                if (m) {
                    soFar = m[3];
                    parts.push(m[1]);
                    if (m[2]) {
                        extra = m[3];
                        break
                    }
                }
            } while (m);
            if (parts.length > 1 && origPOS.exec(selector)) {
                if (parts.length === 2 && Expr.relative[parts[0]]) {
                    set = posProcess(parts[0] + parts[1], context)
                } else {
                    set = Expr.relative[parts[0]] ? [context] : Sizzle(parts.shift(), context);
                    while (parts.length) {
                        selector = parts.shift();
                        if (Expr.relative[selector]) {
                            selector += parts.shift()
                        }
                        set = posProcess(selector, set)
                    }
                }
            } else {
                if (!seed && parts.length > 1 && context.nodeType === 9 && !contextXML && Expr.match.ID.test(parts[0]) && !Expr.match.ID.test(parts[parts.length - 1])) {
                    ret = Sizzle.find(parts.shift(), context, contextXML);
                    context = ret.expr ? Sizzle.filter(ret.expr, ret.set)[0] : ret.set[0]
                }
                if (context) {
                    ret = seed ? {
                        expr: parts.pop(),
                        set: makeArray(seed)
                    } : Sizzle.find(parts.pop(), parts.length === 1 && (parts[0] === "~" || parts[0] === "+") && context.parentNode ? context.parentNode : context, contextXML);
                    set = ret.expr ? Sizzle.filter(ret.expr, ret.set) : ret.set;
                    if (parts.length > 0) {
                        checkSet = makeArray(set)
                    } else {
                        prune = false
                    }
                    while (parts.length) {
                        cur = parts.pop();
                        pop = cur;
                        if (!Expr.relative[cur]) {
                            cur = ""
                        } else {
                            pop = parts.pop()
                        }
                        if (pop == null) {
                            pop = context
                        }
                        Expr.relative[cur](checkSet, pop, contextXML)
                    }
                } else {
                    checkSet = parts = []
                }
            }
            if (!checkSet) {
                checkSet = set
            }
            if (!checkSet) {
                Sizzle.error(cur || selector)
            }
            if (toString.call(checkSet) === "[object Array]") {
                if (!prune) {
                    results.push.apply(results, checkSet)
                } else {
                    if (context && context.nodeType === 1) {
                        for (i = 0; checkSet[i] != null; i++) {
                            if (checkSet[i] && (checkSet[i] === true || checkSet[i].nodeType === 1 && Sizzle.contains(context, checkSet[i]))) {
                                results.push(set[i])
                            }
                        }
                    } else {
                        for (i = 0; checkSet[i] != null; i++) {
                            if (checkSet[i] && checkSet[i].nodeType === 1) {
                                results.push(set[i])
                            }
                        }
                    }
                }
            } else {
                makeArray(checkSet, results)
            }
            if (extra) {
                Sizzle(extra, origContext, results, seed);
                Sizzle.uniqueSort(results)
            }
            return results
        };
        Sizzle.uniqueSort = function(results) {
            if (sortOrder) {
                hasDuplicate = baseHasDuplicate;
                results.sort(sortOrder);
                if (hasDuplicate) {
                    for (var i = 1; i < results.length; i++) {
                        if (results[i] === results[i - 1]) {
                            results.splice(i--, 1)
                        }
                    }
                }
            }
            return results
        };
        Sizzle.matches = function(expr, set) {
            return Sizzle(expr, null, null, set)
        };
        Sizzle.matchesSelector = function(node, expr) {
            return Sizzle(expr, null, null, [node]).length > 0
        };
        Sizzle.find = function(expr, context, isXML) {
            var set;
            if (!expr) {
                return []
            }
            for (var i = 0, l = Expr.order.length; i < l; i++) {
                var match, type = Expr.order[i];
                if ((match = Expr.leftMatch[type].exec(expr))) {
                    var left = match[1];
                    match.splice(1, 1);
                    if (left.substr(left.length - 1) !== "\\") {
                        match[1] = (match[1] || "").replace(rBackslash, "");
                        set = Expr.find[type](match, context, isXML);
                        if (set != null) {
                            expr = expr.replace(Expr.match[type], "");
                            break
                        }
                    }
                }
            }
            if (!set) {
                set = typeof context.getElementsByTagName !== "undefined" ? context.getElementsByTagName("*") : []
            }
            return {
                set: set,
                expr: expr
            }
        };
        Sizzle.filter = function(expr, set, inplace, not) {
            var match, anyFound, old = expr,
                result = [],
                curLoop = set,
                isXMLFilter = set && set[0] && Sizzle.isXML(set[0]);
            while (expr && set.length) {
                for (var type in Expr.filter) {
                    if ((match = Expr.leftMatch[type].exec(expr)) != null && match[2]) {
                        var found, item, filter = Expr.filter[type],
                            left = match[1];
                        anyFound = false;
                        match.splice(1, 1);
                        if (left.substr(left.length - 1) === "\\") {
                            continue
                        }
                        if (curLoop === result) {
                            result = []
                        }
                        if (Expr.preFilter[type]) {
                            match = Expr.preFilter[type](match, curLoop, inplace, result, not, isXMLFilter);
                            if (!match) {
                                anyFound = found = true
                            } else {
                                if (match === true) {
                                    continue
                                }
                            }
                        }
                        if (match) {
                            for (var i = 0;
                                (item = curLoop[i]) != null; i++) {
                                if (item) {
                                    found = filter(item, match, i, curLoop);
                                    var pass = not ^ !!found;
                                    if (inplace && found != null) {
                                        if (pass) {
                                            anyFound = true
                                        } else {
                                            curLoop[i] = false
                                        }
                                    } else {
                                        if (pass) {
                                            result.push(item);
                                            anyFound = true
                                        }
                                    }
                                }
                            }
                        }
                        if (found !== undefined) {
                            if (!inplace) {
                                curLoop = result
                            }
                            expr = expr.replace(Expr.match[type], "");
                            if (!anyFound) {
                                return []
                            }
                            break
                        }
                    }
                }
                if (expr === old) {
                    if (anyFound == null) {
                        Sizzle.error(expr)
                    } else {
                        break
                    }
                }
                old = expr
            }
            return curLoop
        };
        Sizzle.error = function(msg) {
            throw "Syntax error, unrecognized expression: " + msg
        };
        var Expr = Sizzle.selectors = {
            order: ["ID", "NAME", "TAG"],
            match: {
                ID: /#((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                CLASS: /\.((?:[\w\u00c0-\uFFFF\-]|\\.)+)/,
                NAME: /\[name=['"]*((?:[\w\u00c0-\uFFFF\-]|\\.)+)['"]*\]/,
                ATTR: /\[\s*((?:[\w\u00c0-\uFFFF\-]|\\.)+)\s*(?:(\S?=)\s*(?:(['"])(.*?)\3|(#?(?:[\w\u00c0-\uFFFF\-]|\\.)*)|)|)\s*\]/,
                TAG: /^((?:[\w\u00c0-\uFFFF\*\-]|\\.)+)/,
                CHILD: /:(only|nth|last|first)-child(?:\(\s*(even|odd|(?:[+\-]?\d+|(?:[+\-]?\d*)?n\s*(?:[+\-]\s*\d+)?))\s*\))?/,
                POS: /:(nth|eq|gt|lt|first|last|even|odd)(?:\((\d*)\))?(?=[^\-]|$)/,
                PSEUDO: /:((?:[\w\u00c0-\uFFFF\-]|\\.)+)(?:\((['"]?)((?:\([^\)]+\)|[^\(\)]*)+)\2\))?/
            },
            leftMatch: {},
            attrMap: {
                "class": "className",
                "for": "htmlFor"
            },
            attrHandle: {
                href: function(elem) {
                    return elem.getAttribute("href")
                },
                type: function(elem) {
                    return elem.getAttribute("type")
                }
            },
            relative: {
                "+": function(checkSet, part) {
                    var isPartStr = typeof part === "string",
                        isTag = isPartStr && !rNonWord.test(part),
                        isPartStrNotTag = isPartStr && !isTag;
                    if (isTag) {
                        part = part.toLowerCase()
                    }
                    for (var i = 0, l = checkSet.length, elem; i < l; i++) {
                        if ((elem = checkSet[i])) {
                            while ((elem = elem.previousSibling) && elem.nodeType !== 1) {}
                            checkSet[i] = isPartStrNotTag || elem && elem.nodeName.toLowerCase() === part ? elem || false : elem === part
                        }
                    }
                    if (isPartStrNotTag) {
                        Sizzle.filter(part, checkSet, true)
                    }
                },
                ">": function(checkSet, part) {
                    var elem, isPartStr = typeof part === "string",
                        i = 0,
                        l = checkSet.length;
                    if (isPartStr && !rNonWord.test(part)) {
                        part = part.toLowerCase();
                        for (; i < l; i++) {
                            elem = checkSet[i];
                            if (elem) {
                                var parent = elem.parentNode;
                                checkSet[i] = parent.nodeName.toLowerCase() === part ? parent : false
                            }
                        }
                    } else {
                        for (; i < l; i++) {
                            elem = checkSet[i];
                            if (elem) {
                                checkSet[i] = isPartStr ? elem.parentNode : elem.parentNode === part
                            }
                        }
                        if (isPartStr) {
                            Sizzle.filter(part, checkSet, true)
                        }
                    }
                },
                "": function(checkSet, part, isXML) {
                    var nodeCheck, doneName = done++,
                        checkFn = dirCheck;
                    if (typeof part === "string" && !rNonWord.test(part)) {
                        part = part.toLowerCase();
                        nodeCheck = part;
                        checkFn = dirNodeCheck
                    }
                    checkFn("parentNode", part, doneName, checkSet, nodeCheck, isXML)
                },
                "~": function(checkSet, part, isXML) {
                    var nodeCheck, doneName = done++,
                        checkFn = dirCheck;
                    if (typeof part === "string" && !rNonWord.test(part)) {
                        part = part.toLowerCase();
                        nodeCheck = part;
                        checkFn = dirNodeCheck
                    }
                    checkFn("previousSibling", part, doneName, checkSet, nodeCheck, isXML)
                }
            },
            find: {
                ID: function(match, context, isXML) {
                    if (typeof context.getElementById !== "undefined" && !isXML) {
                        var m = context.getElementById(match[1]);
                        return m && m.parentNode ? [m] : []
                    }
                },
                NAME: function(match, context) {
                    if (typeof context.getElementsByName !== "undefined") {
                        var ret = [],
                            results = context.getElementsByName(match[1]);
                        for (var i = 0, l = results.length; i < l; i++) {
                            if (results[i].getAttribute("name") === match[1]) {
                                ret.push(results[i])
                            }
                        }
                        return ret.length === 0 ? null : ret
                    }
                },
                TAG: function(match, context) {
                    if (typeof context.getElementsByTagName !== "undefined") {
                        return context.getElementsByTagName(match[1])
                    }
                }
            },
            preFilter: {
                CLASS: function(match, curLoop, inplace, result, not, isXML) {
                    match = " " + match[1].replace(rBackslash, "") + " ";
                    if (isXML) {
                        return match
                    }
                    for (var i = 0, elem;
                        (elem = curLoop[i]) != null; i++) {
                        if (elem) {
                            if (not ^ (elem.className && (" " + elem.className + " ").replace(/[\t\n\r]/g, " ").indexOf(match) >= 0)) {
                                if (!inplace) {
                                    result.push(elem)
                                }
                            } else {
                                if (inplace) {
                                    curLoop[i] = false
                                }
                            }
                        }
                    }
                    return false
                },
                ID: function(match) {
                    return match[1].replace(rBackslash, "")
                },
                TAG: function(match, curLoop) {
                    return match[1].replace(rBackslash, "").toLowerCase()
                },
                CHILD: function(match) {
                    if (match[1] === "nth") {
                        if (!match[2]) {
                            Sizzle.error(match[0])
                        }
                        match[2] = match[2].replace(/^\+|\s*/g, "");
                        var test = /(-?)(\d*)(?:n([+\-]?\d*))?/.exec(match[2] === "even" && "2n" || match[2] === "odd" && "2n+1" || !/\D/.test(match[2]) && "0n+" + match[2] || match[2]);
                        match[2] = (test[1] + (test[2] || 1)) - 0;
                        match[3] = test[3] - 0
                    } else {
                        if (match[2]) {
                            Sizzle.error(match[0])
                        }
                    }
                    match[0] = done++;
                    return match
                },
                ATTR: function(match, curLoop, inplace, result, not, isXML) {
                    var name = match[1] = match[1].replace(rBackslash, "");
                    if (!isXML && Expr.attrMap[name]) {
                        match[1] = Expr.attrMap[name]
                    }
                    match[4] = (match[4] || match[5] || "").replace(rBackslash, "");
                    if (match[2] === "~=") {
                        match[4] = " " + match[4] + " "
                    }
                    return match
                },
                PSEUDO: function(match, curLoop, inplace, result, not) {
                    if (match[1] === "not") {
                        if ((chunker.exec(match[3]) || "").length > 1 || /^\w/.test(match[3])) {
                            match[3] = Sizzle(match[3], null, null, curLoop)
                        } else {
                            var ret = Sizzle.filter(match[3], curLoop, inplace, true ^ not);
                            if (!inplace) {
                                result.push.apply(result, ret)
                            }
                            return false
                        }
                    } else {
                        if (Expr.match.POS.test(match[0]) || Expr.match.CHILD.test(match[0])) {
                            return true
                        }
                    }
                    return match
                },
                POS: function(match) {
                    match.unshift(true);
                    return match
                }
            },
            filters: {
                enabled: function(elem) {
                    return elem.disabled === false && elem.type !== "hidden"
                },
                disabled: function(elem) {
                    return elem.disabled === true
                },
                checked: function(elem) {
                    return elem.checked === true
                },
                selected: function(elem) {
                    if (elem.parentNode) {
                        elem.parentNode.selectedIndex
                    }
                    return elem.selected === true
                },
                parent: function(elem) {
                    return !!elem.firstChild
                },
                empty: function(elem) {
                    return !elem.firstChild
                },
                has: function(elem, i, match) {
                    return !!Sizzle(match[3], elem).length
                },
                header: function(elem) {
                    return (/h\d/i).test(elem.nodeName)
                },
                text: function(elem) {
                    var attr = elem.getAttribute("type"),
                        type = elem.type;
                    return elem.nodeName.toLowerCase() === "input" && "text" === type && (attr === type || attr === null)
                },
                radio: function(elem) {
                    return elem.nodeName.toLowerCase() === "input" && "radio" === elem.type
                },
                checkbox: function(elem) {
                    return elem.nodeName.toLowerCase() === "input" && "checkbox" === elem.type
                },
                file: function(elem) {
                    return elem.nodeName.toLowerCase() === "input" && "file" === elem.type
                },
                password: function(elem) {
                    return elem.nodeName.toLowerCase() === "input" && "password" === elem.type
                },
                submit: function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return (name === "input" || name === "button") && "submit" === elem.type
                },
                image: function(elem) {
                    return elem.nodeName.toLowerCase() === "input" && "image" === elem.type
                },
                reset: function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return (name === "input" || name === "button") && "reset" === elem.type
                },
                button: function(elem) {
                    var name = elem.nodeName.toLowerCase();
                    return name === "input" && "button" === elem.type || name === "button"
                },
                input: function(elem) {
                    return (/input|select|textarea|button/i).test(elem.nodeName)
                },
                focus: function(elem) {
                    return elem === elem.ownerDocument.activeElement
                }
            },
            setFilters: {
                first: function(elem, i) {
                    return i === 0
                },
                last: function(elem, i, match, array) {
                    return i === array.length - 1
                },
                even: function(elem, i) {
                    return i % 2 === 0
                },
                odd: function(elem, i) {
                    return i % 2 === 1
                },
                lt: function(elem, i, match) {
                    return i < match[3] - 0
                },
                gt: function(elem, i, match) {
                    return i > match[3] - 0
                },
                nth: function(elem, i, match) {
                    return match[3] - 0 === i
                },
                eq: function(elem, i, match) {
                    return match[3] - 0 === i
                }
            },
            filter: {
                PSEUDO: function(elem, match, i, array) {
                    var name = match[1],
                        filter = Expr.filters[name];
                    if (filter) {
                        return filter(elem, i, match, array)
                    } else {
                        if (name === "contains") {
                            return (elem.textContent || elem.innerText || Sizzle.getText([elem]) || "").indexOf(match[3]) >= 0
                        } else {
                            if (name === "not") {
                                var not = match[3];
                                for (var j = 0, l = not.length; j < l; j++) {
                                    if (not[j] === elem) {
                                        return false
                                    }
                                }
                                return true
                            } else {
                                Sizzle.error(name)
                            }
                        }
                    }
                },
                CHILD: function(elem, match) {
                    var type = match[1],
                        node = elem;
                    switch (type) {
                        case "only":
                        case "first":
                            while ((node = node.previousSibling)) {
                                if (node.nodeType === 1) {
                                    return false
                                }
                            }
                            if (type === "first") {
                                return true
                            }
                            node = elem;
                        case "last":
                            while ((node = node.nextSibling)) {
                                if (node.nodeType === 1) {
                                    return false
                                }
                            }
                            return true;
                        case "nth":
                            var first = match[2],
                                last = match[3];
                            if (first === 1 && last === 0) {
                                return true
                            }
                            var doneName = match[0],
                                parent = elem.parentNode;
                            if (parent && (parent.sizcache !== doneName || !elem.nodeIndex)) {
                                var count = 0;
                                for (node = parent.firstChild; node; node = node.nextSibling) {
                                    if (node.nodeType === 1) {
                                        node.nodeIndex = ++count
                                    }
                                }
                                parent.sizcache = doneName
                            }
                            var diff = elem.nodeIndex - last;
                            if (first === 0) {
                                return diff === 0
                            } else {
                                return (diff % first === 0 && diff / first >= 0)
                            }
                    }
                },
                ID: function(elem, match) {
                    return elem.nodeType === 1 && elem.getAttribute("id") === match
                },
                TAG: function(elem, match) {
                    return (match === "*" && elem.nodeType === 1) || elem.nodeName.toLowerCase() === match
                },
                CLASS: function(elem, match) {
                    return (" " + (elem.className || elem.getAttribute("class")) + " ").indexOf(match) > -1
                },
                ATTR: function(elem, match) {
                    var name = match[1],
                        result = Expr.attrHandle[name] ? Expr.attrHandle[name](elem) : elem[name] != null ? elem[name] : elem.getAttribute(name),
                        value = result + "",
                        type = match[2],
                        check = match[4];
                    return result == null ? type === "!=" : type === "=" ? value === check : type === "*=" ? value.indexOf(check) >= 0 : type === "~=" ? (" " + value + " ").indexOf(check) >= 0 : !check ? value && result !== false : type === "!=" ? value !== check : type === "^=" ? value.indexOf(check) === 0 : type === "$=" ? value.substr(value.length - check.length) === check : type === "|=" ? value === check || value.substr(0, check.length + 1) === check + "-" : false
                },
                POS: function(elem, match, i, array) {
                    var name = match[2],
                        filter = Expr.setFilters[name];
                    if (filter) {
                        return filter(elem, i, match, array)
                    }
                }
            }
        };
        var origPOS = Expr.match.POS,
            fescape = function(all, num) {
                return "\\" + (num - 0 + 1)
            };
        for (var type in Expr.match) {
            Expr.match[type] = new RegExp(Expr.match[type].source + (/(?![^\[]*\])(?![^\(]*\))/.source));
            Expr.leftMatch[type] = new RegExp(/(^(?:.|\r|\n)*?)/.source + Expr.match[type].source.replace(/\\(\d+)/g, fescape))
        }
        var makeArray = function(array, results) {
            array = Array.prototype.slice.call(array, 0);
            if (results) {
                results.push.apply(results, array);
                return results
            }
            return array
        };
        try {
            Array.prototype.slice.call(document.documentElement.childNodes, 0)[0].nodeType
        } catch (e) {
            makeArray = function(array, results) {
                var i = 0,
                    ret = results || [];
                if (toString.call(array) === "[object Array]") {
                    Array.prototype.push.apply(ret, array)
                } else {
                    if (typeof array.length === "number") {
                        for (var l = array.length; i < l; i++) {
                            ret.push(array[i])
                        }
                    } else {
                        for (; array[i]; i++) {
                            ret.push(array[i])
                        }
                    }
                }
                return ret
            }
        }
        var sortOrder, siblingCheck;
        if (document.documentElement.compareDocumentPosition) {
            sortOrder = function(a, b) {
                if (a === b) {
                    hasDuplicate = true;
                    return 0
                }
                if (!a.compareDocumentPosition || !b.compareDocumentPosition) {
                    return a.compareDocumentPosition ? -1 : 1
                }
                return a.compareDocumentPosition(b) & 4 ? -1 : 1
            }
        } else {
            sortOrder = function(a, b) {
                if (a === b) {
                    hasDuplicate = true;
                    return 0
                } else {
                    if (a.sourceIndex && b.sourceIndex) {
                        return a.sourceIndex - b.sourceIndex
                    }
                }
                var al, bl, ap = [],
                    bp = [],
                    aup = a.parentNode,
                    bup = b.parentNode,
                    cur = aup;
                if (aup === bup) {
                    return siblingCheck(a, b)
                } else {
                    if (!aup) {
                        return -1
                    } else {
                        if (!bup) {
                            return 1
                        }
                    }
                }
                while (cur) {
                    ap.unshift(cur);
                    cur = cur.parentNode
                }
                cur = bup;
                while (cur) {
                    bp.unshift(cur);
                    cur = cur.parentNode
                }
                al = ap.length;
                bl = bp.length;
                for (var i = 0; i < al && i < bl; i++) {
                    if (ap[i] !== bp[i]) {
                        return siblingCheck(ap[i], bp[i])
                    }
                }
                return i === al ? siblingCheck(a, bp[i], -1) : siblingCheck(ap[i], b, 1)
            };
            siblingCheck = function(a, b, ret) {
                if (a === b) {
                    return ret
                }
                var cur = a.nextSibling;
                while (cur) {
                    if (cur === b) {
                        return -1
                    }
                    cur = cur.nextSibling
                }
                return 1
            }
        }
        Sizzle.getText = function(elems) {
            var ret = "",
                elem;
            for (var i = 0; elems[i]; i++) {
                elem = elems[i];
                if (elem.nodeType === 3 || elem.nodeType === 4) {
                    ret += elem.nodeValue
                } else {
                    if (elem.nodeType !== 8) {
                        ret += Sizzle.getText(elem.childNodes)
                    }
                }
            }
            return ret
        };
        (function() {
            var form = document.createElement("div"),
                id = "script" + (new Date()).getTime(),
                root = document.documentElement;
            form.innerHTML = "<a name='" + id + "'/>";
            root.insertBefore(form, root.firstChild);
            if (document.getElementById(id)) {
                Expr.find.ID = function(match, context, isXML) {
                    if (typeof context.getElementById !== "undefined" && !isXML) {
                        var m = context.getElementById(match[1]);
                        return m ? m.id === match[1] || typeof m.getAttributeNode !== "undefined" && m.getAttributeNode("id").nodeValue === match[1] ? [m] : undefined : []
                    }
                };
                Expr.filter.ID = function(elem, match) {
                    var node = typeof elem.getAttributeNode !== "undefined" && elem.getAttributeNode("id");
                    return elem.nodeType === 1 && node && node.nodeValue === match
                }
            }
            root.removeChild(form);
            root = form = null
        })();
        (function() {
            var div = document.createElement("div");
            div.appendChild(document.createComment(""));
            if (div.getElementsByTagName("*").length > 0) {
                Expr.find.TAG = function(match, context) {
                    var results = context.getElementsByTagName(match[1]);
                    if (match[1] === "*") {
                        var tmp = [];
                        for (var i = 0; results[i]; i++) {
                            if (results[i].nodeType === 1) {
                                tmp.push(results[i])
                            }
                        }
                        results = tmp
                    }
                    return results
                }
            }
            div.innerHTML = "<a href='#'></a>";
            if (div.firstChild && typeof div.firstChild.getAttribute !== "undefined" && div.firstChild.getAttribute("href") !== "#") {
                Expr.attrHandle.href = function(elem) {
                    return elem.getAttribute("href", 2)
                }
            }
            div = null
        })();
        if (document.querySelectorAll) {
            (function() {
                var oldSizzle = Sizzle,
                    div = document.createElement("div"),
                    id = "__sizzle__";
                div.innerHTML = "<p class='TEST'></p>";
                if (div.querySelectorAll && div.querySelectorAll(".TEST").length === 0) {
                    return
                }
                Sizzle = function(query, context, extra, seed) {
                    context = context || document;
                    if (!seed && !Sizzle.isXML(context)) {
                        var match = /^(\w+$)|^\.([\w\-]+$)|^#([\w\-]+$)/.exec(query);
                        if (match && (context.nodeType === 1 || context.nodeType === 9)) {
                            if (match[1]) {
                                return makeArray(context.getElementsByTagName(query), extra)
                            } else {
                                if (match[2] && Expr.find.CLASS && context.getElementsByClassName) {
                                    return makeArray(context.getElementsByClassName(match[2]), extra)
                                }
                            }
                        }
                        if (context.nodeType === 9) {
                            if (query === "body" && context.body) {
                                return makeArray([context.body], extra)
                            } else {
                                if (match && match[3]) {
                                    var elem = context.getElementById(match[3]);
                                    if (elem && elem.parentNode) {
                                        if (elem.id === match[3]) {
                                            return makeArray([elem], extra)
                                        }
                                    } else {
                                        return makeArray([], extra)
                                    }
                                }
                            }
                            try {
                                return makeArray(context.querySelectorAll(query), extra)
                            } catch (qsaError) {}
                        } else {
                            if (context.nodeType === 1 && context.nodeName.toLowerCase() !== "object") {
                                var oldContext = context,
                                    old = context.getAttribute("id"),
                                    nid = old || id,
                                    hasParent = context.parentNode,
                                    relativeHierarchySelector = /^\s*[+~]/.test(query);
                                if (!old) {
                                    context.setAttribute("id", nid)
                                } else {
                                    nid = nid.replace(/'/g, "\\$&")
                                }
                                if (relativeHierarchySelector && hasParent) {
                                    context = context.parentNode
                                }
                                try {
                                    if (!relativeHierarchySelector || hasParent) {
                                        return makeArray(context.querySelectorAll("[id='" + nid + "'] " + query), extra)
                                    }
                                } catch (pseudoError) {} finally {
                                    if (!old) {
                                        oldContext.removeAttribute("id")
                                    }
                                }
                            }
                        }
                    }
                    return oldSizzle(query, context, extra, seed)
                };
                for (var prop in oldSizzle) {
                    Sizzle[prop] = oldSizzle[prop]
                }
                div = null
            })()
        }(function() {
            var html = document.documentElement,
                matches = html.matchesSelector || html.mozMatchesSelector || html.webkitMatchesSelector || html.msMatchesSelector;
            if (matches) {
                var disconnectedMatch = !matches.call(document.createElement("div"), "div"),
                    pseudoWorks = false;
                try {
                    matches.call(document.documentElement, "[test!='']:sizzle")
                } catch (pseudoError) {
                    pseudoWorks = true
                }
                Sizzle.matchesSelector = function(node, expr) {
                    expr = expr.replace(/\=\s*([^'"\]]*)\s*\]/g, "='$1']");
                    if (!Sizzle.isXML(node)) {
                        try {
                            if (pseudoWorks || !Expr.match.PSEUDO.test(expr) && !/!=/.test(expr)) {
                                var ret = matches.call(node, expr);
                                if (ret || !disconnectedMatch || node.document && node.document.nodeType !== 11) {
                                    return ret
                                }
                            }
                        } catch (e) {}
                    }
                    return Sizzle(expr, null, null, [node]).length > 0
                }
            }
        })();
        (function() {
            var div = document.createElement("div");
            div.innerHTML = "<div class='test e'></div><div class='test'></div>";
            if (!div.getElementsByClassName || div.getElementsByClassName("e").length === 0) {
                return
            }
            div.lastChild.className = "e";
            if (div.getElementsByClassName("e").length === 1) {
                return
            }
            Expr.order.splice(1, 0, "CLASS");
            Expr.find.CLASS = function(match, context, isXML) {
                if (typeof context.getElementsByClassName !== "undefined" && !isXML) {
                    return context.getElementsByClassName(match[1])
                }
            };
            div = null
        })();

        function dirNodeCheck(dir, cur, doneName, checkSet, nodeCheck, isXML) {
            for (var i = 0, l = checkSet.length; i < l; i++) {
                var elem = checkSet[i];
                if (elem) {
                    var match = false;
                    elem = elem[dir];
                    while (elem) {
                        if (elem.sizcache === doneName) {
                            match = checkSet[elem.sizset];
                            break
                        }
                        if (elem.nodeType === 1 && !isXML) {
                            elem.sizcache = doneName;
                            elem.sizset = i
                        }
                        if (elem.nodeName.toLowerCase() === cur) {
                            match = elem;
                            break
                        }
                        elem = elem[dir]
                    }
                    checkSet[i] = match
                }
            }
        }

        function dirCheck(dir, cur, doneName, checkSet, nodeCheck, isXML) {
            for (var i = 0, l = checkSet.length; i < l; i++) {
                var elem = checkSet[i];
                if (elem) {
                    var match = false;
                    elem = elem[dir];
                    while (elem) {
                        if (elem.sizcache === doneName) {
                            match = checkSet[elem.sizset];
                            break
                        }
                        if (elem.nodeType === 1) {
                            if (!isXML) {
                                elem.sizcache = doneName;
                                elem.sizset = i
                            }
                            if (typeof cur !== "string") {
                                if (elem === cur) {
                                    match = true;
                                    break
                                }
                            } else {
                                if (Sizzle.filter(cur, [elem]).length > 0) {
                                    match = elem;
                                    break
                                }
                            }
                        }
                        elem = elem[dir]
                    }
                    checkSet[i] = match
                }
            }
        }
        if (document.documentElement.contains) {
            Sizzle.contains = function(a, b) {
                return a !== b && (a.contains ? a.contains(b) : true)
            }
        } else {
            if (document.documentElement.compareDocumentPosition) {
                Sizzle.contains = function(a, b) {
                    return !!(a.compareDocumentPosition(b) & 16)
                }
            } else {
                Sizzle.contains = function() {
                    return false
                }
            }
        }
        Sizzle.isXML = function(elem) {
            var documentElement = (elem ? elem.ownerDocument || elem : 0).documentElement;
            return documentElement ? documentElement.nodeName !== "HTML" : false
        };
        var posProcess = function(selector, context) {
            var match, tmpSet = [],
                later = "",
                root = context.nodeType ? [context] : context;
            while ((match = Expr.match.PSEUDO.exec(selector))) {
                later += match[0];
                selector = selector.replace(Expr.match.PSEUDO, "")
            }
            selector = Expr.relative[selector] ? selector + "*" : selector;
            for (var i = 0, l = root.length; i < l; i++) {
                Sizzle(selector, root[i], tmpSet)
            }
            return Sizzle.filter(later, tmpSet)
        };
        jQuery.find = Sizzle;
        jQuery.expr = Sizzle.selectors;
        jQuery.expr[":"] = jQuery.expr.filters;
        jQuery.unique = Sizzle.uniqueSort;
        jQuery.text = Sizzle.getText;
        jQuery.isXMLDoc = Sizzle.isXML;
        jQuery.contains = Sizzle.contains
    })();
    var runtil = /Until$/,
        rparentsprev = /^(?:parents|prevUntil|prevAll)/,
        rmultiselector = /,/,
        isSimple = /^.[^:#\[\.,]*$/,
        slice = Array.prototype.slice,
        POS = jQuery.expr.match.POS,
        guaranteedUnique = {
            children: true,
            contents: true,
            next: true,
            prev: true
        };
    jQuery.fn.extend({
        find: function(selector) {
            var self = this,
                i, l;
            if (typeof selector !== "string") {
                return jQuery(selector).filter(function() {
                    for (i = 0, l = self.length; i < l; i++) {
                        if (jQuery.contains(self[i], this)) {
                            return true
                        }
                    }
                })
            }
            var ret = this.pushStack("", "find", selector),
                length, n, r;
            for (i = 0, l = this.length; i < l; i++) {
                length = ret.length;
                jQuery.find(selector, this[i], ret);
                if (i > 0) {
                    for (n = length; n < ret.length; n++) {
                        for (r = 0; r < length; r++) {
                            if (ret[r] === ret[n]) {
                                ret.splice(n--, 1);
                                break
                            }
                        }
                    }
                }
            }
            return ret
        },
        has: function(target) {
            var targets = jQuery(target);
            return this.filter(function() {
                for (var i = 0, l = targets.length; i < l; i++) {
                    if (jQuery.contains(this, targets[i])) {
                        return true
                    }
                }
            })
        },
        not: function(selector) {
            return this.pushStack(winnow(this, selector, false), "not", selector)
        },
        filter: function(selector) {
            return this.pushStack(winnow(this, selector, true), "filter", selector)
        },
        is: function(selector) {
            return !!selector && (typeof selector === "string" ? jQuery.filter(selector, this).length > 0 : this.filter(selector).length > 0)
        },
        closest: function(selectors, context) {
            var ret = [],
                i, l, cur = this[0];
            if (jQuery.isArray(selectors)) {
                var match, selector, matches = {},
                    level = 1;
                if (cur && selectors.length) {
                    for (i = 0, l = selectors.length; i < l; i++) {
                        selector = selectors[i];
                        if (!matches[selector]) {
                            matches[selector] = POS.test(selector) ? jQuery(selector, context || this.context) : selector
                        }
                    }
                    while (cur && cur.ownerDocument && cur !== context) {
                        for (selector in matches) {
                            match = matches[selector];
                            if (match.jquery ? match.index(cur) > -1 : jQuery(cur).is(match)) {
                                ret.push({
                                    selector: selector,
                                    elem: cur,
                                    level: level
                                })
                            }
                        }
                        cur = cur.parentNode;
                        level++
                    }
                }
                return ret
            }
            var pos = POS.test(selectors) || typeof selectors !== "string" ? jQuery(selectors, context || this.context) : 0;
            for (i = 0, l = this.length; i < l; i++) {
                cur = this[i];
                while (cur) {
                    if (pos ? pos.index(cur) > -1 : jQuery.find.matchesSelector(cur, selectors)) {
                        ret.push(cur);
                        break
                    } else {
                        cur = cur.parentNode;
                        if (!cur || !cur.ownerDocument || cur === context || cur.nodeType === 11) {
                            break
                        }
                    }
                }
            }
            ret = ret.length > 1 ? jQuery.unique(ret) : ret;
            return this.pushStack(ret, "closest", selectors)
        },
        index: function(elem) {
            if (!elem || typeof elem === "string") {
                return jQuery.inArray(this[0], elem ? jQuery(elem) : this.parent().children())
            }
            return jQuery.inArray(elem.jquery ? elem[0] : elem, this)
        },
        add: function(selector, context) {
            var set = typeof selector === "string" ? jQuery(selector, context) : jQuery.makeArray(selector && selector.nodeType ? [selector] : selector),
                all = jQuery.merge(this.get(), set);
            return this.pushStack(isDisconnected(set[0]) || isDisconnected(all[0]) ? all : jQuery.unique(all))
        },
        andSelf: function() {
            return this.add(this.prevObject)
        }
    });

    function isDisconnected(node) {
        return !node || !node.parentNode || node.parentNode.nodeType === 11
    }
    jQuery.each({
        parent: function(elem) {
            var parent = elem.parentNode;
            return parent && parent.nodeType !== 11 ? parent : null
        },
        parents: function(elem) {
            return jQuery.dir(elem, "parentNode")
        },
        parentsUntil: function(elem, i, until) {
            return jQuery.dir(elem, "parentNode", until)
        },
        next: function(elem) {
            return jQuery.nth(elem, 2, "nextSibling")
        },
        prev: function(elem) {
            return jQuery.nth(elem, 2, "previousSibling")
        },
        nextAll: function(elem) {
            return jQuery.dir(elem, "nextSibling")
        },
        prevAll: function(elem) {
            return jQuery.dir(elem, "previousSibling")
        },
        nextUntil: function(elem, i, until) {
            return jQuery.dir(elem, "nextSibling", until)
        },
        prevUntil: function(elem, i, until) {
            return jQuery.dir(elem, "previousSibling", until)
        },
        siblings: function(elem) {
            return jQuery.sibling(elem.parentNode.firstChild, elem)
        },
        children: function(elem) {
            return jQuery.sibling(elem.firstChild)
        },
        contents: function(elem) {
            return jQuery.nodeName(elem, "iframe") ? elem.contentDocument || elem.contentWindow.document : jQuery.makeArray(elem.childNodes)
        }
    }, function(name, fn) {
        jQuery.fn[name] = function(until, selector) {
            var ret = jQuery.map(this, fn, until),
                args = slice.call(arguments);
            if (!runtil.test(name)) {
                selector = until
            }
            if (selector && typeof selector === "string") {
                ret = jQuery.filter(selector, ret)
            }
            ret = this.length > 1 && !guaranteedUnique[name] ? jQuery.unique(ret) : ret;
            if ((this.length > 1 || rmultiselector.test(selector)) && rparentsprev.test(name)) {
                ret = ret.reverse()
            }
            return this.pushStack(ret, name, args.join(","))
        }
    });
    jQuery.extend({
        filter: function(expr, elems, not) {
            if (not) {
                expr = ":not(" + expr + ")"
            }
            return elems.length === 1 ? jQuery.find.matchesSelector(elems[0], expr) ? [elems[0]] : [] : jQuery.find.matches(expr, elems)
        },
        dir: function(elem, dir, until) {
            var matched = [],
                cur = elem[dir];
            while (cur && cur.nodeType !== 9 && (until === undefined || cur.nodeType !== 1 || !jQuery(cur).is(until))) {
                if (cur.nodeType === 1) {
                    matched.push(cur)
                }
                cur = cur[dir]
            }
            return matched
        },
        nth: function(cur, result, dir, elem) {
            result = result || 1;
            var num = 0;
            for (; cur; cur = cur[dir]) {
                if (cur.nodeType === 1 && ++num === result) {
                    break
                }
            }
            return cur
        },
        sibling: function(n, elem) {
            var r = [];
            for (; n; n = n.nextSibling) {
                if (n.nodeType === 1 && n !== elem) {
                    r.push(n)
                }
            }
            return r
        }
    });

    function winnow(elements, qualifier, keep) {
        qualifier = qualifier || 0;
        if (jQuery.isFunction(qualifier)) {
            return jQuery.grep(elements, function(elem, i) {
                var retVal = !!qualifier.call(elem, i, elem);
                return retVal === keep
            })
        } else {
            if (qualifier.nodeType) {
                return jQuery.grep(elements, function(elem, i) {
                    return (elem === qualifier) === keep
                })
            } else {
                if (typeof qualifier === "string") {
                    var filtered = jQuery.grep(elements, function(elem) {
                        return elem.nodeType === 1
                    });
                    if (isSimple.test(qualifier)) {
                        return jQuery.filter(qualifier, filtered, !keep)
                    } else {
                        qualifier = jQuery.filter(qualifier, filtered)
                    }
                }
            }
        }
        return jQuery.grep(elements, function(elem, i) {
            return (jQuery.inArray(elem, qualifier) >= 0) === keep
        })
    }
    var rinlinejQuery = / jQuery\d+="(?:\d+|null)"/g,
        rleadingWhitespace = /^\s+/,
        rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([\w:]+)[^>]*)\/>/ig,
        rtagName = /<([\w:]+)/,
        rtbody = /<tbody/i,
        rhtml = /<|&#?\w+;/,
        rnocache = /<(?:script|object|embed|option|style)/i,
        rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
        rscriptType = /\/(java|ecma)script/i,
        rcleanScript = /^\s*<!(?:\[CDATA\[|\-\-)/,
        wrapMap = {
            option: [1, "<select multiple='multiple'>", "</select>"],
            legend: [1, "<fieldset>", "</fieldset>"],
            thead: [1, "<table>", "</table>"],
            tr: [2, "<table><tbody>", "</tbody></table>"],
            td: [3, "<table><tbody><tr>", "</tr></tbody></table>"],
            col: [2, "<table><tbody></tbody><colgroup>", "</colgroup></table>"],
            area: [1, "<map>", "</map>"],
            _default: [0, "", ""]
        };
    wrapMap.optgroup = wrapMap.option;
    wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
    wrapMap.th = wrapMap.td;
    if (!jQuery.support.htmlSerialize) {
        wrapMap._default = [1, "div<div>", "</div>"]
    }
    jQuery.fn.extend({
        text: function(text) {
            if (jQuery.isFunction(text)) {
                return this.each(function(i) {
                    var self = jQuery(this);
                    self.text(text.call(this, i, self.text()))
                })
            }
            if (typeof text !== "object" && text !== undefined) {
                return this.empty().append((this[0] && this[0].ownerDocument || document).createTextNode(text))
            }
            return jQuery.text(this)
        },
        wrapAll: function(html) {
            if (jQuery.isFunction(html)) {
                return this.each(function(i) {
                    jQuery(this).wrapAll(html.call(this, i))
                })
            }
            if (this[0]) {
                var wrap = jQuery(html, this[0].ownerDocument).eq(0).clone(true);
                if (this[0].parentNode) {
                    wrap.insertBefore(this[0])
                }
                wrap.map(function() {
                    var elem = this;
                    while (elem.firstChild && elem.firstChild.nodeType === 1) {
                        elem = elem.firstChild
                    }
                    return elem
                }).append(this)
            }
            return this
        },
        wrapInner: function(html) {
            if (jQuery.isFunction(html)) {
                return this.each(function(i) {
                    jQuery(this).wrapInner(html.call(this, i))
                })
            }
            return this.each(function() {
                var self = jQuery(this),
                    contents = self.contents();
                if (contents.length) {
                    contents.wrapAll(html)
                } else {
                    self.append(html)
                }
            })
        },
        wrap: function(html) {
            return this.each(function() {
                jQuery(this).wrapAll(html)
            })
        },
        unwrap: function() {
            return this.parent().each(function() {
                if (!jQuery.nodeName(this, "body")) {
                    jQuery(this).replaceWith(this.childNodes)
                }
            }).end()
        },
        append: function() {
            return this.domManip(arguments, true, function(elem) {
                if (this.nodeType === 1) {
                    this.appendChild(elem)
                }
            })
        },
        prepend: function() {
            return this.domManip(arguments, true, function(elem) {
                if (this.nodeType === 1) {
                    this.insertBefore(elem, this.firstChild)
                }
            })
        },
        before: function() {
            if (this[0] && this[0].parentNode) {
                return this.domManip(arguments, false, function(elem) {
                    this.parentNode.insertBefore(elem, this)
                })
            } else {
                if (arguments.length) {
                    var set = jQuery(arguments[0]);
                    set.push.apply(set, this.toArray());
                    return this.pushStack(set, "before", arguments)
                }
            }
        },
        after: function() {
            if (this[0] && this[0].parentNode) {
                return this.domManip(arguments, false, function(elem) {
                    this.parentNode.insertBefore(elem, this.nextSibling)
                })
            } else {
                if (arguments.length) {
                    var set = this.pushStack(this, "after", arguments);
                    set.push.apply(set, jQuery(arguments[0]).toArray());
                    return set
                }
            }
        },
        remove: function(selector, keepData) {
            for (var i = 0, elem;
                (elem = this[i]) != null; i++) {
                if (!selector || jQuery.filter(selector, [elem]).length) {
                    if (!keepData && elem.nodeType === 1) {
                        jQuery.cleanData(elem.getElementsByTagName("*"));
                        jQuery.cleanData([elem])
                    }
                    if (elem.parentNode) {
                        elem.parentNode.removeChild(elem)
                    }
                }
            }
            return this
        },
        empty: function() {
            for (var i = 0, elem;
                (elem = this[i]) != null; i++) {
                if (elem.nodeType === 1) {
                    jQuery.cleanData(elem.getElementsByTagName("*"))
                }
                while (elem.firstChild) {
                    elem.removeChild(elem.firstChild)
                }
            }
            return this
        },
        clone: function(dataAndEvents, deepDataAndEvents) {
            dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
            deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;
            return this.map(function() {
                return jQuery.clone(this, dataAndEvents, deepDataAndEvents)
            })
        },
        html: function(value) {
            if (value === undefined) {
                return this[0] && this[0].nodeType === 1 ? this[0].innerHTML.replace(rinlinejQuery, "") : null
            } else {
                if (typeof value === "string" && !rnocache.test(value) && (jQuery.support.leadingWhitespace || !rleadingWhitespace.test(value)) && !wrapMap[(rtagName.exec(value) || ["", ""])[1].toLowerCase()]) {
                    value = value.replace(rxhtmlTag, "<$1></$2>");
                    try {
                        for (var i = 0, l = this.length; i < l; i++) {
                            if (this[i].nodeType === 1) {
                                jQuery.cleanData(this[i].getElementsByTagName("*"));
                                this[i].innerHTML = value
                            }
                        }
                    } catch (e) {
                        this.empty().append(value)
                    }
                } else {
                    if (jQuery.isFunction(value)) {
                        this.each(function(i) {
                            var self = jQuery(this);
                            self.html(value.call(this, i, self.html()))
                        })
                    } else {
                        this.empty().append(value)
                    }
                }
            }
            return this
        },
        replaceWith: function(value) {
            if (this[0] && this[0].parentNode) {
                if (jQuery.isFunction(value)) {
                    return this.each(function(i) {
                        var self = jQuery(this),
                            old = self.html();
                        self.replaceWith(value.call(this, i, old))
                    })
                }
                if (typeof value !== "string") {
                    value = jQuery(value).detach()
                }
                return this.each(function() {
                    var next = this.nextSibling,
                        parent = this.parentNode;
                    jQuery(this).remove();
                    if (next) {
                        jQuery(next).before(value)
                    } else {
                        jQuery(parent).append(value)
                    }
                })
            } else {
                return this.length ? this.pushStack(jQuery(jQuery.isFunction(value) ? value() : value), "replaceWith", value) : this
            }
        },
        detach: function(selector) {
            return this.remove(selector, true)
        },
        domManip: function(args, table, callback) {
            var results, first, fragment, parent, value = args[0],
                scripts = [];
            if (!jQuery.support.checkClone && arguments.length === 3 && typeof value === "string" && rchecked.test(value)) {
                return this.each(function() {
                    jQuery(this).domManip(args, table, callback, true)
                })
            }
            if (jQuery.isFunction(value)) {
                return this.each(function(i) {
                    var self = jQuery(this);
                    args[0] = value.call(this, i, table ? self.html() : undefined);
                    self.domManip(args, table, callback)
                })
            }
            if (this[0]) {
                parent = value && value.parentNode;
                if (jQuery.support.parentNode && parent && parent.nodeType === 11 && parent.childNodes.length === this.length) {
                    results = {
                        fragment: parent
                    }
                } else {
                    results = jQuery.buildFragment(args, this, scripts)
                }
                fragment = results.fragment;
                if (fragment.childNodes.length === 1) {
                    first = fragment = fragment.firstChild
                } else {
                    first = fragment.firstChild
                }
                if (first) {
                    table = table && jQuery.nodeName(first, "tr");
                    for (var i = 0, l = this.length, lastIndex = l - 1; i < l; i++) {
                        callback.call(table ? root(this[i], first) : this[i], results.cacheable || (l > 1 && i < lastIndex) ? jQuery.clone(fragment, true, true) : fragment)
                    }
                }
                if (scripts.length) {
                    jQuery.each(scripts, evalScript)
                }
            }
            return this
        }
    });

    function root(elem, cur) {
        return jQuery.nodeName(elem, "table") ? (elem.getElementsByTagName("tbody")[0] || elem.appendChild(elem.ownerDocument.createElement("tbody"))) : elem
    }

    function cloneCopyEvent(src, dest) {
        if (dest.nodeType !== 1 || !jQuery.hasData(src)) {
            return
        }
        var internalKey = jQuery.expando,
            oldData = jQuery.data(src),
            curData = jQuery.data(dest, oldData);
        if ((oldData = oldData[internalKey])) {
            var events = oldData.events;
            curData = curData[internalKey] = jQuery.extend({}, oldData);
            if (events) {
                delete curData.handle;
                curData.events = {};
                for (var type in events) {
                    for (var i = 0, l = events[type].length; i < l; i++) {
                        jQuery.event.add(dest, type + (events[type][i].namespace ? "." : "") + events[type][i].namespace, events[type][i], events[type][i].data)
                    }
                }
            }
        }
    }

    function cloneFixAttributes(src, dest) {
        var nodeName;
        if (dest.nodeType !== 1) {
            return
        }
        if (dest.clearAttributes) {
            dest.clearAttributes()
        }
        if (dest.mergeAttributes) {
            dest.mergeAttributes(src)
        }
        nodeName = dest.nodeName.toLowerCase();
        if (nodeName === "object") {
            dest.outerHTML = src.outerHTML
        } else {
            if (nodeName === "input" && (src.type === "checkbox" || src.type === "radio")) {
                if (src.checked) {
                    dest.defaultChecked = dest.checked = src.checked
                }
                if (dest.value !== src.value) {
                    dest.value = src.value
                }
            } else {
                if (nodeName === "option") {
                    dest.selected = src.defaultSelected
                } else {
                    if (nodeName === "input" || nodeName === "textarea") {
                        dest.defaultValue = src.defaultValue
                    }
                }
            }
        }
        dest.removeAttribute(jQuery.expando)
    }
    jQuery.buildFragment = function(args, nodes, scripts) {
        var fragment, cacheable, cacheresults, doc;
        if (nodes && nodes[0]) {
            doc = nodes[0].ownerDocument || nodes[0]
        }
        if (!doc.createDocumentFragment) {
            doc = document
        }
        if (args.length === 1 && typeof args[0] === "string" && args[0].length < 512 && doc === document && args[0].charAt(0) === "<" && !rnocache.test(args[0]) && (jQuery.support.checkClone || !rchecked.test(args[0]))) {
            cacheable = true;
            cacheresults = jQuery.fragments[args[0]];
            if (cacheresults && cacheresults !== 1) {
                fragment = cacheresults
            }
        }
        if (!fragment) {
            fragment = doc.createDocumentFragment();
            jQuery.clean(args, doc, fragment, scripts)
        }
        if (cacheable) {
            jQuery.fragments[args[0]] = cacheresults ? fragment : 1
        }
        return {
            fragment: fragment,
            cacheable: cacheable
        }
    };
    jQuery.fragments = {};
    jQuery.each({
        appendTo: "append",
        prependTo: "prepend",
        insertBefore: "before",
        insertAfter: "after",
        replaceAll: "replaceWith"
    }, function(name, original) {
        jQuery.fn[name] = function(selector) {
            var ret = [],
                insert = jQuery(selector),
                parent = this.length === 1 && this[0].parentNode;
            if (parent && parent.nodeType === 11 && parent.childNodes.length === 1 && insert.length === 1) {
                insert[original](this[0]);
                return this
            } else {
                for (var i = 0, l = insert.length; i < l; i++) {
                    var elems = (i > 0 ? this.clone(true) : this).get();
                    jQuery(insert[i])[original](elems);
                    ret = ret.concat(elems)
                }
                return this.pushStack(ret, name, insert.selector)
            }
        }
    });

    function getAll(elem) {
        if ("getElementsByTagName" in elem) {
            return elem.getElementsByTagName("*")
        } else {
            if ("querySelectorAll" in elem) {
                return elem.querySelectorAll("*")
            } else {
                return []
            }
        }
    }

    function fixDefaultChecked(elem) {
        if (elem.type === "checkbox" || elem.type === "radio") {
            elem.defaultChecked = elem.checked
        }
    }

    function findInputs(elem) {
        if (jQuery.nodeName(elem, "input")) {
            fixDefaultChecked(elem)
        } else {
            if ("getElementsByTagName" in elem) {
                jQuery.grep(elem.getElementsByTagName("input"), fixDefaultChecked)
            }
        }
    }
    jQuery.extend({
        clone: function(elem, dataAndEvents, deepDataAndEvents) {
            var clone = elem.cloneNode(true),
                srcElements, destElements, i;
            if ((!jQuery.support.noCloneEvent || !jQuery.support.noCloneChecked) && (elem.nodeType === 1 || elem.nodeType === 11) && !jQuery.isXMLDoc(elem)) {
                cloneFixAttributes(elem, clone);
                srcElements = getAll(elem);
                destElements = getAll(clone);
                for (i = 0; srcElements[i]; ++i) {
                    cloneFixAttributes(srcElements[i], destElements[i])
                }
            }
            if (dataAndEvents) {
                cloneCopyEvent(elem, clone);
                if (deepDataAndEvents) {
                    srcElements = getAll(elem);
                    destElements = getAll(clone);
                    for (i = 0; srcElements[i]; ++i) {
                        cloneCopyEvent(srcElements[i], destElements[i])
                    }
                }
            }
            srcElements = destElements = null;
            return clone
        },
        clean: function(elems, context, fragment, scripts) {
            var checkScriptType;
            context = context || document;
            if (typeof context.createElement === "undefined") {
                context = context.ownerDocument || context[0] && context[0].ownerDocument || document
            }
            var ret = [],
                j;
            for (var i = 0, elem;
                (elem = elems[i]) != null; i++) {
                if (typeof elem === "number") {
                    elem += ""
                }
                if (!elem) {
                    continue
                }
                if (typeof elem === "string") {
                    if (!rhtml.test(elem)) {
                        elem = context.createTextNode(elem)
                    } else {
                        elem = elem.replace(rxhtmlTag, "<$1></$2>");
                        var tag = (rtagName.exec(elem) || ["", ""])[1].toLowerCase(),
                            wrap = wrapMap[tag] || wrapMap._default,
                            depth = wrap[0],
                            div = context.createElement("div");
                        div.innerHTML = wrap[1] + elem + wrap[2];
                        while (depth--) {
                            div = div.lastChild
                        }
                        if (!jQuery.support.tbody) {
                            var hasBody = rtbody.test(elem),
                                tbody = tag === "table" && !hasBody ? div.firstChild && div.firstChild.childNodes : wrap[1] === "<table>" && !hasBody ? div.childNodes : [];
                            for (j = tbody.length - 1; j >= 0; --j) {
                                if (jQuery.nodeName(tbody[j], "tbody") && !tbody[j].childNodes.length) {
                                    tbody[j].parentNode.removeChild(tbody[j])
                                }
                            }
                        }
                        if (!jQuery.support.leadingWhitespace && rleadingWhitespace.test(elem)) {
                            div.insertBefore(context.createTextNode(rleadingWhitespace.exec(elem)[0]), div.firstChild)
                        }
                        elem = div.childNodes
                    }
                }
                var len;
                if (!jQuery.support.appendChecked) {
                    if (elem[0] && typeof(len = elem.length) === "number") {
                        for (j = 0; j < len; j++) {
                            findInputs(elem[j])
                        }
                    } else {
                        findInputs(elem)
                    }
                }
                if (elem.nodeType) {
                    ret.push(elem)
                } else {
                    ret = jQuery.merge(ret, elem)
                }
            }
            if (fragment) {
                checkScriptType = function(elem) {
                    return !elem.type || rscriptType.test(elem.type)
                };
                for (i = 0; ret[i]; i++) {
                    if (scripts && jQuery.nodeName(ret[i], "script") && (!ret[i].type || ret[i].type.toLowerCase() === "text/javascript")) {
                        scripts.push(ret[i].parentNode ? ret[i].parentNode.removeChild(ret[i]) : ret[i])
                    } else {
                        if (ret[i].nodeType === 1) {
                            var jsTags = jQuery.grep(ret[i].getElementsByTagName("script"), checkScriptType);
                            ret.splice.apply(ret, [i + 1, 0].concat(jsTags))
                        }
                        fragment.appendChild(ret[i])
                    }
                }
            }
            return ret
        },
        cleanData: function(elems) {
            var data, id, cache = jQuery.cache,
                internalKey = jQuery.expando,
                special = jQuery.event.special,
                deleteExpando = jQuery.support.deleteExpando;
            for (var i = 0, elem;
                (elem = elems[i]) != null; i++) {
                if (elem.nodeName && jQuery.noData[elem.nodeName.toLowerCase()]) {
                    continue
                }
                id = elem[jQuery.expando];
                if (id) {
                    data = cache[id] && cache[id][internalKey];
                    if (data && data.events) {
                        for (var type in data.events) {
                            if (special[type]) {
                                jQuery.event.remove(elem, type)
                            } else {
                                jQuery.removeEvent(elem, type, data.handle)
                            }
                        }
                        if (data.handle) {
                            data.handle.elem = null
                        }
                    }
                    if (deleteExpando) {
                        delete elem[jQuery.expando]
                    } else {
                        if (elem.removeAttribute) {
                            elem.removeAttribute(jQuery.expando)
                        }
                    }
                    delete cache[id]
                }
            }
        }
    });

    function evalScript(i, elem) {
        if (elem.src) {
            jQuery.ajax({
                url: elem.src,
                async: false,
                dataType: "script"
            })
        } else {
            jQuery.globalEval((elem.text || elem.textContent || elem.innerHTML || "").replace(rcleanScript, "/*$0*/"))
        }
        if (elem.parentNode) {
            elem.parentNode.removeChild(elem)
        }
    }
    var ralpha = /alpha\([^)]*\)/i,
        ropacity = /opacity=([^)]*)/,
        rupper = /([A-Z]|^ms)/g,
        rnumpx = /^-?\d+(?:px)?$/i,
        rnum = /^-?\d/,
        rrelNum = /^[+\-]=/,
        rrelNumFilter = /[^+\-\.\de]+/g,
        cssShow = {
            position: "absolute",
            visibility: "hidden",
            display: "block"
        },
        cssWidth = ["Left", "Right"],
        cssHeight = ["Top", "Bottom"],
        curCSS, getComputedStyle, currentStyle;
    jQuery.fn.css = function(name, value) {
        if (arguments.length === 2 && value === undefined) {
            return this
        }
        return jQuery.access(this, name, value, true, function(elem, name, value) {
            return value !== undefined ? jQuery.style(elem, name, value) : jQuery.css(elem, name)
        })
    };
    jQuery.extend({
        cssHooks: {
            opacity: {
                get: function(elem, computed) {
                    if (computed) {
                        var ret = curCSS(elem, "opacity", "opacity");
                        return ret === "" ? "1" : ret
                    } else {
                        return elem.style.opacity
                    }
                }
            }
        },
        cssNumber: {
            fillOpacity: true,
            fontWeight: true,
            lineHeight: true,
            opacity: true,
            orphans: true,
            widows: true,
            zIndex: true,
            zoom: true
        },
        cssProps: {
            "float": jQuery.support.cssFloat ? "cssFloat" : "styleFloat"
        },
        style: function(elem, name, value, extra) {
            if (!elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style) {
                return
            }
            var ret, type, origName = jQuery.camelCase(name),
                style = elem.style,
                hooks = jQuery.cssHooks[origName];
            name = jQuery.cssProps[origName] || origName;
            if (value !== undefined) {
                type = typeof value;
                if (type === "number" && isNaN(value) || value == null) {
                    return
                }
                if (type === "string" && rrelNum.test(value)) {
                    value = +value.replace(rrelNumFilter, "") + parseFloat(jQuery.css(elem, name));
                    type = "number"
                }
                if (type === "number" && !jQuery.cssNumber[origName]) {
                    value += "px"
                }
                if (!hooks || !("set" in hooks) || (value = hooks.set(elem, value)) !== undefined) {
                    try {
                        style[name] = value
                    } catch (e) {}
                }
            } else {
                if (hooks && "get" in hooks && (ret = hooks.get(elem, false, extra)) !== undefined) {
                    return ret
                }
                return style[name]
            }
        },
        css: function(elem, name, extra) {
            var ret, hooks;
            name = jQuery.camelCase(name);
            hooks = jQuery.cssHooks[name];
            name = jQuery.cssProps[name] || name;
            if (name === "cssFloat") {
                name = "float"
            }
            if (hooks && "get" in hooks && (ret = hooks.get(elem, true, extra)) !== undefined) {
                return ret
            } else {
                if (curCSS) {
                    return curCSS(elem, name)
                }
            }
        },
        swap: function(elem, options, callback) {
            var old = {};
            for (var name in options) {
                old[name] = elem.style[name];
                elem.style[name] = options[name]
            }
            callback.call(elem);
            for (name in options) {
                elem.style[name] = old[name]
            }
        }
    });
    jQuery.curCSS = jQuery.css;
    jQuery.each(["height", "width"], function(i, name) {
        jQuery.cssHooks[name] = {
            get: function(elem, computed, extra) {
                var val;
                if (computed) {
                    if (elem.offsetWidth !== 0) {
                        return getWH(elem, name, extra)
                    } else {
                        jQuery.swap(elem, cssShow, function() {
                            val = getWH(elem, name, extra)
                        })
                    }
                    return val
                }
            },
            set: function(elem, value) {
                if (rnumpx.test(value)) {
                    value = parseFloat(value);
                    if (value >= 0) {
                        return value + "px"
                    }
                } else {
                    return value
                }
            }
        }
    });
    if (!jQuery.support.opacity) {
        jQuery.cssHooks.opacity = {
            get: function(elem, computed) {
                return ropacity.test((computed && elem.currentStyle ? elem.currentStyle.filter : elem.style.filter) || "") ? (parseFloat(RegExp.$1) / 100) + "" : computed ? "1" : ""
            },
            set: function(elem, value) {
                var style = elem.style,
                    currentStyle = elem.currentStyle;
                style.zoom = 1;
                var opacity = jQuery.isNaN(value) ? "" : "alpha(opacity=" + value * 100 + ")",
                    filter = currentStyle && currentStyle.filter || style.filter || "";
                style.filter = ralpha.test(filter) ? filter.replace(ralpha, opacity) : filter + " " + opacity
            }
        }
    }
    jQuery(function() {
        if (!jQuery.support.reliableMarginRight) {
            jQuery.cssHooks.marginRight = {
                get: function(elem, computed) {
                    var ret;
                    jQuery.swap(elem, {
                        display: "inline-block"
                    }, function() {
                        if (computed) {
                            ret = curCSS(elem, "margin-right", "marginRight")
                        } else {
                            ret = elem.style.marginRight
                        }
                    });
                    return ret
                }
            }
        }
    });
    if (document.defaultView && document.defaultView.getComputedStyle) {
        getComputedStyle = function(elem, name) {
            var ret, defaultView, computedStyle;
            name = name.replace(rupper, "-$1").toLowerCase();
            if (!(defaultView = elem.ownerDocument.defaultView)) {
                return undefined
            }
            if ((computedStyle = defaultView.getComputedStyle(elem, null))) {
                ret = computedStyle.getPropertyValue(name);
                if (ret === "" && !jQuery.contains(elem.ownerDocument.documentElement, elem)) {
                    ret = jQuery.style(elem, name)
                }
            }
            return ret
        }
    }
    if (document.documentElement.currentStyle) {
        currentStyle = function(elem, name) {
            var left, ret = elem.currentStyle && elem.currentStyle[name],
                rsLeft = elem.runtimeStyle && elem.runtimeStyle[name],
                style = elem.style;
            if (!rnumpx.test(ret) && rnum.test(ret)) {
                left = style.left;
                if (rsLeft) {
                    elem.runtimeStyle.left = elem.currentStyle.left
                }
                style.left = name === "fontSize" ? "1em" : (ret || 0);
                ret = style.pixelLeft + "px";
                style.left = left;
                if (rsLeft) {
                    elem.runtimeStyle.left = rsLeft
                }
            }
            return ret === "" ? "auto" : ret
        }
    }
    curCSS = getComputedStyle || currentStyle;

    function getWH(elem, name, extra) {
        var val = name === "width" ? elem.offsetWidth : elem.offsetHeight,
            which = name === "width" ? cssWidth : cssHeight;
        if (val > 0) {
            if (extra !== "border") {
                jQuery.each(which, function() {
                    if (!extra) {
                        val -= parseFloat(jQuery.css(elem, "padding" + this)) || 0
                    }
                    if (extra === "margin") {
                        val += parseFloat(jQuery.css(elem, extra + this)) || 0
                    } else {
                        val -= parseFloat(jQuery.css(elem, "border" + this + "Width")) || 0
                    }
                })
            }
            return val + "px"
        }
        val = curCSS(elem, name, name);
        if (val < 0 || val == null) {
            val = elem.style[name] || 0
        }
        val = parseFloat(val) || 0;
        if (extra) {
            jQuery.each(which, function() {
                val += parseFloat(jQuery.css(elem, "padding" + this)) || 0;
                if (extra !== "padding") {
                    val += parseFloat(jQuery.css(elem, "border" + this + "Width")) || 0
                }
                if (extra === "margin") {
                    val += parseFloat(jQuery.css(elem, extra + this)) || 0
                }
            })
        }
        return val + "px"
    }
    if (jQuery.expr && jQuery.expr.filters) {
        jQuery.expr.filters.hidden = function(elem) {
            var width = elem.offsetWidth,
                height = elem.offsetHeight;
            return (width === 0 && height === 0) || (!jQuery.support.reliableHiddenOffsets && (elem.style.display || jQuery.css(elem, "display")) === "none")
        };
        jQuery.expr.filters.visible = function(elem) {
            return !jQuery.expr.filters.hidden(elem)
        }
    }
    var r20 = /%20/g,
        rbracket = /\[\]$/,
        rCRLF = /\r?\n/g,
        rhash = /#.*$/,
        rheaders = /^(.*?):[ \t]*([^\r\n]*)\r?$/mg,
        rinput = /^(?:color|date|datetime|email|hidden|month|number|password|range|search|tel|text|time|url|week)$/i,
        rlocalProtocol = /^(?:about|app|app\-storage|.+\-extension|file|widget):$/,
        rnoContent = /^(?:GET|HEAD)$/,
        rprotocol = /^\/\//,
        rquery = /\?/,
        rscript = /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
        rselectTextarea = /^(?:select|textarea)/i,
        rspacesAjax = /\s+/,
        rts = /([?&])_=[^&]*/,
        rurl = /^([\w\+\.\-]+:)(?:\/\/([^\/?#:]*)(?::(\d+))?)?/,
        _load = jQuery.fn.load,
        prefilters = {},
        transports = {},
        ajaxLocation, ajaxLocParts;
    try {
        ajaxLocation = location.href
    } catch (e) {
        ajaxLocation = document.createElement("a");
        ajaxLocation.href = "";
        ajaxLocation = ajaxLocation.href
    }
    ajaxLocParts = rurl.exec(ajaxLocation.toLowerCase()) || [];

    function addToPrefiltersOrTransports(structure) {
        return function(dataTypeExpression, func) {
            if (typeof dataTypeExpression !== "string") {
                func = dataTypeExpression;
                dataTypeExpression = "*"
            }
            if (jQuery.isFunction(func)) {
                var dataTypes = dataTypeExpression.toLowerCase().split(rspacesAjax),
                    i = 0,
                    length = dataTypes.length,
                    dataType, list, placeBefore;
                for (; i < length; i++) {
                    dataType = dataTypes[i];
                    placeBefore = /^\+/.test(dataType);
                    if (placeBefore) {
                        dataType = dataType.substr(1) || "*"
                    }
                    list = structure[dataType] = structure[dataType] || [];
                    list[placeBefore ? "unshift" : "push"](func)
                }
            }
        }
    }

    function inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR, dataType, inspected) {
        dataType = dataType || options.dataTypes[0];
        inspected = inspected || {};
        inspected[dataType] = true;
        var list = structure[dataType],
            i = 0,
            length = list ? list.length : 0,
            executeOnly = (structure === prefilters),
            selection;
        for (; i < length && (executeOnly || !selection); i++) {
            selection = list[i](options, originalOptions, jqXHR);
            if (typeof selection === "string") {
                if (!executeOnly || inspected[selection]) {
                    selection = undefined
                } else {
                    options.dataTypes.unshift(selection);
                    selection = inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR, selection, inspected)
                }
            }
        }
        if ((executeOnly || !selection) && !inspected["*"]) {
            selection = inspectPrefiltersOrTransports(structure, options, originalOptions, jqXHR, "*", inspected)
        }
        return selection
    }
    jQuery.fn.extend({
        load: function(url, params, callback) {
            if (typeof url !== "string" && _load) {
                return _load.apply(this, arguments)
            } else {
                if (!this.length) {
                    return this
                }
            }
            var off = url.indexOf(" ");
            if (off >= 0) {
                var selector = url.slice(off, url.length);
                url = url.slice(0, off)
            }
            var type = "GET";
            if (params) {
                if (jQuery.isFunction(params)) {
                    callback = params;
                    params = undefined
                } else {
                    if (typeof params === "object") {
                        params = jQuery.param(params, jQuery.ajaxSettings.traditional);
                        type = "POST"
                    }
                }
            }
            var self = this;
            jQuery.ajax({
                url: url,
                type: type,
                dataType: "html",
                data: params,
                complete: function(jqXHR, status, responseText) {
                    responseText = jqXHR.responseText;
                    if (jqXHR.isResolved()) {
                        jqXHR.done(function(r) {
                            responseText = r
                        });
                        self.html(selector ? jQuery("<div>").append(responseText.replace(rscript, "")).find(selector) : responseText)
                    }
                    if (callback) {
                        self.each(callback, [responseText, status, jqXHR])
                    }
                }
            });
            return this
        },
        serialize: function() {
            return jQuery.param(this.serializeArray())
        },
        serializeArray: function() {
            return this.map(function() {
                return this.elements ? jQuery.makeArray(this.elements) : this
            }).filter(function() {
                return this.name && !this.disabled && (this.checked || rselectTextarea.test(this.nodeName) || rinput.test(this.type))
            }).map(function(i, elem) {
                var val = jQuery(this).val();
                return val == null ? null : jQuery.isArray(val) ? jQuery.map(val, function(val, i) {
                    return {
                        name: elem.name,
                        value: val.replace(rCRLF, "\r\n")
                    }
                }) : {
                    name: elem.name,
                    value: val.replace(rCRLF, "\r\n")
                }
            }).get()
        }
    });
    jQuery.each("ajaxStart ajaxStop ajaxComplete ajaxError ajaxSuccess ajaxSend".split(" "), function(i, o) {
        jQuery.fn[o] = function(f) {
            return this.bind(o, f)
        }
    });
    jQuery.each(["get", "post"], function(i, method) {
        jQuery[method] = function(url, data, callback, type) {
            if (jQuery.isFunction(data)) {
                type = type || callback;
                callback = data;
                data = undefined
            }
            return jQuery.ajax({
                type: method,
                url: url,
                data: data,
                success: callback,
                dataType: type
            })
        }
    });
    jQuery.extend({
        getScript: function(url, callback) {
            return jQuery.get(url, undefined, callback, "script")
        },
        getJSON: function(url, data, callback) {
            return jQuery.get(url, data, callback, "json")
        },
        ajaxSetup: function(target, settings) {
            if (!settings) {
                settings = target;
                target = jQuery.extend(true, jQuery.ajaxSettings, settings)
            } else {
                jQuery.extend(true, target, jQuery.ajaxSettings, settings)
            }
            for (var field in {
                    context: 1,
                    url: 1
                }) {
                if (field in settings) {
                    target[field] = settings[field]
                } else {
                    if (field in jQuery.ajaxSettings) {
                        target[field] = jQuery.ajaxSettings[field]
                    }
                }
            }
            return target
        },
        ajaxSettings: {
            url: ajaxLocation,
            isLocal: rlocalProtocol.test(ajaxLocParts[1]),
            global: true,
            type: "GET",
            contentType: "application/x-www-form-urlencoded",
            processData: true,
            async: true,
            accepts: {
                xml: "application/xml, text/xml",
                html: "text/html",
                text: "text/plain",
                json: "application/json, text/javascript",
                "*": "*/*"
            },
            contents: {
                xml: /xml/,
                html: /html/,
                json: /json/
            },
            responseFields: {
                xml: "responseXML",
                text: "responseText"
            },
            converters: {
                "* text": window.String,
                "text html": true,
                "text json": jQuery.parseJSON,
                "text xml": jQuery.parseXML
            }
        },
        ajaxPrefilter: addToPrefiltersOrTransports(prefilters),
        ajaxTransport: addToPrefiltersOrTransports(transports),
        ajax: function(url, options) {
            if (typeof url === "object") {
                options = url;
                url = undefined
            }
            options = options || {};
            var s = jQuery.ajaxSetup({}, options),
                callbackContext = s.context || s,
                globalEventContext = callbackContext !== s && (callbackContext.nodeType || callbackContext instanceof jQuery) ? jQuery(callbackContext) : jQuery.event,
                deferred = jQuery.Deferred(),
                completeDeferred = jQuery._Deferred(),
                statusCode = s.statusCode || {},
                ifModifiedKey, requestHeaders = {},
                requestHeadersNames = {},
                responseHeadersString, responseHeaders, transport, timeoutTimer, parts, state = 0,
                fireGlobals, i, jqXHR = {
                    readyState: 0,
                    setRequestHeader: function(name, value) {
                        if (!state) {
                            var lname = name.toLowerCase();
                            name = requestHeadersNames[lname] = requestHeadersNames[lname] || name;
                            requestHeaders[name] = value
                        }
                        return this
                    },
                    getAllResponseHeaders: function() {
                        return state === 2 ? responseHeadersString : null
                    },
                    getResponseHeader: function(key) {
                        var match;
                        if (state === 2) {
                            if (!responseHeaders) {
                                responseHeaders = {};
                                while ((match = rheaders.exec(responseHeadersString))) {
                                    responseHeaders[match[1].toLowerCase()] = match[2]
                                }
                            }
                            match = responseHeaders[key.toLowerCase()]
                        }
                        return match === undefined ? null : match
                    },
                    overrideMimeType: function(type) {
                        if (!state) {
                            s.mimeType = type
                        }
                        return this
                    },
                    abort: function(statusText) {
                        statusText = statusText || "abort";
                        if (transport) {
                            transport.abort(statusText)
                        }
                        done(0, statusText);
                        return this
                    }
                };

            function done(status, statusText, responses, headers) {
                if (state === 2) {
                    return
                }
                state = 2;
                if (timeoutTimer) {
                    clearTimeout(timeoutTimer)
                }
                transport = undefined;
                responseHeadersString = headers || "";
                jqXHR.readyState = status ? 4 : 0;
                var isSuccess, success, error, response = responses ? ajaxHandleResponses(s, jqXHR, responses) : undefined,
                    lastModified, etag;
                if (status >= 200 && status < 300 || status === 304) {
                    if (s.ifModified) {
                        if ((lastModified = jqXHR.getResponseHeader("Last-Modified"))) {
                            jQuery.lastModified[ifModifiedKey] = lastModified
                        }
                        if ((etag = jqXHR.getResponseHeader("Etag"))) {
                            jQuery.etag[ifModifiedKey] = etag
                        }
                    }
                    if (status === 304) {
                        statusText = "notmodified";
                        isSuccess = true
                    } else {
                        try {
                            success = ajaxConvert(s, response);
                            statusText = "success";
                            isSuccess = true
                        } catch (e) {
                            statusText = "parsererror";
                            error = e
                        }
                    }
                } else {
                    error = statusText;
                    if (!statusText || status) {
                        statusText = "error";
                        if (status < 0) {
                            status = 0
                        }
                    }
                }
                jqXHR.status = status;
                jqXHR.statusText = statusText;
                if (isSuccess) {
                    deferred.resolveWith(callbackContext, [success, statusText, jqXHR])
                } else {
                    deferred.rejectWith(callbackContext, [jqXHR, statusText, error])
                }
                jqXHR.statusCode(statusCode);
                statusCode = undefined;
                if (fireGlobals) {
                    globalEventContext.trigger("ajax" + (isSuccess ? "Success" : "Error"), [jqXHR, s, isSuccess ? success : error])
                }
                completeDeferred.resolveWith(callbackContext, [jqXHR, statusText]);
                if (fireGlobals) {
                    globalEventContext.trigger("ajaxComplete", [jqXHR, s]);
                    if (!(--jQuery.active)) {
                        jQuery.event.trigger("ajaxStop")
                    }
                }
            }
            deferred.promise(jqXHR);
            jqXHR.success = jqXHR.done;
            jqXHR.error = jqXHR.fail;
            jqXHR.complete = completeDeferred.done;
            jqXHR.statusCode = function(map) {
                if (map) {
                    var tmp;
                    if (state < 2) {
                        for (tmp in map) {
                            statusCode[tmp] = [statusCode[tmp], map[tmp]]
                        }
                    } else {
                        tmp = map[jqXHR.status];
                        jqXHR.then(tmp, tmp)
                    }
                }
                return this
            };
            s.url = ((url || s.url) + "").replace(rhash, "").replace(rprotocol, ajaxLocParts[1] + "//");
            s.dataTypes = jQuery.trim(s.dataType || "*").toLowerCase().split(rspacesAjax);
            if (s.crossDomain == null) {
                parts = rurl.exec(s.url.toLowerCase());
                s.crossDomain = !!(parts && (parts[1] != ajaxLocParts[1] || parts[2] != ajaxLocParts[2] || (parts[3] || (parts[1] === "http:" ? 80 : 443)) != (ajaxLocParts[3] || (ajaxLocParts[1] === "http:" ? 80 : 443))))
            }
            if (s.data && s.processData && typeof s.data !== "string") {
                s.data = jQuery.param(s.data, s.traditional)
            }
            inspectPrefiltersOrTransports(prefilters, s, options, jqXHR);
            if (state === 2) {
                return false
            }
            fireGlobals = s.global;
            s.type = s.type.toUpperCase();
            s.hasContent = !rnoContent.test(s.type);
            if (fireGlobals && jQuery.active++ === 0) {
                jQuery.event.trigger("ajaxStart")
            }
            if (!s.hasContent) {
                if (s.data) {
                    s.url += (rquery.test(s.url) ? "&" : "?") + s.data
                }
                ifModifiedKey = s.url;
                if (s.cache === false) {
                    var ts = jQuery.now(),
                        ret = s.url.replace(rts, "$1_=" + ts);
                    s.url = ret + ((ret === s.url) ? (rquery.test(s.url) ? "&" : "?") + "_=" + ts : "")
                }
            }
            if (s.data && s.hasContent && s.contentType !== false || options.contentType) {
                jqXHR.setRequestHeader("Content-Type", s.contentType)
            }
            if (s.ifModified) {
                ifModifiedKey = ifModifiedKey || s.url;
                if (jQuery.lastModified[ifModifiedKey]) {
                    jqXHR.setRequestHeader("If-Modified-Since", jQuery.lastModified[ifModifiedKey])
                }
                if (jQuery.etag[ifModifiedKey]) {
                    jqXHR.setRequestHeader("If-None-Match", jQuery.etag[ifModifiedKey])
                }
            }
            jqXHR.setRequestHeader("Accept", s.dataTypes[0] && s.accepts[s.dataTypes[0]] ? s.accepts[s.dataTypes[0]] + (s.dataTypes[0] !== "*" ? ", */*; q=0.01" : "") : s.accepts["*"]);
            for (i in s.headers) {
                jqXHR.setRequestHeader(i, s.headers[i])
            }
            if (s.beforeSend && (s.beforeSend.call(callbackContext, jqXHR, s) === false || state === 2)) {
                jqXHR.abort();
                return false
            }
            for (i in {
                    success: 1,
                    error: 1,
                    complete: 1
                }) {
                jqXHR[i](s[i])
            }
            transport = inspectPrefiltersOrTransports(transports, s, options, jqXHR);
            if (!transport) {
                done(-1, "No Transport")
            } else {
                jqXHR.readyState = 1;
                if (fireGlobals) {
                    globalEventContext.trigger("ajaxSend", [jqXHR, s])
                }
                if (s.async && s.timeout > 0) {
                    timeoutTimer = setTimeout(function() {
                        jqXHR.abort("timeout")
                    }, s.timeout)
                }
                try {
                    state = 1;
                    transport.send(requestHeaders, done)
                } catch (e) {
                    if (status < 2) {
                        done(-1, e)
                    } else {
                        jQuery.error(e)
                    }
                }
            }
            return jqXHR
        },
        param: function(a, traditional) {
            var s = [],
                add = function(key, value) {
                    value = jQuery.isFunction(value) ? value() : value;
                    s[s.length] = encodeURIComponent(key) + "=" + encodeURIComponent(value)
                };
            if (traditional === undefined) {
                traditional = jQuery.ajaxSettings.traditional
            }
            if (jQuery.isArray(a) || (a.jquery && !jQuery.isPlainObject(a))) {
                jQuery.each(a, function() {
                    add(this.name, this.value)
                })
            } else {
                for (var prefix in a) {
                    buildParams(prefix, a[prefix], traditional, add)
                }
            }
            return s.join("&").replace(r20, "+")
        }
    });

    function buildParams(prefix, obj, traditional, add) {
        if (jQuery.isArray(obj)) {
            jQuery.each(obj, function(i, v) {
                if (traditional || rbracket.test(prefix)) {
                    add(prefix, v)
                } else {
                    buildParams(prefix + "[" + (typeof v === "object" || jQuery.isArray(v) ? i : "") + "]", v, traditional, add)
                }
            })
        } else {
            if (!traditional && obj != null && typeof obj === "object") {
                for (var name in obj) {
                    buildParams(prefix + "[" + name + "]", obj[name], traditional, add)
                }
            } else {
                add(prefix, obj)
            }
        }
    }
    jQuery.extend({
        active: 0,
        lastModified: {},
        etag: {}
    });

    function ajaxHandleResponses(s, jqXHR, responses) {
        var contents = s.contents,
            dataTypes = s.dataTypes,
            responseFields = s.responseFields,
            ct, type, finalDataType, firstDataType;
        for (type in responseFields) {
            if (type in responses) {
                jqXHR[responseFields[type]] = responses[type]
            }
        }
        while (dataTypes[0] === "*") {
            dataTypes.shift();
            if (ct === undefined) {
                ct = s.mimeType || jqXHR.getResponseHeader("content-type")
            }
        }
        if (ct) {
            for (type in contents) {
                if (contents[type] && contents[type].test(ct)) {
                    dataTypes.unshift(type);
                    break
                }
            }
        }
        if (dataTypes[0] in responses) {
            finalDataType = dataTypes[0]
        } else {
            for (type in responses) {
                if (!dataTypes[0] || s.converters[type + " " + dataTypes[0]]) {
                    finalDataType = type;
                    break
                }
                if (!firstDataType) {
                    firstDataType = type
                }
            }
            finalDataType = finalDataType || firstDataType
        }
        if (finalDataType) {
            if (finalDataType !== dataTypes[0]) {
                dataTypes.unshift(finalDataType)
            }
            return responses[finalDataType]
        }
    }

    function ajaxConvert(s, response) {
        if (s.dataFilter) {
            response = s.dataFilter(response, s.dataType)
        }
        var dataTypes = s.dataTypes,
            converters = {},
            i, key, length = dataTypes.length,
            tmp, current = dataTypes[0],
            prev, conversion, conv, conv1, conv2;
        for (i = 1; i < length; i++) {
            if (i === 1) {
                for (key in s.converters) {
                    if (typeof key === "string") {
                        converters[key.toLowerCase()] = s.converters[key]
                    }
                }
            }
            prev = current;
            current = dataTypes[i];
            if (current === "*") {
                current = prev
            } else {
                if (prev !== "*" && prev !== current) {
                    conversion = prev + " " + current;
                    conv = converters[conversion] || converters["* " + current];
                    if (!conv) {
                        conv2 = undefined;
                        for (conv1 in converters) {
                            tmp = conv1.split(" ");
                            if (tmp[0] === prev || tmp[0] === "*") {
                                conv2 = converters[tmp[1] + " " + current];
                                if (conv2) {
                                    conv1 = converters[conv1];
                                    if (conv1 === true) {
                                        conv = conv2
                                    } else {
                                        if (conv2 === true) {
                                            conv = conv1
                                        }
                                    }
                                    break
                                }
                            }
                        }
                    }
                    if (!(conv || conv2)) {
                        jQuery.error("No conversion from " + conversion.replace(" ", " to "))
                    }
                    if (conv !== true) {
                        response = conv ? conv(response) : conv2(conv1(response))
                    }
                }
            }
        }
        return response
    }
    var jsc = jQuery.now(),
        jsre = /(\=)\?(&|$)|\?\?/i;
    jQuery.ajaxSetup({
        jsonp: "callback",
        jsonpCallback: function() {
            return jQuery.expando + "_" + (jsc++)
        }
    });
    jQuery.ajaxPrefilter("json jsonp", function(s, originalSettings, jqXHR) {
        var inspectData = s.contentType === "application/x-www-form-urlencoded" && (typeof s.data === "string");
        if (s.dataTypes[0] === "jsonp" || s.jsonp !== false && (jsre.test(s.url) || inspectData && jsre.test(s.data))) {
            var responseContainer, jsonpCallback = s.jsonpCallback = jQuery.isFunction(s.jsonpCallback) ? s.jsonpCallback() : s.jsonpCallback,
                previous = window[jsonpCallback],
                url = s.url,
                data = s.data,
                replace = "$1" + jsonpCallback + "$2";
            if (s.jsonp !== false) {
                url = url.replace(jsre, replace);
                if (s.url === url) {
                    if (inspectData) {
                        data = data.replace(jsre, replace)
                    }
                    if (s.data === data) {
                        url += (/\?/.test(url) ? "&" : "?") + s.jsonp + "=" + jsonpCallback
                    }
                }
            }
            s.url = url;
            s.data = data;
            window[jsonpCallback] = function(response) {
                responseContainer = [response]
            };
            jqXHR.always(function() {
                window[jsonpCallback] = previous;
                if (responseContainer && jQuery.isFunction(previous)) {
                    window[jsonpCallback](responseContainer[0])
                }
            });
            s.converters["script json"] = function() {
                if (!responseContainer) {
                    jQuery.error(jsonpCallback + " was not called")
                }
                return responseContainer[0]
            };
            s.dataTypes[0] = "json";
            return "script"
        }
    });
    jQuery.ajaxSetup({
        accepts: {
            script: "text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"
        },
        contents: {
            script: /javascript|ecmascript/
        },
        converters: {
            "text script": function(text) {
                jQuery.globalEval(text);
                return text
            }
        }
    });
    jQuery.ajaxPrefilter("script", function(s) {
        if (s.cache === undefined) {
            s.cache = false
        }
        if (s.crossDomain) {
            s.type = "GET";
            s.global = false
        }
    });
    jQuery.ajaxTransport("script", function(s) {
        if (s.crossDomain) {
            var script, head = document.head || document.getElementsByTagName("head")[0] || document.documentElement;
            return {
                send: function(_, callback) {
                    script = document.createElement("script");
                    script.async = "async";
                    if (s.scriptCharset) {
                        script.charset = s.scriptCharset
                    }
                    script.src = s.url;
                    script.onload = script.onreadystatechange = function(_, isAbort) {
                        if (isAbort || !script.readyState || /loaded|complete/.test(script.readyState)) {
                            script.onload = script.onreadystatechange = null;
                            if (head && script.parentNode) {
                                head.removeChild(script)
                            }
                            script = undefined;
                            if (!isAbort) {
                                callback(200, "success")
                            }
                        }
                    };
                    head.insertBefore(script, head.firstChild)
                },
                abort: function() {
                    if (script) {
                        script.onload(0, 1)
                    }
                }
            }
        }
    });
    var xhrOnUnloadAbort = window.ActiveXObject ? function() {
            for (var key in xhrCallbacks) {
                xhrCallbacks[key](0, 1)
            }
        } : false,
        xhrId = 0,
        xhrCallbacks;

    function createStandardXHR() {
        try {
            return new window.XMLHttpRequest()
        } catch (e) {}
    }

    function createActiveXHR() {
        try {
            return new window.ActiveXObject("Microsoft.XMLHTTP")
        } catch (e) {}
    }
    jQuery.ajaxSettings.xhr = window.ActiveXObject ? function() {
        return !this.isLocal && createStandardXHR() || createActiveXHR()
    } : createStandardXHR;
    (function(xhr) {
        jQuery.extend(jQuery.support, {
            ajax: !!xhr,
            cors: !!xhr && ("withCredentials" in xhr)
        })
    })(jQuery.ajaxSettings.xhr());
    if (jQuery.support.ajax) {
        jQuery.ajaxTransport(function(s) {
            if (!s.crossDomain || jQuery.support.cors) {
                var callback;
                return {
                    send: function(headers, complete) {
                        var xhr = s.xhr(),
                            handle, i;
                        if (s.username) {
                            xhr.open(s.type, s.url, s.async, s.username, s.password)
                        } else {
                            xhr.open(s.type, s.url, s.async)
                        }
                        if (s.xhrFields) {
                            for (i in s.xhrFields) {
                                xhr[i] = s.xhrFields[i]
                            }
                        }
                        if (s.mimeType && xhr.overrideMimeType) {
                            xhr.overrideMimeType(s.mimeType)
                        }
                        if (!s.crossDomain && !headers["X-Requested-With"]) {
                            headers["X-Requested-With"] = "XMLHttpRequest"
                        }
                        try {
                            for (i in headers) {
                                xhr.setRequestHeader(i, headers[i])
                            }
                        } catch (_) {}
                        xhr.send((s.hasContent && s.data) || null);
                        callback = function(_, isAbort) {
                            var status, statusText, responseHeaders, responses, xml;
                            try {
                                if (callback && (isAbort || xhr.readyState === 4)) {
                                    callback = undefined;
                                    if (handle) {
                                        xhr.onreadystatechange = jQuery.noop;
                                        if (xhrOnUnloadAbort) {
                                            delete xhrCallbacks[handle]
                                        }
                                    }
                                    if (isAbort) {
                                        if (xhr.readyState !== 4) {
                                            xhr.abort()
                                        }
                                    } else {
                                        status = xhr.status;
                                        responseHeaders = xhr.getAllResponseHeaders();
                                        responses = {};
                                        xml = xhr.responseXML;
                                        if (xml && xml.documentElement) {
                                            responses.xml = xml
                                        }
                                        responses.text = xhr.responseText;
                                        try {
                                            statusText = xhr.statusText
                                        } catch (e) {
                                            statusText = ""
                                        }
                                        if (!status && s.isLocal && !s.crossDomain) {
                                            status = responses.text ? 200 : 404
                                        } else {
                                            if (status === 1223) {
                                                status = 204
                                            }
                                        }
                                    }
                                }
                            } catch (firefoxAccessException) {
                                if (!isAbort) {
                                    complete(-1, firefoxAccessException)
                                }
                            }
                            if (responses) {
                                complete(status, statusText, responses, responseHeaders)
                            }
                        };
                        if (!s.async || xhr.readyState === 4) {
                            callback()
                        } else {
                            handle = ++xhrId;
                            if (xhrOnUnloadAbort) {
                                if (!xhrCallbacks) {
                                    xhrCallbacks = {};
                                    jQuery(window).unload(xhrOnUnloadAbort)
                                }
                                xhrCallbacks[handle] = callback
                            }
                            xhr.onreadystatechange = callback
                        }
                    },
                    abort: function() {
                        if (callback) {
                            callback(0, 1)
                        }
                    }
                }
            }
        })
    }
    var elemdisplay = {},
        iframe, iframeDoc, rfxtypes = /^(?:toggle|show|hide)$/,
        rfxnum = /^([+\-]=)?([\d+.\-]+)([a-z%]*)$/i,
        timerId, fxAttrs = [
            ["height", "marginTop", "marginBottom", "paddingTop", "paddingBottom"],
            ["width", "marginLeft", "marginRight", "paddingLeft", "paddingRight"],
            ["opacity"]
        ],
        fxNow, requestAnimationFrame = window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame;
    jQuery.fn.extend({
        show: function(speed, easing, callback) {
            var elem, display;
            if (speed || speed === 0) {
                return this.animate(genFx("show", 3), speed, easing, callback)
            } else {
                for (var i = 0, j = this.length; i < j; i++) {
                    elem = this[i];
                    if (elem.style) {
                        display = elem.style.display;
                        if (!jQuery._data(elem, "olddisplay") && display === "none") {
                            display = elem.style.display = ""
                        }
                        if (display === "" && jQuery.css(elem, "display") === "none") {
                            jQuery._data(elem, "olddisplay", defaultDisplay(elem.nodeName))
                        }
                    }
                }
                for (i = 0; i < j; i++) {
                    elem = this[i];
                    if (elem.style) {
                        display = elem.style.display;
                        if (display === "" || display === "none") {
                            elem.style.display = jQuery._data(elem, "olddisplay") || ""
                        }
                    }
                }
                return this
            }
        },
        hide: function(speed, easing, callback) {
            if (speed || speed === 0) {
                return this.animate(genFx("hide", 3), speed, easing, callback)
            } else {
                for (var i = 0, j = this.length; i < j; i++) {
                    if (this[i].style) {
                        var display = jQuery.css(this[i], "display");
                        if (display !== "none" && !jQuery._data(this[i], "olddisplay")) {
                            jQuery._data(this[i], "olddisplay", display)
                        }
                    }
                }
                for (i = 0; i < j; i++) {
                    if (this[i].style) {
                        this[i].style.display = "none"
                    }
                }
                return this
            }
        },
        _toggle: jQuery.fn.toggle,
        toggle: function(fn, fn2, callback) {
            var bool = typeof fn === "boolean";
            if (jQuery.isFunction(fn) && jQuery.isFunction(fn2)) {
                this._toggle.apply(this, arguments)
            } else {
                if (fn == null || bool) {
                    this.each(function() {
                        var state = bool ? fn : jQuery(this).is(":hidden");
                        jQuery(this)[state ? "show" : "hide"]()
                    })
                } else {
                    this.animate(genFx("toggle", 3), fn, fn2, callback)
                }
            }
            return this
        },
        fadeTo: function(speed, to, easing, callback) {
            return this.filter(":hidden").css("opacity", 0).show().end().animate({
                opacity: to
            }, speed, easing, callback)
        },
        animate: function(prop, speed, easing, callback) {
            var optall = jQuery.speed(speed, easing, callback);
            if (jQuery.isEmptyObject(prop)) {
                return this.each(optall.complete, [false])
            }
            prop = jQuery.extend({}, prop);
            return this[optall.queue === false ? "each" : "queue"](function() {
                if (optall.queue === false) {
                    jQuery._mark(this)
                }
                var opt = jQuery.extend({}, optall),
                    isElement = this.nodeType === 1,
                    hidden = isElement && jQuery(this).is(":hidden"),
                    name, val, p, display, e, parts, start, end, unit;
                opt.animatedProperties = {};
                for (p in prop) {
                    name = jQuery.camelCase(p);
                    if (p !== name) {
                        prop[name] = prop[p];
                        delete prop[p]
                    }
                    val = prop[name];
                    if (jQuery.isArray(val)) {
                        opt.animatedProperties[name] = val[1];
                        val = prop[name] = val[0]
                    } else {
                        opt.animatedProperties[name] = opt.specialEasing && opt.specialEasing[name] || opt.easing || "swing"
                    }
                    if (val === "hide" && hidden || val === "show" && !hidden) {
                        return opt.complete.call(this)
                    }
                    if (isElement && (name === "height" || name === "width")) {
                        opt.overflow = [this.style.overflow, this.style.overflowX, this.style.overflowY];
                        if (jQuery.css(this, "display") === "inline" && jQuery.css(this, "float") === "none") {
                            if (!jQuery.support.inlineBlockNeedsLayout) {
                                this.style.display = "inline-block"
                            } else {
                                display = defaultDisplay(this.nodeName);
                                if (display === "inline") {
                                    this.style.display = "inline-block"
                                } else {
                                    this.style.display = "inline";
                                    this.style.zoom = 1
                                }
                            }
                        }
                    }
                }
                if (opt.overflow != null) {
                    this.style.overflow = "hidden"
                }
                for (p in prop) {
                    e = new jQuery.fx(this, opt, p);
                    val = prop[p];
                    if (rfxtypes.test(val)) {
                        e[val === "toggle" ? hidden ? "show" : "hide" : val]()
                    } else {
                        parts = rfxnum.exec(val);
                        start = e.cur();
                        if (parts) {
                            end = parseFloat(parts[2]);
                            unit = parts[3] || (jQuery.cssNumber[p] ? "" : "px");
                            if (unit !== "px") {
                                jQuery.style(this, p, (end || 1) + unit);
                                start = ((end || 1) / e.cur()) * start;
                                jQuery.style(this, p, start + unit)
                            }
                            if (parts[1]) {
                                end = ((parts[1] === "-=" ? -1 : 1) * end) + start
                            }
                            e.custom(start, end, unit)
                        } else {
                            e.custom(start, val, "")
                        }
                    }
                }
                return true
            })
        },
        stop: function(clearQueue, gotoEnd) {
            if (clearQueue) {
                this.queue([])
            }
            this.each(function() {
                var timers = jQuery.timers,
                    i = timers.length;
                if (!gotoEnd) {
                    jQuery._unmark(true, this)
                }
                while (i--) {
                    if (timers[i].elem === this) {
                        if (gotoEnd) {
                            timers[i](true)
                        }
                        timers.splice(i, 1)
                    }
                }
            });
            if (!gotoEnd) {
                this.dequeue()
            }
            return this
        }
    });

    function createFxNow() {
        setTimeout(clearFxNow, 0);
        return (fxNow = jQuery.now())
    }

    function clearFxNow() {
        fxNow = undefined
    }

    function genFx(type, num) {
        var obj = {};
        jQuery.each(fxAttrs.concat.apply([], fxAttrs.slice(0, num)), function() {
            obj[this] = type
        });
        return obj
    }
    jQuery.each({
        slideDown: genFx("show", 1),
        slideUp: genFx("hide", 1),
        slideToggle: genFx("toggle", 1),
        fadeIn: {
            opacity: "show"
        },
        fadeOut: {
            opacity: "hide"
        },
        fadeToggle: {
            opacity: "toggle"
        }
    }, function(name, props) {
        jQuery.fn[name] = function(speed, easing, callback) {
            return this.animate(props, speed, easing, callback)
        }
    });
    jQuery.extend({
        speed: function(speed, easing, fn) {
            var opt = speed && typeof speed === "object" ? jQuery.extend({}, speed) : {
                complete: fn || !fn && easing || jQuery.isFunction(speed) && speed,
                duration: speed,
                easing: fn && easing || easing && !jQuery.isFunction(easing) && easing
            };
            opt.duration = jQuery.fx.off ? 0 : typeof opt.duration === "number" ? opt.duration : opt.duration in jQuery.fx.speeds ? jQuery.fx.speeds[opt.duration] : jQuery.fx.speeds._default;
            opt.old = opt.complete;
            opt.complete = function(noUnmark) {
                if (jQuery.isFunction(opt.old)) {
                    opt.old.call(this)
                }
                if (opt.queue !== false) {
                    jQuery.dequeue(this)
                } else {
                    if (noUnmark !== false) {
                        jQuery._unmark(this)
                    }
                }
            };
            return opt
        },
        easing: {
            linear: function(p, n, firstNum, diff) {
                return firstNum + diff * p
            },
            swing: function(p, n, firstNum, diff) {
                return ((-Math.cos(p * Math.PI) / 2) + 0.5) * diff + firstNum
            }
        },
        timers: [],
        fx: function(elem, options, prop) {
            this.options = options;
            this.elem = elem;
            this.prop = prop;
            options.orig = options.orig || {}
        }
    });
    jQuery.fx.prototype = {
        update: function() {
            if (this.options.step) {
                this.options.step.call(this.elem, this.now, this)
            }(jQuery.fx.step[this.prop] || jQuery.fx.step._default)(this)
        },
        cur: function() {
            if (this.elem[this.prop] != null && (!this.elem.style || this.elem.style[this.prop] == null)) {
                return this.elem[this.prop]
            }
            var parsed, r = jQuery.css(this.elem, this.prop);
            return isNaN(parsed = parseFloat(r)) ? !r || r === "auto" ? 0 : r : parsed
        },
        custom: function(from, to, unit) {
            var self = this,
                fx = jQuery.fx,
                raf;
            this.startTime = fxNow || createFxNow();
            this.start = from;
            this.end = to;
            this.unit = unit || this.unit || (jQuery.cssNumber[this.prop] ? "" : "px");
            this.now = this.start;
            this.pos = this.state = 0;

            function t(gotoEnd) {
                return self.step(gotoEnd)
            }
            t.elem = this.elem;
            if (t() && jQuery.timers.push(t) && !timerId) {
                if (requestAnimationFrame) {
                    timerId = true;
                    raf = function() {
                        if (timerId) {
                            requestAnimationFrame(raf);
                            fx.tick()
                        }
                    };
                    requestAnimationFrame(raf)
                } else {
                    timerId = setInterval(fx.tick, fx.interval)
                }
            }
        },
        show: function() {
            this.options.orig[this.prop] = jQuery.style(this.elem, this.prop);
            this.options.show = true;
            this.custom(this.prop === "width" || this.prop === "height" ? 1 : 0, this.cur());
            jQuery(this.elem).show()
        },
        hide: function() {
            this.options.orig[this.prop] = jQuery.style(this.elem, this.prop);
            this.options.hide = true;
            this.custom(this.cur(), 0)
        },
        step: function(gotoEnd) {
            var t = fxNow || createFxNow(),
                done = true,
                elem = this.elem,
                options = this.options,
                i, n;
            if (gotoEnd || t >= options.duration + this.startTime) {
                this.now = this.end;
                this.pos = this.state = 1;
                this.update();
                options.animatedProperties[this.prop] = true;
                for (i in options.animatedProperties) {
                    if (options.animatedProperties[i] !== true) {
                        done = false
                    }
                }
                if (done) {
                    if (options.overflow != null && !jQuery.support.shrinkWrapBlocks) {
                        jQuery.each(["", "X", "Y"], function(index, value) {
                            elem.style["overflow" + value] = options.overflow[index]
                        })
                    }
                    if (options.hide) {
                        jQuery(elem).hide()
                    }
                    if (options.hide || options.show) {
                        for (var p in options.animatedProperties) {
                            jQuery.style(elem, p, options.orig[p])
                        }
                    }
                    options.complete.call(elem)
                }
                return false
            } else {
                if (options.duration == Infinity) {
                    this.now = t
                } else {
                    n = t - this.startTime;
                    this.state = n / options.duration;
                    this.pos = jQuery.easing[options.animatedProperties[this.prop]](this.state, n, 0, 1, options.duration);
                    this.now = this.start + ((this.end - this.start) * this.pos)
                }
                this.update()
            }
            return true
        }
    };
    jQuery.extend(jQuery.fx, {
        tick: function() {
            for (var timers = jQuery.timers, i = 0; i < timers.length; ++i) {
                if (!timers[i]()) {
                    timers.splice(i--, 1)
                }
            }
            if (!timers.length) {
                jQuery.fx.stop()
            }
        },
        interval: 13,
        stop: function() {
            clearInterval(timerId);
            timerId = null
        },
        speeds: {
            slow: 600,
            fast: 200,
            _default: 400
        },
        step: {
            opacity: function(fx) {
                jQuery.style(fx.elem, "opacity", fx.now)
            },
            _default: function(fx) {
                if (fx.elem.style && fx.elem.style[fx.prop] != null) {
                    fx.elem.style[fx.prop] = (fx.prop === "width" || fx.prop === "height" ? Math.max(0, fx.now) : fx.now) + fx.unit
                } else {
                    fx.elem[fx.prop] = fx.now
                }
            }
        }
    });
    if (jQuery.expr && jQuery.expr.filters) {
        jQuery.expr.filters.animated = function(elem) {
            return jQuery.grep(jQuery.timers, function(fn) {
                return elem === fn.elem
            }).length
        }
    }

    function defaultDisplay(nodeName) {
        if (!elemdisplay[nodeName]) {
            var body = document.body,
                elem = jQuery("<" + nodeName + ">").appendTo(body),
                display = elem.css("display");
            elem.remove();
            if (display === "none" || display === "") {
                if (!iframe) {
                    iframe = document.createElement("iframe");
                    iframe.frameBorder = iframe.width = iframe.height = 0
                }
                body.appendChild(iframe);
                if (!iframeDoc || !iframe.createElement) {
                    iframeDoc = (iframe.contentWindow || iframe.contentDocument).document;
                    iframeDoc.write((document.compatMode === "CSS1Compat" ? "<!doctype html>" : "") + "<html><body>");
                    iframeDoc.close()
                }
                elem = iframeDoc.createElement(nodeName);
                iframeDoc.body.appendChild(elem);
                display = jQuery.css(elem, "display");
                body.removeChild(iframe)
            }
            elemdisplay[nodeName] = display
        }
        return elemdisplay[nodeName]
    }
    var rtable = /^t(?:able|d|h)$/i,
        rroot = /^(?:body|html)$/i;
    if ("getBoundingClientRect" in document.documentElement) {
        jQuery.fn.offset = function(options) {
            var elem = this[0],
                box;
            if (options) {
                return this.each(function(i) {
                    jQuery.offset.setOffset(this, options, i)
                })
            }
            if (!elem || !elem.ownerDocument) {
                return null
            }
            if (elem === elem.ownerDocument.body) {
                return jQuery.offset.bodyOffset(elem)
            }
            try {
                box = elem.getBoundingClientRect()
            } catch (e) {}
            var doc = elem.ownerDocument,
                docElem = doc.documentElement;
            if (!box || !jQuery.contains(docElem, elem)) {
                return box ? {
                    top: box.top,
                    left: box.left
                } : {
                    top: 0,
                    left: 0
                }
            }
            var body = doc.body,
                win = getWindow(doc),
                clientTop = docElem.clientTop || body.clientTop || 0,
                clientLeft = docElem.clientLeft || body.clientLeft || 0,
                scrollTop = win.pageYOffset || jQuery.support.boxModel && docElem.scrollTop || body.scrollTop,
                scrollLeft = win.pageXOffset || jQuery.support.boxModel && docElem.scrollLeft || body.scrollLeft,
                top = box.top + scrollTop - clientTop,
                left = box.left + scrollLeft - clientLeft;
            return {
                top: top,
                left: left
            }
        }
    } else {
        jQuery.fn.offset = function(options) {
            var elem = this[0];
            if (options) {
                return this.each(function(i) {
                    jQuery.offset.setOffset(this, options, i)
                })
            }
            if (!elem || !elem.ownerDocument) {
                return null
            }
            if (elem === elem.ownerDocument.body) {
                return jQuery.offset.bodyOffset(elem)
            }
            jQuery.offset.initialize();
            var computedStyle, offsetParent = elem.offsetParent,
                prevOffsetParent = elem,
                doc = elem.ownerDocument,
                docElem = doc.documentElement,
                body = doc.body,
                defaultView = doc.defaultView,
                prevComputedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle,
                top = elem.offsetTop,
                left = elem.offsetLeft;
            while ((elem = elem.parentNode) && elem !== body && elem !== docElem) {
                if (jQuery.offset.supportsFixedPosition && prevComputedStyle.position === "fixed") {
                    break
                }
                computedStyle = defaultView ? defaultView.getComputedStyle(elem, null) : elem.currentStyle;
                top -= elem.scrollTop;
                left -= elem.scrollLeft;
                if (elem === offsetParent) {
                    top += elem.offsetTop;
                    left += elem.offsetLeft;
                    if (jQuery.offset.doesNotAddBorder && !(jQuery.offset.doesAddBorderForTableAndCells && rtable.test(elem.nodeName))) {
                        top += parseFloat(computedStyle.borderTopWidth) || 0;
                        left += parseFloat(computedStyle.borderLeftWidth) || 0
                    }
                    prevOffsetParent = offsetParent;
                    offsetParent = elem.offsetParent
                }
                if (jQuery.offset.subtractsBorderForOverflowNotVisible && computedStyle.overflow !== "visible") {
                    top += parseFloat(computedStyle.borderTopWidth) || 0;
                    left += parseFloat(computedStyle.borderLeftWidth) || 0
                }
                prevComputedStyle = computedStyle
            }
            if (prevComputedStyle.position === "relative" || prevComputedStyle.position === "static") {
                top += body.offsetTop;
                left += body.offsetLeft
            }
            if (jQuery.offset.supportsFixedPosition && prevComputedStyle.position === "fixed") {
                top += Math.max(docElem.scrollTop, body.scrollTop);
                left += Math.max(docElem.scrollLeft, body.scrollLeft)
            }
            return {
                top: top,
                left: left
            }
        }
    }
    jQuery.offset = {
        initialize: function() {
            var body = document.body,
                container = document.createElement("div"),
                innerDiv, checkDiv, table, td, bodyMarginTop = parseFloat(jQuery.css(body, "marginTop")) || 0,
                html = "<div style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;'><div></div></div><table style='position:absolute;top:0;left:0;margin:0;border:5px solid #000;padding:0;width:1px;height:1px;' cellpadding='0' cellspacing='0'><tr><td></td></tr></table>";
            jQuery.extend(container.style, {
                position: "absolute",
                top: 0,
                left: 0,
                margin: 0,
                border: 0,
                width: "1px",
                height: "1px",
                visibility: "hidden"
            });
            container.innerHTML = html;
            body.insertBefore(container, body.firstChild);
            innerDiv = container.firstChild;
            checkDiv = innerDiv.firstChild;
            td = innerDiv.nextSibling.firstChild.firstChild;
            this.doesNotAddBorder = (checkDiv.offsetTop !== 5);
            this.doesAddBorderForTableAndCells = (td.offsetTop === 5);
            checkDiv.style.position = "fixed";
            checkDiv.style.top = "20px";
            this.supportsFixedPosition = (checkDiv.offsetTop === 20 || checkDiv.offsetTop === 15);
            checkDiv.style.position = checkDiv.style.top = "";
            innerDiv.style.overflow = "hidden";
            innerDiv.style.position = "relative";
            this.subtractsBorderForOverflowNotVisible = (checkDiv.offsetTop === -5);
            this.doesNotIncludeMarginInBodyOffset = (body.offsetTop !== bodyMarginTop);
            body.removeChild(container);
            jQuery.offset.initialize = jQuery.noop
        },
        bodyOffset: function(body) {
            var top = body.offsetTop,
                left = body.offsetLeft;
            jQuery.offset.initialize();
            if (jQuery.offset.doesNotIncludeMarginInBodyOffset) {
                top += parseFloat(jQuery.css(body, "marginTop")) || 0;
                left += parseFloat(jQuery.css(body, "marginLeft")) || 0
            }
            return {
                top: top,
                left: left
            }
        },
        setOffset: function(elem, options, i) {
            var position = jQuery.css(elem, "position");
            if (position === "static") {
                elem.style.position = "relative"
            }
            var curElem = jQuery(elem),
                curOffset = curElem.offset(),
                curCSSTop = jQuery.css(elem, "top"),
                curCSSLeft = jQuery.css(elem, "left"),
                calculatePosition = (position === "absolute" || position === "fixed") && jQuery.inArray("auto", [curCSSTop, curCSSLeft]) > -1,
                props = {},
                curPosition = {},
                curTop, curLeft;
            if (calculatePosition) {
                curPosition = curElem.position();
                curTop = curPosition.top;
                curLeft = curPosition.left
            } else {
                curTop = parseFloat(curCSSTop) || 0;
                curLeft = parseFloat(curCSSLeft) || 0
            }
            if (jQuery.isFunction(options)) {
                options = options.call(elem, i, curOffset)
            }
            if (options.top != null) {
                props.top = (options.top - curOffset.top) + curTop
            }
            if (options.left != null) {
                props.left = (options.left - curOffset.left) + curLeft
            }
            if ("using" in options) {
                options.using.call(elem, props)
            } else {
                curElem.css(props)
            }
        }
    };
    jQuery.fn.extend({
        position: function() {
            if (!this[0]) {
                return null
            }
            var elem = this[0],
                offsetParent = this.offsetParent(),
                offset = this.offset(),
                parentOffset = rroot.test(offsetParent[0].nodeName) ? {
                    top: 0,
                    left: 0
                } : offsetParent.offset();
            offset.top -= parseFloat(jQuery.css(elem, "marginTop")) || 0;
            offset.left -= parseFloat(jQuery.css(elem, "marginLeft")) || 0;
            parentOffset.top += parseFloat(jQuery.css(offsetParent[0], "borderTopWidth")) || 0;
            parentOffset.left += parseFloat(jQuery.css(offsetParent[0], "borderLeftWidth")) || 0;
            return {
                top: offset.top - parentOffset.top,
                left: offset.left - parentOffset.left
            }
        },
        offsetParent: function() {
            return this.map(function() {
                var offsetParent = this.offsetParent || document.body;
                while (offsetParent && (!rroot.test(offsetParent.nodeName) && jQuery.css(offsetParent, "position") === "static")) {
                    offsetParent = offsetParent.offsetParent
                }
                return offsetParent
            })
        }
    });
    jQuery.each(["Left", "Top"], function(i, name) {
        var method = "scroll" + name;
        jQuery.fn[method] = function(val) {
            var elem, win;
            if (val === undefined) {
                elem = this[0];
                if (!elem) {
                    return null
                }
                win = getWindow(elem);
                return win ? ("pageXOffset" in win) ? win[i ? "pageYOffset" : "pageXOffset"] : jQuery.support.boxModel && win.document.documentElement[method] || win.document.body[method] : elem[method]
            }
            return this.each(function() {
                win = getWindow(this);
                if (win) {
                    win.scrollTo(!i ? val : jQuery(win).scrollLeft(), i ? val : jQuery(win).scrollTop())
                } else {
                    this[method] = val
                }
            })
        }
    });

    function getWindow(elem) {
        return jQuery.isWindow(elem) ? elem : elem.nodeType === 9 ? elem.defaultView || elem.parentWindow : false
    }
    jQuery.each(["Height", "Width"], function(i, name) {
        var type = name.toLowerCase();
        jQuery.fn["inner" + name] = function() {
            var elem = this[0];
            return elem && elem.style ? parseFloat(jQuery.css(elem, type, "padding")) : null
        };
        jQuery.fn["outer" + name] = function(margin) {
            var elem = this[0];
            return elem && elem.style ? parseFloat(jQuery.css(elem, type, margin ? "margin" : "border")) : null
        };
        jQuery.fn[type] = function(size) {
            var elem = this[0];
            if (!elem) {
                return size == null ? null : this
            }
            if (jQuery.isFunction(size)) {
                return this.each(function(i) {
                    var self = jQuery(this);
                    self[type](size.call(this, i, self[type]()))
                })
            }
            if (jQuery.isWindow(elem)) {
                var docElemProp = elem.document.documentElement["client" + name];
                return elem.document.compatMode === "CSS1Compat" && docElemProp || elem.document.body["client" + name] || docElemProp
            } else {
                if (elem.nodeType === 9) {
                    return Math.max(elem.documentElement["client" + name], elem.body["scroll" + name], elem.documentElement["scroll" + name], elem.body["offset" + name], elem.documentElement["offset" + name])
                } else {
                    if (size === undefined) {
                        var orig = jQuery.css(elem, type),
                            ret = parseFloat(orig);
                        return jQuery.isNaN(ret) ? orig : ret
                    } else {
                        return this.css(type, typeof size === "string" ? size : size + "px")
                    }
                }
            }
        }
    });
    window.jQuery = window.$ = jQuery
})(window);
jQuery.ui || (function(d) {
    var n = d.fn.remove,
        e = d.browser.mozilla && (parseFloat(d.browser.version) < 1.9);
    d.ui = {
        version: "1.7.3",
        plugin: {
            add: function(p, q, u) {
                var r = d.ui[p].prototype;
                for (var o in u) {
                    r.plugins[o] = r.plugins[o] || [];
                    r.plugins[o].push([q, u[o]])
                }
            },
            call: function(o, q, p) {
                var u = o.plugins[q];
                if (!u || !o.element[0].parentNode) {
                    return
                }
                for (var r = 0; r < u.length; r++) {
                    if (o.options[u[r][0]]) {
                        u[r][1].apply(o.element, p)
                    }
                }
            }
        },
        contains: function(p, o) {
            return document.compareDocumentPosition ? p.compareDocumentPosition(o) & 16 : p !== o && p.contains(o)
        },
        hasScroll: function(r, p) {
            if (d(r).css("overflow") == "hidden") {
                return false
            }
            var o = (p && p == "left") ? "scrollLeft" : "scrollTop",
                q = false;
            if (r[o] > 0) {
                return true
            }
            r[o] = 1;
            q = (r[o] > 0);
            r[o] = 0;
            return q
        },
        isOverAxis: function(p, o, q) {
            return (p > o) && (p < (o + q))
        },
        isOver: function(v, p, u, r, o, q) {
            return d.ui.isOverAxis(v, u, o) && d.ui.isOverAxis(p, r, q)
        },
        keyCode: {
            BACKSPACE: 8,
            CAPS_LOCK: 20,
            COMMA: 188,
            CONTROL: 17,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            INSERT: 45,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SHIFT: 16,
            SPACE: 32,
            TAB: 9,
            UP: 38
        }
    };
    if (e) {
        var g = d.attr,
            f = d.fn.removeAttr,
            m = "http://www.w3.org/2005/07/aaa",
            b = /^aria-/,
            c = /^wairole:/;
        d.attr = function(p, o, q) {
            var r = q !== undefined;
            return (o == "role" ? (r ? g.call(this, p, o, "wairole:" + q) : (g.apply(this, arguments) || "").replace(c, "")) : (b.test(o) ? (r ? p.setAttributeNS(m, o.replace(b, "aaa:"), q) : g.call(this, p, o.replace(b, "aaa:"))) : g.apply(this, arguments)))
        };
        d.fn.removeAttr = function(o) {
            return (b.test(o) ? this.each(function() {
                this.removeAttributeNS(m, o.replace(b, ""))
            }) : f.call(this, o))
        }
    }
    d.fn.extend({
        remove: function(o, p) {
            return this.each(function() {
                if (!p) {
                    if (!o || d.filter(o, [this]).length) {
                        d("*", this).add(this).each(function() {
                            d(this).triggerHandler("remove")
                        })
                    }
                }
                return n.call(d(this), o, p)
            })
        },
        enableSelection: function() {
            return this.attr("unselectable", "off").css("MozUserSelect", "").unbind("selectstart.ui")
        },
        disableSelection: function() {
            return this.attr("unselectable", "on").css("MozUserSelect", "none").bind("selectstart.ui", function() {
                return false
            })
        },
        scrollParent: function() {
            var o;
            if ((d.browser.msie && (/(static|relative)/).test(this.css("position")))) {
                o = this.parents().filter(function() {
                    return (/(relative|absolute|fixed)/).test(d.curCSS(this, "position", 1)) && (/(auto|scroll)/).test(d.curCSS(this, "overflow", 1) + d.curCSS(this, "overflow-y", 1) + d.curCSS(this, "overflow-x", 1))
                }).eq(0)
            } else {
                o = this.parents().filter(function() {
                    return (/(auto|scroll)/).test(d.curCSS(this, "overflow", 1) + d.curCSS(this, "overflow-y", 1) + d.curCSS(this, "overflow-x", 1))
                }).eq(0)
            }
            return (/fixed/).test(this.css("position")) || !o.length ? d(document) : o
        }
    });
    d.extend(d.expr[":"], {
        data: function(q, p, o) {
            return !!d.data(q, o[3])
        },
        focusable: function(p) {
            var q = p.nodeName.toLowerCase(),
                o = d.attr(p, "tabindex");
            return (/input|select|textarea|button|object/.test(q) ? !p.disabled : "a" == q || "area" == q ? p.href || !isNaN(o) : !isNaN(o)) && !d(p)["area" == q ? "parents" : "closest"](":hidden").length
        },
        tabbable: function(p) {
            var o = d.attr(p, "tabindex");
            return (isNaN(o) || o >= 0) && d(p).is(":focusable")
        }
    });

    function h(r, u, v, q) {
        function p(z) {
            var w = d[r][u][z] || [];
            return (typeof w == "string" ? w.split(/,?\s+/) : w)
        }
        var o = p("getter");
        if (q.length == 1 && typeof q[0] == "string") {
            o = o.concat(p("getterSetter"))
        }
        return (d.inArray(v, o) != -1)
    }
    d.widget = function(p, o) {
        var q = p.split(".")[0];
        p = p.split(".")[1];
        d.fn[p] = function(w) {
            var u = (typeof w == "string"),
                v = Array.prototype.slice.call(arguments, 1);
            if (u && w.substring(0, 1) == "_") {
                return this
            }
            if (u && h(q, p, w, v)) {
                var r = d.data(this[0], p);
                return (r ? r[w].apply(r, v) : undefined)
            }
            return this.each(function() {
                var z = d.data(this, p);
                (!z && !u && d.data(this, p, new d[q][p](this, w))._init());
                (z && u && d.isFunction(z[w]) && z[w].apply(z, v))
            })
        };
        d[q] = d[q] || {};
        d[q][p] = function(v, u) {
            var r = this;
            this.namespace = q;
            this.widgetName = p;
            this.widgetEventPrefix = d[q][p].eventPrefix || p;
            this.widgetBaseClass = q + "-" + p;
            this.options = d.extend({}, d.widget.defaults, d[q][p].defaults, d.metadata && d.metadata.get(v)[p], u);
            this.element = d(v).bind("setData." + p, function(z, w, C) {
                if (z.target == v) {
                    return r._setData(w, C)
                }
            }).bind("getData." + p, function(z, w) {
                if (z.target == v) {
                    return r._getData(w)
                }
            }).bind("remove", function() {
                return r.destroy()
            })
        };
        d[q][p].prototype = d.extend({}, d.widget.prototype, o);
        d[q][p].getterSetter = "option"
    };
    d.widget.prototype = {
        _init: function() {},
        destroy: function() {
            this.element.removeData(this.widgetName).removeClass(this.widgetBaseClass + "-disabled " + this.namespace + "-state-disabled").removeAttr("aria-disabled")
        },
        option: function(q, r) {
            var p = q,
                o = this;
            if (typeof q == "string") {
                if (r === undefined) {
                    return this._getData(q)
                }
                p = {};
                p[q] = r
            }
            d.each(p, function(u, v) {
                o._setData(u, v)
            })
        },
        _getData: function(o) {
            return this.options[o]
        },
        _setData: function(o, p) {
            this.options[o] = p;
            if (o == "disabled") {
                this.element[p ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled " + this.namespace + "-state-disabled").attr("aria-disabled", p)
            }
        },
        enable: function() {
            this._setData("disabled", false)
        },
        disable: function() {
            this._setData("disabled", true)
        },
        _trigger: function(q, r, u) {
            var w = this.options[q],
                o = (q == this.widgetEventPrefix ? q : this.widgetEventPrefix + q);
            r = d.Event(r);
            r.type = o;
            if (r.originalEvent) {
                for (var p = d.event.props.length, v; p;) {
                    v = d.event.props[--p];
                    r[v] = r.originalEvent[v]
                }
            }
            this.element.trigger(r, u);
            return !(d.isFunction(w) && w.call(this.element[0], r, u) === false || r.isDefaultPrevented())
        }
    };
    d.widget.defaults = {
        disabled: false
    };
    d.ui.mouse = {
        _mouseInit: function() {
            var o = this;
            this.element.bind("mousedown." + this.widgetName, function(p) {
                return o._mouseDown(p)
            }).bind("click." + this.widgetName, function(p) {
                if (o._preventClickEvent) {
                    o._preventClickEvent = false;
                    p.stopImmediatePropagation();
                    return false
                }
            });
            if (d.browser.msie) {
                this._mouseUnselectable = this.element.attr("unselectable");
                this.element.attr("unselectable", "on")
            }
            this.started = false
        },
        _mouseDestroy: function() {
            this.element.unbind("." + this.widgetName);
            (d.browser.msie && this.element.attr("unselectable", this._mouseUnselectable))
        },
        _mouseDown: function(q) {
            q.originalEvent = q.originalEvent || {};
            if (q.originalEvent.mouseHandled) {
                return
            }(this._mouseStarted && this._mouseUp(q));
            this._mouseDownEvent = q;
            var p = this,
                r = (q.which == 1),
                o = (typeof this.options.cancel == "string" ? d(q.target).parents().add(q.target).filter(this.options.cancel).length : false);
            if (!r || o || !this._mouseCapture(q)) {
                return true
            }
            this.mouseDelayMet = !this.options.delay;
            if (!this.mouseDelayMet) {
                this._mouseDelayTimer = setTimeout(function() {
                    p.mouseDelayMet = true
                }, this.options.delay)
            }
            if (this._mouseDistanceMet(q) && this._mouseDelayMet(q)) {
                this._mouseStarted = (this._mouseStart(q) !== false);
                if (!this._mouseStarted) {
                    q.preventDefault();
                    return true
                }
            }
            this._mouseMoveDelegate = function(u) {
                return p._mouseMove(u)
            };
            this._mouseUpDelegate = function(u) {
                return p._mouseUp(u)
            };
            d(document).bind("mousemove." + this.widgetName, this._mouseMoveDelegate).bind("mouseup." + this.widgetName, this._mouseUpDelegate);
            (d.browser.safari || q.preventDefault());
            q.originalEvent.mouseHandled = true;
            return true
        },
        _mouseMove: function(o) {
            if (d.browser.msie && !o.button) {
                return this._mouseUp(o)
            }
            if (this._mouseStarted) {
                this._mouseDrag(o);
                return o.preventDefault()
            }
            if (this._mouseDistanceMet(o) && this._mouseDelayMet(o)) {
                this._mouseStarted = (this._mouseStart(this._mouseDownEvent, o) !== false);
                (this._mouseStarted ? this._mouseDrag(o) : this._mouseUp(o))
            }
            return !this._mouseStarted
        },
        _mouseUp: function(o) {
            d(document).unbind("mousemove." + this.widgetName, this._mouseMoveDelegate).unbind("mouseup." + this.widgetName, this._mouseUpDelegate);
            if (this._mouseStarted) {
                this._mouseStarted = false;
                this._preventClickEvent = (o.target == this._mouseDownEvent.target);
                this._mouseStop(o)
            }
            return false
        },
        _mouseDistanceMet: function(o) {
            return (Math.max(Math.abs(this._mouseDownEvent.pageX - o.pageX), Math.abs(this._mouseDownEvent.pageY - o.pageY)) >= this.options.distance)
        },
        _mouseDelayMet: function(o) {
            return this.mouseDelayMet
        },
        _mouseStart: function(o) {},
        _mouseDrag: function(o) {},
        _mouseStop: function(o) {},
        _mouseCapture: function(o) {
            return true
        }
    };
    d.ui.mouse.defaults = {
        cancel: null,
        distance: 1,
        delay: 0
    }
})(jQuery);
(function(b) {
    b.widget("ui.draggable", b.extend({}, b.ui.mouse, {
        _init: function() {
            if (this.options.helper == "original" && !(/^(?:r|a|f)/).test(this.element.css("position"))) {
                this.element[0].style.position = "relative"
            }(this.options.addClasses && this.element.addClass("ui-draggable"));
            (this.options.disabled && this.element.addClass("ui-draggable-disabled"));
            this._mouseInit()
        },
        destroy: function() {
            if (!this.element.data("draggable")) {
                return
            }
            this.element.removeData("draggable").unbind(".draggable").removeClass("ui-draggable ui-draggable-dragging ui-draggable-disabled");
            this._mouseDestroy()
        },
        _mouseCapture: function(c) {
            var d = this.options;
            if (this.helper || d.disabled || b(c.target).is(".ui-resizable-handle")) {
                return false
            }
            this.handle = this._getHandle(c);
            if (!this.handle) {
                return false
            }
            return true
        },
        _mouseStart: function(c) {
            var d = this.options;
            this.helper = this._createHelper(c);
            this._cacheHelperProportions();
            if (b.ui.ddmanager) {
                b.ui.ddmanager.current = this
            }
            this._cacheMargins();
            this.cssPosition = this.helper.css("position");
            this.scrollParent = this.helper.scrollParent();
            this.offset = this.element.offset();
            this.offset = {
                top: this.offset.top - this.margins.top,
                left: this.offset.left - this.margins.left
            };
            b.extend(this.offset, {
                click: {
                    left: c.pageX - this.offset.left,
                    top: c.pageY - this.offset.top
                },
                parent: this._getParentOffset(),
                relative: this._getRelativeOffset()
            });
            this.originalPosition = this._generatePosition(c);
            this.originalPageX = c.pageX;
            this.originalPageY = c.pageY;
            if (d.cursorAt) {
                this._adjustOffsetFromHelper(d.cursorAt)
            }
            if (d.containment) {
                this._setContainment()
            }
            this._trigger("start", c);
            this._cacheHelperProportions();
            if (b.ui.ddmanager && !d.dropBehaviour) {
                b.ui.ddmanager.prepareOffsets(this, c)
            }
            this.helper.addClass("ui-draggable-dragging");
            this._mouseDrag(c, true);
            return true
        },
        _mouseDrag: function(c, e) {
            this.position = this._generatePosition(c);
            this.positionAbs = this._convertPositionTo("absolute");
            if (!e) {
                var d = this._uiHash();
                this._trigger("drag", c, d);
                this.position = d.position
            }
            if (!this.options.axis || this.options.axis != "y") {
                this.helper[0].style.left = this.position.left + "px"
            }
            if (!this.options.axis || this.options.axis != "x") {
                this.helper[0].style.top = this.position.top + "px"
            }
            if (b.ui.ddmanager) {
                b.ui.ddmanager.drag(this, c)
            }
            return false
        },
        _mouseStop: function(d) {
            var e = false;
            if (b.ui.ddmanager && !this.options.dropBehaviour) {
                e = b.ui.ddmanager.drop(this, d)
            }
            if (this.dropped) {
                e = this.dropped;
                this.dropped = false
            }
            if ((this.options.revert == "invalid" && !e) || (this.options.revert == "valid" && e) || this.options.revert === true || (b.isFunction(this.options.revert) && this.options.revert.call(this.element, e))) {
                var c = this;
                b(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function() {
                    c._trigger("stop", d);
                    c._clear()
                })
            } else {
                this._trigger("stop", d);
                this._clear()
            }
            return false
        },
        _getHandle: function(c) {
            var d = !this.options.handle || !b(this.options.handle, this.element).length ? true : false;
            b(this.options.handle, this.element).find("*").andSelf().each(function() {
                if (this == c.target) {
                    d = true
                }
            });
            return d
        },
        _createHelper: function(d) {
            var e = this.options;
            var c = b.isFunction(e.helper) ? b(e.helper.apply(this.element[0], [d])) : (e.helper == "clone" ? this.element.clone() : this.element);
            if (!c.parents("body").length) {
                c.appendTo((e.appendTo == "parent" ? this.element[0].parentNode : e.appendTo))
            }
            if (c[0] != this.element[0] && !(/(fixed|absolute)/).test(c.css("position"))) {
                c.css("position", "absolute")
            }
            return c
        },
        _adjustOffsetFromHelper: function(c) {
            if (c.left != undefined) {
                this.offset.click.left = c.left + this.margins.left
            }
            if (c.right != undefined) {
                this.offset.click.left = this.helperProportions.width - c.right + this.margins.left
            }
            if (c.top != undefined) {
                this.offset.click.top = c.top + this.margins.top
            }
            if (c.bottom != undefined) {
                this.offset.click.top = this.helperProportions.height - c.bottom + this.margins.top
            }
        },
        _getParentOffset: function() {
            this.offsetParent = this.helper.offsetParent();
            var c = this.offsetParent.offset();
            if (this.cssPosition == "absolute" && this.scrollParent[0] != document && b.ui.contains(this.scrollParent[0], this.offsetParent[0])) {
                c.left += this.scrollParent.scrollLeft();
                c.top += this.scrollParent.scrollTop()
            }
            if ((this.offsetParent[0] == document.body) || (this.offsetParent[0].tagName && this.offsetParent[0].tagName.toLowerCase() == "html" && b.browser.msie)) {
                c = {
                    top: 0,
                    left: 0
                }
            }
            return {
                top: c.top + (parseInt(this.offsetParent.css("borderTopWidth"), 10) || 0),
                left: c.left + (parseInt(this.offsetParent.css("borderLeftWidth"), 10) || 0)
            }
        },
        _getRelativeOffset: function() {
            if (this.cssPosition == "relative") {
                var c = this.element.position();
                return {
                    top: c.top - (parseInt(this.helper.css("top"), 10) || 0) + this.scrollParent.scrollTop(),
                    left: c.left - (parseInt(this.helper.css("left"), 10) || 0) + this.scrollParent.scrollLeft()
                }
            } else {
                return {
                    top: 0,
                    left: 0
                }
            }
        },
        _cacheMargins: function() {
            this.margins = {
                left: (parseInt(this.element.css("marginLeft"), 10) || 0),
                top: (parseInt(this.element.css("marginTop"), 10) || 0)
            }
        },
        _cacheHelperProportions: function() {
            this.helperProportions = {
                width: this.helper.outerWidth(),
                height: this.helper.outerHeight()
            }
        },
        _setContainment: function() {
            var f = this.options;
            if (f.containment == "parent") {
                f.containment = this.helper[0].parentNode
            }
            if (f.containment == "document" || f.containment == "window") {
                this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, b(f.containment == "document" ? document : window).width() - this.helperProportions.width - this.margins.left, (b(f.containment == "document" ? document : window).height() || document.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]
            }
            if (!(/^(document|window|parent)$/).test(f.containment) && f.containment.constructor != Array) {
                var d = b(f.containment)[0];
                if (!d) {
                    return
                }
                var e = b(f.containment).offset();
                var c = (b(d).css("overflow") != "hidden");
                this.containment = [e.left + (parseInt(b(d).css("borderLeftWidth"), 10) || 0) + (parseInt(b(d).css("paddingLeft"), 10) || 0) - this.margins.left, e.top + (parseInt(b(d).css("borderTopWidth"), 10) || 0) + (parseInt(b(d).css("paddingTop"), 10) || 0) - this.margins.top, e.left + (c ? Math.max(d.scrollWidth, d.offsetWidth) : d.offsetWidth) - (parseInt(b(d).css("borderLeftWidth"), 10) || 0) - (parseInt(b(d).css("paddingRight"), 10) || 0) - this.helperProportions.width - this.margins.left, e.top + (c ? Math.max(d.scrollHeight, d.offsetHeight) : d.offsetHeight) - (parseInt(b(d).css("borderTopWidth"), 10) || 0) - (parseInt(b(d).css("paddingBottom"), 10) || 0) - this.helperProportions.height - this.margins.top]
            } else {
                if (f.containment.constructor == Array) {
                    this.containment = f.containment
                }
            }
        },
        _convertPositionTo: function(g, m) {
            if (!m) {
                m = this.position
            }
            var e = g == "absolute" ? 1 : -1;
            var f = this.options,
                c = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && b.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                h = (/(html|body)/i).test(c[0].tagName);
            return {
                top: (m.top + this.offset.relative.top * e + this.offset.parent.top * e - (b.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (h ? 0 : c.scrollTop())) * e)),
                left: (m.left + this.offset.relative.left * e + this.offset.parent.left * e - (b.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : h ? 0 : c.scrollLeft()) * e))
            }
        },
        _generatePosition: function(f) {
            var m = this.options,
                c = this.cssPosition == "absolute" && !(this.scrollParent[0] != document && b.ui.contains(this.scrollParent[0], this.offsetParent[0])) ? this.offsetParent : this.scrollParent,
                n = (/(html|body)/i).test(c[0].tagName);
            if (this.cssPosition == "relative" && !(this.scrollParent[0] != document && this.scrollParent[0] != this.offsetParent[0])) {
                this.offset.relative = this._getRelativeOffset()
            }
            var e = f.pageX;
            var d = f.pageY;
            if (this.originalPosition) {
                if (this.containment) {
                    if (f.pageX - this.offset.click.left < this.containment[0]) {
                        e = this.containment[0] + this.offset.click.left
                    }
                    if (f.pageY - this.offset.click.top < this.containment[1]) {
                        d = this.containment[1] + this.offset.click.top
                    }
                    if (f.pageX - this.offset.click.left > this.containment[2]) {
                        e = this.containment[2] + this.offset.click.left
                    }
                    if (f.pageY - this.offset.click.top > this.containment[3]) {
                        d = this.containment[3] + this.offset.click.top
                    }
                }
                if (m.grid) {
                    var h = this.originalPageY + Math.round((d - this.originalPageY) / m.grid[1]) * m.grid[1];
                    d = this.containment ? (!(h - this.offset.click.top < this.containment[1] || h - this.offset.click.top > this.containment[3]) ? h : (!(h - this.offset.click.top < this.containment[1]) ? h - m.grid[1] : h + m.grid[1])) : h;
                    var g = this.originalPageX + Math.round((e - this.originalPageX) / m.grid[0]) * m.grid[0];
                    e = this.containment ? (!(g - this.offset.click.left < this.containment[0] || g - this.offset.click.left > this.containment[2]) ? g : (!(g - this.offset.click.left < this.containment[0]) ? g - m.grid[0] : g + m.grid[0])) : g
                }
            }
            return {
                top: (d - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (b.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollTop() : (n ? 0 : c.scrollTop())))),
                left: (e - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (b.browser.safari && this.cssPosition == "fixed" ? 0 : (this.cssPosition == "fixed" ? -this.scrollParent.scrollLeft() : n ? 0 : c.scrollLeft())))
            }
        },
        _clear: function() {
            this.helper.removeClass("ui-draggable-dragging");
            if (this.helper[0] != this.element[0] && !this.cancelHelperRemoval) {
                this.helper.remove()
            }
            this.helper = null;
            this.cancelHelperRemoval = false
        },
        _trigger: function(c, d, e) {
            e = e || this._uiHash();
            b.ui.plugin.call(this, c, [d, e]);
            if (c == "drag") {
                this.positionAbs = this._convertPositionTo("absolute")
            }
            return b.widget.prototype._trigger.call(this, c, d, e)
        },
        plugins: {},
        _uiHash: function(c) {
            return {
                helper: this.helper,
                position: this.position,
                absolutePosition: this.positionAbs,
                offset: this.positionAbs
            }
        }
    }));
    b.extend(b.ui.draggable, {
        version: "1.7.3",
        eventPrefix: "drag",
        defaults: {
            addClasses: true,
            appendTo: "parent",
            axis: false,
            cancel: ":input,option",
            connectToSortable: false,
            containment: false,
            cursor: "auto",
            cursorAt: false,
            delay: 0,
            distance: 1,
            grid: false,
            handle: false,
            helper: "original",
            iframeFix: false,
            opacity: false,
            refreshPositions: false,
            revert: false,
            revertDuration: 500,
            scope: "default",
            scroll: true,
            scrollSensitivity: 20,
            scrollSpeed: 20,
            snap: false,
            snapMode: "both",
            snapTolerance: 20,
            stack: false,
            zIndex: false
        }
    });
    b.ui.plugin.add("draggable", "connectToSortable", {
        start: function(d, f) {
            var e = b(this).data("draggable"),
                g = e.options,
                c = b.extend({}, f, {
                    item: e.element
                });
            e.sortables = [];
            b(g.connectToSortable).each(function() {
                var h = b.data(this, "sortable");
                if (h && !h.options.disabled) {
                    e.sortables.push({
                        instance: h,
                        shouldRevert: h.options.revert
                    });
                    h._refreshItems();
                    h._trigger("activate", d, c)
                }
            })
        },
        stop: function(d, f) {
            var e = b(this).data("draggable"),
                c = b.extend({}, f, {
                    item: e.element
                });
            b.each(e.sortables, function() {
                if (this.instance.isOver) {
                    this.instance.isOver = 0;
                    e.cancelHelperRemoval = true;
                    this.instance.cancelHelperRemoval = false;
                    if (this.shouldRevert) {
                        this.instance.options.revert = true
                    }
                    this.instance._mouseStop(d);
                    this.instance.options.helper = this.instance.options._helper;
                    if (e.options.helper == "original") {
                        this.instance.currentItem.css({
                            top: "auto",
                            left: "auto"
                        })
                    }
                } else {
                    this.instance.cancelHelperRemoval = false;
                    this.instance._trigger("deactivate", d, c)
                }
            })
        },
        drag: function(d, g) {
            var f = b(this).data("draggable"),
                c = this;
            var e = function(n) {
                var v = this.offset.click.top,
                    u = this.offset.click.left;
                var h = this.positionAbs.top,
                    q = this.positionAbs.left;
                var p = n.height,
                    r = n.width;
                var w = n.top,
                    m = n.left;
                return b.ui.isOver(h + v, q + u, w, m, p, r)
            };
            b.each(f.sortables, function(h) {
                this.instance.positionAbs = f.positionAbs;
                this.instance.helperProportions = f.helperProportions;
                this.instance.offset.click = f.offset.click;
                if (this.instance._intersectsWith(this.instance.containerCache)) {
                    if (!this.instance.isOver) {
                        this.instance.isOver = 1;
                        this.instance.currentItem = b(c).clone().appendTo(this.instance.element).data("sortable-item", true);
                        this.instance.options._helper = this.instance.options.helper;
                        this.instance.options.helper = function() {
                            return g.helper[0]
                        };
                        d.target = this.instance.currentItem[0];
                        this.instance._mouseCapture(d, true);
                        this.instance._mouseStart(d, true, true);
                        this.instance.offset.click.top = f.offset.click.top;
                        this.instance.offset.click.left = f.offset.click.left;
                        this.instance.offset.parent.left -= f.offset.parent.left - this.instance.offset.parent.left;
                        this.instance.offset.parent.top -= f.offset.parent.top - this.instance.offset.parent.top;
                        f._trigger("toSortable", d);
                        f.dropped = this.instance.element;
                        f.currentItem = f.element;
                        this.instance.fromOutside = f
                    }
                    if (this.instance.currentItem) {
                        this.instance._mouseDrag(d)
                    }
                } else {
                    if (this.instance.isOver) {
                        this.instance.isOver = 0;
                        this.instance.cancelHelperRemoval = true;
                        this.instance.options.revert = false;
                        this.instance._trigger("out", d, this.instance._uiHash(this.instance));
                        this.instance._mouseStop(d, true);
                        this.instance.options.helper = this.instance.options._helper;
                        this.instance.currentItem.remove();
                        if (this.instance.placeholder) {
                            this.instance.placeholder.remove()
                        }
                        f._trigger("fromSortable", d);
                        f.dropped = false
                    }
                }
            })
        }
    });
    b.ui.plugin.add("draggable", "cursor", {
        start: function(d, e) {
            var c = b("body"),
                f = b(this).data("draggable").options;
            if (c.css("cursor")) {
                f._cursor = c.css("cursor")
            }
            c.css("cursor", f.cursor)
        },
        stop: function(c, d) {
            var e = b(this).data("draggable").options;
            if (e._cursor) {
                b("body").css("cursor", e._cursor)
            }
        }
    });
    b.ui.plugin.add("draggable", "iframeFix", {
        start: function(c, d) {
            var e = b(this).data("draggable").options;
            b(e.iframeFix === true ? "iframe" : e.iframeFix).each(function() {
                b('<div class="ui-draggable-iframeFix" style="background: #fff;"></div>').css({
                    width: this.offsetWidth + "px",
                    height: this.offsetHeight + "px",
                    position: "absolute",
                    opacity: "0.001",
                    zIndex: 1000
                }).css(b(this).offset()).appendTo("body")
            })
        },
        stop: function(c, d) {
            b("div.ui-draggable-iframeFix").each(function() {
                this.parentNode.removeChild(this)
            })
        }
    });
    b.ui.plugin.add("draggable", "opacity", {
        start: function(d, e) {
            var c = b(e.helper),
                f = b(this).data("draggable").options;
            if (c.css("opacity")) {
                f._opacity = c.css("opacity")
            }
            c.css("opacity", f.opacity)
        },
        stop: function(c, d) {
            var e = b(this).data("draggable").options;
            if (e._opacity) {
                b(d.helper).css("opacity", e._opacity)
            }
        }
    });
    b.ui.plugin.add("draggable", "scroll", {
        start: function(d, e) {
            var c = b(this).data("draggable");
            if (c.scrollParent[0] != document && c.scrollParent[0].tagName != "HTML") {
                c.overflowOffset = c.scrollParent.offset()
            }
        },
        drag: function(e, f) {
            var d = b(this).data("draggable"),
                g = d.options,
                c = false;
            if (d.scrollParent[0] != document && d.scrollParent[0].tagName != "HTML") {
                if (!g.axis || g.axis != "x") {
                    if ((d.overflowOffset.top + d.scrollParent[0].offsetHeight) - e.pageY < g.scrollSensitivity) {
                        d.scrollParent[0].scrollTop = c = d.scrollParent[0].scrollTop + g.scrollSpeed
                    } else {
                        if (e.pageY - d.overflowOffset.top < g.scrollSensitivity) {
                            d.scrollParent[0].scrollTop = c = d.scrollParent[0].scrollTop - g.scrollSpeed
                        }
                    }
                }
                if (!g.axis || g.axis != "y") {
                    if ((d.overflowOffset.left + d.scrollParent[0].offsetWidth) - e.pageX < g.scrollSensitivity) {
                        d.scrollParent[0].scrollLeft = c = d.scrollParent[0].scrollLeft + g.scrollSpeed
                    } else {
                        if (e.pageX - d.overflowOffset.left < g.scrollSensitivity) {
                            d.scrollParent[0].scrollLeft = c = d.scrollParent[0].scrollLeft - g.scrollSpeed
                        }
                    }
                }
            } else {
                if (!g.axis || g.axis != "x") {
                    if (e.pageY - b(document).scrollTop() < g.scrollSensitivity) {
                        c = b(document).scrollTop(b(document).scrollTop() - g.scrollSpeed)
                    } else {
                        if (b(window).height() - (e.pageY - b(document).scrollTop()) < g.scrollSensitivity) {
                            c = b(document).scrollTop(b(document).scrollTop() + g.scrollSpeed)
                        }
                    }
                }
                if (!g.axis || g.axis != "y") {
                    if (e.pageX - b(document).scrollLeft() < g.scrollSensitivity) {
                        c = b(document).scrollLeft(b(document).scrollLeft() - g.scrollSpeed)
                    } else {
                        if (b(window).width() - (e.pageX - b(document).scrollLeft()) < g.scrollSensitivity) {
                            c = b(document).scrollLeft(b(document).scrollLeft() + g.scrollSpeed)
                        }
                    }
                }
            }
            if (c !== false && b.ui.ddmanager && !g.dropBehaviour) {
                b.ui.ddmanager.prepareOffsets(d, e)
            }
        }
    });
    b.ui.plugin.add("draggable", "snap", {
        start: function(d, e) {
            var c = b(this).data("draggable"),
                f = c.options;
            c.snapElements = [];
            b(f.snap.constructor != String ? (f.snap.items || ":data(draggable)") : f.snap).each(function() {
                var h = b(this);
                var g = h.offset();
                if (this != c.element[0]) {
                    c.snapElements.push({
                        item: this,
                        width: h.outerWidth(),
                        height: h.outerHeight(),
                        top: g.top,
                        left: g.left
                    })
                }
            })
        },
        drag: function(z, u) {
            var g = b(this).data("draggable"),
                v = g.options;
            var G = v.snapTolerance;
            var E = u.offset.left,
                D = E + g.helperProportions.width,
                f = u.offset.top,
                e = f + g.helperProportions.height;
            for (var C = g.snapElements.length - 1; C >= 0; C--) {
                var w = g.snapElements[C].left,
                    q = w + g.snapElements[C].width,
                    p = g.snapElements[C].top,
                    I = p + g.snapElements[C].height;
                if (!((w - G < E && E < q + G && p - G < f && f < I + G) || (w - G < E && E < q + G && p - G < e && e < I + G) || (w - G < D && D < q + G && p - G < f && f < I + G) || (w - G < D && D < q + G && p - G < e && e < I + G))) {
                    if (g.snapElements[C].snapping) {
                        (g.options.snap.release && g.options.snap.release.call(g.element, z, b.extend(g._uiHash(), {
                            snapItem: g.snapElements[C].item
                        })))
                    }
                    g.snapElements[C].snapping = false;
                    continue
                }
                if (v.snapMode != "inner") {
                    var c = Math.abs(p - e) <= G;
                    var H = Math.abs(I - f) <= G;
                    var m = Math.abs(w - D) <= G;
                    var n = Math.abs(q - E) <= G;
                    if (c) {
                        u.position.top = g._convertPositionTo("relative", {
                            top: p - g.helperProportions.height,
                            left: 0
                        }).top - g.margins.top
                    }
                    if (H) {
                        u.position.top = g._convertPositionTo("relative", {
                            top: I,
                            left: 0
                        }).top - g.margins.top
                    }
                    if (m) {
                        u.position.left = g._convertPositionTo("relative", {
                            top: 0,
                            left: w - g.helperProportions.width
                        }).left - g.margins.left
                    }
                    if (n) {
                        u.position.left = g._convertPositionTo("relative", {
                            top: 0,
                            left: q
                        }).left - g.margins.left
                    }
                }
                var h = (c || H || m || n);
                if (v.snapMode != "outer") {
                    var c = Math.abs(p - f) <= G;
                    var H = Math.abs(I - e) <= G;
                    var m = Math.abs(w - E) <= G;
                    var n = Math.abs(q - D) <= G;
                    if (c) {
                        u.position.top = g._convertPositionTo("relative", {
                            top: p,
                            left: 0
                        }).top - g.margins.top
                    }
                    if (H) {
                        u.position.top = g._convertPositionTo("relative", {
                            top: I - g.helperProportions.height,
                            left: 0
                        }).top - g.margins.top
                    }
                    if (m) {
                        u.position.left = g._convertPositionTo("relative", {
                            top: 0,
                            left: w
                        }).left - g.margins.left
                    }
                    if (n) {
                        u.position.left = g._convertPositionTo("relative", {
                            top: 0,
                            left: q - g.helperProportions.width
                        }).left - g.margins.left
                    }
                }
                if (!g.snapElements[C].snapping && (c || H || m || n || h)) {
                    (g.options.snap.snap && g.options.snap.snap.call(g.element, z, b.extend(g._uiHash(), {
                        snapItem: g.snapElements[C].item
                    })))
                }
                g.snapElements[C].snapping = (c || H || m || n || h)
            }
        }
    });
    b.ui.plugin.add("draggable", "stack", {
        start: function(c, d) {
            var f = b(this).data("draggable").options;
            var e = b.makeArray(b(f.stack.group)).sort(function(h, g) {
                return (parseInt(b(h).css("zIndex"), 10) || f.stack.min) - (parseInt(b(g).css("zIndex"), 10) || f.stack.min)
            });
            b(e).each(function(g) {
                this.style.zIndex = f.stack.min + g
            });
            this[0].style.zIndex = f.stack.min + e.length
        }
    });
    b.ui.plugin.add("draggable", "zIndex", {
        start: function(d, e) {
            var c = b(e.helper),
                f = b(this).data("draggable").options;
            if (c.css("zIndex")) {
                f._zIndex = c.css("zIndex")
            }
            c.css("zIndex", f.zIndex)
        },
        stop: function(c, d) {
            var e = b(this).data("draggable").options;
            if (e._zIndex) {
                b(d.helper).css("zIndex", e._zIndex)
            }
        }
    })
})(jQuery);
(function(b) {
    b.widget("ui.droppable", {
        _init: function() {
            var d = this.options,
                c = d.accept;
            this.isover = 0;
            this.isout = 1;
            this.options.accept = this.options.accept && b.isFunction(this.options.accept) ? this.options.accept : function(e) {
                return e.is(c)
            };
            this.proportions = {
                width: this.element[0].offsetWidth,
                height: this.element[0].offsetHeight
            };
            b.ui.ddmanager.droppables[this.options.scope] = b.ui.ddmanager.droppables[this.options.scope] || [];
            b.ui.ddmanager.droppables[this.options.scope].push(this);
            (this.options.addClasses && this.element.addClass("ui-droppable"))
        },
        destroy: function() {
            var c = b.ui.ddmanager.droppables[this.options.scope];
            for (var d = 0; d < c.length; d++) {
                if (c[d] == this) {
                    c.splice(d, 1)
                }
            }
            this.element.removeClass("ui-droppable ui-droppable-disabled").removeData("droppable").unbind(".droppable")
        },
        _setData: function(c, d) {
            if (c == "accept") {
                this.options.accept = d && b.isFunction(d) ? d : function(e) {
                    return e.is(d)
                }
            } else {
                b.widget.prototype._setData.apply(this, arguments)
            }
        },
        _activate: function(d) {
            var c = b.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.addClass(this.options.activeClass)
            }(c && this._trigger("activate", d, this.ui(c)))
        },
        _deactivate: function(d) {
            var c = b.ui.ddmanager.current;
            if (this.options.activeClass) {
                this.element.removeClass(this.options.activeClass)
            }(c && this._trigger("deactivate", d, this.ui(c)))
        },
        _over: function(d) {
            var c = b.ui.ddmanager.current;
            if (!c || (c.currentItem || c.element)[0] == this.element[0]) {
                return
            }
            if (this.options.accept.call(this.element[0], (c.currentItem || c.element))) {
                if (this.options.hoverClass) {
                    this.element.addClass(this.options.hoverClass)
                }
                this._trigger("over", d, this.ui(c))
            }
        },
        _out: function(d) {
            var c = b.ui.ddmanager.current;
            if (!c || (c.currentItem || c.element)[0] == this.element[0]) {
                return
            }
            if (this.options.accept.call(this.element[0], (c.currentItem || c.element))) {
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                }
                this._trigger("out", d, this.ui(c))
            }
        },
        _drop: function(d, e) {
            var c = e || b.ui.ddmanager.current;
            if (!c || (c.currentItem || c.element)[0] == this.element[0]) {
                return false
            }
            var f = false;
            this.element.find(":data(droppable)").not(".ui-draggable-dragging").each(function() {
                var g = b.data(this, "droppable");
                if (g.options.greedy && b.ui.intersect(c, b.extend(g, {
                        offset: g.element.offset()
                    }), g.options.tolerance)) {
                    f = true;
                    return false
                }
            });
            if (f) {
                return false
            }
            if (this.options.accept.call(this.element[0], (c.currentItem || c.element))) {
                if (this.options.activeClass) {
                    this.element.removeClass(this.options.activeClass)
                }
                if (this.options.hoverClass) {
                    this.element.removeClass(this.options.hoverClass)
                }
                this._trigger("drop", d, this.ui(c));
                return this.element
            }
            return false
        },
        ui: function(d) {
            return {
                draggable: (d.currentItem || d.element),
                helper: d.helper,
                position: d.position,
                absolutePosition: d.positionAbs,
                offset: d.positionAbs
            }
        }
    });
    b.extend(b.ui.droppable, {
        version: "1.7.3",
        eventPrefix: "drop",
        defaults: {
            accept: "*",
            activeClass: false,
            addClasses: true,
            greedy: false,
            hoverClass: false,
            scope: "default",
            tolerance: "intersect"
        }
    });
    b.ui.intersect = function(w, n, u) {
        if (!n.offset) {
            return false
        }
        var e = (w.positionAbs || w.position.absolute).left,
            d = e + w.helperProportions.width,
            q = (w.positionAbs || w.position.absolute).top,
            p = q + w.helperProportions.height;
        var g = n.offset.left,
            c = g + n.proportions.width,
            v = n.offset.top,
            o = v + n.proportions.height;
        switch (u) {
            case "fit":
                return (g < e && d < c && v < q && p < o);
                break;
            case "intersect":
                return (g < e + (w.helperProportions.width / 2) && d - (w.helperProportions.width / 2) < c && v < q + (w.helperProportions.height / 2) && p - (w.helperProportions.height / 2) < o);
                break;
            case "pointer":
                var h = ((w.positionAbs || w.position.absolute).left + (w.clickOffset || w.offset.click).left),
                    m = ((w.positionAbs || w.position.absolute).top + (w.clickOffset || w.offset.click).top),
                    f = b.ui.isOver(m, h, v, g, n.proportions.height, n.proportions.width);
                return f;
                break;
            case "touch":
                return ((q >= v && q <= o) || (p >= v && p <= o) || (q < v && p > o)) && ((e >= g && e <= c) || (d >= g && d <= c) || (e < g && d > c));
                break;
            default:
                return false;
                break
        }
    };
    b.ui.ddmanager = {
        current: null,
        droppables: {
            "default": []
        },
        prepareOffsets: function(f, h) {
            var c = b.ui.ddmanager.droppables[f.options.scope];
            var g = h ? h.type : null;
            var n = (f.currentItem || f.element).find(":data(droppable)").andSelf();
            droppablesLoop: for (var e = 0; e < c.length; e++) {
                if (c[e].options.disabled || (f && !c[e].options.accept.call(c[e].element[0], (f.currentItem || f.element)))) {
                    continue
                }
                for (var d = 0; d < n.length; d++) {
                    if (n[d] == c[e].element[0]) {
                        c[e].proportions.height = 0;
                        continue droppablesLoop
                    }
                }
                c[e].visible = c[e].element.css("display") != "none";
                if (!c[e].visible) {
                    continue
                }
                c[e].offset = c[e].element.offset();
                c[e].proportions = {
                    width: c[e].element[0].offsetWidth,
                    height: c[e].element[0].offsetHeight
                };
                if (g == "mousedown") {
                    c[e]._activate.call(c[e], h)
                }
            }
        },
        drop: function(c, d) {
            var e = false;
            b.each(b.ui.ddmanager.droppables[c.options.scope], function() {
                if (!this.options) {
                    return
                }
                if (!this.options.disabled && this.visible && b.ui.intersect(c, this, this.options.tolerance)) {
                    e = this._drop.call(this, d)
                }
                if (!this.options.disabled && this.visible && this.options.accept.call(this.element[0], (c.currentItem || c.element))) {
                    this.isout = 1;
                    this.isover = 0;
                    this._deactivate.call(this, d)
                }
            });
            return e
        },
        drag: function(c, d) {
            if (c.options.refreshPositions) {
                b.ui.ddmanager.prepareOffsets(c, d)
            }
            b.each(b.ui.ddmanager.droppables[c.options.scope], function() {
                if (this.options.disabled || this.greedyChild || !this.visible) {
                    return
                }
                var f = b.ui.intersect(c, this, this.options.tolerance);
                var h = !f && this.isover == 1 ? "isout" : (f && this.isover == 0 ? "isover" : null);
                if (!h) {
                    return
                }
                var g;
                if (this.options.greedy) {
                    var e = this.element.parents(":data(droppable):eq(0)");
                    if (e.length) {
                        g = b.data(e[0], "droppable");
                        g.greedyChild = (h == "isover" ? 1 : 0)
                    }
                }
                if (g && h == "isover") {
                    g.isover = 0;
                    g.isout = 1;
                    g._out.call(g, d)
                }
                this[h] = 1;
                this[h == "isout" ? "isover" : "isout"] = 0;
                this[h == "isover" ? "_over" : "_out"].call(this, d);
                if (g && h == "isout") {
                    g.isout = 0;
                    g.isover = 1;
                    g._over.call(g, d)
                }
            })
        }
    }
})(jQuery);
(function(d) {
    d.widget("ui.resizable", d.extend({}, d.ui.mouse, {
        _init: function() {
            var f = this,
                p = this.options;
            this.element.addClass("ui-resizable");
            d.extend(this, {
                _aspectRatio: !!(p.aspectRatio),
                aspectRatio: p.aspectRatio,
                originalElement: this.element,
                _proportionallyResizeElements: [],
                _helper: p.helper || p.ghost || p.animate ? p.helper || "ui-resizable-helper" : null
            });
            if (this.element[0].nodeName.match(/canvas|textarea|input|select|button|img/i)) {
                if (/relative/.test(this.element.css("position")) && d.browser.opera) {
                    this.element.css({
                        position: "relative",
                        top: "auto",
                        left: "auto"
                    })
                }
                this.element.wrap(d('<div class="ui-wrapper" style="overflow: hidden;"></div>').css({
                    position: this.element.css("position"),
                    width: this.element.outerWidth(),
                    height: this.element.outerHeight(),
                    top: this.element.css("top"),
                    left: this.element.css("left")
                }));
                this.element = this.element.parent().data("resizable", this.element.data("resizable"));
                this.elementIsWrapper = true;
                this.element.css({
                    marginLeft: this.originalElement.css("marginLeft"),
                    marginTop: this.originalElement.css("marginTop"),
                    marginRight: this.originalElement.css("marginRight"),
                    marginBottom: this.originalElement.css("marginBottom")
                });
                this.originalElement.css({
                    marginLeft: 0,
                    marginTop: 0,
                    marginRight: 0,
                    marginBottom: 0
                });
                this.originalResizeStyle = this.originalElement.css("resize");
                this.originalElement.css("resize", "none");
                this._proportionallyResizeElements.push(this.originalElement.css({
                    position: "static",
                    zoom: 1,
                    display: "block"
                }));
                this.originalElement.css({
                    margin: this.originalElement.css("margin")
                });
                this._proportionallyResize()
            }
            this.handles = p.handles || (!d(".ui-resizable-handle", this.element).length ? "e,s,se" : {
                n: ".ui-resizable-n",
                e: ".ui-resizable-e",
                s: ".ui-resizable-s",
                w: ".ui-resizable-w",
                se: ".ui-resizable-se",
                sw: ".ui-resizable-sw",
                ne: ".ui-resizable-ne",
                nw: ".ui-resizable-nw"
            });
            if (this.handles.constructor == String) {
                if (this.handles == "all") {
                    this.handles = "n,e,s,w,se,sw,ne,nw"
                }
                var q = this.handles.split(",");
                this.handles = {};
                for (var g = 0; g < q.length; g++) {
                    var m = d.trim(q[g]),
                        e = "ui-resizable-" + m;
                    var h = d('<div class="ui-resizable-handle ' + e + '"></div>');
                    if (/sw|se|ne|nw/.test(m)) {
                        h.css({
                            zIndex: ++p.zIndex
                        })
                    }
                    if ("se" == m) {
                        h.addClass("ui-icon ui-icon-gripsmall-diagonal-se")
                    }
                    this.handles[m] = ".ui-resizable-" + m;
                    this.element.append(h)
                }
            }
            this._renderAxis = function(v) {
                v = v || this.element;
                for (var o in this.handles) {
                    if (this.handles[o].constructor == String) {
                        this.handles[o] = d(this.handles[o], this.element).show()
                    }
                    if (this.elementIsWrapper && this.originalElement[0].nodeName.match(/textarea|input|select|button/i)) {
                        var r = d(this.handles[o], this.element),
                            u = 0;
                        u = /sw|ne|nw|se|n|s/.test(o) ? r.outerHeight() : r.outerWidth();
                        var n = ["padding", /ne|nw|n/.test(o) ? "Top" : /se|sw|s/.test(o) ? "Bottom" : /^e$/.test(o) ? "Right" : "Left"].join("");
                        v.css(n, u);
                        this._proportionallyResize()
                    }
                    if (!d(this.handles[o]).length) {
                        continue
                    }
                }
            };
            this._renderAxis(this.element);
            this._handles = d(".ui-resizable-handle", this.element).disableSelection();
            this._handles.mouseover(function() {
                if (!f.resizing) {
                    if (this.className) {
                        var n = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)
                    }
                    f.axis = n && n[1] ? n[1] : "se"
                }
            });
            if (p.autoHide) {
                this._handles.hide();
                d(this.element).addClass("ui-resizable-autohide").hover(function() {
                    d(this).removeClass("ui-resizable-autohide");
                    f._handles.show()
                }, function() {
                    if (!f.resizing) {
                        d(this).addClass("ui-resizable-autohide");
                        f._handles.hide()
                    }
                })
            }
            this._mouseInit()
        },
        destroy: function() {
            this._mouseDestroy();
            var e = function(g) {
                d(g).removeClass("ui-resizable ui-resizable-disabled ui-resizable-resizing").removeData("resizable").unbind(".resizable").find(".ui-resizable-handle").remove()
            };
            if (this.elementIsWrapper) {
                e(this.element);
                var f = this.element;
                f.parent().append(this.originalElement.css({
                    position: f.css("position"),
                    width: f.outerWidth(),
                    height: f.outerHeight(),
                    top: f.css("top"),
                    left: f.css("left")
                })).end().remove()
            }
            this.originalElement.css("resize", this.originalResizeStyle);
            e(this.originalElement)
        },
        _mouseCapture: function(f) {
            var g = false;
            for (var e in this.handles) {
                if (d(this.handles[e])[0] == f.target) {
                    g = true
                }
            }
            return this.options.disabled || !!g
        },
        _mouseStart: function(g) {
            var n = this.options,
                f = this.element.position(),
                e = this.element;
            this.resizing = true;
            this.documentScroll = {
                top: d(document).scrollTop(),
                left: d(document).scrollLeft()
            };
            if (e.is(".ui-draggable") || (/absolute/).test(e.css("position"))) {
                e.css({
                    position: "absolute",
                    top: f.top,
                    left: f.left
                })
            }
            if (d.browser.opera && (/relative/).test(e.css("position"))) {
                e.css({
                    position: "relative",
                    top: "auto",
                    left: "auto"
                })
            }
            this._renderProxy();
            var p = c(this.helper.css("left")),
                h = c(this.helper.css("top"));
            if (n.containment) {
                p += d(n.containment).scrollLeft() || 0;
                h += d(n.containment).scrollTop() || 0
            }
            this.offset = this.helper.offset();
            this.position = {
                left: p,
                top: h
            };
            this.size = this._helper ? {
                width: e.outerWidth(),
                height: e.outerHeight()
            } : {
                width: e.width(),
                height: e.height()
            };
            this.originalSize = this._helper ? {
                width: e.outerWidth(),
                height: e.outerHeight()
            } : {
                width: e.width(),
                height: e.height()
            };
            this.originalPosition = {
                left: p,
                top: h
            };
            this.sizeDiff = {
                width: e.outerWidth() - e.width(),
                height: e.outerHeight() - e.height()
            };
            this.originalMousePosition = {
                left: g.pageX,
                top: g.pageY
            };
            this.aspectRatio = (typeof n.aspectRatio == "number") ? n.aspectRatio : ((this.originalSize.width / this.originalSize.height) || 1);
            var m = d(".ui-resizable-" + this.axis).css("cursor");
            d("body").css("cursor", m == "auto" ? this.axis + "-resize" : m);
            e.addClass("ui-resizable-resizing");
            this._propagate("start", g);
            return true
        },
        _mouseDrag: function(e) {
            var h = this.helper,
                g = this.options,
                r = {},
                w = this,
                n = this.originalMousePosition,
                u = this.axis;
            var z = (e.pageX - n.left) || 0,
                v = (e.pageY - n.top) || 0;
            var m = this._change[u];
            if (!m) {
                return false
            }
            var q = m.apply(this, [e, z, v]),
                p = d.browser.msie && d.browser.version < 7,
                f = this.sizeDiff;
            if (this._aspectRatio || e.shiftKey) {
                q = this._updateRatio(q, e)
            }
            q = this._respectSize(q, e);
            this._propagate("resize", e);
            h.css({
                top: this.position.top + "px",
                left: this.position.left + "px",
                width: this.size.width + "px",
                height: this.size.height + "px"
            });
            if (!this._helper && this._proportionallyResizeElements.length) {
                this._proportionallyResize()
            }
            this._updateCache(q);
            this._trigger("resize", e, this.ui());
            return false
        },
        _mouseStop: function(h) {
            this.resizing = false;
            var m = this.options,
                r = this;
            if (this._helper) {
                var g = this._proportionallyResizeElements,
                    e = g.length && (/textarea/i).test(g[0].nodeName),
                    f = e && d.ui.hasScroll(g[0], "left") ? 0 : r.sizeDiff.height,
                    p = e ? 0 : r.sizeDiff.width;
                var u = {
                        width: (r.size.width - p),
                        height: (r.size.height - f)
                    },
                    n = (parseInt(r.element.css("left"), 10) + (r.position.left - r.originalPosition.left)) || null,
                    q = (parseInt(r.element.css("top"), 10) + (r.position.top - r.originalPosition.top)) || null;
                if (!m.animate) {
                    this.element.css(d.extend(u, {
                        top: q,
                        left: n
                    }))
                }
                r.helper.height(r.size.height);
                r.helper.width(r.size.width);
                if (this._helper && !m.animate) {
                    this._proportionallyResize()
                }
            }
            d("body").css("cursor", "auto");
            this.element.removeClass("ui-resizable-resizing");
            this._propagate("stop", h);
            if (this._helper) {
                this.helper.remove()
            }
            return false
        },
        _updateCache: function(e) {
            var f = this.options;
            this.offset = this.helper.offset();
            if (b(e.left)) {
                this.position.left = e.left
            }
            if (b(e.top)) {
                this.position.top = e.top
            }
            if (b(e.height)) {
                this.size.height = e.height
            }
            if (b(e.width)) {
                this.size.width = e.width
            }
        },
        _updateRatio: function(h, g) {
            var m = this.options,
                n = this.position,
                f = this.size,
                e = this.axis;
            if (h.height) {
                h.width = (f.height * this.aspectRatio)
            } else {
                if (h.width) {
                    h.height = (f.width / this.aspectRatio)
                }
            }
            if (e == "sw") {
                h.left = n.left + (f.width - h.width);
                h.top = null
            }
            if (e == "nw") {
                h.top = n.top + (f.height - h.height);
                h.left = n.left + (f.width - h.width)
            }
            return h
        },
        _respectSize: function(q, g) {
            var n = this.helper,
                m = this.options,
                z = this._aspectRatio || g.shiftKey,
                w = this.axis,
                D = b(q.width) && m.maxWidth && (m.maxWidth < q.width),
                r = b(q.height) && m.maxHeight && (m.maxHeight < q.height),
                h = b(q.width) && m.minWidth && (m.minWidth > q.width),
                C = b(q.height) && m.minHeight && (m.minHeight > q.height);
            if (h) {
                q.width = m.minWidth
            }
            if (C) {
                q.height = m.minHeight
            }
            if (D) {
                q.width = m.maxWidth
            }
            if (r) {
                q.height = m.maxHeight
            }
            var f = this.originalPosition.left + this.originalSize.width,
                v = this.position.top + this.size.height;
            var p = /sw|nw|w/.test(w),
                e = /nw|ne|n/.test(w);
            if (h && p) {
                q.left = f - m.minWidth
            }
            if (D && p) {
                q.left = f - m.maxWidth
            }
            if (C && e) {
                q.top = v - m.minHeight
            }
            if (r && e) {
                q.top = v - m.maxHeight
            }
            var u = !q.width && !q.height;
            if (u && !q.left && q.top) {
                q.top = null
            } else {
                if (u && !q.top && q.left) {
                    q.left = null
                }
            }
            return q
        },
        _proportionallyResize: function() {
            var n = this.options;
            if (!this._proportionallyResizeElements.length) {
                return
            }
            var g = this.helper || this.element;
            for (var f = 0; f < this._proportionallyResizeElements.length; f++) {
                var h = this._proportionallyResizeElements[f];
                if (!this.borderDif) {
                    var e = [h.css("borderTopWidth"), h.css("borderRightWidth"), h.css("borderBottomWidth"), h.css("borderLeftWidth")],
                        m = [h.css("paddingTop"), h.css("paddingRight"), h.css("paddingBottom"), h.css("paddingLeft")];
                    this.borderDif = d.map(e, function(o, q) {
                        var p = parseInt(o, 10) || 0,
                            r = parseInt(m[q], 10) || 0;
                        return p + r
                    })
                }
                if (d.browser.msie && !(!(d(g).is(":hidden") || d(g).parents(":hidden").length))) {
                    continue
                }
                h.css({
                    height: (g.height() - this.borderDif[0] - this.borderDif[2]) || 0,
                    width: (g.width() - this.borderDif[1] - this.borderDif[3]) || 0
                })
            }
        },
        _renderProxy: function() {
            var f = this.element,
                m = this.options;
            this.elementOffset = f.offset();
            if (this._helper) {
                this.helper = this.helper || d('<div style="overflow:hidden;"></div>');
                var e = d.browser.msie && d.browser.version < 7,
                    g = (e ? 1 : 0),
                    h = (e ? 2 : -1);
                this.helper.addClass(this._helper).css({
                    width: this.element.outerWidth() + h,
                    height: this.element.outerHeight() + h,
                    position: "absolute",
                    left: this.elementOffset.left - g + "px",
                    top: this.elementOffset.top - g + "px",
                    zIndex: ++m.zIndex
                });
                this.helper.appendTo("body").disableSelection()
            } else {
                this.helper = this.element
            }
        },
        _change: {
            e: function(g, f, e) {
                return {
                    width: this.originalSize.width + f
                }
            },
            w: function(h, f, e) {
                var n = this.options,
                    g = this.originalSize,
                    m = this.originalPosition;
                return {
                    left: m.left + f,
                    width: g.width - f
                }
            },
            n: function(h, f, e) {
                var n = this.options,
                    g = this.originalSize,
                    m = this.originalPosition;
                return {
                    top: m.top + e,
                    height: g.height - e
                }
            },
            s: function(g, f, e) {
                return {
                    height: this.originalSize.height + e
                }
            },
            se: function(g, f, e) {
                return d.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [g, f, e]))
            },
            sw: function(g, f, e) {
                return d.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [g, f, e]))
            },
            ne: function(g, f, e) {
                return d.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [g, f, e]))
            },
            nw: function(g, f, e) {
                return d.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [g, f, e]))
            }
        },
        _propagate: function(f, e) {
            d.ui.plugin.call(this, f, [e, this.ui()]);
            (f != "resize" && this._trigger(f, e, this.ui()))
        },
        plugins: {},
        ui: function() {
            return {
                originalElement: this.originalElement,
                element: this.element,
                helper: this.helper,
                position: this.position,
                size: this.size,
                originalSize: this.originalSize,
                originalPosition: this.originalPosition
            }
        }
    }));
    d.extend(d.ui.resizable, {
        version: "1.7.3",
        eventPrefix: "resize",
        defaults: {
            alsoResize: false,
            animate: false,
            animateDuration: "slow",
            animateEasing: "swing",
            aspectRatio: false,
            autoHide: false,
            cancel: ":input,option",
            containment: false,
            delay: 0,
            distance: 1,
            ghost: false,
            grid: false,
            handles: "e,s,se",
            helper: false,
            maxHeight: null,
            maxWidth: null,
            minHeight: 10,
            minWidth: 10,
            zIndex: 1000
        }
    });
    d.ui.plugin.add("resizable", "alsoResize", {
        start: function(f, g) {
            var e = d(this).data("resizable"),
                h = e.options;
            _store = function(m) {
                d(m).each(function() {
                    d(this).data("resizable-alsoresize", {
                        width: parseInt(d(this).width(), 10),
                        height: parseInt(d(this).height(), 10),
                        left: parseInt(d(this).css("left"), 10),
                        top: parseInt(d(this).css("top"), 10)
                    })
                })
            };
            if (typeof(h.alsoResize) == "object" && !h.alsoResize.parentNode) {
                if (h.alsoResize.length) {
                    h.alsoResize = h.alsoResize[0];
                    _store(h.alsoResize)
                } else {
                    d.each(h.alsoResize, function(m, n) {
                        _store(m)
                    })
                }
            } else {
                _store(h.alsoResize)
            }
        },
        resize: function(g, m) {
            var f = d(this).data("resizable"),
                n = f.options,
                h = f.originalSize,
                q = f.originalPosition;
            var p = {
                    height: (f.size.height - h.height) || 0,
                    width: (f.size.width - h.width) || 0,
                    top: (f.position.top - q.top) || 0,
                    left: (f.position.left - q.left) || 0
                },
                e = function(o, r) {
                    d(o).each(function() {
                        var w = d(this),
                            z = d(this).data("resizable-alsoresize"),
                            v = {},
                            u = r && r.length ? r : ["width", "height", "top", "left"];
                        d.each(u || ["width", "height", "top", "left"], function(C, E) {
                            var D = (z[E] || 0) + (p[E] || 0);
                            if (D && D >= 0) {
                                v[E] = D || null
                            }
                        });
                        if (/relative/.test(w.css("position")) && d.browser.opera) {
                            f._revertToRelativePosition = true;
                            w.css({
                                position: "absolute",
                                top: "auto",
                                left: "auto"
                            })
                        }
                        w.css(v)
                    })
                };
            if (typeof(n.alsoResize) == "object" && !n.alsoResize.nodeType) {
                d.each(n.alsoResize, function(o, r) {
                    e(o, r)
                })
            } else {
                e(n.alsoResize)
            }
        },
        stop: function(f, g) {
            var e = d(this).data("resizable");
            if (e._revertToRelativePosition && d.browser.opera) {
                e._revertToRelativePosition = false;
                el.css({
                    position: "relative"
                })
            }
            d(this).removeData("resizable-alsoresize-start")
        }
    });
    d.ui.plugin.add("resizable", "animate", {
        stop: function(m, u) {
            var v = d(this).data("resizable"),
                n = v.options;
            var h = v._proportionallyResizeElements,
                e = h.length && (/textarea/i).test(h[0].nodeName),
                f = e && d.ui.hasScroll(h[0], "left") ? 0 : v.sizeDiff.height,
                q = e ? 0 : v.sizeDiff.width;
            var g = {
                    width: (v.size.width - q),
                    height: (v.size.height - f)
                },
                p = (parseInt(v.element.css("left"), 10) + (v.position.left - v.originalPosition.left)) || null,
                r = (parseInt(v.element.css("top"), 10) + (v.position.top - v.originalPosition.top)) || null;
            v.element.animate(d.extend(g, r && p ? {
                top: r,
                left: p
            } : {}), {
                duration: n.animateDuration,
                easing: n.animateEasing,
                step: function() {
                    var o = {
                        width: parseInt(v.element.css("width"), 10),
                        height: parseInt(v.element.css("height"), 10),
                        top: parseInt(v.element.css("top"), 10),
                        left: parseInt(v.element.css("left"), 10)
                    };
                    if (h && h.length) {
                        d(h[0]).css({
                            width: o.width,
                            height: o.height
                        })
                    }
                    v._updateCache(o);
                    v._propagate("resize", m)
                }
            })
        }
    });
    d.ui.plugin.add("resizable", "containment", {
        start: function(f, z) {
            var D = d(this).data("resizable"),
                n = D.options,
                r = D.element;
            var g = n.containment,
                q = (g instanceof d) ? g.get(0) : (/parent/.test(g)) ? r.parent().get(0) : g;
            if (!q) {
                return
            }
            D.containerElement = d(q);
            if (/document/.test(g) || g == document) {
                D.containerOffset = {
                    left: 0,
                    top: 0
                };
                D.containerPosition = {
                    left: 0,
                    top: 0
                };
                D.parentData = {
                    element: d(document),
                    left: 0,
                    top: 0,
                    width: d(document).width(),
                    height: d(document).height() || document.body.parentNode.scrollHeight
                }
            } else {
                var v = d(q),
                    m = [];
                d(["Top", "Right", "Left", "Bottom"]).each(function(p, o) {
                    m[p] = c(v.css("padding" + o))
                });
                D.containerOffset = v.offset();
                D.containerPosition = v.position();
                D.containerSize = {
                    height: (v.innerHeight() - m[3]),
                    width: (v.innerWidth() - m[1])
                };
                var w = D.containerOffset,
                    e = D.containerSize.height,
                    u = D.containerSize.width,
                    h = (d.ui.hasScroll(q, "left") ? q.scrollWidth : u),
                    C = (d.ui.hasScroll(q) ? q.scrollHeight : e);
                D.parentData = {
                    element: q,
                    left: w.left,
                    top: w.top,
                    width: h,
                    height: C
                }
            }
        },
        resize: function(g, w) {
            var D = d(this).data("resizable"),
                m = D.options,
                f = D.containerSize,
                v = D.containerOffset,
                r = D.size,
                u = D.position,
                z = D._aspectRatio || g.shiftKey,
                e = {
                    top: 0,
                    left: 0
                },
                h = D.containerElement;
            if (h[0] != document && (/static/).test(h.css("position"))) {
                e = v
            }
            if (u.left < (D._helper ? v.left : 0)) {
                D.size.width = D.size.width + (D._helper ? (D.position.left - v.left) : (D.position.left - e.left));
                if (z) {
                    D.size.height = D.size.width / m.aspectRatio
                }
                D.position.left = m.helper ? v.left : 0
            }
            if (u.top < (D._helper ? v.top : 0)) {
                D.size.height = D.size.height + (D._helper ? (D.position.top - v.top) : D.position.top);
                if (z) {
                    D.size.width = D.size.height * m.aspectRatio
                }
                D.position.top = D._helper ? v.top : 0
            }
            D.offset.left = D.parentData.left + D.position.left;
            D.offset.top = D.parentData.top + D.position.top;
            var q = Math.abs((D._helper ? D.offset.left - e.left : (D.offset.left - e.left)) + D.sizeDiff.width),
                C = Math.abs((D._helper ? D.offset.top - e.top : (D.offset.top - v.top)) + D.sizeDiff.height);
            var p = D.containerElement.get(0) == D.element.parent().get(0),
                n = /relative|absolute/.test(D.containerElement.css("position"));
            if (p && n) {
                q -= D.parentData.left
            }
            if (q + D.size.width >= D.parentData.width) {
                D.size.width = D.parentData.width - q;
                if (z) {
                    D.size.height = D.size.width / D.aspectRatio
                }
            }
            if (C + D.size.height >= D.parentData.height) {
                D.size.height = D.parentData.height - C;
                if (z) {
                    D.size.width = D.size.height * D.aspectRatio
                }
            }
        },
        stop: function(f, u) {
            var z = d(this).data("resizable"),
                g = z.options,
                q = z.position,
                r = z.containerOffset,
                e = z.containerPosition,
                m = z.containerElement;
            var n = d(z.helper),
                C = n.offset(),
                v = n.outerWidth() - z.sizeDiff.width,
                p = n.outerHeight() - z.sizeDiff.height;
            if (z._helper && !g.animate && (/relative/).test(m.css("position"))) {
                d(this).css({
                    left: C.left - e.left - r.left,
                    width: v,
                    height: p
                })
            }
            if (z._helper && !g.animate && (/static/).test(m.css("position"))) {
                d(this).css({
                    left: C.left - e.left - r.left,
                    width: v,
                    height: p
                })
            }
        }
    });
    d.ui.plugin.add("resizable", "ghost", {
        start: function(g, h) {
            var e = d(this).data("resizable"),
                m = e.options,
                f = e.size;
            e.ghost = e.originalElement.clone();
            e.ghost.css({
                opacity: 0.25,
                display: "block",
                position: "relative",
                height: f.height,
                width: f.width,
                margin: 0,
                left: 0,
                top: 0
            }).addClass("ui-resizable-ghost").addClass(typeof m.ghost == "string" ? m.ghost : "");
            e.ghost.appendTo(e.helper)
        },
        resize: function(f, g) {
            var e = d(this).data("resizable"),
                h = e.options;
            if (e.ghost) {
                e.ghost.css({
                    position: "relative",
                    height: e.size.height,
                    width: e.size.width
                })
            }
        },
        stop: function(f, g) {
            var e = d(this).data("resizable"),
                h = e.options;
            if (e.ghost && e.helper) {
                e.helper.get(0).removeChild(e.ghost.get(0))
            }
        }
    });
    d.ui.plugin.add("resizable", "grid", {
        resize: function(e, r) {
            var v = d(this).data("resizable"),
                h = v.options,
                p = v.size,
                m = v.originalSize,
                n = v.originalPosition,
                u = v.axis,
                q = h._aspectRatio || e.shiftKey;
            h.grid = typeof h.grid == "number" ? [h.grid, h.grid] : h.grid;
            var g = Math.round((p.width - m.width) / (h.grid[0] || 1)) * (h.grid[0] || 1),
                f = Math.round((p.height - m.height) / (h.grid[1] || 1)) * (h.grid[1] || 1);
            if (/^(se|s|e)$/.test(u)) {
                v.size.width = m.width + g;
                v.size.height = m.height + f
            } else {
                if (/^(ne)$/.test(u)) {
                    v.size.width = m.width + g;
                    v.size.height = m.height + f;
                    v.position.top = n.top - f
                } else {
                    if (/^(sw)$/.test(u)) {
                        v.size.width = m.width + g;
                        v.size.height = m.height + f;
                        v.position.left = n.left - g
                    } else {
                        v.size.width = m.width + g;
                        v.size.height = m.height + f;
                        v.position.top = n.top - f;
                        v.position.left = n.left - g
                    }
                }
            }
        }
    });
    var c = function(e) {
        return parseInt(e, 10) || 0
    };
    var b = function(e) {
        return !isNaN(parseInt(e, 10))
    }
})(jQuery);
(function(d) {
    var c = 0,
        b = 0;
    d.widget("ui.tabs", {
        _init: function() {
            if (this.options.deselectable !== undefined) {
                this.options.collapsible = this.options.deselectable
            }
            this._tabify(true)
        },
        _setData: function(e, f) {
            if (e == "selected") {
                if (this.options.collapsible && f == this.options.selected) {
                    return
                }
                this.select(f)
            } else {
                this.options[e] = f;
                if (e == "deselectable") {
                    this.options.collapsible = f
                }
                this._tabify()
            }
        },
        _tabId: function(e) {
            return e.title && e.title.replace(/\s/g, "_").replace(/[^A-Za-z0-9\-_:\.]/g, "") || this.options.idPrefix + (++c)
        },
        _sanitizeSelector: function(e) {
            return e.replace(/:/g, "\\:")
        },
        _cookie: function() {
            var e = this.cookie || (this.cookie = this.options.cookie.name || "ui-tabs-" + (++b));
            return d.cookie.apply(null, [e].concat(d.makeArray(arguments)))
        },
        _ui: function(f, e) {
            return {
                tab: f,
                panel: e,
                index: this.anchors.index(f)
            }
        },
        _cleanup: function() {
            this.lis.filter(".ui-state-processing").removeClass("ui-state-processing").find("span:data(label.tabs)").each(function() {
                var e = d(this);
                e.html(e.data("label.tabs")).removeData("label.tabs")
            })
        },
        _tabify: function(w) {
            this.list = this.element.children("ul:first");
            this.lis = d("li:has(a[href])", this.list);
            this.anchors = this.lis.map(function() {
                return d("a", this)[0]
            });
            this.panels = d([]);
            var z = this,
                g = this.options;
            var f = /^#.+/;
            this.anchors.each(function(D, o) {
                var C = d(o).attr("href");
                var E = C.split("#")[0],
                    G;
                if (E && (E === location.toString().split("#")[0] || (G = d("base")[0]) && E === G.href)) {
                    C = o.hash;
                    o.href = C
                }
                if (f.test(C)) {
                    z.panels = z.panels.add(z._sanitizeSelector(C))
                } else {
                    if (C != "#") {
                        d.data(o, "href.tabs", C);
                        d.data(o, "load.tabs", C.replace(/#.*$/, ""));
                        var I = z._tabId(o);
                        o.href = "#" + I;
                        var H = d("#" + I);
                        if (!H.length) {
                            H = d(g.panelTemplate).attr("id", I).addClass("ui-tabs-panel ui-widget-content ui-corner-bottom").insertAfter(z.panels[D - 1] || z.list);
                            H.data("destroy.tabs", true)
                        }
                        z.panels = z.panels.add(H)
                    } else {
                        g.disabled.push(D)
                    }
                }
            });
            if (w) {
                this.element.addClass("ui-tabs ui-widget ui-widget-content ui-corner-all");
                this.list.addClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
                this.lis.addClass("ui-state-default ui-corner-top");
                this.panels.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom");
                if (g.selected === undefined) {
                    if (location.hash) {
                        this.anchors.each(function(C, o) {
                            if (o.hash == location.hash) {
                                g.selected = C;
                                return false
                            }
                        })
                    }
                    if (typeof g.selected != "number" && g.cookie) {
                        g.selected = parseInt(z._cookie(), 10)
                    }
                    if (typeof g.selected != "number" && this.lis.filter(".ui-tabs-selected").length) {
                        g.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"))
                    }
                    g.selected = g.selected || 0
                } else {
                    if (g.selected === null) {
                        g.selected = -1
                    }
                }
                g.selected = ((g.selected >= 0 && this.anchors[g.selected]) || g.selected < 0) ? g.selected : 0;
                g.disabled = d.unique(g.disabled.concat(d.map(this.lis.filter(".ui-state-disabled"), function(C, o) {
                    return z.lis.index(C)
                }))).sort();
                if (d.inArray(g.selected, g.disabled) != -1) {
                    g.disabled.splice(d.inArray(g.selected, g.disabled), 1)
                }
                this.panels.addClass("ui-tabs-hide");
                this.lis.removeClass("ui-tabs-selected ui-state-active");
                if (g.selected >= 0 && this.anchors.length) {
                    this.panels.eq(g.selected).removeClass("ui-tabs-hide");
                    this.lis.eq(g.selected).addClass("ui-tabs-selected ui-state-active");
                    z.element.queue("tabs", function() {
                        z._trigger("show", null, z._ui(z.anchors[g.selected], z.panels[g.selected]))
                    });
                    this.load(g.selected)
                }
                d(window).bind("unload", function() {
                    z.lis.add(z.anchors).unbind(".tabs");
                    z.lis = z.anchors = z.panels = null
                })
            } else {
                g.selected = this.lis.index(this.lis.filter(".ui-tabs-selected"))
            }
            this.element[g.collapsible ? "addClass" : "removeClass"]("ui-tabs-collapsible");
            if (g.cookie) {
                this._cookie(g.selected, g.cookie)
            }
            for (var n = 0, v;
                (v = this.lis[n]); n++) {
                d(v)[d.inArray(n, g.disabled) != -1 && !d(v).hasClass("ui-tabs-selected") ? "addClass" : "removeClass"]("ui-state-disabled")
            }
            if (g.cache === false) {
                this.anchors.removeData("cache.tabs")
            }
            this.lis.add(this.anchors).unbind(".tabs");
            if (g.event != "mouseover") {
                var m = function(C, o) {
                    if (o.is(":not(.ui-state-disabled)")) {
                        o.addClass("ui-state-" + C)
                    }
                };
                var q = function(C, o) {
                    o.removeClass("ui-state-" + C)
                };
                this.lis.bind("mouseover.tabs", function() {
                    m("hover", d(this))
                });
                this.lis.bind("mouseout.tabs", function() {
                    q("hover", d(this))
                });
                this.anchors.bind("focus.tabs", function() {
                    m("focus", d(this).closest("li"))
                });
                this.anchors.bind("blur.tabs", function() {
                    q("focus", d(this).closest("li"))
                })
            }
            var e, p;
            if (g.fx) {
                if (d.isArray(g.fx)) {
                    e = g.fx[0];
                    p = g.fx[1]
                } else {
                    e = p = g.fx
                }
            }

            function h(o, C) {
                o.css({
                    display: ""
                });
                if (d.browser.msie && C.opacity) {
                    o[0].style.removeAttribute("filter")
                }
            }
            var r = p ? function(o, C) {
                d(o).closest("li").removeClass("ui-state-default").addClass("ui-tabs-selected ui-state-active");
                C.hide().removeClass("ui-tabs-hide").animate(p, p.duration || "normal", function() {
                    h(C, p);
                    z._trigger("show", null, z._ui(o, C[0]))
                })
            } : function(o, C) {
                d(o).closest("li").removeClass("ui-state-default").addClass("ui-tabs-selected ui-state-active");
                C.removeClass("ui-tabs-hide");
                z._trigger("show", null, z._ui(o, C[0]))
            };
            var u = e ? function(C, o) {
                o.animate(e, e.duration || "normal", function() {
                    z.lis.removeClass("ui-tabs-selected ui-state-active").addClass("ui-state-default");
                    o.addClass("ui-tabs-hide");
                    h(o, e);
                    z.element.dequeue("tabs")
                })
            } : function(C, o, D) {
                z.lis.removeClass("ui-tabs-selected ui-state-active").addClass("ui-state-default");
                o.addClass("ui-tabs-hide");
                z.element.dequeue("tabs")
            };
            this.anchors.bind(g.event + ".tabs", function() {
                var C = this,
                    E = d(this).closest("li"),
                    o = z.panels.filter(":not(.ui-tabs-hide)"),
                    D = d(z._sanitizeSelector(this.hash));
                if ((E.hasClass("ui-tabs-selected") && !g.collapsible) || E.hasClass("ui-state-disabled") || E.hasClass("ui-state-processing") || z._trigger("select", null, z._ui(this, D[0])) === false) {
                    this.blur();
                    return false
                }
                g.selected = z.anchors.index(this);
                z.abort();
                if (g.collapsible) {
                    if (E.hasClass("ui-tabs-selected")) {
                        g.selected = -1;
                        if (g.cookie) {
                            z._cookie(g.selected, g.cookie)
                        }
                        z.element.queue("tabs", function() {
                            u(C, o)
                        }).dequeue("tabs");
                        this.blur();
                        return false
                    } else {
                        if (!o.length) {
                            if (g.cookie) {
                                z._cookie(g.selected, g.cookie)
                            }
                            z.element.queue("tabs", function() {
                                r(C, D)
                            });
                            z.load(z.anchors.index(this));
                            this.blur();
                            return false
                        }
                    }
                }
                if (g.cookie) {
                    z._cookie(g.selected, g.cookie)
                }
                if (D.length) {
                    if (o.length) {
                        z.element.queue("tabs", function() {
                            u(C, o)
                        })
                    }
                    z.element.queue("tabs", function() {
                        r(C, D)
                    });
                    z.load(z.anchors.index(this))
                } else {
                    throw "jQuery UI Tabs: Mismatching fragment identifier."
                }
                if (d.browser.msie) {
                    this.blur()
                }
            });
            this.anchors.bind("click.tabs", function() {
                return false
            })
        },
        destroy: function() {
            var e = this.options;
            this.abort();
            this.element.unbind(".tabs").removeClass("ui-tabs ui-widget ui-widget-content ui-corner-all ui-tabs-collapsible").removeData("tabs");
            this.list.removeClass("ui-tabs-nav ui-helper-reset ui-helper-clearfix ui-widget-header ui-corner-all");
            this.anchors.each(function() {
                var f = d.data(this, "href.tabs");
                if (f) {
                    this.href = f
                }
                var g = d(this).unbind(".tabs");
                d.each(["href", "load", "cache"], function(h, m) {
                    g.removeData(m + ".tabs")
                })
            });
            this.lis.unbind(".tabs").add(this.panels).each(function() {
                if (d.data(this, "destroy.tabs")) {
                    d(this).remove()
                } else {
                    d(this).removeClass(["ui-state-default", "ui-corner-top", "ui-tabs-selected", "ui-state-active", "ui-state-hover", "ui-state-focus", "ui-state-disabled", "ui-tabs-panel", "ui-widget-content", "ui-corner-bottom", "ui-tabs-hide"].join(" "))
                }
            });
            if (e.cookie) {
                this._cookie(null, e.cookie)
            }
        },
        add: function(h, g, f) {
            if (f === undefined) {
                f = this.anchors.length
            }
            var e = this,
                n = this.options,
                q = d(n.tabTemplate.replace(/#\{href\}/g, h).replace(/#\{label\}/g, g)),
                p = !h.indexOf("#") ? h.replace("#", "") : this._tabId(d("a", q)[0]);
            q.addClass("ui-state-default ui-corner-top").data("destroy.tabs", true);
            var m = d("#" + p);
            if (!m.length) {
                m = d(n.panelTemplate).attr("id", p).data("destroy.tabs", true)
            }
            m.addClass("ui-tabs-panel ui-widget-content ui-corner-bottom ui-tabs-hide");
            if (f >= this.lis.length) {
                q.appendTo(this.list);
                m.appendTo(this.list[0].parentNode)
            } else {
                q.insertBefore(this.lis[f]);
                m.insertBefore(this.panels[f])
            }
            n.disabled = d.map(n.disabled, function(r, o) {
                return r >= f ? ++r : r
            });
            this._tabify();
            if (this.anchors.length == 1) {
                q.addClass("ui-tabs-selected ui-state-active");
                m.removeClass("ui-tabs-hide");
                this.element.queue("tabs", function() {
                    e._trigger("show", null, e._ui(e.anchors[0], e.panels[0]))
                });
                this.load(0)
            }
            this._trigger("add", null, this._ui(this.anchors[f], this.panels[f]))
        },
        remove: function(e) {
            var g = this.options,
                h = this.lis.eq(e).remove(),
                f = this.panels.eq(e).remove();
            if (h.hasClass("ui-tabs-selected") && this.anchors.length > 1) {
                this.select(e + (e + 1 < this.anchors.length ? 1 : -1))
            }
            g.disabled = d.map(d.grep(g.disabled, function(o, m) {
                return o != e
            }), function(o, m) {
                return o >= e ? --o : o
            });
            this._tabify();
            this._trigger("remove", null, this._ui(h.find("a")[0], f[0]))
        },
        enable: function(e) {
            var f = this.options;
            if (d.inArray(e, f.disabled) == -1) {
                return
            }
            this.lis.eq(e).removeClass("ui-state-disabled");
            f.disabled = d.grep(f.disabled, function(h, g) {
                return h != e
            });
            this._trigger("enable", null, this._ui(this.anchors[e], this.panels[e]))
        },
        disable: function(f) {
            var e = this,
                g = this.options;
            if (f != g.selected) {
                this.lis.eq(f).addClass("ui-state-disabled");
                g.disabled.push(f);
                g.disabled.sort();
                this._trigger("disable", null, this._ui(this.anchors[f], this.panels[f]))
            }
        },
        select: function(e) {
            if (typeof e == "string") {
                e = this.anchors.index(this.anchors.filter("[href$=" + e + "]"))
            } else {
                if (e === null) {
                    e = -1
                }
            }
            if (e == -1 && this.options.collapsible) {
                e = this.options.selected
            }
            this.anchors.eq(e).trigger(this.options.event + ".tabs")
        },
        load: function(h) {
            var f = this,
                n = this.options,
                e = this.anchors.eq(h)[0],
                g = d.data(e, "load.tabs");
            this.abort();
            if (!g || this.element.queue("tabs").length !== 0 && d.data(e, "cache.tabs")) {
                this.element.dequeue("tabs");
                return
            }
            this.lis.eq(h).addClass("ui-state-processing");
            if (n.spinner) {
                var m = d("span", e);
                m.data("label.tabs", m.html()).html(n.spinner)
            }
            this.xhr = d.ajax(d.extend({}, n.ajaxOptions, {
                url: g,
                success: function(p, o) {
                    d(f._sanitizeSelector(e.hash)).html(p);
                    f._cleanup();
                    if (n.cache) {
                        d.data(e, "cache.tabs", true)
                    }
                    f._trigger("load", null, f._ui(f.anchors[h], f.panels[h]));
                    try {
                        n.ajaxOptions.success(p, o)
                    } catch (q) {}
                    f.element.dequeue("tabs")
                }
            }))
        },
        abort: function() {
            this.element.queue([]);
            this.panels.stop(false, true);
            if (this.xhr) {
                this.xhr.abort();
                delete this.xhr
            }
            this._cleanup()
        },
        url: function(f, e) {
            this.anchors.eq(f).removeData("cache.tabs").data("load.tabs", e)
        },
        length: function() {
            return this.anchors.length
        }
    });
    d.extend(d.ui.tabs, {
        version: "1.7.3",
        getter: "length",
        defaults: {
            ajaxOptions: null,
            cache: false,
            cookie: null,
            collapsible: false,
            disabled: [],
            event: "click",
            fx: null,
            idPrefix: "ui-tabs-",
            panelTemplate: "<div></div>",
            spinner: "<em>Loading&#8230;</em>",
            tabTemplate: '<li><a href="#{href}"><span>#{label}</span></a></li>'
        }
    });
    d.extend(d.ui.tabs.prototype, {
        rotation: null,
        rotate: function(g, m) {
            var e = this,
                n = this.options;
            var f = e._rotate || (e._rotate = function(o) {
                clearTimeout(e.rotation);
                e.rotation = setTimeout(function() {
                    var p = n.selected;
                    e.select(++p < e.anchors.length ? p : 0)
                }, g);
                if (o) {
                    o.stopPropagation()
                }
            });
            var h = e._unrotate || (e._unrotate = !m ? function(o) {
                if (o.clientX) {
                    e.rotate(null)
                }
            } : function(o) {
                t = n.selected;
                f()
            });
            if (g) {
                this.element.bind("tabsshow", f);
                this.anchors.bind(n.event + ".tabs", h);
                f()
            } else {
                clearTimeout(e.rotation);
                this.element.unbind("tabsshow", f);
                this.anchors.unbind(n.event + ".tabs", h);
                delete this._rotate;
                delete this._unrotate
            }
        }
    })
})(jQuery);
(function($) {
    $.extend($.ui, {
        datepicker: {
            version: "1.7.3"
        }
    });
    var PROP_NAME = "datepicker";

    function Datepicker() {
        this.debug = false;
        this._curInst = null;
        this._keyEvent = false;
        this._disabledInputs = [];
        this._datepickerShowing = false;
        this._inDialog = false;
        this._mainDivId = "ui-datepicker-div";
        this._inlineClass = "ui-datepicker-inline";
        this._appendClass = "ui-datepicker-append";
        this._triggerClass = "ui-datepicker-trigger";
        this._dialogClass = "ui-datepicker-dialog";
        this._disableClass = "ui-datepicker-disabled";
        this._unselectableClass = "ui-datepicker-unselectable";
        this._currentClass = "ui-datepicker-current-day";
        this._dayOverClass = "ui-datepicker-days-cell-over";
        this.regional = [];
        this.regional[""] = {
            closeText: "Done",
            prevText: "Prev",
            nextText: "Next",
            currentText: "Today",
            monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
            monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
            dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
            dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
            dayNamesMin: ["Su", "Mo", "Tu", "We", "Th", "Fr", "Sa"],
            dateFormat: "mm/dd/yy",
            firstDay: 0,
            isRTL: false
        };
        this._defaults = {
            showOn: "focus",
            showAnim: "show",
            showOptions: {},
            defaultDate: null,
            appendText: "",
            buttonText: "...",
            buttonImage: "",
            buttonImageOnly: false,
            hideIfNoPrevNext: false,
            navigationAsDateFormat: false,
            gotoCurrent: false,
            changeMonth: false,
            changeYear: false,
            showMonthAfterYear: false,
            yearRange: "-10:+10",
            showOtherMonths: false,
            calculateWeek: this.iso8601Week,
            shortYearCutoff: "+10",
            minDate: null,
            maxDate: null,
            duration: "normal",
            beforeShowDay: null,
            beforeShow: null,
            onSelect: null,
            onChangeMonthYear: null,
            onClose: null,
            numberOfMonths: 1,
            showCurrentAtPos: 0,
            stepMonths: 1,
            stepBigMonths: 12,
            altField: "",
            altFormat: "",
            constrainInput: true,
            showButtonPanel: false
        };
        $.extend(this._defaults, this.regional[""]);
        this.dpDiv = $('<div id="' + this._mainDivId + '" class="ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all ui-helper-hidden-accessible"></div>')
    }
    $.extend(Datepicker.prototype, {
        markerClassName: "hasDatepicker",
        log: function() {
            if (this.debug) {
                console.log.apply("", arguments)
            }
        },
        setDefaults: function(settings) {
            extendRemove(this._defaults, settings || {});
            return this
        },
        _attachDatepicker: function(target, settings) {
            var inlineSettings = null;
            for (var attrName in this._defaults) {
                var attrValue = target.getAttribute("date:" + attrName);
                if (attrValue) {
                    inlineSettings = inlineSettings || {};
                    try {
                        inlineSettings[attrName] = eval(attrValue)
                    } catch (err) {
                        inlineSettings[attrName] = attrValue
                    }
                }
            }
            var nodeName = target.nodeName.toLowerCase();
            var inline = (nodeName == "div" || nodeName == "span");
            if (!target.id) {
                target.id = "dp" + (++this.uuid)
            }
            var inst = this._newInst($(target), inline);
            inst.settings = $.extend({}, settings || {}, inlineSettings || {});
            if (nodeName == "input") {
                this._connectDatepicker(target, inst)
            } else {
                if (inline) {
                    this._inlineDatepicker(target, inst)
                }
            }
        },
        _newInst: function(target, inline) {
            var id = target[0].id.replace(/([:\[\]\.])/g, "\\\\$1");
            return {
                id: id,
                input: target,
                selectedDay: 0,
                selectedMonth: 0,
                selectedYear: 0,
                drawMonth: 0,
                drawYear: 0,
                inline: inline,
                dpDiv: (!inline ? this.dpDiv : $('<div class="' + this._inlineClass + ' ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all"></div>'))
            }
        },
        _connectDatepicker: function(target, inst) {
            var input = $(target);
            inst.append = $([]);
            inst.trigger = $([]);
            if (input.hasClass(this.markerClassName)) {
                return
            }
            var appendText = this._get(inst, "appendText");
            var isRTL = this._get(inst, "isRTL");
            if (appendText) {
                inst.append = $('<span class="' + this._appendClass + '">' + appendText + "</span>");
                input[isRTL ? "before" : "after"](inst.append)
            }
            var showOn = this._get(inst, "showOn");
            if (showOn == "focus" || showOn == "both") {
                input.focus(this._showDatepicker)
            }
            if (showOn == "button" || showOn == "both") {
                var buttonText = this._get(inst, "buttonText");
                var buttonImage = this._get(inst, "buttonImage");
                inst.trigger = $(this._get(inst, "buttonImageOnly") ? $("<img/>").addClass(this._triggerClass).attr({
                    src: buttonImage,
                    alt: buttonText,
                    title: buttonText
                }) : $('<button type="button"></button>').addClass(this._triggerClass).html(buttonImage == "" ? buttonText : $("<img/>").attr({
                    src: buttonImage,
                    alt: buttonText,
                    title: buttonText
                })));
                input[isRTL ? "before" : "after"](inst.trigger);
                inst.trigger.click(function() {
                    if ($.datepicker._datepickerShowing && $.datepicker._lastInput == target) {
                        $.datepicker._hideDatepicker()
                    } else {
                        $.datepicker._showDatepicker(target)
                    }
                    return false
                })
            }
            input.addClass(this.markerClassName).keydown(this._doKeyDown).keypress(this._doKeyPress).bind("setData.datepicker", function(event, key, value) {
                inst.settings[key] = value
            }).bind("getData.datepicker", function(event, key) {
                return this._get(inst, key)
            });
            $.data(target, PROP_NAME, inst)
        },
        _inlineDatepicker: function(target, inst) {
            var divSpan = $(target);
            if (divSpan.hasClass(this.markerClassName)) {
                return
            }
            divSpan.addClass(this.markerClassName).append(inst.dpDiv).bind("setData.datepicker", function(event, key, value) {
                inst.settings[key] = value
            }).bind("getData.datepicker", function(event, key) {
                return this._get(inst, key)
            });
            $.data(target, PROP_NAME, inst);
            this._setDate(inst, this._getDefaultDate(inst));
            this._updateDatepicker(inst);
            this._updateAlternate(inst)
        },
        _dialogDatepicker: function(input, dateText, onSelect, settings, pos) {
            var inst = this._dialogInst;
            if (!inst) {
                var id = "dp" + (++this.uuid);
                this._dialogInput = $('<input type="text" id="' + id + '" size="1" style="position: absolute; top: -100px;"/>');
                this._dialogInput.keydown(this._doKeyDown);
                $("body").append(this._dialogInput);
                inst = this._dialogInst = this._newInst(this._dialogInput, false);
                inst.settings = {};
                $.data(this._dialogInput[0], PROP_NAME, inst)
            }
            extendRemove(inst.settings, settings || {});
            this._dialogInput.val(dateText);
            this._pos = (pos ? (pos.length ? pos : [pos.pageX, pos.pageY]) : null);
            if (!this._pos) {
                var browserWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;
                var browserHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight;
                var scrollX = document.documentElement.scrollLeft || document.body.scrollLeft;
                var scrollY = document.documentElement.scrollTop || document.body.scrollTop;
                this._pos = [(browserWidth / 2) - 100 + scrollX, (browserHeight / 2) - 150 + scrollY]
            }
            this._dialogInput.css("left", this._pos[0] + "px").css("top", this._pos[1] + "px");
            inst.settings.onSelect = onSelect;
            this._inDialog = true;
            this.dpDiv.addClass(this._dialogClass);
            this._showDatepicker(this._dialogInput[0]);
            if ($.blockUI) {
                $.blockUI(this.dpDiv)
            }
            $.data(this._dialogInput[0], PROP_NAME, inst);
            return this
        },
        _destroyDatepicker: function(target) {
            var $target = $(target);
            var inst = $.data(target, PROP_NAME);
            if (!$target.hasClass(this.markerClassName)) {
                return
            }
            var nodeName = target.nodeName.toLowerCase();
            $.removeData(target, PROP_NAME);
            if (nodeName == "input") {
                inst.append.remove();
                inst.trigger.remove();
                $target.removeClass(this.markerClassName).unbind("focus", this._showDatepicker).unbind("keydown", this._doKeyDown).unbind("keypress", this._doKeyPress)
            } else {
                if (nodeName == "div" || nodeName == "span") {
                    $target.removeClass(this.markerClassName).empty()
                }
            }
        },
        _enableDatepicker: function(target) {
            var $target = $(target);
            var inst = $.data(target, PROP_NAME);
            if (!$target.hasClass(this.markerClassName)) {
                return
            }
            var nodeName = target.nodeName.toLowerCase();
            if (nodeName == "input") {
                target.disabled = false;
                inst.trigger.filter("button").each(function() {
                    this.disabled = false
                }).end().filter("img").css({
                    opacity: "1.0",
                    cursor: ""
                })
            } else {
                if (nodeName == "div" || nodeName == "span") {
                    var inline = $target.children("." + this._inlineClass);
                    inline.children().removeClass("ui-state-disabled")
                }
            }
            this._disabledInputs = $.map(this._disabledInputs, function(value) {
                return (value == target ? null : value)
            })
        },
        _disableDatepicker: function(target) {
            var $target = $(target);
            var inst = $.data(target, PROP_NAME);
            if (!$target.hasClass(this.markerClassName)) {
                return
            }
            var nodeName = target.nodeName.toLowerCase();
            if (nodeName == "input") {
                target.disabled = true;
                inst.trigger.filter("button").each(function() {
                    this.disabled = true
                }).end().filter("img").css({
                    opacity: "0.5",
                    cursor: "default"
                })
            } else {
                if (nodeName == "div" || nodeName == "span") {
                    var inline = $target.children("." + this._inlineClass);
                    inline.children().addClass("ui-state-disabled")
                }
            }
            this._disabledInputs = $.map(this._disabledInputs, function(value) {
                return (value == target ? null : value)
            });
            this._disabledInputs[this._disabledInputs.length] = target
        },
        _isDisabledDatepicker: function(target) {
            if (!target) {
                return false
            }
            for (var i = 0; i < this._disabledInputs.length; i++) {
                if (this._disabledInputs[i] == target) {
                    return true
                }
            }
            return false
        },
        _getInst: function(target) {
            try {
                return $.data(target, PROP_NAME)
            } catch (err) {
                throw "Missing instance data for this datepicker"
            }
        },
        _optionDatepicker: function(target, name, value) {
            var inst = this._getInst(target);
            if (arguments.length == 2 && typeof name == "string") {
                return (name == "defaults" ? $.extend({}, $.datepicker._defaults) : (inst ? (name == "all" ? $.extend({}, inst.settings) : this._get(inst, name)) : null))
            }
            var settings = name || {};
            if (typeof name == "string") {
                settings = {};
                settings[name] = value
            }
            if (inst) {
                if (this._curInst == inst) {
                    this._hideDatepicker(null)
                }
                var date = this._getDateDatepicker(target);
                extendRemove(inst.settings, settings);
                this._setDateDatepicker(target, date);
                this._updateDatepicker(inst)
            }
        },
        _changeDatepicker: function(target, name, value) {
            this._optionDatepicker(target, name, value)
        },
        _refreshDatepicker: function(target) {
            var inst = this._getInst(target);
            if (inst) {
                this._updateDatepicker(inst)
            }
        },
        _setDateDatepicker: function(target, date, endDate) {
            var inst = this._getInst(target);
            if (inst) {
                this._setDate(inst, date, endDate);
                this._updateDatepicker(inst);
                this._updateAlternate(inst)
            }
        },
        _getDateDatepicker: function(target) {
            var inst = this._getInst(target);
            if (inst && !inst.inline) {
                this._setDateFromField(inst)
            }
            return (inst ? this._getDate(inst) : null)
        },
        _doKeyDown: function(event) {
            var inst = $.datepicker._getInst(event.target);
            var handled = true;
            var isRTL = inst.dpDiv.is(".ui-datepicker-rtl");
            inst._keyEvent = true;
            if ($.datepicker._datepickerShowing) {
                switch (event.keyCode) {
                    case 9:
                        $.datepicker._hideDatepicker(null, "");
                        break;
                    case 13:
                        var sel = $("td." + $.datepicker._dayOverClass + ", td." + $.datepicker._currentClass, inst.dpDiv);
                        if (sel[0]) {
                            $.datepicker._selectDay(event.target, inst.selectedMonth, inst.selectedYear, sel[0])
                        } else {
                            $.datepicker._hideDatepicker(null, $.datepicker._get(inst, "duration"))
                        }
                        return false;
                        break;
                    case 27:
                        $.datepicker._hideDatepicker(null, $.datepicker._get(inst, "duration"));
                        break;
                    case 33:
                        $.datepicker._adjustDate(event.target, (event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths")), "M");
                        break;
                    case 34:
                        $.datepicker._adjustDate(event.target, (event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths")), "M");
                        break;
                    case 35:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._clearDate(event.target)
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    case 36:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._gotoToday(event.target)
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    case 37:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, (isRTL ? +1 : -1), "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        if (event.originalEvent.altKey) {
                            $.datepicker._adjustDate(event.target, (event.ctrlKey ? -$.datepicker._get(inst, "stepBigMonths") : -$.datepicker._get(inst, "stepMonths")), "M")
                        }
                        break;
                    case 38:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, -7, "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    case 39:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, (isRTL ? -1 : +1), "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        if (event.originalEvent.altKey) {
                            $.datepicker._adjustDate(event.target, (event.ctrlKey ? +$.datepicker._get(inst, "stepBigMonths") : +$.datepicker._get(inst, "stepMonths")), "M")
                        }
                        break;
                    case 40:
                        if (event.ctrlKey || event.metaKey) {
                            $.datepicker._adjustDate(event.target, +7, "D")
                        }
                        handled = event.ctrlKey || event.metaKey;
                        break;
                    default:
                        handled = false
                }
            } else {
                if (event.keyCode == 36 && event.ctrlKey) {
                    $.datepicker._showDatepicker(this)
                } else {
                    handled = false
                }
            }
            if (handled) {
                event.preventDefault();
                event.stopPropagation()
            }
        },
        _doKeyPress: function(event) {
            var inst = $.datepicker._getInst(event.target);
            if ($.datepicker._get(inst, "constrainInput")) {
                var chars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat"));
                var chr = String.fromCharCode(event.charCode == undefined ? event.keyCode : event.charCode);
                return event.ctrlKey || (chr < " " || !chars || chars.indexOf(chr) > -1)
            }
        },
        _showDatepicker: function(input) {
            input = input.target || input;
            if (input.nodeName.toLowerCase() != "input") {
                input = $("input", input.parentNode)[0]
            }
            if ($.datepicker._isDisabledDatepicker(input) || $.datepicker._lastInput == input) {
                return
            }
            var inst = $.datepicker._getInst(input);
            var beforeShow = $.datepicker._get(inst, "beforeShow");
            extendRemove(inst.settings, (beforeShow ? beforeShow.apply(input, [input, inst]) : {}));
            $.datepicker._hideDatepicker(null, "");
            $.datepicker._lastInput = input;
            $.datepicker._setDateFromField(inst);
            if ($.datepicker._inDialog) {
                input.value = ""
            }
            if (!$.datepicker._pos) {
                $.datepicker._pos = $.datepicker._findPos(input);
                $.datepicker._pos[1] += input.offsetHeight
            }
            var isFixed = false;
            $(input).parents().each(function() {
                isFixed |= $(this).css("position") == "fixed";
                return !isFixed
            });
            if (isFixed && $.browser.opera) {
                $.datepicker._pos[0] -= document.documentElement.scrollLeft;
                $.datepicker._pos[1] -= document.documentElement.scrollTop
            }
            var offset = {
                left: $.datepicker._pos[0],
                top: $.datepicker._pos[1]
            };
            $.datepicker._pos = null;
            inst.rangeStart = null;
            inst.dpDiv.css({
                position: "absolute",
                display: "block",
                top: "-1000px"
            });
            $.datepicker._updateDatepicker(inst);
            offset = $.datepicker._checkOffset(inst, offset, isFixed);
            inst.dpDiv.css({
                position: ($.datepicker._inDialog && $.blockUI ? "static" : (isFixed ? "fixed" : "absolute")),
                display: "none",
                left: offset.left + "px",
                top: offset.top + "px"
            });
            if (!inst.inline) {
                var showAnim = $.datepicker._get(inst, "showAnim") || "show";
                var duration = $.datepicker._get(inst, "duration");
                var postProcess = function() {
                    $.datepicker._datepickerShowing = true;
                    if ($.browser.msie && parseInt($.browser.version, 10) < 7) {
                        $("iframe.ui-datepicker-cover").css({
                            width: inst.dpDiv.width() + 4,
                            height: inst.dpDiv.height() + 4
                        })
                    }
                };
                if ($.effects && $.effects[showAnim]) {
                    inst.dpDiv.show(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess)
                } else {
                    inst.dpDiv[showAnim](duration, postProcess)
                }
                if (duration == "") {
                    postProcess()
                }
                if (inst.input[0].type != "hidden") {
                    inst.input[0].focus()
                }
                $.datepicker._curInst = inst
            }
        },
        _updateDatepicker: function(inst) {
            var dims = {
                width: inst.dpDiv.width() + 4,
                height: inst.dpDiv.height() + 4
            };
            var self = this;
            inst.dpDiv.empty().append(this._generateHTML(inst)).find("iframe.ui-datepicker-cover").css({
                width: dims.width,
                height: dims.height
            }).end().find("button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a").bind("mouseout", function() {
                $(this).removeClass("ui-state-hover");
                if (this.className.indexOf("ui-datepicker-prev") != -1) {
                    $(this).removeClass("ui-datepicker-prev-hover")
                }
                if (this.className.indexOf("ui-datepicker-next") != -1) {
                    $(this).removeClass("ui-datepicker-next-hover")
                }
            }).bind("mouseover", function() {
                if (!self._isDisabledDatepicker(inst.inline ? inst.dpDiv.parent()[0] : inst.input[0])) {
                    $(this).parents(".ui-datepicker-calendar").find("a").removeClass("ui-state-hover");
                    $(this).addClass("ui-state-hover");
                    if (this.className.indexOf("ui-datepicker-prev") != -1) {
                        $(this).addClass("ui-datepicker-prev-hover")
                    }
                    if (this.className.indexOf("ui-datepicker-next") != -1) {
                        $(this).addClass("ui-datepicker-next-hover")
                    }
                }
            }).end().find("." + this._dayOverClass + " a").trigger("mouseover").end();
            var numMonths = this._getNumberOfMonths(inst);
            var cols = numMonths[1];
            var width = 17;
            if (cols > 1) {
                inst.dpDiv.addClass("ui-datepicker-multi-" + cols).css("width", (width * cols) + "em")
            } else {
                inst.dpDiv.removeClass("ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4").width("")
            }
            inst.dpDiv[(numMonths[0] != 1 || numMonths[1] != 1 ? "add" : "remove") + "Class"]("ui-datepicker-multi");
            inst.dpDiv[(this._get(inst, "isRTL") ? "add" : "remove") + "Class"]("ui-datepicker-rtl");
            if (inst.input && inst.input[0].type != "hidden" && inst == $.datepicker._curInst) {
                $(inst.input[0]).focus()
            }
        },
        _checkOffset: function(inst, offset, isFixed) {
            var dpWidth = inst.dpDiv.outerWidth();
            var dpHeight = inst.dpDiv.outerHeight();
            var inputWidth = inst.input ? inst.input.outerWidth() : 0;
            var inputHeight = inst.input ? inst.input.outerHeight() : 0;
            var viewWidth = (window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth) + $(document).scrollLeft();
            var viewHeight = (window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight) + $(document).scrollTop();
            offset.left -= (this._get(inst, "isRTL") ? (dpWidth - inputWidth) : 0);
            offset.left -= (isFixed && offset.left == inst.input.offset().left) ? $(document).scrollLeft() : 0;
            offset.top -= (isFixed && offset.top == (inst.input.offset().top + inputHeight)) ? $(document).scrollTop() : 0;
            offset.left -= (offset.left + dpWidth > viewWidth && viewWidth > dpWidth) ? Math.abs(offset.left + dpWidth - viewWidth) : 0;
            offset.top -= (offset.top + dpHeight > viewHeight && viewHeight > dpHeight) ? Math.abs(offset.top + dpHeight + inputHeight * 2 - viewHeight) : 0;
            return offset
        },
        _findPos: function(obj) {
            while (obj && (obj.type == "hidden" || obj.nodeType != 1)) {
                obj = obj.nextSibling
            }
            var position = $(obj).offset();
            return [position.left, position.top]
        },
        _hideDatepicker: function(input, duration) {
            var inst = this._curInst;
            if (!inst || (input && inst != $.data(input, PROP_NAME))) {
                return
            }
            if (inst.stayOpen) {
                this._selectDate("#" + inst.id, this._formatDate(inst, inst.currentDay, inst.currentMonth, inst.currentYear))
            }
            inst.stayOpen = false;
            if (this._datepickerShowing) {
                duration = (duration != null ? duration : this._get(inst, "duration"));
                var showAnim = this._get(inst, "showAnim");
                var postProcess = function() {
                    $.datepicker._tidyDialog(inst)
                };
                if (duration != "" && $.effects && $.effects[showAnim]) {
                    inst.dpDiv.hide(showAnim, $.datepicker._get(inst, "showOptions"), duration, postProcess)
                } else {
                    inst.dpDiv[(duration == "" ? "hide" : (showAnim == "slideDown" ? "slideUp" : (showAnim == "fadeIn" ? "fadeOut" : "hide")))](duration, postProcess)
                }
                if (duration == "") {
                    this._tidyDialog(inst)
                }
                var onClose = this._get(inst, "onClose");
                if (onClose) {
                    onClose.apply((inst.input ? inst.input[0] : null), [(inst.input ? inst.input.val() : ""), inst])
                }
                this._datepickerShowing = false;
                this._lastInput = null;
                if (this._inDialog) {
                    this._dialogInput.css({
                        position: "absolute",
                        left: "0",
                        top: "-100px"
                    });
                    if ($.blockUI) {
                        $.unblockUI();
                        $("body").append(this.dpDiv)
                    }
                }
                this._inDialog = false
            }
            this._curInst = null
        },
        _tidyDialog: function(inst) {
            inst.dpDiv.removeClass(this._dialogClass).unbind(".ui-datepicker-calendar")
        },
        _checkExternalClick: function(event) {
            if (!$.datepicker._curInst) {
                return
            }
            var $target = $(event.target);
            if (($target.parents("#" + $.datepicker._mainDivId).length == 0) && !$target.hasClass($.datepicker.markerClassName) && !$target.hasClass($.datepicker._triggerClass) && $.datepicker._datepickerShowing && !($.datepicker._inDialog && $.blockUI)) {
                $.datepicker._hideDatepicker(null, "")
            }
        },
        _adjustDate: function(id, offset, period) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            if (this._isDisabledDatepicker(target[0])) {
                return
            }
            this._adjustInstDate(inst, offset + (period == "M" ? this._get(inst, "showCurrentAtPos") : 0), period);
            this._updateDatepicker(inst)
        },
        _gotoToday: function(id) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            if (this._get(inst, "gotoCurrent") && inst.currentDay) {
                inst.selectedDay = inst.currentDay;
                inst.drawMonth = inst.selectedMonth = inst.currentMonth;
                inst.drawYear = inst.selectedYear = inst.currentYear
            } else {
                var date = new Date();
                inst.selectedDay = date.getDate();
                inst.drawMonth = inst.selectedMonth = date.getMonth();
                inst.drawYear = inst.selectedYear = date.getFullYear()
            }
            this._notifyChange(inst);
            this._adjustDate(target)
        },
        _selectMonthYear: function(id, select, period) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            inst._selectingMonthYear = false;
            inst["selected" + (period == "M" ? "Month" : "Year")] = inst["draw" + (period == "M" ? "Month" : "Year")] = parseInt(select.options[select.selectedIndex].value, 10);
            this._notifyChange(inst);
            this._adjustDate(target)
        },
        _clickMonthYear: function(id) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            if (inst.input && inst._selectingMonthYear && !$.browser.msie) {
                inst.input[0].focus()
            }
            inst._selectingMonthYear = !inst._selectingMonthYear
        },
        _selectDay: function(id, month, year, td) {
            var target = $(id);
            if ($(td).hasClass(this._unselectableClass) || this._isDisabledDatepicker(target[0])) {
                return
            }
            var inst = this._getInst(target[0]);
            inst.selectedDay = inst.currentDay = $("a", td).html();
            inst.selectedMonth = inst.currentMonth = month;
            inst.selectedYear = inst.currentYear = year;
            if (inst.stayOpen) {
                inst.endDay = inst.endMonth = inst.endYear = null
            }
            this._selectDate(id, this._formatDate(inst, inst.currentDay, inst.currentMonth, inst.currentYear));
            if (inst.stayOpen) {
                inst.rangeStart = this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay));
                this._updateDatepicker(inst)
            }
        },
        _clearDate: function(id) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            inst.stayOpen = false;
            inst.endDay = inst.endMonth = inst.endYear = inst.rangeStart = null;
            this._selectDate(target, "")
        },
        _selectDate: function(id, dateStr) {
            var target = $(id);
            var inst = this._getInst(target[0]);
            dateStr = (dateStr != null ? dateStr : this._formatDate(inst));
            if (inst.input) {
                inst.input.val(dateStr)
            }
            this._updateAlternate(inst);
            var onSelect = this._get(inst, "onSelect");
            if (onSelect) {
                onSelect.apply((inst.input ? inst.input[0] : null), [dateStr, inst])
            } else {
                if (inst.input) {
                    inst.input.trigger("change")
                }
            }
            if (inst.inline) {
                this._updateDatepicker(inst)
            } else {
                if (!inst.stayOpen) {
                    this._hideDatepicker(null, this._get(inst, "duration"));
                    this._lastInput = inst.input[0];
                    if (typeof(inst.input[0]) != "object") {
                        inst.input[0].focus()
                    }
                    this._lastInput = null
                }
            }
        },
        _updateAlternate: function(inst) {
            var altField = this._get(inst, "altField");
            if (altField) {
                var altFormat = this._get(inst, "altFormat") || this._get(inst, "dateFormat");
                var date = this._getDate(inst);
                dateStr = this.formatDate(altFormat, date, this._getFormatConfig(inst));
                $(altField).each(function() {
                    $(this).val(dateStr)
                })
            }
        },
        noWeekends: function(date) {
            var day = date.getDay();
            return [(day > 0 && day < 6), ""]
        },
        iso8601Week: function(date) {
            var checkDate = new Date(date.getFullYear(), date.getMonth(), date.getDate());
            var firstMon = new Date(checkDate.getFullYear(), 1 - 1, 4);
            var firstDay = firstMon.getDay() || 7;
            firstMon.setDate(firstMon.getDate() + 1 - firstDay);
            if (firstDay < 4 && checkDate < firstMon) {
                checkDate.setDate(checkDate.getDate() - 3);
                return $.datepicker.iso8601Week(checkDate)
            } else {
                if (checkDate > new Date(checkDate.getFullYear(), 12 - 1, 28)) {
                    firstDay = new Date(checkDate.getFullYear() + 1, 1 - 1, 4).getDay() || 7;
                    if (firstDay > 4 && (checkDate.getDay() || 7) < firstDay - 3) {
                        return 1
                    }
                }
            }
            return Math.floor(((checkDate - firstMon) / 86400000) / 7) + 1
        },
        parseDate: function(format, value, settings) {
            if (format == null || value == null) {
                throw "Invalid arguments"
            }
            value = (typeof value == "object" ? value.toString() : value + "");
            if (value == "") {
                return null
            }
            var shortYearCutoff = (settings ? settings.shortYearCutoff : null) || this._defaults.shortYearCutoff;
            var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort;
            var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames;
            var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort;
            var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames;
            var year = -1;
            var month = -1;
            var day = -1;
            var doy = -1;
            var literal = false;
            var lookAhead = function(match) {
                var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
                if (matches) {
                    iFormat++
                }
                return matches
            };
            var getNumber = function(match) {
                lookAhead(match);
                var origSize = (match == "@" ? 14 : (match == "y" ? 4 : (match == "o" ? 3 : 2)));
                var size = origSize;
                var num = 0;
                while (size > 0 && iValue < value.length && value.charAt(iValue) >= "0" && value.charAt(iValue) <= "9") {
                    num = num * 10 + parseInt(value.charAt(iValue++), 10);
                    size--
                }
                if (size == origSize) {
                    throw "Missing number at position " + iValue
                }
                return num
            };
            var getName = function(match, shortNames, longNames) {
                var names = (lookAhead(match) ? longNames : shortNames);
                var size = 0;
                for (var j = 0; j < names.length; j++) {
                    size = Math.max(size, names[j].length)
                }
                var name = "";
                var iInit = iValue;
                while (size > 0 && iValue < value.length) {
                    name += value.charAt(iValue++);
                    for (var i = 0; i < names.length; i++) {
                        if (name == names[i]) {
                            return i + 1
                        }
                    }
                    size--
                }
                throw "Unknown name at position " + iInit
            };
            var checkLiteral = function() {
                if (value.charAt(iValue) != format.charAt(iFormat)) {
                    throw "Unexpected literal at position " + iValue
                }
                iValue++
            };
            var iValue = 0;
            for (var iFormat = 0; iFormat < format.length; iFormat++) {
                if (literal) {
                    if (format.charAt(iFormat) == "'" && !lookAhead("'")) {
                        literal = false
                    } else {
                        checkLiteral()
                    }
                } else {
                    switch (format.charAt(iFormat)) {
                        case "d":
                            day = getNumber("d");
                            break;
                        case "D":
                            getName("D", dayNamesShort, dayNames);
                            break;
                        case "o":
                            doy = getNumber("o");
                            break;
                        case "m":
                            month = getNumber("m");
                            break;
                        case "M":
                            month = getName("M", monthNamesShort, monthNames);
                            break;
                        case "y":
                            year = getNumber("y");
                            break;
                        case "@":
                            var date = new Date(getNumber("@"));
                            year = date.getFullYear();
                            month = date.getMonth() + 1;
                            day = date.getDate();
                            break;
                        case "'":
                            if (lookAhead("'")) {
                                checkLiteral()
                            } else {
                                literal = true
                            }
                            break;
                        default:
                            checkLiteral()
                    }
                }
            }
            if (year == -1) {
                year = new Date().getFullYear()
            } else {
                if (year < 100) {
                    year += new Date().getFullYear() - new Date().getFullYear() % 100 + (year <= shortYearCutoff ? 0 : -100)
                }
            }
            if (doy > -1) {
                month = 1;
                day = doy;
                do {
                    var dim = this._getDaysInMonth(year, month - 1);
                    if (day <= dim) {
                        break
                    }
                    month++;
                    day -= dim
                } while (true)
            }
            var date = this._daylightSavingAdjust(new Date(year, month - 1, day));
            if (date.getFullYear() != year || date.getMonth() + 1 != month || date.getDate() != day) {
                throw "Invalid date"
            }
            return date
        },
        ATOM: "yy-mm-dd",
        COOKIE: "D, dd M yy",
        ISO_8601: "yy-mm-dd",
        RFC_822: "D, d M y",
        RFC_850: "DD, dd-M-y",
        RFC_1036: "D, d M y",
        RFC_1123: "D, d M yy",
        RFC_2822: "D, d M yy",
        RSS: "D, d M y",
        TIMESTAMP: "@",
        W3C: "yy-mm-dd",
        formatDate: function(format, date, settings) {
            if (!date) {
                return ""
            }
            var dayNamesShort = (settings ? settings.dayNamesShort : null) || this._defaults.dayNamesShort;
            var dayNames = (settings ? settings.dayNames : null) || this._defaults.dayNames;
            var monthNamesShort = (settings ? settings.monthNamesShort : null) || this._defaults.monthNamesShort;
            var monthNames = (settings ? settings.monthNames : null) || this._defaults.monthNames;
            var lookAhead = function(match) {
                var matches = (iFormat + 1 < format.length && format.charAt(iFormat + 1) == match);
                if (matches) {
                    iFormat++
                }
                return matches
            };
            var formatNumber = function(match, value, len) {
                var num = "" + value;
                if (lookAhead(match)) {
                    while (num.length < len) {
                        num = "0" + num
                    }
                }
                return num
            };
            var formatName = function(match, value, shortNames, longNames) {
                return (lookAhead(match) ? longNames[value] : shortNames[value])
            };
            var output = "";
            var literal = false;
            if (date) {
                for (var iFormat = 0; iFormat < format.length; iFormat++) {
                    if (literal) {
                        if (format.charAt(iFormat) == "'" && !lookAhead("'")) {
                            literal = false
                        } else {
                            output += format.charAt(iFormat)
                        }
                    } else {
                        switch (format.charAt(iFormat)) {
                            case "d":
                                output += formatNumber("d", date.getDate(), 2);
                                break;
                            case "D":
                                output += formatName("D", date.getDay(), dayNamesShort, dayNames);
                                break;
                            case "o":
                                var doy = date.getDate();
                                for (var m = date.getMonth() - 1; m >= 0; m--) {
                                    doy += this._getDaysInMonth(date.getFullYear(), m)
                                }
                                output += formatNumber("o", doy, 3);
                                break;
                            case "m":
                                output += formatNumber("m", date.getMonth() + 1, 2);
                                break;
                            case "M":
                                output += formatName("M", date.getMonth(), monthNamesShort, monthNames);
                                break;
                            case "y":
                                output += (lookAhead("y") ? date.getFullYear() : (date.getYear() % 100 < 10 ? "0" : "") + date.getYear() % 100);
                                break;
                            case "@":
                                output += date.getTime();
                                break;
                            case "'":
                                if (lookAhead("'")) {
                                    output += "'"
                                } else {
                                    literal = true
                                }
                                break;
                            default:
                                output += format.charAt(iFormat)
                        }
                    }
                }
            }
            return output
        },
        _possibleChars: function(format) {
            var chars = "";
            var literal = false;
            for (var iFormat = 0; iFormat < format.length; iFormat++) {
                if (literal) {
                    if (format.charAt(iFormat) == "'" && !lookAhead("'")) {
                        literal = false
                    } else {
                        chars += format.charAt(iFormat)
                    }
                } else {
                    switch (format.charAt(iFormat)) {
                        case "d":
                        case "m":
                        case "y":
                        case "@":
                            chars += "0123456789";
                            break;
                        case "D":
                        case "M":
                            return null;
                        case "'":
                            if (lookAhead("'")) {
                                chars += "'"
                            } else {
                                literal = true
                            }
                            break;
                        default:
                            chars += format.charAt(iFormat)
                    }
                }
            }
            return chars
        },
        _get: function(inst, name) {
            return inst.settings[name] !== undefined ? inst.settings[name] : this._defaults[name]
        },
        _setDateFromField: function(inst) {
            var dateFormat = this._get(inst, "dateFormat");
            var dates = inst.input ? inst.input.val() : null;
            inst.endDay = inst.endMonth = inst.endYear = null;
            var date = defaultDate = this._getDefaultDate(inst);
            var settings = this._getFormatConfig(inst);
            try {
                date = this.parseDate(dateFormat, dates, settings) || defaultDate
            } catch (event) {
                this.log(event);
                date = defaultDate
            }
            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            inst.currentDay = (dates ? date.getDate() : 0);
            inst.currentMonth = (dates ? date.getMonth() : 0);
            inst.currentYear = (dates ? date.getFullYear() : 0);
            this._adjustInstDate(inst)
        },
        _getDefaultDate: function(inst) {
            var date = this._determineDate(this._get(inst, "defaultDate"), new Date());
            var minDate = this._getMinMaxDate(inst, "min", true);
            var maxDate = this._getMinMaxDate(inst, "max");
            date = (minDate && date < minDate ? minDate : date);
            date = (maxDate && date > maxDate ? maxDate : date);
            return date
        },
        _determineDate: function(date, defaultDate) {
            var offsetNumeric = function(offset) {
                var date = new Date();
                date.setDate(date.getDate() + offset);
                return date
            };
            var offsetString = function(offset, getDaysInMonth) {
                var date = new Date();
                var year = date.getFullYear();
                var month = date.getMonth();
                var day = date.getDate();
                var pattern = /([+-]?[0-9]+)\s*(d|D|w|W|m|M|y|Y)?/g;
                var matches = pattern.exec(offset);
                while (matches) {
                    switch (matches[2] || "d") {
                        case "d":
                        case "D":
                            day += parseInt(matches[1], 10);
                            break;
                        case "w":
                        case "W":
                            day += parseInt(matches[1], 10) * 7;
                            break;
                        case "m":
                        case "M":
                            month += parseInt(matches[1], 10);
                            day = Math.min(day, getDaysInMonth(year, month));
                            break;
                        case "y":
                        case "Y":
                            year += parseInt(matches[1], 10);
                            day = Math.min(day, getDaysInMonth(year, month));
                            break
                    }
                    matches = pattern.exec(offset)
                }
                return new Date(year, month, day)
            };
            date = (date == null ? defaultDate : (typeof date == "string" ? offsetString(date, this._getDaysInMonth) : (typeof date == "number" ? (isNaN(date) ? defaultDate : offsetNumeric(date)) : date)));
            date = (date && date.toString() == "Invalid Date" ? defaultDate : date);
            if (date) {
                date.setHours(0);
                date.setMinutes(0);
                date.setSeconds(0);
                date.setMilliseconds(0)
            }
            return this._daylightSavingAdjust(date)
        },
        _daylightSavingAdjust: function(date) {
            if (!date) {
                return null
            }
            date.setHours(date.getHours() > 12 ? date.getHours() + 2 : 0);
            return date
        },
        _setDate: function(inst, date, endDate) {
            var clear = !(date);
            var origMonth = inst.selectedMonth;
            var origYear = inst.selectedYear;
            date = this._determineDate(date, new Date());
            inst.selectedDay = inst.currentDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = inst.currentMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = inst.currentYear = date.getFullYear();
            if (origMonth != inst.selectedMonth || origYear != inst.selectedYear) {
                this._notifyChange(inst)
            }
            this._adjustInstDate(inst);
            if (inst.input) {
                inst.input.val(clear ? "" : this._formatDate(inst))
            }
        },
        _getDate: function(inst) {
            var startDate = (!inst.currentYear || (inst.input && inst.input.val() == "") ? null : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            return startDate
        },
        _generateHTML: function(inst) {
            var today = new Date();
            today = this._daylightSavingAdjust(new Date(today.getFullYear(), today.getMonth(), today.getDate()));
            var isRTL = this._get(inst, "isRTL");
            var showButtonPanel = this._get(inst, "showButtonPanel");
            var hideIfNoPrevNext = this._get(inst, "hideIfNoPrevNext");
            var navigationAsDateFormat = this._get(inst, "navigationAsDateFormat");
            var numMonths = this._getNumberOfMonths(inst);
            var showCurrentAtPos = this._get(inst, "showCurrentAtPos");
            var stepMonths = this._get(inst, "stepMonths");
            var stepBigMonths = this._get(inst, "stepBigMonths");
            var isMultiMonth = (numMonths[0] != 1 || numMonths[1] != 1);
            var currentDate = this._daylightSavingAdjust((!inst.currentDay ? new Date(9999, 9, 9) : new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            var minDate = this._getMinMaxDate(inst, "min", true);
            var maxDate = this._getMinMaxDate(inst, "max");
            var drawMonth = inst.drawMonth - showCurrentAtPos;
            var drawYear = inst.drawYear;
            if (drawMonth < 0) {
                drawMonth += 12;
                drawYear--
            }
            if (maxDate) {
                var maxDraw = this._daylightSavingAdjust(new Date(maxDate.getFullYear(), maxDate.getMonth() - numMonths[1] + 1, maxDate.getDate()));
                maxDraw = (minDate && maxDraw < minDate ? minDate : maxDraw);
                while (this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1)) > maxDraw) {
                    drawMonth--;
                    if (drawMonth < 0) {
                        drawMonth = 11;
                        drawYear--
                    }
                }
            }
            inst.drawMonth = drawMonth;
            inst.drawYear = drawYear;
            var prevText = this._get(inst, "prevText");
            prevText = (!navigationAsDateFormat ? prevText : this.formatDate(prevText, this._daylightSavingAdjust(new Date(drawYear, drawMonth - stepMonths, 1)), this._getFormatConfig(inst)));
            var prev = (this._canAdjustMonth(inst, -1, drawYear, drawMonth) ? '<a class="ui-datepicker-prev ui-corner-all" onclick="DP_jQuery.datepicker._adjustDate(\'#' + inst.id + "', -" + stepMonths + ", 'M');\" title=\"" + prevText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "e" : "w") + '">' + prevText + "</span></a>" : (hideIfNoPrevNext ? "" : '<a class="ui-datepicker-prev ui-corner-all ui-state-disabled" title="' + prevText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "e" : "w") + '">' + prevText + "</span></a>"));
            var nextText = this._get(inst, "nextText");
            nextText = (!navigationAsDateFormat ? nextText : this.formatDate(nextText, this._daylightSavingAdjust(new Date(drawYear, drawMonth + stepMonths, 1)), this._getFormatConfig(inst)));
            var next = (this._canAdjustMonth(inst, +1, drawYear, drawMonth) ? '<a class="ui-datepicker-next ui-corner-all" onclick="DP_jQuery.datepicker._adjustDate(\'#' + inst.id + "', +" + stepMonths + ", 'M');\" title=\"" + nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "w" : "e") + '">' + nextText + "</span></a>" : (hideIfNoPrevNext ? "" : '<a class="ui-datepicker-next ui-corner-all ui-state-disabled" title="' + nextText + '"><span class="ui-icon ui-icon-circle-triangle-' + (isRTL ? "w" : "e") + '">' + nextText + "</span></a>"));
            var currentText = this._get(inst, "currentText");
            var gotoDate = (this._get(inst, "gotoCurrent") && inst.currentDay ? currentDate : today);
            currentText = (!navigationAsDateFormat ? currentText : this.formatDate(currentText, gotoDate, this._getFormatConfig(inst)));
            var controls = (!inst.inline ? '<button type="button" class="ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all" onclick="DP_jQuery.datepicker._hideDatepicker();">' + this._get(inst, "closeText") + "</button>" : "");
            var buttonPanel = (showButtonPanel) ? '<div class="ui-datepicker-buttonpane ui-widget-content">' + (isRTL ? controls : "") + (this._isInRange(inst, gotoDate) ? '<button type="button" class="ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all" onclick="DP_jQuery.datepicker._gotoToday(\'#' + inst.id + "');\">" + currentText + "</button>" : "") + (isRTL ? "" : controls) + "</div>" : "";
            var firstDay = parseInt(this._get(inst, "firstDay"), 10);
            firstDay = (isNaN(firstDay) ? 0 : firstDay);
            var dayNames = this._get(inst, "dayNames");
            var dayNamesShort = this._get(inst, "dayNamesShort");
            var dayNamesMin = this._get(inst, "dayNamesMin");
            var monthNames = this._get(inst, "monthNames");
            var monthNamesShort = this._get(inst, "monthNamesShort");
            var beforeShowDay = this._get(inst, "beforeShowDay");
            var showOtherMonths = this._get(inst, "showOtherMonths");
            var calculateWeek = this._get(inst, "calculateWeek") || this.iso8601Week;
            var endDate = inst.endDay ? this._daylightSavingAdjust(new Date(inst.endYear, inst.endMonth, inst.endDay)) : currentDate;
            var defaultDate = this._getDefaultDate(inst);
            var html = "";
            for (var row = 0; row < numMonths[0]; row++) {
                var group = "";
                for (var col = 0; col < numMonths[1]; col++) {
                    var selectedDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, inst.selectedDay));
                    var cornerClass = " ui-corner-all";
                    var calender = "";
                    if (isMultiMonth) {
                        calender += '<div class="ui-datepicker-group ui-datepicker-group-';
                        switch (col) {
                            case 0:
                                calender += "first";
                                cornerClass = " ui-corner-" + (isRTL ? "right" : "left");
                                break;
                            case numMonths[1] - 1:
                                calender += "last";
                                cornerClass = " ui-corner-" + (isRTL ? "left" : "right");
                                break;
                            default:
                                calender += "middle";
                                cornerClass = "";
                                break
                        }
                        calender += '">'
                    }
                    calender += '<div class="ui-datepicker-header ui-widget-header ui-helper-clearfix' + cornerClass + '">' + (/all|left/.test(cornerClass) && row == 0 ? (isRTL ? next : prev) : "") + (/all|right/.test(cornerClass) && row == 0 ? (isRTL ? prev : next) : "") + this._generateMonthYearHeader(inst, drawMonth, drawYear, minDate, maxDate, selectedDate, row > 0 || col > 0, monthNames, monthNamesShort) + '</div><table class="ui-datepicker-calendar"><thead><tr>';
                    var thead = "";
                    for (var dow = 0; dow < 7; dow++) {
                        var day = (dow + firstDay) % 7;
                        thead += "<th" + ((dow + firstDay + 6) % 7 >= 5 ? ' class="ui-datepicker-week-end"' : "") + '><span title="' + dayNames[day] + '">' + dayNamesMin[day] + "</span></th>"
                    }
                    calender += thead + "</tr></thead><tbody>";
                    var daysInMonth = this._getDaysInMonth(drawYear, drawMonth);
                    if (drawYear == inst.selectedYear && drawMonth == inst.selectedMonth) {
                        inst.selectedDay = Math.min(inst.selectedDay, daysInMonth)
                    }
                    var leadDays = (this._getFirstDayOfMonth(drawYear, drawMonth) - firstDay + 7) % 7;
                    var numRows = (isMultiMonth ? 6 : Math.ceil((leadDays + daysInMonth) / 7));
                    var printDate = this._daylightSavingAdjust(new Date(drawYear, drawMonth, 1 - leadDays));
                    for (var dRow = 0; dRow < numRows; dRow++) {
                        calender += "<tr>";
                        var tbody = "";
                        for (var dow = 0; dow < 7; dow++) {
                            var daySettings = (beforeShowDay ? beforeShowDay.apply((inst.input ? inst.input[0] : null), [printDate]) : [true, ""]);
                            var otherMonth = (printDate.getMonth() != drawMonth);
                            var unselectable = otherMonth || !daySettings[0] || (minDate && printDate < minDate) || (maxDate && printDate > maxDate);
                            tbody += '<td class="' + ((dow + firstDay + 6) % 7 >= 5 ? " ui-datepicker-week-end" : "") + (otherMonth ? " ui-datepicker-other-month" : "") + ((printDate.getTime() == selectedDate.getTime() && drawMonth == inst.selectedMonth && inst._keyEvent) || (defaultDate.getTime() == printDate.getTime() && defaultDate.getTime() == selectedDate.getTime()) ? " " + this._dayOverClass : "") + (unselectable ? " " + this._unselectableClass + " ui-state-disabled" : "") + (otherMonth && !showOtherMonths ? "" : " " + daySettings[1] + (printDate.getTime() >= currentDate.getTime() && printDate.getTime() <= endDate.getTime() ? " " + this._currentClass : "") + (printDate.getTime() == today.getTime() ? " ui-datepicker-today" : "")) + '"' + ((!otherMonth || showOtherMonths) && daySettings[2] ? ' title="' + daySettings[2] + '"' : "") + (unselectable ? "" : " onclick=\"DP_jQuery.datepicker._selectDay('#" + inst.id + "'," + drawMonth + "," + drawYear + ', this);return false;"') + ">" + (otherMonth ? (showOtherMonths ? printDate.getDate() : "&#xa0;") : (unselectable ? '<span class="ui-state-default">' + printDate.getDate() + "</span>" : '<a class="ui-state-default' + (printDate.getTime() == today.getTime() ? " ui-state-highlight" : "") + (printDate.getTime() >= currentDate.getTime() && printDate.getTime() <= endDate.getTime() ? " ui-state-active" : "") + '" href="#">' + printDate.getDate() + "</a>")) + "</td>";
                            printDate.setDate(printDate.getDate() + 1);
                            printDate = this._daylightSavingAdjust(printDate)
                        }
                        calender += tbody + "</tr>"
                    }
                    drawMonth++;
                    if (drawMonth > 11) {
                        drawMonth = 0;
                        drawYear++
                    }
                    calender += "</tbody></table>" + (isMultiMonth ? "</div>" + ((numMonths[0] > 0 && col == numMonths[1] - 1) ? '<div class="ui-datepicker-row-break"></div>' : "") : "");
                    group += calender
                }
                html += group
            }
            html += buttonPanel + ($.browser.msie && parseInt($.browser.version, 10) < 7 && !inst.inline ? '<iframe src="javascript:false;" class="ui-datepicker-cover" frameborder="0"></iframe>' : "");
            inst._keyEvent = false;
            return html
        },
        _generateMonthYearHeader: function(inst, drawMonth, drawYear, minDate, maxDate, selectedDate, secondary, monthNames, monthNamesShort) {
            minDate = (inst.rangeStart && minDate && selectedDate < minDate ? selectedDate : minDate);
            var changeMonth = this._get(inst, "changeMonth");
            var changeYear = this._get(inst, "changeYear");
            var showMonthAfterYear = this._get(inst, "showMonthAfterYear");
            var html = '<div class="ui-datepicker-title">';
            var monthHtml = "";
            if (secondary || !changeMonth) {
                monthHtml += '<span class="ui-datepicker-month">' + monthNames[drawMonth] + "</span> "
            } else {
                var inMinYear = (minDate && minDate.getFullYear() == drawYear);
                var inMaxYear = (maxDate && maxDate.getFullYear() == drawYear);
                monthHtml += '<select class="ui-datepicker-month" onchange="DP_jQuery.datepicker._selectMonthYear(\'#' + inst.id + "', this, 'M');\" onclick=\"DP_jQuery.datepicker._clickMonthYear('#" + inst.id + "');\">";
                for (var month = 0; month < 12; month++) {
                    if ((!inMinYear || month >= minDate.getMonth()) && (!inMaxYear || month <= maxDate.getMonth())) {
                        monthHtml += '<option value="' + month + '"' + (month == drawMonth ? ' selected="selected"' : "") + ">" + monthNamesShort[month] + "</option>"
                    }
                }
                monthHtml += "</select>"
            }
            if (!showMonthAfterYear) {
                html += monthHtml + ((secondary || changeMonth || changeYear) && (!(changeMonth && changeYear)) ? "&#xa0;" : "")
            }
            if (secondary || !changeYear) {
                html += '<span class="ui-datepicker-year">' + drawYear + "</span>"
            } else {
                var years = this._get(inst, "yearRange").split(":");
                var year = 0;
                var endYear = 0;
                if (years.length != 2) {
                    year = drawYear - 10;
                    endYear = drawYear + 10
                } else {
                    if (years[0].charAt(0) == "+" || years[0].charAt(0) == "-") {
                        year = drawYear + parseInt(years[0], 10);
                        endYear = drawYear + parseInt(years[1], 10)
                    } else {
                        year = parseInt(years[0], 10);
                        endYear = parseInt(years[1], 10)
                    }
                }
                year = (minDate ? Math.max(year, minDate.getFullYear()) : year);
                endYear = (maxDate ? Math.min(endYear, maxDate.getFullYear()) : endYear);
                html += '<select class="ui-datepicker-year" onchange="DP_jQuery.datepicker._selectMonthYear(\'#' + inst.id + "', this, 'Y');\" onclick=\"DP_jQuery.datepicker._clickMonthYear('#" + inst.id + "');\">";
                for (; year <= endYear; year++) {
                    html += '<option value="' + year + '"' + (year == drawYear ? ' selected="selected"' : "") + ">" + year + "</option>"
                }
                html += "</select>"
            }
            if (showMonthAfterYear) {
                html += (secondary || changeMonth || changeYear ? "&#xa0;" : "") + monthHtml
            }
            html += "</div>";
            return html
        },
        _adjustInstDate: function(inst, offset, period) {
            var year = inst.drawYear + (period == "Y" ? offset : 0);
            var month = inst.drawMonth + (period == "M" ? offset : 0);
            var day = Math.min(inst.selectedDay, this._getDaysInMonth(year, month)) + (period == "D" ? offset : 0);
            var date = this._daylightSavingAdjust(new Date(year, month, day));
            var minDate = this._getMinMaxDate(inst, "min", true);
            var maxDate = this._getMinMaxDate(inst, "max");
            date = (minDate && date < minDate ? minDate : date);
            date = (maxDate && date > maxDate ? maxDate : date);
            inst.selectedDay = date.getDate();
            inst.drawMonth = inst.selectedMonth = date.getMonth();
            inst.drawYear = inst.selectedYear = date.getFullYear();
            if (period == "M" || period == "Y") {
                this._notifyChange(inst)
            }
        },
        _notifyChange: function(inst) {
            var onChange = this._get(inst, "onChangeMonthYear");
            if (onChange) {
                onChange.apply((inst.input ? inst.input[0] : null), [inst.selectedYear, inst.selectedMonth + 1, inst])
            }
        },
        _getNumberOfMonths: function(inst) {
            var numMonths = this._get(inst, "numberOfMonths");
            return (numMonths == null ? [1, 1] : (typeof numMonths == "number" ? [1, numMonths] : numMonths))
        },
        _getMinMaxDate: function(inst, minMax, checkRange) {
            var date = this._determineDate(this._get(inst, minMax + "Date"), null);
            return (!checkRange || !inst.rangeStart ? date : (!date || inst.rangeStart > date ? inst.rangeStart : date))
        },
        _getDaysInMonth: function(year, month) {
            return 32 - new Date(year, month, 32).getDate()
        },
        _getFirstDayOfMonth: function(year, month) {
            return new Date(year, month, 1).getDay()
        },
        _canAdjustMonth: function(inst, offset, curYear, curMonth) {
            var numMonths = this._getNumberOfMonths(inst);
            var date = this._daylightSavingAdjust(new Date(curYear, curMonth + (offset < 0 ? offset : numMonths[1]), 1));
            if (offset < 0) {
                date.setDate(this._getDaysInMonth(date.getFullYear(), date.getMonth()))
            }
            return this._isInRange(inst, date)
        },
        _isInRange: function(inst, date) {
            var newMinDate = (!inst.rangeStart ? null : this._daylightSavingAdjust(new Date(inst.selectedYear, inst.selectedMonth, inst.selectedDay)));
            newMinDate = (newMinDate && inst.rangeStart < newMinDate ? inst.rangeStart : newMinDate);
            var minDate = newMinDate || this._getMinMaxDate(inst, "min");
            var maxDate = this._getMinMaxDate(inst, "max");
            return ((!minDate || date >= minDate) && (!maxDate || date <= maxDate))
        },
        _getFormatConfig: function(inst) {
            var shortYearCutoff = this._get(inst, "shortYearCutoff");
            shortYearCutoff = (typeof shortYearCutoff != "string" ? shortYearCutoff : new Date().getFullYear() % 100 + parseInt(shortYearCutoff, 10));
            return {
                shortYearCutoff: shortYearCutoff,
                dayNamesShort: this._get(inst, "dayNamesShort"),
                dayNames: this._get(inst, "dayNames"),
                monthNamesShort: this._get(inst, "monthNamesShort"),
                monthNames: this._get(inst, "monthNames")
            }
        },
        _formatDate: function(inst, day, month, year) {
            if (!day) {
                inst.currentDay = inst.selectedDay;
                inst.currentMonth = inst.selectedMonth;
                inst.currentYear = inst.selectedYear
            }
            var date = (day ? (typeof day == "object" ? day : this._daylightSavingAdjust(new Date(year, month, day))) : this._daylightSavingAdjust(new Date(inst.currentYear, inst.currentMonth, inst.currentDay)));
            return this.formatDate(this._get(inst, "dateFormat"), date, this._getFormatConfig(inst))
        }
    });

    function extendRemove(target, props) {
        $.extend(target, props);
        for (var name in props) {
            if (props[name] == null || props[name] == undefined) {
                target[name] = props[name]
            }
        }
        return target
    }

    function isArray(a) {
        return (a && (($.browser.safari && typeof a == "object" && a.length) || (a.constructor && a.constructor.toString().match(/\Array\(\)/))))
    }
    $.fn.datepicker = function(options) {
        if (!$.datepicker.initialized) {
            $(document).mousedown($.datepicker._checkExternalClick).find("body").append($.datepicker.dpDiv);
            $.datepicker.initialized = true
        }
        var otherArgs = Array.prototype.slice.call(arguments, 1);
        if (typeof options == "string" && (options == "isDisabled" || options == "getDate")) {
            return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this[0]].concat(otherArgs))
        }
        if (options == "option" && arguments.length == 2 && typeof arguments[1] == "string") {
            return $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this[0]].concat(otherArgs))
        }
        return this.each(function() {
            typeof options == "string" ? $.datepicker["_" + options + "Datepicker"].apply($.datepicker, [this].concat(otherArgs)) : $.datepicker._attachDatepicker(this, options)
        })
    };
    $.datepicker = new Datepicker();
    $.datepicker.initialized = false;
    $.datepicker.uuid = new Date().getTime();
    $.datepicker.version = "1.7.3";
    window.DP_jQuery = $
})(jQuery);
(function(b) {
    b.widget("ui.slider", b.extend({}, b.ui.mouse, {
        _init: function() {
            var d = this,
                e = this.options;
            this._keySliding = false;
            this._handleIndex = null;
            this._detectOrientation();
            this._mouseInit();
            this.element.addClass("ui-slider ui-slider-" + this.orientation + " ui-widget ui-widget-content ui-corner-all");
            this.range = b([]);
            if (e.range) {
                if (e.range === true) {
                    this.range = b("<div></div>");
                    if (!e.values) {
                        e.values = [this._valueMin(), this._valueMin()]
                    }
                    if (e.values.length && e.values.length != 2) {
                        e.values = [e.values[0], e.values[0]]
                    }
                } else {
                    this.range = b("<div></div>")
                }
                this.range.appendTo(this.element).addClass("ui-slider-range");
                if (e.range == "min" || e.range == "max") {
                    this.range.addClass("ui-slider-range-" + e.range)
                }
                this.range.addClass("ui-widget-header")
            }
            if (b(".ui-slider-handle", this.element).length == 0) {
                b('<a href="#"></a>').appendTo(this.element).addClass("ui-slider-handle")
            }
            if (e.values && e.values.length) {
                while (b(".ui-slider-handle", this.element).length < e.values.length) {
                    b('<a href="#"></a>').appendTo(this.element).addClass("ui-slider-handle")
                }
            }
            this.handles = b(".ui-slider-handle", this.element).addClass("ui-state-default ui-corner-all");
            this.handle = this.handles.eq(0);
            this.handles.add(this.range).filter("a").click(function(c) {
                c.preventDefault()
            }).hover(function() {
                if (!e.disabled) {
                    b(this).addClass("ui-state-hover")
                }
            }, function() {
                b(this).removeClass("ui-state-hover")
            }).focus(function() {
                if (!e.disabled) {
                    b(".ui-slider .ui-state-focus").removeClass("ui-state-focus");
                    b(this).addClass("ui-state-focus")
                } else {
                    b(this).blur()
                }
            }).blur(function() {
                b(this).removeClass("ui-state-focus")
            });
            this.handles.each(function(c) {
                b(this).data("index.ui-slider-handle", c)
            });
            this.handles.keydown(function(c) {
                var o = true;
                var p = b(this).data("index.ui-slider-handle");
                if (d.options.disabled) {
                    return
                }
                switch (c.keyCode) {
                    case b.ui.keyCode.HOME:
                    case b.ui.keyCode.END:
                    case b.ui.keyCode.UP:
                    case b.ui.keyCode.RIGHT:
                    case b.ui.keyCode.DOWN:
                    case b.ui.keyCode.LEFT:
                        o = false;
                        if (!d._keySliding) {
                            d._keySliding = true;
                            b(this).addClass("ui-state-active");
                            d._start(c, p)
                        }
                        break
                }
                var n, q, m = d._step();
                if (d.options.values && d.options.values.length) {
                    n = q = d.values(p)
                } else {
                    n = q = d.value()
                }
                switch (c.keyCode) {
                    case b.ui.keyCode.HOME:
                        q = d._valueMin();
                        break;
                    case b.ui.keyCode.END:
                        q = d._valueMax();
                        break;
                    case b.ui.keyCode.UP:
                    case b.ui.keyCode.RIGHT:
                        if (n == d._valueMax()) {
                            return
                        }
                        q = n + m;
                        break;
                    case b.ui.keyCode.DOWN:
                    case b.ui.keyCode.LEFT:
                        if (n == d._valueMin()) {
                            return
                        }
                        q = n - m;
                        break
                }
                d._slide(c, p, q);
                return o
            }).keyup(function(c) {
                var f = b(this).data("index.ui-slider-handle");
                if (d._keySliding) {
                    d._stop(c, f);
                    d._change(c, f);
                    d._keySliding = false;
                    b(this).removeClass("ui-state-active")
                }
            });
            this._refreshValue()
        },
        destroy: function() {
            this.handles.remove();
            this.range.remove();
            this.element.removeClass("ui-slider ui-slider-horizontal ui-slider-vertical ui-slider-disabled ui-widget ui-widget-content ui-corner-all").removeData("slider").unbind(".slider");
            this._mouseDestroy()
        },
        _mouseCapture: function(v) {
            var u = this.options;
            if (u.disabled) {
                return false
            }
            this.elementSize = {
                width: this.element.outerWidth(),
                height: this.element.outerHeight()
            };
            this.elementOffset = this.element.offset();
            var p = {
                x: v.pageX,
                y: v.pageY
            };
            var n = this._normValueFromMouse(p);
            var w = this._valueMax() - this._valueMin() + 1,
                r;
            var m = this,
                o;
            this.handles.each(function(d) {
                var c = Math.abs(n - m.values(d));
                if (w > c) {
                    w = c;
                    r = b(this);
                    o = d
                }
            });
            if (u.range == true && this.values(1) == u.min) {
                r = b(this.handles[++o])
            }
            this._start(v, o);
            m._handleIndex = o;
            r.addClass("ui-state-active").focus();
            var q = r.offset();
            var z = !b(v.target).parents().andSelf().is(".ui-slider-handle");
            this._clickOffset = z ? {
                left: 0,
                top: 0
            } : {
                left: v.pageX - q.left - (r.width() / 2),
                top: v.pageY - q.top - (r.height() / 2) - (parseInt(r.css("borderTopWidth"), 10) || 0) - (parseInt(r.css("borderBottomWidth"), 10) || 0) + (parseInt(r.css("marginTop"), 10) || 0)
            };
            n = this._normValueFromMouse(p);
            this._slide(v, o, n);
            return true
        },
        _mouseStart: function(c) {
            return true
        },
        _mouseDrag: function(f) {
            var e = {
                x: f.pageX,
                y: f.pageY
            };
            var g = this._normValueFromMouse(e);
            this._slide(f, this._handleIndex, g);
            return false
        },
        _mouseStop: function(c) {
            this.handles.removeClass("ui-state-active");
            this._stop(c, this._handleIndex);
            this._change(c, this._handleIndex);
            this._handleIndex = null;
            this._clickOffset = null;
            return false
        },
        _detectOrientation: function() {
            this.orientation = this.options.orientation == "vertical" ? "vertical" : "horizontal"
        },
        _normValueFromMouse: function(u) {
            var v, o;
            if ("horizontal" == this.orientation) {
                v = this.elementSize.width;
                o = u.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)
            } else {
                v = this.elementSize.height;
                o = u.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)
            }
            var q = (o / v);
            if (q > 1) {
                q = 1
            }
            if (q < 0) {
                q = 0
            }
            if ("vertical" == this.orientation) {
                q = 1 - q
            }
            var r = this._valueMax() - this._valueMin(),
                n = q * r,
                m = n % this.options.step,
                p = this._valueMin() + n - m;
            if (m > (this.options.step / 2)) {
                p += this.options.step
            }
            return parseFloat(p.toFixed(5))
        },
        _start: function(f, g) {
            var e = {
                handle: this.handles[g],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                e.value = this.values(g);
                e.values = this.values()
            }
            this._trigger("start", f, e)
        },
        _slide: function(p, q, r) {
            var o = this.handles[q];
            if (this.options.values && this.options.values.length) {
                var m = this.values(q ? 0 : 1);
                if ((this.options.values.length == 2 && this.options.range === true) && ((q == 0 && r > m) || (q == 1 && r < m))) {
                    r = m
                }
                if (r != this.values(q)) {
                    var u = this.values();
                    u[q] = r;
                    var n = this._trigger("slide", p, {
                        handle: this.handles[q],
                        value: r,
                        values: u
                    });
                    var m = this.values(q ? 0 : 1);
                    if (n !== false) {
                        this.values(q, r, (p.type == "mousedown" && this.options.animate), true)
                    }
                }
            } else {
                if (r != this.value()) {
                    var n = this._trigger("slide", p, {
                        handle: this.handles[q],
                        value: r
                    });
                    if (n !== false) {
                        this._setData("value", r, (p.type == "mousedown" && this.options.animate))
                    }
                }
            }
        },
        _stop: function(f, g) {
            var e = {
                handle: this.handles[g],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                e.value = this.values(g);
                e.values = this.values()
            }
            this._trigger("stop", f, e)
        },
        _change: function(f, g) {
            var e = {
                handle: this.handles[g],
                value: this.value()
            };
            if (this.options.values && this.options.values.length) {
                e.value = this.values(g);
                e.values = this.values()
            }
            this._trigger("change", f, e)
        },
        value: function(c) {
            if (arguments.length) {
                this._setData("value", c);
                this._change(null, 0)
            }
            return this._value()
        },
        values: function(f, g, m, h) {
            if (arguments.length > 1) {
                this.options.values[f] = g;
                this._refreshValue(m);
                if (!h) {
                    this._change(null, f)
                }
            }
            if (arguments.length) {
                if (this.options.values && this.options.values.length) {
                    return this._values(f)
                } else {
                    return this.value()
                }
            } else {
                return this._values()
            }
        },
        _setData: function(e, f, g) {
            b.widget.prototype._setData.apply(this, arguments);
            switch (e) {
                case "disabled":
                    if (f) {
                        this.handles.filter(".ui-state-focus").blur();
                        this.handles.removeClass("ui-state-hover");
                        this.handles.attr("disabled", "disabled")
                    } else {
                        this.handles.removeAttr("disabled")
                    }
                    case "orientation":
                        this._detectOrientation();
                        this.element.removeClass("ui-slider-horizontal ui-slider-vertical").addClass("ui-slider-" + this.orientation);
                        this._refreshValue(g);
                        break;
                    case "value":
                        this._refreshValue(g);
                        break
            }
        },
        _step: function() {
            var c = this.options.step;
            return c
        },
        _value: function() {
            var c = this.options.value;
            if (c < this._valueMin()) {
                c = this._valueMin()
            }
            if (c > this._valueMax()) {
                c = this._valueMax()
            }
            return c
        },
        _values: function(d) {
            if (arguments.length) {
                var e = this.options.values[d];
                if (e < this._valueMin()) {
                    e = this._valueMin()
                }
                if (e > this._valueMax()) {
                    e = this._valueMax()
                }
                return e
            } else {
                return this.options.values
            }
        },
        _valueMin: function() {
            var c = this.options.min;
            return c
        },
        _valueMax: function() {
            var c = this.options.max;
            return c
        },
        _refreshValue: function(z) {
            var u = this.options.range,
                w = this.options,
                m = this;
            if (this.options.values && this.options.values.length) {
                var p, q;
                this.handles.each(function(d, f) {
                    var e = (m.values(d) - m._valueMin()) / (m._valueMax() - m._valueMin()) * 100;
                    var c = {};
                    c[m.orientation == "horizontal" ? "left" : "bottom"] = e + "%";
                    b(this).stop(1, 1)[z ? "animate" : "css"](c, w.animate);
                    if (m.options.range === true) {
                        if (m.orientation == "horizontal") {
                            (d == 0) && m.range.stop(1, 1)[z ? "animate" : "css"]({
                                left: e + "%"
                            }, w.animate);
                            (d == 1) && m.range[z ? "animate" : "css"]({
                                width: (e - lastValPercent) + "%"
                            }, {
                                queue: false,
                                duration: w.animate
                            })
                        } else {
                            (d == 0) && m.range.stop(1, 1)[z ? "animate" : "css"]({
                                bottom: (e) + "%"
                            }, w.animate);
                            (d == 1) && m.range[z ? "animate" : "css"]({
                                height: (e - lastValPercent) + "%"
                            }, {
                                queue: false,
                                duration: w.animate
                            })
                        }
                    }
                    lastValPercent = e
                })
            } else {
                var o = this.value(),
                    r = this._valueMin(),
                    n = this._valueMax(),
                    v = n != r ? (o - r) / (n - r) * 100 : 0;
                var C = {};
                C[m.orientation == "horizontal" ? "left" : "bottom"] = v + "%";
                this.handle.stop(1, 1)[z ? "animate" : "css"](C, w.animate);
                (u == "min") && (this.orientation == "horizontal") && this.range.stop(1, 1)[z ? "animate" : "css"]({
                    width: v + "%"
                }, w.animate);
                (u == "max") && (this.orientation == "horizontal") && this.range[z ? "animate" : "css"]({
                    width: (100 - v) + "%"
                }, {
                    queue: false,
                    duration: w.animate
                });
                (u == "min") && (this.orientation == "vertical") && this.range.stop(1, 1)[z ? "animate" : "css"]({
                    height: v + "%"
                }, w.animate);
                (u == "max") && (this.orientation == "vertical") && this.range[z ? "animate" : "css"]({
                    height: (100 - v) + "%"
                }, {
                    queue: false,
                    duration: w.animate
                })
            }
        }
    }));
    b.extend(b.ui.slider, {
        getter: "value values",
        version: "1.7.3",
        eventPrefix: "slide",
        defaults: {
            animate: false,
            delay: 0,
            distance: 0,
            max: 100,
            min: 0,
            orientation: "horizontal",
            range: false,
            step: 1,
            value: 0,
            values: null
        }
    })
})(jQuery);
if (jQuery) {
    (function() {
        $.extend($.fn, {
            contextMenu: function(b, c) {
                if (b.menu == undefined) {
                    return false
                }
                if (b.inSpeed == undefined) {
                    b.inSpeed = 150
                }
                if (b.outSpeed == undefined) {
                    b.outSpeed = 75
                }
                if (b.inSpeed == 0) {
                    b.inSpeed = -1
                }
                if (b.outSpeed == 0) {
                    b.outSpeed = -1
                }
                $(this).each(function() {
                    var d = $(this);
                    var e = $(d).offset();
                    $("#" + b.menu).addClass("contextMenu");
                    $(this).mousedown(function(g) {
                        var f = g;
                        if (g.button != 2) {
                            return
                        }
                        f.stopPropagation();
                        $(this).mouseup(function(n) {
                            n.stopPropagation();
                            var m = $(this);
                            $(this).unbind("mouseup");
                            if (f.button == 2) {
                                $(".contextMenu").hide();
                                var p = $("#" + b.menu);
                                if ($(d).hasClass("disabled")) {
                                    return false
                                }
                                var o = {},
                                    h, q;
                                if (self.innerHeight) {
                                    o.pageYOffset = self.pageYOffset;
                                    o.pageXOffset = self.pageXOffset;
                                    o.innerHeight = self.innerHeight;
                                    o.innerWidth = self.innerWidth
                                } else {
                                    if (document.documentElement && document.documentElement.clientHeight) {
                                        o.pageYOffset = document.documentElement.scrollTop;
                                        o.pageXOffset = document.documentElement.scrollLeft;
                                        o.innerHeight = document.documentElement.clientHeight;
                                        o.innerWidth = document.documentElement.clientWidth
                                    } else {
                                        if (document.body) {
                                            o.pageYOffset = document.body.scrollTop;
                                            o.pageXOffset = document.body.scrollLeft;
                                            o.innerHeight = document.body.clientHeight;
                                            o.innerWidth = document.body.clientWidth
                                        }
                                    }
                                }(n.pageX) ? h = n.pageX: h = n.clientX + o.scrollLeft;
                                (n.pageY) ? q = n.pageY: q = n.clientY + o.scrollTop;
                                $(document).unbind("click");
                                $(p).css({
                                    top: q,
                                    left: h
                                }).fadeIn(b.inSpeed);
                                $(p).find("A").mouseover(function() {
                                    $(p).find("LI.hover").removeClass("hover");
                                    $(this).parent().addClass("hover")
                                }).mouseout(function() {
                                    $(p).find("LI.hover").removeClass("hover")
                                });
                                $(document).keypress(function(r) {
                                    switch (r.keyCode) {
                                        case 38:
                                            if ($(p).find("LI.hover").size() == 0) {
                                                $(p).find("LI:last").addClass("hover")
                                            } else {
                                                $(p).find("LI.hover").removeClass("hover").prevAll("LI:not(.disabled)").eq(0).addClass("hover");
                                                if ($(p).find("LI.hover").size() == 0) {
                                                    $(p).find("LI:last").addClass("hover")
                                                }
                                            }
                                            break;
                                        case 40:
                                            if ($(p).find("LI.hover").size() == 0) {
                                                $(p).find("LI:first").addClass("hover")
                                            } else {
                                                $(p).find("LI.hover").removeClass("hover").nextAll("LI:not(.disabled)").eq(0).addClass("hover");
                                                if ($(p).find("LI.hover").size() == 0) {
                                                    $(p).find("LI:first").addClass("hover")
                                                }
                                            }
                                            break;
                                        case 13:
                                            $(p).find("LI.hover A").trigger("click");
                                            break;
                                        case 27:
                                            $(document).trigger("click");
                                            break
                                    }
                                });
                                $("#" + b.menu).find("A").unbind("click");
                                $("#" + b.menu).find("LI:not(.disabled) A").click(function() {
                                    $(document).unbind("click").unbind("keypress");
                                    $(".contextMenu").hide();
                                    if (c) {
                                        c($(this).attr("href").substr(1), $(m), {
                                            x: h - e.left,
                                            y: q - e.top,
                                            docX: h,
                                            docY: q
                                        })
                                    }
                                    return false
                                });
                                setTimeout(function() {
                                    $(document).click(function() {
                                        $(document).unbind("click").unbind("keypress");
                                        $(p).fadeOut(b.outSpeed);
                                        return false
                                    })
                                }, 0)
                            } else {
                                return
                            }
                        })
                    });
                    if ($.browser.mozilla) {
                        $("#" + b.menu).each(function() {
                            $(this).css({
                                MozUserSelect: "none"
                            })
                        })
                    } else {
                        if ($.browser.msie) {
                            $("#" + b.menu).each(function() {
                                $(this).bind("selectstart.disableTextSelect", function() {
                                    return false
                                })
                            })
                        } else {
                            $("#" + b.menu).each(function() {
                                $(this).bind("mousedown.disableTextSelect", function() {
                                    return false
                                })
                            })
                        }
                    }
                    $(d).add($("UL.contextMenu")).bind("contextmenu", function() {
                        return false
                    })
                });
                return $(this)
            },
            disableContextMenuItems: function(b) {
                if (b == undefined) {
                    $(this).find("LI").addClass("disabled");
                    return ($(this))
                }
                $(this).each(function() {
                    if (b != undefined) {
                        var e = b.split(",");
                        for (var c = 0; c < e.length; c++) {
                            $(this).find('A[href="' + e[c] + '"]').parent().addClass("disabled")
                        }
                    }
                });
                return ($(this))
            },
            enableContextMenuItems: function(b) {
                if (b == undefined) {
                    $(this).find("LI.disabled").removeClass("disabled");
                    return ($(this))
                }
                $(this).each(function() {
                    if (b != undefined) {
                        var e = b.split(",");
                        for (var c = 0; c < e.length; c++) {
                            $(this).find('A[href="' + e[c] + '"]').parent().removeClass("disabled")
                        }
                    }
                });
                return ($(this))
            },
            disableContextMenu: function() {
                $(this).each(function() {
                    $(this).addClass("disabled")
                });
                return ($(this))
            },
            enableContextMenu: function() {
                $(this).each(function() {
                    $(this).removeClass("disabled")
                });
                return ($(this))
            },
            destroyContextMenu: function() {
                $(this).each(function() {
                    $(this).unbind("mousedown").unbind("mouseup")
                });
                return ($(this))
            }
        })
    })(jQuery)
}(function($) {
    $.extend($.ui, {
        timepicker: {
            version: "0.9.6"
        }
    });

    function Timepicker() {
        this.regional = [];
        this.regional[""] = {
            currentText: "Now",
            closeText: "Done",
            ampm: false,
            timeFormat: "hh:mm tt",
            timeSuffix: "",
            timeOnlyTitle: "Choose Time",
            timeText: "Time",
            hourText: "Hour",
            minuteText: "Minute",
            secondText: "Second",
            timezoneText: "Time Zone"
        };
        this._defaults = {
            showButtonPanel: true,
            timeOnly: false,
            showHour: true,
            showMinute: true,
            showSecond: false,
            showTimezone: false,
            showTime: true,
            stepHour: 0.05,
            stepMinute: 0.05,
            stepSecond: 0.05,
            hour: 0,
            minute: 0,
            second: 0,
            timezone: "+0000",
            hourMin: 0,
            minuteMin: 0,
            secondMin: 0,
            hourMax: 23,
            minuteMax: 59,
            secondMax: 59,
            minDateTime: null,
            maxDateTime: null,
            hourGrid: 0,
            minuteGrid: 0,
            secondGrid: 0,
            alwaysSetTime: true,
            separator: " ",
            altFieldTimeOnly: true,
            showTimepicker: true,
            timezoneList: ["-1100", "-1000", "-0900", "-0800", "-0700", "-0600", "-0500", "-0400", "-0300", "-0200", "-0100", "+0000", "+0100", "+0200", "+0300", "+0400", "+0500", "+0600", "+0700", "+0800", "+0900", "+1000", "+1100", "+1200"]
        };
        $.extend(this._defaults, this.regional[""])
    }
    $.extend(Timepicker.prototype, {
        $input: null,
        $altInput: null,
        $timeObj: null,
        inst: null,
        hour_slider: null,
        minute_slider: null,
        second_slider: null,
        timezone_select: null,
        hour: 0,
        minute: 0,
        second: 0,
        timezone: "+0000",
        hourMinOriginal: null,
        minuteMinOriginal: null,
        secondMinOriginal: null,
        hourMaxOriginal: null,
        minuteMaxOriginal: null,
        secondMaxOriginal: null,
        ampm: "",
        formattedDate: "",
        formattedTime: "",
        formattedDateTime: "",
        timezoneList: ["-1100", "-1000", "-0900", "-0800", "-0700", "-0600", "-0500", "-0400", "-0300", "-0200", "-0100", "+0000", "+0100", "+0200", "+0300", "+0400", "+0500", "+0600", "+0700", "+0800", "+0900", "+1000", "+1100", "+1200"],
        setDefaults: function(settings) {
            extendRemove(this._defaults, settings || {});
            return this
        },
        _newInst: function($input, o) {
            var tp_inst = new Timepicker(),
                inlineSettings = {};
            for (var attrName in this._defaults) {
                var attrValue = $input.attr("time:" + attrName);
                if (attrValue) {
                    try {
                        inlineSettings[attrName] = eval(attrValue)
                    } catch (err) {
                        inlineSettings[attrName] = attrValue
                    }
                }
            }
            tp_inst._defaults = $.extend({}, this._defaults, inlineSettings, o, {
                beforeShow: function(input, dp_inst) {
                    if ($.isFunction(o.beforeShow)) {
                        o.beforeShow(input, dp_inst, tp_inst)
                    }
                },
                onChangeMonthYear: function(year, month, dp_inst) {
                    tp_inst._updateDateTime(dp_inst);
                    if ($.isFunction(o.onChangeMonthYear)) {
                        o.onChangeMonthYear.call($input[0], year, month, dp_inst, tp_inst)
                    }
                },
                onClose: function(dateText, dp_inst) {
                    if (tp_inst.timeDefined === true && $input.val() != "") {
                        tp_inst._updateDateTime(dp_inst)
                    }
                    if ($.isFunction(o.onClose)) {
                        o.onClose.call($input[0], dateText, dp_inst, tp_inst)
                    }
                },
                timepicker: tp_inst
            });
            tp_inst.hour = tp_inst._defaults.hour;
            tp_inst.minute = tp_inst._defaults.minute;
            tp_inst.second = tp_inst._defaults.second;
            tp_inst.ampm = "";
            tp_inst.$input = $input;
            if (o.altField) {
                tp_inst.$altInput = $(o.altField).css({
                    cursor: "pointer"
                }).focus(function() {
                    $input.trigger("focus")
                })
            }
            if (tp_inst._defaults.minDate !== undefined && tp_inst._defaults.minDate instanceof Date) {
                tp_inst._defaults.minDateTime = new Date(tp_inst._defaults.minDate.getTime())
            }
            if (tp_inst._defaults.minDateTime !== undefined && tp_inst._defaults.minDateTime instanceof Date) {
                tp_inst._defaults.minDate = new Date(tp_inst._defaults.minDateTime.getTime())
            }
            if (tp_inst._defaults.maxDate !== undefined && tp_inst._defaults.maxDate instanceof Date) {
                tp_inst._defaults.maxDateTime = new Date(tp_inst._defaults.maxDate.getTime())
            }
            if (tp_inst._defaults.maxDateTime !== undefined && tp_inst._defaults.maxDateTime instanceof Date) {
                tp_inst._defaults.maxDate = new Date(tp_inst._defaults.maxDateTime.getTime())
            }
            return tp_inst
        },
        _addTimePicker: function(dp_inst) {
            var currDT = (this.$altInput && this._defaults.altFieldTimeOnly) ? this.$input.val() + " " + this.$altInput.val() : this.$input.val();
            this.timeDefined = this._parseTime(currDT);
            this._limitMinMaxDateTime(dp_inst, false);
            this._injectTimePicker()
        },
        _parseTime: function(timeString, withDate) {
            var regstr = this._defaults.timeFormat.toString().replace(/h{1,2}/ig, "(\\d?\\d)").replace(/m{1,2}/ig, "(\\d?\\d)").replace(/s{1,2}/ig, "(\\d?\\d)").replace(/t{1,2}/ig, "(am|pm|a|p)?").replace(/z{1}/ig, "((\\+|-)\\d\\d\\d\\d)?").replace(/\s/g, "\\s?") + this._defaults.timeSuffix + "$",
                order = this._getFormatPositions(),
                treg;
            if (!this.inst) {
                this.inst = $.datepicker._getInst(this.$input[0])
            }
            if (withDate || !this._defaults.timeOnly) {
                var dp_dateFormat = $.datepicker._get(this.inst, "dateFormat");
                var specials = new RegExp("[.*+?|()\\[\\]{}\\\\]", "g");
                regstr = ".{" + dp_dateFormat.length + ",}" + this._defaults.separator.replace(specials, "\\$&") + regstr
            }
            treg = timeString.match(new RegExp(regstr, "i"));
            if (treg) {
                if (order.t !== -1) {
                    this.ampm = ((treg[order.t] === undefined || treg[order.t].length === 0) ? "" : (treg[order.t].charAt(0).toUpperCase() == "A") ? "AM" : "PM").toUpperCase()
                }
                if (order.h !== -1) {
                    if (this.ampm == "AM" && treg[order.h] == "12") {
                        this.hour = 0
                    } else {
                        if (this.ampm == "PM" && treg[order.h] != "12") {
                            this.hour = (parseFloat(treg[order.h]) + 12).toFixed(0)
                        } else {
                            this.hour = Number(treg[order.h])
                        }
                    }
                }
                if (order.m !== -1) {
                    this.minute = Number(treg[order.m])
                }
                if (order.s !== -1) {
                    this.second = Number(treg[order.s])
                }
                if (order.z !== -1) {
                    this.timezone = treg[order.z]
                }
                return true
            }
            return false
        },
        _getFormatPositions: function() {
            var finds = this._defaults.timeFormat.toLowerCase().match(/(h{1,2}|m{1,2}|s{1,2}|t{1,2}|z)/g),
                orders = {
                    h: -1,
                    m: -1,
                    s: -1,
                    t: -1,
                    z: -1
                };
            if (finds) {
                for (var i = 0; i < finds.length; i++) {
                    if (orders[finds[i].toString().charAt(0)] == -1) {
                        orders[finds[i].toString().charAt(0)] = i + 1
                    }
                }
            }
            return orders
        },
        _injectTimePicker: function() {
            var $dp = this.inst.dpDiv,
                o = this._defaults,
                tp_inst = this,
                hourMax = (o.hourMax - (o.hourMax % o.stepHour)).toFixed(0),
                minMax = (o.minuteMax - (o.minuteMax % o.stepMinute)).toFixed(0),
                secMax = (o.secondMax - (o.secondMax % o.stepSecond)).toFixed(0),
                dp_id = this.inst.id.toString().replace(/([^A-Za-z0-9_])/g, "");
            if ($dp.find("div#ui-timepicker-div-" + dp_id).length === 0 && o.showTimepicker) {
                var noDisplay = ' style="display:none;"',
                    html = '<div class="ui-timepicker-div" id="ui-timepicker-div-' + dp_id + '"><dl><dt class="ui_tpicker_time_label" id="ui_tpicker_time_label_' + dp_id + '"' + ((o.showTime) ? "" : noDisplay) + ">" + o.timeText + '</dt><dd class="ui_tpicker_time" id="ui_tpicker_time_' + dp_id + '"' + ((o.showTime) ? "" : noDisplay) + '></dd><dt class="ui_tpicker_hour_label" id="ui_tpicker_hour_label_' + dp_id + '"' + ((o.showHour) ? "" : noDisplay) + ">" + o.hourText + "</dt>",
                    hourGridSize = 0,
                    minuteGridSize = 0,
                    secondGridSize = 0,
                    size;
                if (o.showHour && o.hourGrid > 0) {
                    html += '<dd class="ui_tpicker_hour"><div id="ui_tpicker_hour_' + dp_id + '"' + ((o.showHour) ? "" : noDisplay) + '></div><div style="padding-left: 1px"><table class="ui-tpicker-grid-label"><tr>';
                    for (var h = o.hourMin; h <= hourMax; h += o.hourGrid) {
                        hourGridSize++;
                        var tmph = (o.ampm && h > 12) ? h - 12 : h;
                        if (tmph < 10) {
                            tmph = "0" + tmph
                        }
                        if (o.ampm) {
                            if (h == 0) {
                                tmph = 12 + "a"
                            } else {
                                if (h < 12) {
                                    tmph += "a"
                                } else {
                                    tmph += "p"
                                }
                            }
                        }
                        html += "<td>" + tmph + "</td>"
                    }
                    html += "</tr></table></div></dd>"
                } else {
                    html += '<dd class="ui_tpicker_hour" id="ui_tpicker_hour_' + dp_id + '"' + ((o.showHour) ? "" : noDisplay) + "></dd>"
                }
                html += '<dt class="ui_tpicker_minute_label" id="ui_tpicker_minute_label_' + dp_id + '"' + ((o.showMinute) ? "" : noDisplay) + ">" + o.minuteText + "</dt>";
                if (o.showMinute && o.minuteGrid > 0) {
                    html += '<dd class="ui_tpicker_minute ui_tpicker_minute_' + o.minuteGrid + '"><div id="ui_tpicker_minute_' + dp_id + '"' + ((o.showMinute) ? "" : noDisplay) + '></div><div style="padding-left: 1px"><table class="ui-tpicker-grid-label"><tr>';
                    for (var m = o.minuteMin; m <= minMax; m += o.minuteGrid) {
                        minuteGridSize++;
                        html += "<td>" + ((m < 10) ? "0" : "") + m + "</td>"
                    }
                    html += "</tr></table></div></dd>"
                } else {
                    html += '<dd class="ui_tpicker_minute" id="ui_tpicker_minute_' + dp_id + '"' + ((o.showMinute) ? "" : noDisplay) + "></dd>"
                }
                html += '<dt class="ui_tpicker_second_label" id="ui_tpicker_second_label_' + dp_id + '"' + ((o.showSecond) ? "" : noDisplay) + ">" + o.secondText + "</dt>";
                if (o.showSecond && o.secondGrid > 0) {
                    html += '<dd class="ui_tpicker_second ui_tpicker_second_' + o.secondGrid + '"><div id="ui_tpicker_second_' + dp_id + '"' + ((o.showSecond) ? "" : noDisplay) + '></div><div style="padding-left: 1px"><table><tr>';
                    for (var s = o.secondMin; s <= secMax; s += o.secondGrid) {
                        secondGridSize++;
                        html += "<td>" + ((s < 10) ? "0" : "") + s + "</td>"
                    }
                    html += "</tr></table></div></dd>"
                } else {
                    html += '<dd class="ui_tpicker_second" id="ui_tpicker_second_' + dp_id + '"' + ((o.showSecond) ? "" : noDisplay) + "></dd>"
                }
                html += '<dt class="ui_tpicker_timezone_label" id="ui_tpicker_timezone_label_' + dp_id + '"' + ((o.showTimezone) ? "" : noDisplay) + ">" + o.timezoneText + "</dt>";
                html += '<dd class="ui_tpicker_timezone" id="ui_tpicker_timezone_' + dp_id + '"' + ((o.showTimezone) ? "" : noDisplay) + "></dd>";
                html += "</dl></div>";
                $tp = $(html);
                if (o.timeOnly === true) {
                    $tp.prepend('<div class="ui-widget-header ui-helper-clearfix ui-corner-all"><div class="ui-datepicker-title">' + o.timeOnlyTitle + "</div></div>");
                    $dp.find(".ui-datepicker-header, .ui-datepicker-calendar").hide()
                }
                this.hour_slider = $tp.find("#ui_tpicker_hour_" + dp_id).slider({
                    orientation: "horizontal",
                    value: this.hour,
                    min: o.hourMin,
                    max: hourMax,
                    step: o.stepHour,
                    slide: function(event, ui) {
                        tp_inst.hour_slider.slider("option", "value", ui.value);
                        tp_inst._onTimeChange()
                    }
                });
                this.minute_slider = $tp.find("#ui_tpicker_minute_" + dp_id).slider({
                    orientation: "horizontal",
                    value: this.minute,
                    min: o.minuteMin,
                    max: minMax,
                    step: o.stepMinute,
                    slide: function(event, ui) {
                        tp_inst.minute_slider.slider("option", "value", ui.value);
                        tp_inst._onTimeChange()
                    }
                });
                this.second_slider = $tp.find("#ui_tpicker_second_" + dp_id).slider({
                    orientation: "horizontal",
                    value: this.second,
                    min: o.secondMin,
                    max: secMax,
                    step: o.stepSecond,
                    slide: function(event, ui) {
                        tp_inst.second_slider.slider("option", "value", ui.value);
                        tp_inst._onTimeChange()
                    }
                });
                this.timezone_select = $tp.find("#ui_tpicker_timezone_" + dp_id).append("<select></select>").find("select");
                $.fn.append.apply(this.timezone_select, $.map(o.timezoneList, function(val, idx) {
                    return $("<option />").val(typeof val == "object" ? val.value : val).text(typeof val == "object" ? val.label : val)
                }));
                this.timezone_select.val((typeof this.timezone != "undefined" && this.timezone != null && this.timezone != "") ? this.timezone : o.timezone);
                this.timezone_select.change(function() {
                    tp_inst._onTimeChange()
                });
                if (o.showHour && o.hourGrid > 0) {
                    size = 100 * hourGridSize * o.hourGrid / (hourMax - o.hourMin);
                    $tp.find(".ui_tpicker_hour table").css({
                        width: size + "%",
                        marginLeft: (size / (-2 * hourGridSize)) + "%",
                        borderCollapse: "collapse"
                    }).find("td").each(function(index) {
                        $(this).click(function() {
                            var h = $(this).html();
                            if (o.ampm) {
                                var ap = h.substring(2).toLowerCase(),
                                    aph = parseInt(h.substring(0, 2), 10);
                                if (ap == "a") {
                                    if (aph == 12) {
                                        h = 0
                                    } else {
                                        h = aph
                                    }
                                } else {
                                    if (aph == 12) {
                                        h = 12
                                    } else {
                                        h = aph + 12
                                    }
                                }
                            }
                            tp_inst.hour_slider.slider("option", "value", h);
                            tp_inst._onTimeChange();
                            tp_inst._onSelectHandler()
                        }).css({
                            cursor: "pointer",
                            width: (100 / hourGridSize) + "%",
                            textAlign: "center",
                            overflow: "hidden"
                        })
                    })
                }
                if (o.showMinute && o.minuteGrid > 0) {
                    size = 100 * minuteGridSize * o.minuteGrid / (minMax - o.minuteMin);
                    $tp.find(".ui_tpicker_minute table").css({
                        width: size + "%",
                        marginLeft: (size / (-2 * minuteGridSize)) + "%",
                        borderCollapse: "collapse"
                    }).find("td").each(function(index) {
                        $(this).click(function() {
                            tp_inst.minute_slider.slider("option", "value", $(this).html());
                            tp_inst._onTimeChange();
                            tp_inst._onSelectHandler()
                        }).css({
                            cursor: "pointer",
                            width: (100 / minuteGridSize) + "%",
                            textAlign: "center",
                            overflow: "hidden"
                        })
                    })
                }
                if (o.showSecond && o.secondGrid > 0) {
                    $tp.find(".ui_tpicker_second table").css({
                        width: size + "%",
                        marginLeft: (size / (-2 * secondGridSize)) + "%",
                        borderCollapse: "collapse"
                    }).find("td").each(function(index) {
                        $(this).click(function() {
                            tp_inst.second_slider.slider("option", "value", $(this).html());
                            tp_inst._onTimeChange();
                            tp_inst._onSelectHandler()
                        }).css({
                            cursor: "pointer",
                            width: (100 / secondGridSize) + "%",
                            textAlign: "center",
                            overflow: "hidden"
                        })
                    })
                }
                var $buttonPanel = $dp.find(".ui-datepicker-buttonpane");
                if ($buttonPanel.length) {
                    $buttonPanel.before($tp)
                } else {
                    $dp.append($tp)
                }
                this.$timeObj = $tp.find("#ui_tpicker_time_" + dp_id);
                if (this.inst !== null) {
                    var timeDefined = this.timeDefined;
                    this._onTimeChange();
                    this.timeDefined = timeDefined
                }
                var onSelectDelegate = function() {
                    tp_inst._onSelectHandler()
                };
                this.hour_slider.bind("slidestop", onSelectDelegate);
                this.minute_slider.bind("slidestop", onSelectDelegate);
                this.second_slider.bind("slidestop", onSelectDelegate)
            }
        },
        _limitMinMaxDateTime: function(dp_inst, adjustSliders) {
            var o = this._defaults,
                dp_date = new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay);
            if (!this._defaults.showTimepicker) {
                return
            }
            if ($.datepicker._get(dp_inst, "minDateTime") !== null && dp_date) {
                var minDateTime = $.datepicker._get(dp_inst, "minDateTime"),
                    minDateTimeDate = new Date(minDateTime.getFullYear(), minDateTime.getMonth(), minDateTime.getDate(), 0, 0, 0, 0);
                if (this.hourMinOriginal === null || this.minuteMinOriginal === null || this.secondMinOriginal === null) {
                    this.hourMinOriginal = o.hourMin;
                    this.minuteMinOriginal = o.minuteMin;
                    this.secondMinOriginal = o.secondMin
                }
                if (dp_inst.settings.timeOnly || minDateTimeDate.getTime() == dp_date.getTime()) {
                    this._defaults.hourMin = minDateTime.getHours();
                    if (this.hour <= this._defaults.hourMin) {
                        this.hour = this._defaults.hourMin;
                        this._defaults.minuteMin = minDateTime.getMinutes();
                        if (this.minute <= this._defaults.minuteMin) {
                            this.minute = this._defaults.minuteMin;
                            this._defaults.secondMin = minDateTime.getSeconds()
                        } else {
                            if (this.second < this._defaults.secondMin) {
                                this.second = this._defaults.secondMin
                            }
                            this._defaults.secondMin = this.secondMinOriginal
                        }
                    } else {
                        this._defaults.minuteMin = this.minuteMinOriginal;
                        this._defaults.secondMin = this.secondMinOriginal
                    }
                } else {
                    this._defaults.hourMin = this.hourMinOriginal;
                    this._defaults.minuteMin = this.minuteMinOriginal;
                    this._defaults.secondMin = this.secondMinOriginal
                }
            }
            if ($.datepicker._get(dp_inst, "maxDateTime") !== null && dp_date) {
                var maxDateTime = $.datepicker._get(dp_inst, "maxDateTime"),
                    maxDateTimeDate = new Date(maxDateTime.getFullYear(), maxDateTime.getMonth(), maxDateTime.getDate(), 0, 0, 0, 0);
                if (this.hourMaxOriginal === null || this.minuteMaxOriginal === null || this.secondMaxOriginal === null) {
                    this.hourMaxOriginal = o.hourMax;
                    this.minuteMaxOriginal = o.minuteMax;
                    this.secondMaxOriginal = o.secondMax
                }
                if (dp_inst.settings.timeOnly || maxDateTimeDate.getTime() == dp_date.getTime()) {
                    this._defaults.hourMax = maxDateTime.getHours();
                    if (this.hour >= this._defaults.hourMax) {
                        this.hour = this._defaults.hourMax;
                        this._defaults.minuteMax = maxDateTime.getMinutes();
                        if (this.minute >= this._defaults.minuteMax) {
                            this.minute = this._defaults.minuteMax;
                            this._defaults.secondMax = maxDateTime.getSeconds()
                        } else {
                            if (this.second > this._defaults.secondMax) {
                                this.second = this._defaults.secondMax
                            }
                            this._defaults.secondMax = this.secondMaxOriginal
                        }
                    } else {
                        this._defaults.minuteMax = this.minuteMaxOriginal;
                        this._defaults.secondMax = this.secondMaxOriginal
                    }
                } else {
                    this._defaults.hourMax = this.hourMaxOriginal;
                    this._defaults.minuteMax = this.minuteMaxOriginal;
                    this._defaults.secondMax = this.secondMaxOriginal
                }
            }
            if (adjustSliders !== undefined && adjustSliders === true) {
                var hourMax = (this._defaults.hourMax - (this._defaults.hourMax % this._defaults.stepHour)).toFixed(0),
                    minMax = (this._defaults.minuteMax - (this._defaults.minuteMax % this._defaults.stepMinute)).toFixed(0),
                    secMax = (this._defaults.secondMax - (this._defaults.secondMax % this._defaults.stepSecond)).toFixed(0);
                if (this.hour_slider) {
                    this.hour_slider.slider("option", {
                        min: this._defaults.hourMin,
                        max: hourMax
                    }).slider("value", this.hour)
                }
                if (this.minute_slider) {
                    this.minute_slider.slider("option", {
                        min: this._defaults.minuteMin,
                        max: minMax
                    }).slider("value", this.minute)
                }
                if (this.second_slider) {
                    this.second_slider.slider("option", {
                        min: this._defaults.secondMin,
                        max: secMax
                    }).slider("value", this.second)
                }
            }
        },
        _onTimeChange: function() {
            var hour = (this.hour_slider) ? this.hour_slider.slider("value") : false,
                minute = (this.minute_slider) ? this.minute_slider.slider("value") : false,
                second = (this.second_slider) ? this.second_slider.slider("value") : false,
                timezone = (this.timezone_select) ? this.timezone_select.val() : false;
            if (typeof(hour) == "object") {
                hour = false
            }
            if (typeof(minute) == "object") {
                minute = false
            }
            if (typeof(second) == "object") {
                second = false
            }
            if (typeof(timezone) == "object") {
                timezone = false
            }
            if (hour !== false) {
                hour = parseInt(hour, 10)
            }
            if (minute !== false) {
                minute = parseInt(minute, 10)
            }
            if (second !== false) {
                second = parseInt(second, 10)
            }
            var ampm = (hour < 12) ? "AM" : "PM";
            var hasChanged = (hour != this.hour || minute != this.minute || second != this.second || (this.ampm.length > 0 && this.ampm != ampm) || timezone != this.timezone);
            if (hasChanged) {
                if (hour !== false) {
                    this.hour = hour
                }
                if (minute !== false) {
                    this.minute = minute
                }
                if (second !== false) {
                    this.second = second
                }
                if (timezone !== false) {
                    this.timezone = timezone
                }
                if (!this.inst) {
                    this.inst = $.datepicker._getInst(this.$input[0])
                }
                this._limitMinMaxDateTime(this.inst, true)
            }
            if (this._defaults.ampm) {
                this.ampm = ampm
            }
            this._formatTime();
            if (this.$timeObj) {
                this.$timeObj.text(this.formattedTime + this._defaults.timeSuffix)
            }
            this.timeDefined = true;
            if (hasChanged) {
                this._updateDateTime()
            }
        },
        _onSelectHandler: function() {
            var onSelect = this._defaults.onSelect;
            var inputEl = this.$input ? this.$input[0] : null;
            if (onSelect && inputEl) {
                onSelect.apply(inputEl, [this.formattedDateTime, this])
            }
        },
        _formatTime: function(time, format, ampm) {
            if (ampm == undefined) {
                ampm = this._defaults.ampm
            }
            time = time || {
                hour: this.hour,
                minute: this.minute,
                second: this.second,
                ampm: this.ampm,
                timezone: this.timezone
            };
            var tmptime = format || this._defaults.timeFormat.toString();
            if (ampm) {
                var hour12 = ((time.ampm == "AM") ? (time.hour) : (time.hour % 12));
                hour12 = (Number(hour12) === 0) ? 12 : hour12;
                tmptime = tmptime.toString().replace(/hh/g, ((hour12 < 10) ? "0" : "") + hour12).replace(/h/g, hour12).replace(/mm/g, ((time.minute < 10) ? "0" : "") + time.minute).replace(/m/g, time.minute).replace(/ss/g, ((time.second < 10) ? "0" : "") + time.second).replace(/s/g, time.second).replace(/TT/g, time.ampm.toUpperCase()).replace(/Tt/g, time.ampm.toUpperCase()).replace(/tT/g, time.ampm.toLowerCase()).replace(/tt/g, time.ampm.toLowerCase()).replace(/T/g, time.ampm.charAt(0).toUpperCase()).replace(/t/g, time.ampm.charAt(0).toLowerCase()).replace(/z/g, time.timezone)
            } else {
                tmptime = tmptime.toString().replace(/hh/g, ((time.hour < 10) ? "0" : "") + time.hour).replace(/h/g, time.hour).replace(/mm/g, ((time.minute < 10) ? "0" : "") + time.minute).replace(/m/g, time.minute).replace(/ss/g, ((time.second < 10) ? "0" : "") + time.second).replace(/s/g, time.second).replace(/z/g, time.timezone);
                tmptime = $.trim(tmptime.replace(/t/gi, ""))
            }
            if (arguments.length) {
                return tmptime
            } else {
                this.formattedTime = tmptime
            }
        },
        _updateDateTime: function(dp_inst) {
            dp_inst = this.inst || dp_inst, dt = new Date(dp_inst.selectedYear, dp_inst.selectedMonth, dp_inst.selectedDay), dateFmt = $.datepicker._get(dp_inst, "dateFormat"), formatCfg = $.datepicker._getFormatConfig(dp_inst), timeAvailable = dt !== null && this.timeDefined;
            this.formattedDate = $.datepicker.formatDate(dateFmt, (dt === null ? new Date() : dt), formatCfg);
            var formattedDateTime = this.formattedDate;
            if (dp_inst.lastVal !== undefined && (dp_inst.lastVal.length > 0 && this.$input.val().length === 0)) {
                return
            }
            if (this._defaults.timeOnly === true) {
                formattedDateTime = this.formattedTime
            } else {
                if (this._defaults.timeOnly !== true && (this._defaults.alwaysSetTime || timeAvailable)) {
                    formattedDateTime += this._defaults.separator + this.formattedTime + this._defaults.timeSuffix
                }
            }
            this.formattedDateTime = formattedDateTime;
            if (!this._defaults.showTimepicker) {
                this.$input.val(this.formattedDate)
            } else {
                if (this.$altInput && this._defaults.altFieldTimeOnly === true) {
                    this.$altInput.val(this.formattedTime);
                    this.$input.val(this.formattedDate)
                } else {
                    if (this.$altInput) {
                        this.$altInput.val(formattedDateTime);
                        this.$input.val(formattedDateTime)
                    } else {
                        this.$input.val(formattedDateTime)
                    }
                }
            }
            this.$input.trigger("change")
        }
    });
    $.fn.extend({
        timepicker: function(o) {
            o = o || {};
            var tmp_args = arguments;
            if (typeof o == "object") {
                tmp_args[0] = $.extend(o, {
                    timeOnly: true
                })
            }
            return $(this).each(function() {
                $.fn.datetimepicker.apply($(this), tmp_args)
            })
        },
        datetimepicker: function(o) {
            o = o || {};
            var $input = this,
                tmp_args = arguments;
            if (typeof(o) == "string") {
                if (o == "getDate") {
                    return $.fn.datepicker.apply($(this[0]), tmp_args)
                } else {
                    return this.each(function() {
                        var $t = $(this);
                        $t.datepicker.apply($t, tmp_args)
                    })
                }
            } else {
                return this.each(function() {
                    var $t = $(this);
                    $t.datepicker($.timepicker._newInst($t, o)._defaults)
                })
            }
        }
    });
    $.datepicker._base_selectDate = $.datepicker._selectDate;
    $.datepicker._selectDate = function(id, dateStr) {
        var inst = this._getInst($(id)[0]),
            tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            tp_inst._limitMinMaxDateTime(inst, true);
            inst.inline = inst.stay_open = true;
            this._base_selectDate(id, dateStr + tp_inst._defaults.separator + tp_inst.formattedTime + tp_inst._defaults.timeSuffix);
            inst.inline = inst.stay_open = false;
            this._notifyChange(inst);
            this._updateDatepicker(inst)
        } else {
            this._base_selectDate(id, dateStr)
        }
    };
    $.datepicker._base_updateDatepicker = $.datepicker._updateDatepicker;
    $.datepicker._updateDatepicker = function(inst) {
        var input = inst.input[0];
        if ($.datepicker._curInst && $.datepicker._curInst != inst && $.datepicker._datepickerShowing && $.datepicker._lastInput != input) {
            return
        }
        if (typeof(inst.stay_open) !== "boolean" || inst.stay_open === false) {
            this._base_updateDatepicker(inst);
            var tp_inst = this._get(inst, "timepicker");
            if (tp_inst) {
                tp_inst._addTimePicker(inst)
            }
        }
    };
    $.datepicker._base_doKeyPress = $.datepicker._doKeyPress;
    $.datepicker._doKeyPress = function(event) {
        var inst = $.datepicker._getInst(event.target),
            tp_inst = $.datepicker._get(inst, "timepicker");
        if (tp_inst) {
            if ($.datepicker._get(inst, "constrainInput")) {
                var ampm = tp_inst._defaults.ampm,
                    dateChars = $.datepicker._possibleChars($.datepicker._get(inst, "dateFormat")),
                    datetimeChars = tp_inst._defaults.timeFormat.toString().replace(/[hms]/g, "").replace(/TT/g, ampm ? "APM" : "").replace(/Tt/g, ampm ? "AaPpMm" : "").replace(/tT/g, ampm ? "AaPpMm" : "").replace(/T/g, ampm ? "AP" : "").replace(/tt/g, ampm ? "apm" : "").replace(/t/g, ampm ? "ap" : "") + " " + tp_inst._defaults.separator + tp_inst._defaults.timeSuffix + (tp_inst._defaults.showTimezone ? tp_inst._defaults.timezoneList.join("") : "") + dateChars,
                    chr = String.fromCharCode(event.charCode === undefined ? event.keyCode : event.charCode);
                return event.ctrlKey || (chr < " " || !dateChars || datetimeChars.indexOf(chr) > -1)
            }
        }
        return $.datepicker._base_doKeyPress(event)
    };
    $.datepicker._base_doKeyUp = $.datepicker._doKeyUp;
    $.datepicker._doKeyUp = function(event) {
        var inst = $.datepicker._getInst(event.target),
            tp_inst = $.datepicker._get(inst, "timepicker");
        if (tp_inst) {
            if (tp_inst._defaults.timeOnly && (inst.input.val() != inst.lastVal)) {
                try {
                    $.datepicker._updateDatepicker(inst)
                } catch (err) {
                    $.datepicker.log(err)
                }
            }
        }
        return $.datepicker._base_doKeyUp(event)
    };
    $.datepicker._base_gotoToday = $.datepicker._gotoToday;
    $.datepicker._gotoToday = function(id) {
        this._base_gotoToday(id);
        this._setTime(this._getInst($(id)[0]), new Date())
    };
    $.datepicker._disableTimepickerDatepicker = function(target, date, withDate) {
        var inst = this._getInst(target),
            tp_inst = this._get(inst, "timepicker");
        $(target).datepicker("getDate");
        if (tp_inst) {
            tp_inst._defaults.showTimepicker = false;
            tp_inst._updateDateTime(inst)
        }
    };
    $.datepicker._enableTimepickerDatepicker = function(target, date, withDate) {
        var inst = this._getInst(target),
            tp_inst = this._get(inst, "timepicker");
        $(target).datepicker("getDate");
        if (tp_inst) {
            tp_inst._defaults.showTimepicker = true;
            tp_inst._addTimePicker(inst);
            tp_inst._updateDateTime(inst)
        }
    };
    $.datepicker._setTime = function(inst, date) {
        var tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            var defaults = tp_inst._defaults,
                hour = date ? date.getHours() : defaults.hour,
                minute = date ? date.getMinutes() : defaults.minute,
                second = date ? date.getSeconds() : defaults.second;
            if ((hour < defaults.hourMin || hour > defaults.hourMax) || (minute < defaults.minuteMin || minute > defaults.minuteMax) || (second < defaults.secondMin || second > defaults.secondMax)) {
                hour = defaults.hourMin;
                minute = defaults.minuteMin;
                second = defaults.secondMin
            }
            tp_inst.hour = hour;
            tp_inst.minute = minute;
            tp_inst.second = second;
            if (tp_inst.hour_slider) {
                tp_inst.hour_slider.slider("value", hour)
            }
            if (tp_inst.minute_slider) {
                tp_inst.minute_slider.slider("value", minute)
            }
            if (tp_inst.second_slider) {
                tp_inst.second_slider.slider("value", second)
            }
            tp_inst._onTimeChange();
            tp_inst._updateDateTime(inst)
        }
    };
    $.datepicker._setTimeDatepicker = function(target, date, withDate) {
        var inst = this._getInst(target),
            tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            this._setDateFromField(inst);
            var tp_date;
            if (date) {
                if (typeof date == "string") {
                    tp_inst._parseTime(date, withDate);
                    tp_date = new Date();
                    tp_date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second)
                } else {
                    tp_date = new Date(date.getTime())
                }
                if (tp_date.toString() == "Invalid Date") {
                    tp_date = undefined
                }
                this._setTime(inst, tp_date)
            }
        }
    };
    $.datepicker._base_setDateDatepicker = $.datepicker._setDateDatepicker;
    $.datepicker._setDateDatepicker = function(target, date) {
        var inst = this._getInst(target),
            tp_date = (date instanceof Date) ? new Date(date.getTime()) : date;
        this._updateDatepicker(inst);
        this._base_setDateDatepicker.apply(this, arguments);
        this._setTimeDatepicker(target, tp_date, true)
    };
    $.datepicker._base_getDateDatepicker = $.datepicker._getDateDatepicker;
    $.datepicker._getDateDatepicker = function(target, noDefault) {
        var inst = this._getInst(target),
            tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            this._setDateFromField(inst, noDefault);
            var date = this._getDate(inst);
            if (date && tp_inst._parseTime($(target).val(), tp_inst.timeOnly)) {
                date.setHours(tp_inst.hour, tp_inst.minute, tp_inst.second)
            }
            return date
        }
        return this._base_getDateDatepicker(target, noDefault)
    };
    $.datepicker._base_parseDate = $.datepicker.parseDate;
    $.datepicker.parseDate = function(format, value, settings) {
        var date;
        try {
            date = this._base_parseDate(format, value, settings)
        } catch (err) {
            date = this._base_parseDate(format, value.substring(0, value.length - (err.length - err.indexOf(":") - 2)), settings)
        }
        return date
    };
    $.datepicker._base_optionDatepicker = $.datepicker._optionDatepicker;
    $.datepicker._optionDatepicker = function(target, name, value) {
        this._base_optionDatepicker(target, name, value);
        var inst = this._getInst(target),
            tp_inst = this._get(inst, "timepicker");
        if (tp_inst) {
            if (name === "minDate") {
                if (tp_inst._defaults.minDate !== undefined && tp_inst._defaults.minDate instanceof Date) {
                    tp_inst._defaults.minDateTime = new Date(value)
                }
                if (tp_inst._defaults.minDateTime !== undefined && tp_inst._defaults.minDateTime instanceof Date) {
                    tp_inst._defaults.minDate = new Date(tp_inst._defaults.minDateTime.getTime())
                }
                tp_inst._limitMinMaxDateTime(inst, true)
            }
            if (name === "maxDate") {
                if (tp_inst._defaults.maxDate !== undefined && tp_inst._defaults.maxDate instanceof Date) {
                    tp_inst._defaults.maxDateTime = new Date(value)
                }
                if (tp_inst._defaults.maxDateTime !== undefined && tp_inst._defaults.maxDateTime instanceof Date) {
                    tp_inst._defaults.maxDate = new Date(tp_inst._defaults.maxDateTime.getTime())
                }
                tp_inst._limitMinMaxDateTime(inst, true)
            }
        }
    };

    function extendRemove(target, props) {
        $.extend(target, props);
        for (var name in props) {
            if (props[name] === null || props[name] === undefined) {
                target[name] = props[name]
            }
        }
        return target
    }
    $.timepicker = new Timepicker();
    $.timepicker.version = "0.9.6"
})(jQuery);
/*
 * jQuery Form Plugin
 * version: 2.84 (12-AUG-2011)
 * @requires jQuery v1.3.2 or later
 *
 * Examples and documentation at: http://malsup.com/jquery/form/
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 */
(function(c) {
    c.fn.ajaxSubmit = function(e) {
        if (!this.length) {
            b("ajaxSubmit: skipping submit process - no element selected");
            return this
        }
        var d, z, g, h = this;
        if (typeof e == "function") {
            e = {
                success: e
            }
        }
        d = this.attr("method");
        z = this.attr("action");
        g = (typeof z === "string") ? c.trim(z) : "";
        g = g || window.location.href || "";
        if (g) {
            g = (g.match(/^([^#]+)/) || [])[1]
        }
        e = c.extend(true, {
            url: g,
            success: c.ajaxSettings.success,
            type: d || "GET",
            iframeSrc: /^https/i.test(window.location.href || "") ? "javascript:false" : "about:blank"
        }, e);
        var p = {};
        this.trigger("form-pre-serialize", [this, e, p]);
        if (p.veto) {
            b("ajaxSubmit: submit vetoed via form-pre-serialize trigger");
            return this
        }
        if (e.beforeSerialize && e.beforeSerialize(this, e) === false) {
            b("ajaxSubmit: submit aborted via beforeSerialize callback");
            return this
        }
        var w, o, H = this.formToArray(e.semantic);
        if (e.data) {
            e.extraData = e.data;
            for (w in e.data) {
                if (c.isArray(e.data[w])) {
                    for (var C in e.data[w]) {
                        H.push({
                            name: w,
                            value: e.data[w][C]
                        })
                    }
                } else {
                    o = e.data[w];
                    o = c.isFunction(o) ? o() : o;
                    H.push({
                        name: w,
                        value: o
                    })
                }
            }
        }
        if (e.beforeSubmit && e.beforeSubmit(H, this, e) === false) {
            b("ajaxSubmit: submit aborted via beforeSubmit callback");
            return this
        }
        this.trigger("form-submit-validate", [H, this, e, p]);
        if (p.veto) {
            b("ajaxSubmit: submit vetoed via form-submit-validate trigger");
            return this
        }
        var u = c.param(H);
        if (e.type.toUpperCase() == "GET") {
            e.url += (e.url.indexOf("?") >= 0 ? "&" : "?") + u;
            e.data = null
        } else {
            e.data = u
        }
        var I = [];
        if (e.resetForm) {
            I.push(function() {
                h.resetForm()
            })
        }
        if (e.clearForm) {
            I.push(function() {
                h.clearForm()
            })
        }
        if (!e.dataType && e.target) {
            var f = e.success || function() {};
            I.push(function(q) {
                var n = e.replaceTarget ? "replaceWith" : "html";
                c(e.target)[n](q).each(f, arguments)
            })
        } else {
            if (e.success) {
                I.push(e.success)
            }
        }
        e.success = function(K, q, L) {
            var J = e.context || e;
            for (var v = 0, n = I.length; v < n; v++) {
                I[v].apply(J, [K, q, L || h, h])
            }
        };
        var E = c("input:file", this).length > 0;
        var D = "multipart/form-data";
        var r = (h.attr("enctype") == D || h.attr("encoding") == D);
        if (e.iframe !== false && (E || e.iframe || r)) {
            if (e.closeKeepAlive) {
                c.get(e.closeKeepAlive, function() {
                    m(H)
                })
            } else {
                m(H)
            }
        } else {
            if (c.browser.msie && d == "get") {
                var G = h[0].getAttribute("method");
                if (typeof G === "string") {
                    e.type = G
                }
            }
            c.ajax(e)
        }
        this.trigger("form-submit-notify", [this, e]);
        return this;

        function m(ag) {
            var K = h[0],
                J, ac, V, ae, Z, M, Q, O, P, aa, ad, T;
            var N = !!c.fn.prop;
            if (ag) {
                for (ac = 0; ac < ag.length; ac++) {
                    J = c(K[ag[ac].name]);
                    J[N ? "prop" : "attr"]("disabled", false)
                }
            }
            if (c(":input[name=submit],:input[id=submit]", K).length) {
                alert('Error: Form elements must not have name or id of "submit".');
                return
            }
            V = c.extend(true, {}, c.ajaxSettings, e);
            V.context = V.context || V;
            Z = "jqFormIO" + (new Date().getTime());
            if (V.iframeTarget) {
                M = c(V.iframeTarget);
                aa = M.attr("name");
                if (aa == null) {
                    M.attr("name", Z)
                } else {
                    Z = aa
                }
            } else {
                M = c('<iframe name="' + Z + '" src="' + V.iframeSrc + '" />');
                M.css({
                    position: "absolute",
                    top: "-1000px",
                    left: "-1000px"
                })
            }
            Q = M[0];
            O = {
                aborted: 0,
                responseText: null,
                responseXML: null,
                status: 0,
                statusText: "n/a",
                getAllResponseHeaders: function() {},
                getResponseHeader: function() {},
                setRequestHeader: function() {},
                abort: function(n) {
                    var aj = (n === "timeout" ? "timeout" : "aborted");
                    b("aborting upload... " + aj);
                    this.aborted = 1;
                    M.attr("src", V.iframeSrc);
                    O.error = aj;
                    V.error && V.error.call(V.context, O, aj, n);
                    ae && c.event.trigger("ajaxError", [O, V, aj]);
                    V.complete && V.complete.call(V.context, O, aj)
                }
            };
            ae = V.global;
            if (ae && !c.active++) {
                c.event.trigger("ajaxStart")
            }
            if (ae) {
                c.event.trigger("ajaxSend", [O, V])
            }
            if (V.beforeSend && V.beforeSend.call(V.context, O, V) === false) {
                if (V.global) {
                    c.active--
                }
                return
            }
            if (O.aborted) {
                return
            }
            P = K.clk;
            if (P) {
                aa = P.name;
                if (aa && !P.disabled) {
                    V.extraData = V.extraData || {};
                    V.extraData[aa] = P.value;
                    if (P.type == "image") {
                        V.extraData[aa + ".x"] = K.clk_x;
                        V.extraData[aa + ".y"] = K.clk_y
                    }
                }
            }
            var U = 1;
            var R = 2;

            function S(aj) {
                var n = aj.contentWindow ? aj.contentWindow.document : aj.contentDocument ? aj.contentDocument : aj.document;
                return n
            }

            function ab() {
                var al = h.attr("target"),
                    aj = h.attr("action");
                K.setAttribute("target", Z);
                if (!d) {
                    K.setAttribute("method", "POST")
                }
                if (aj != V.url) {
                    K.setAttribute("action", V.url)
                }
                if (!V.skipEncodingOverride && (!d || /post/i.test(d))) {
                    h.attr({
                        encoding: "multipart/form-data",
                        enctype: "multipart/form-data"
                    })
                }
                if (V.timeout) {
                    T = setTimeout(function() {
                        ad = true;
                        Y(U)
                    }, V.timeout)
                }

                function am() {
                    try {
                        var n = S(Q).readyState;
                        b("state = " + n);
                        if (n.toLowerCase() == "uninitialized") {
                            setTimeout(am, 50)
                        }
                    } catch (ao) {
                        b("Server abort: ", ao, " (", ao.name, ")");
                        Y(R);
                        T && clearTimeout(T);
                        T = undefined
                    }
                }
                var ak = [];
                try {
                    if (V.extraData) {
                        for (var an in V.extraData) {
                            ak.push(c('<input type="hidden" name="' + an + '" />').attr("value", V.extraData[an]).appendTo(K)[0])
                        }
                    }
                    if (!V.iframeTarget) {
                        M.appendTo("body");
                        Q.attachEvent ? Q.attachEvent("onload", Y) : Q.addEventListener("load", Y, false)
                    }
                    setTimeout(am, 15);
                    K.submit()
                } finally {
                    K.setAttribute("action", aj);
                    if (al) {
                        K.setAttribute("target", al)
                    } else {
                        h.removeAttr("target")
                    }
                    c(ak).remove()
                }
            }
            if (V.forceSync) {
                ab()
            } else {
                setTimeout(ab, 10)
            }
            var ah, ai, af = 50,
                L;

            function Y(an) {
                if (O.aborted || L) {
                    return
                }
                try {
                    ai = S(Q)
                } catch (aq) {
                    b("cannot access response document: ", aq);
                    an = R
                }
                if (an === U && O) {
                    O.abort("timeout");
                    return
                } else {
                    if (an == R && O) {
                        O.abort("server abort");
                        return
                    }
                }
                if (!ai || ai.location.href == V.iframeSrc) {
                    if (!ad) {
                        return
                    }
                }
                Q.detachEvent ? Q.detachEvent("onload", Y) : Q.removeEventListener("load", Y, false);
                var al = "success",
                    ap;
                try {
                    if (ad) {
                        throw "timeout"
                    }
                    var ak = V.dataType == "xml" || ai.XMLDocument || c.isXMLDoc(ai);
                    b("isXml=" + ak);
                    if (!ak && window.opera && (ai.body == null || ai.body.innerHTML == "")) {
                        if (--af) {
                            b("requeing onLoad callback, DOM not available");
                            setTimeout(Y, 250);
                            return
                        }
                    }
                    var ar = ai.body ? ai.body : ai.documentElement;
                    O.responseText = ar ? ar.innerHTML : null;
                    O.responseXML = ai.XMLDocument ? ai.XMLDocument : ai;
                    if (ak) {
                        V.dataType = "xml"
                    }
                    O.getResponseHeader = function(av) {
                        var au = {
                            "content-type": V.dataType
                        };
                        return au[av]
                    };
                    if (ar) {
                        O.status = Number(ar.getAttribute("status")) || O.status;
                        O.statusText = ar.getAttribute("statusText") || O.statusText
                    }
                    var n = V.dataType || "";
                    var ao = /(json|script|text)/.test(n.toLowerCase());
                    if (ao || V.textarea) {
                        var am = ai.getElementsByTagName("textarea")[0];
                        if (am) {
                            O.responseText = am.value;
                            O.status = Number(am.getAttribute("status")) || O.status;
                            O.statusText = am.getAttribute("statusText") || O.statusText
                        } else {
                            if (ao) {
                                var aj = ai.getElementsByTagName("pre")[0];
                                var at = ai.getElementsByTagName("body")[0];
                                if (aj) {
                                    O.responseText = aj.textContent ? aj.textContent : aj.innerHTML
                                } else {
                                    if (at) {
                                        O.responseText = at.innerHTML
                                    }
                                }
                            }
                        }
                    } else {
                        if (V.dataType == "xml" && !O.responseXML && O.responseText != null) {
                            O.responseXML = X(O.responseText)
                        }
                    }
                    try {
                        ah = q(O, V.dataType, V)
                    } catch (an) {
                        al = "parsererror";
                        O.error = ap = (an || al)
                    }
                } catch (an) {
                    b("error caught: ", an);
                    al = "error";
                    O.error = ap = (an || al)
                }
                if (O.aborted) {
                    b("upload aborted");
                    al = null
                }
                if (O.status) {
                    al = (O.status >= 200 && O.status < 300 || O.status === 304) ? "success" : "error"
                }
                if (al === "success") {
                    V.success && V.success.call(V.context, ah, "success", O);
                    ae && c.event.trigger("ajaxSuccess", [O, V])
                } else {
                    if (al) {
                        if (ap == undefined) {
                            ap = O.statusText
                        }
                        V.error && V.error.call(V.context, O, al, ap);
                        ae && c.event.trigger("ajaxError", [O, V, ap])
                    }
                }
                ae && c.event.trigger("ajaxComplete", [O, V]);
                if (ae && !--c.active) {
                    c.event.trigger("ajaxStop")
                }
                V.complete && V.complete.call(V.context, O, al);
                L = true;
                if (V.timeout) {
                    clearTimeout(T)
                }
                setTimeout(function() {
                    if (!V.iframeTarget) {
                        M.remove()
                    }
                    O.responseXML = null
                }, 100)
            }
            var X = c.parseXML || function(n, aj) {
                if (window.ActiveXObject) {
                    aj = new ActiveXObject("Microsoft.XMLDOM");
                    aj.async = "false";
                    aj.loadXML(n)
                } else {
                    aj = (new DOMParser()).parseFromString(n, "text/xml")
                }
                return (aj && aj.documentElement && aj.documentElement.nodeName != "parsererror") ? aj : null
            };
            var v = c.parseJSON || function(n) {
                return window["eval"]("(" + n + ")")
            };
            var q = function(an, al, ak) {
                var aj = an.getResponseHeader("content-type") || "",
                    n = al === "xml" || !al && aj.indexOf("xml") >= 0,
                    am = n ? an.responseXML : an.responseText;
                if (n && am.documentElement.nodeName === "parsererror") {
                    c.error && c.error("parsererror")
                }
                if (ak && ak.dataFilter) {
                    am = ak.dataFilter(am, al)
                }
                if (typeof am === "string") {
                    if (al === "json" || !al && aj.indexOf("json") >= 0) {
                        am = v(am)
                    } else {
                        if (al === "script" || !al && aj.indexOf("javascript") >= 0) {
                            c.globalEval(am)
                        }
                    }
                }
                return am
            }
        }
    };
    c.fn.ajaxForm = function(d) {
        if (this.length === 0) {
            var e = {
                s: this.selector,
                c: this.context
            };
            if (!c.isReady && e.s) {
                b("DOM not ready, queuing ajaxForm");
                c(function() {
                    c(e.s, e.c).ajaxForm(d)
                });
                return this
            }
            b("terminating; zero elements found by selector" + (c.isReady ? "" : " (DOM not ready)"));
            return this
        }
        return this.ajaxFormUnbind().bind("submit.form-plugin", function(f) {
            if (!f.isDefaultPrevented()) {
                f.preventDefault();
                c(this).ajaxSubmit(d)
            }
        }).bind("click.form-plugin", function(n) {
            var m = n.target;
            var g = c(m);
            if (!(g.is(":submit,input:image"))) {
                var f = g.closest(":submit");
                if (f.length == 0) {
                    return
                }
                m = f[0]
            }
            var h = this;
            h.clk = m;
            if (m.type == "image") {
                if (n.offsetX != undefined) {
                    h.clk_x = n.offsetX;
                    h.clk_y = n.offsetY
                } else {
                    if (typeof c.fn.offset == "function") {
                        var o = g.offset();
                        h.clk_x = n.pageX - o.left;
                        h.clk_y = n.pageY - o.top
                    } else {
                        h.clk_x = n.pageX - m.offsetLeft;
                        h.clk_y = n.pageY - m.offsetTop
                    }
                }
            }
            setTimeout(function() {
                h.clk = h.clk_x = h.clk_y = null
            }, 100)
        })
    };
    c.fn.ajaxFormUnbind = function() {
        return this.unbind("submit.form-plugin click.form-plugin")
    };
    c.fn.formToArray = function(w) {
        var u = [];
        if (this.length === 0) {
            return u
        }
        var e = this[0];
        var h = w ? e.getElementsByTagName("*") : e.elements;
        if (!h) {
            return u
        }
        var o, m, g, z, f, q, d;
        for (o = 0, q = h.length; o < q; o++) {
            f = h[o];
            g = f.name;
            if (!g) {
                continue
            }
            if (w && e.clk && f.type == "image") {
                if (!f.disabled && e.clk == f) {
                    u.push({
                        name: g,
                        value: c(f).val()
                    });
                    u.push({
                        name: g + ".x",
                        value: e.clk_x
                    }, {
                        name: g + ".y",
                        value: e.clk_y
                    })
                }
                continue
            }
            z = c.fieldValue(f, true);
            if (z && z.constructor == Array) {
                for (m = 0, d = z.length; m < d; m++) {
                    u.push({
                        name: g,
                        value: z[m]
                    })
                }
            } else {
                if (z !== null && typeof z != "undefined") {
                    u.push({
                        name: g,
                        value: z
                    })
                }
            }
        }
        if (!w && e.clk) {
            var p = c(e.clk),
                r = p[0];
            g = r.name;
            if (g && !r.disabled && r.type == "image") {
                u.push({
                    name: g,
                    value: p.val()
                });
                u.push({
                    name: g + ".x",
                    value: e.clk_x
                }, {
                    name: g + ".y",
                    value: e.clk_y
                })
            }
        }
        return u
    };
    c.fn.formSerialize = function(d) {
        return c.param(this.formToArray(d))
    };
    c.fn.fieldSerialize = function(e) {
        var d = [];
        this.each(function() {
            var m = this.name;
            if (!m) {
                return
            }
            var g = c.fieldValue(this, e);
            if (g && g.constructor == Array) {
                for (var h = 0, f = g.length; h < f; h++) {
                    d.push({
                        name: m,
                        value: g[h]
                    })
                }
            } else {
                if (g !== null && typeof g != "undefined") {
                    d.push({
                        name: this.name,
                        value: g
                    })
                }
            }
        });
        return c.param(d)
    };
    c.fn.fieldValue = function(m) {
        for (var h = [], f = 0, d = this.length; f < d; f++) {
            var g = this[f];
            var e = c.fieldValue(g, m);
            if (e === null || typeof e == "undefined" || (e.constructor == Array && !e.length)) {
                continue
            }
            e.constructor == Array ? c.merge(h, e) : h.push(e)
        }
        return h
    };
    c.fieldValue = function(d, o) {
        var f = d.name,
            w = d.type,
            z = d.tagName.toLowerCase();
        if (o === undefined) {
            o = true
        }
        if (o && (!f || d.disabled || w == "reset" || w == "button" || (w == "checkbox" || w == "radio") && !d.checked || (w == "submit" || w == "image") && d.form && d.form.clk != d || z == "select" && d.selectedIndex == -1)) {
            return null
        }
        if (z == "select") {
            var p = d.selectedIndex;
            if (p < 0) {
                return null
            }
            var r = [],
                e = d.options;
            var h = (w == "select-one");
            var q = (h ? p + 1 : e.length);
            for (var g = (h ? p : 0); g < q; g++) {
                var m = e[g];
                if (m.selected) {
                    var u = m.value;
                    if (!u) {
                        u = (m.attributes && m.attributes.value && !(m.attributes.value.specified)) ? m.text : m.value
                    }
                    if (h) {
                        return u
                    }
                    r.push(u)
                }
            }
            return r
        }
        return c(d).val()
    };
    c.fn.clearForm = function() {
        return this.each(function() {
            c("input,select,textarea", this).clearFields()
        })
    };
    c.fn.clearFields = c.fn.clearInputs = function() {
        var d = /^(?:color|date|datetime|email|month|number|password|range|search|tel|text|time|url|week)$/i;
        return this.each(function() {
            var f = this.type,
                e = this.tagName.toLowerCase();
            if (d.test(f) || e == "textarea") {
                this.value = ""
            } else {
                if (f == "checkbox" || f == "radio") {
                    this.checked = false
                } else {
                    if (e == "select") {
                        this.selectedIndex = -1
                    }
                }
            }
        })
    };
    c.fn.resetForm = function() {
        return this.each(function() {
            if (typeof this.reset == "function" || (typeof this.reset == "object" && !this.reset.nodeType)) {
                this.reset()
            }
        })
    };
    c.fn.enable = function(d) {
        if (d === undefined) {
            d = true
        }
        return this.each(function() {
            this.disabled = !d
        })
    };
    c.fn.selected = function(d) {
        if (d === undefined) {
            d = true
        }
        return this.each(function() {
            var e = this.type;
            if (e == "checkbox" || e == "radio") {
                this.checked = d
            } else {
                if (this.tagName.toLowerCase() == "option") {
                    var f = c(this).parent("select");
                    if (d && f[0] && f[0].type == "select-one") {
                        f.find("option").selected(false)
                    }
                    this.selected = d
                }
            }
        })
    };

    function b() {
        var d = "[jquery.form] " + Array.prototype.join.call(arguments, "");
        if (window.console && window.console.log) {
            window.console.log(d)
        } else {
            if (window.opera && window.opera.postError) {
                window.opera.postError(d)
            }
        }
    }
})(jQuery);
(function(b) {
    b.extend(b.fn, {
        swapClass: function(f, e) {
            var d = this.filter("." + f);
            this.filter("." + e).removeClass(e).addClass(f);
            d.removeClass(f).addClass(e);
            return this
        },
        replaceClass: function(e, d) {
            return this.filter("." + e).removeClass(e).addClass(d).end()
        },
        hoverClass: function(d) {
            d = d || "hover";
            return this.hover(function() {
                b(this).addClass(d)
            }, function() {
                b(this).removeClass(d)
            })
        },
        heightToggle: function(d, e) {
            d ? this.animate({
                height: "toggle"
            }, d, e) : this.each(function() {
                jQuery(this)[jQuery(this).is(":hidden") ? "show" : "hide"]();
                if (e) {
                    e.apply(this, arguments)
                }
            })
        },
        heightHide: function(d, e) {
            if (d) {
                this.animate({
                    height: "hide"
                }, d, e)
            } else {
                this.hide();
                if (e) {
                    this.each(e)
                }
            }
        },
        prepareBranches: function(d) {
            if (!d.prerendered) {
                this.filter(":last-child:not(ul)").addClass(c.last);
                this.filter((d.collapsed ? "" : "." + c.closed) + ":not(." + c.open + ")").find(">ul").hide()
            }
            return this.filter(":has(>ul)")
        },
        applyClasses: function(e, f) {
            this.filter(":has(>ul):not(:has(>a))").find(">span").unbind("click.treeview").bind("click.treeview", function(g) {
                if (this == g.target) {
                    f.apply(b(this).next())
                }
            }).add(b("a", this)).hoverClass();
            if (!e.prerendered) {
                this.filter(":has(>ul:hidden)").addClass(c.expandable).replaceClass(c.last, c.lastExpandable);
                this.not(":has(>ul:hidden)").addClass(c.collapsable).replaceClass(c.last, c.lastCollapsable);
                var d = this.find("div." + c.hitarea);
                if (!d.length) {
                    d = this.prepend('<div class="' + c.hitarea + '"/>').find("div." + c.hitarea)
                }
                d.removeClass().addClass(c.hitarea).each(function() {
                    var g = "";
                    b.each(b(this).parent().attr("class").split(" "), function() {
                        g += this + "-hitarea "
                    });
                    b(this).addClass(g)
                })
            }
            this.find("div." + c.hitarea).click(f)
        },
        treeview: function(e) {
            e = b.extend({
                cookieId: "treeview"
            }, e);
            if (e.toggle) {
                var n = e.toggle;
                e.toggle = function() {
                    return n.apply(b(this).parent()[0], arguments)
                }
            }

            function d(q, u) {
                function r(v) {
                    return function() {
                        g.apply(b("div." + c.hitarea, q).filter(function() {
                            return v ? b(this).parent("." + v).length : true
                        }));
                        return false
                    }
                }
                b("a:eq(0)", u).click(r(c.collapsable));
                b("a:eq(1)", u).click(r(c.expandable));
                b("a:eq(2)", u).click(r())
            }

            function g() {
                b(this).parent().find(">.hitarea").swapClass(c.collapsableHitarea, c.expandableHitarea).swapClass(c.lastCollapsableHitarea, c.lastExpandableHitarea).end().swapClass(c.collapsable, c.expandable).swapClass(c.lastCollapsable, c.lastExpandable).find(">ul").heightToggle(e.animated, e.toggle);
                if (e.unique) {
                    b(this).parent().siblings().find(">.hitarea").replaceClass(c.collapsableHitarea, c.expandableHitarea).replaceClass(c.lastCollapsableHitarea, c.lastExpandableHitarea).end().replaceClass(c.collapsable, c.expandable).replaceClass(c.lastCollapsable, c.lastExpandable).find(">ul").heightHide(e.animated, e.toggle)
                }
            }
            this.data("toggler", g);

            function p() {
                function r(u) {
                    return u ? 1 : 0
                }
                var q = [];
                o.each(function(u, v) {
                    q[u] = b(v).is(":has(>ul:visible)") ? 1 : 0
                });
                b.cookie(e.cookieId, q.join(""), e.cookieOptions)
            }

            function f() {
                var q = b.cookie(e.cookieId);
                if (q) {
                    var r = q.split("");
                    o.each(function(u, v) {
                        b(v).find(">ul")[parseInt(r[u]) ? "show" : "hide"]()
                    })
                }
            }
            this.addClass("treeview");
            var o = this.find("li").prepareBranches(e);
            switch (e.persist) {
                case "cookie":
                    var m = e.toggle;
                    e.toggle = function() {
                        p();
                        if (m) {
                            m.apply(this, arguments)
                        }
                    };
                    f();
                    break;
                case "location":
                    var h = this.find("a").filter(function() {
                        return this.href.toLowerCase() == location.href.toLowerCase()
                    });
                    if (h.length) {
                        h.addClass("selected").parents("ul, li").add(h.next()).show()
                    }
                    break
            }
            o.applyClasses(e, g);
            if (e.control) {
                d(this, e.control);
                b(e.control).show()
            }
            return this
        }
    });
    b.treeview = {};
    var c = (b.treeview.classes = {
        open: "open",
        closed: "closed",
        expandable: "expandable",
        expandableHitarea: "expandable-hitarea",
        lastExpandableHitarea: "lastExpandable-hitarea",
        collapsable: "collapsable",
        collapsableHitarea: "collapsable-hitarea",
        lastCollapsableHitarea: "lastCollapsable-hitarea",
        lastCollapsable: "lastCollapsable",
        lastExpandable: "lastExpandable",
        last: "last",
        hitarea: "hitarea"
    });
    b.fn.Treeview = b.fn.treeview
})(jQuery);
(function(g) {
    if (/1\.(0|1|2)\.(0|1|2)/.test(g.fn.jquery) || /^1.1/.test(g.fn.jquery)) {
        alert("blockUI requires jQuery v1.2.3 or later!  You are using v" + g.fn.jquery);
        return
    }
    g.fn._fadeIn = g.fn.fadeIn;
    g.blockUI = function(r) {
        d(window, r)
    };
    g.unblockUI = function(r) {
        h(window, r)
    };
    g.growlUI = function(w, u, v) {
        var r = g('<div class="growlUI"></div>');
        if (w) {
            r.append("<h1>" + w + "</h1>")
        }
        if (u) {
            r.append("<h2>" + u + "</h2>")
        }
        if (v == undefined) {
            v = 3000
        }
        g.blockUI({
            message: r,
            fadeIn: 700,
            fadeOut: 1000,
            centerY: false,
            timeout: v,
            showOverlay: false,
            css: g.blockUI.defaults.growlCSS
        })
    };
    g.fn.block = function(r) {
        return this.each(function() {
            if (g.css(this, "position") == "static") {
                this.style.position = "relative"
            }
            if (g.browser.msie) {
                this.style.zoom = 1
            }
            d(this, r)
        })
    };
    g.fn.unblock = function(r) {
        return this.each(function() {
            h(this, r)
        })
    };
    g.blockUI.version = 2.14;
    g.blockUI.defaults = {
        message: "<h1>Please wait...</h1>",
        css: {
            padding: 0,
            margin: 0,
            width: "30%",
            top: "40%",
            left: "35%",
            textAlign: "center",
            color: "#000",
            border: "3px solid #aaa",
            backgroundColor: "#fff",
            cursor: "wait"
        },
        overlayCSS: {
            backgroundColor: "#000",
            opacity: "0.6"
        },
        growlCSS: {
            width: "350px",
            top: "10px",
            left: "",
            right: "10px",
            border: "none",
            padding: "5px",
            opacity: "0.6",
            cursor: null,
            color: "#fff",
            backgroundColor: "#000",
            "-webkit-border-radius": "10px",
            "-moz-border-radius": "10px"
        },
        baseZ: 1000,
        centerX: true,
        centerY: true,
        allowBodyStretch: true,
        constrainTabKey: true,
        fadeIn: 200,
        fadeOut: 400,
        timeout: 0,
        showOverlay: true,
        focusInput: true,
        applyPlatformOpacityRules: true,
        onUnblock: null,
        quirksmodeOffsetHack: 4
    };
    var e = g.browser.msie && /MSIE 6.0/.test(navigator.userAgent);
    var c = null;
    var f = [];

    function d(v, r) {
        var K = (v == window);
        var w = r && r.message !== undefined ? r.message : undefined;
        r = g.extend({}, g.blockUI.defaults, r || {});
        r.overlayCSS = g.extend({}, g.blockUI.defaults.overlayCSS, r.overlayCSS || {});
        var J = g.extend({}, g.blockUI.defaults.css, r.css || {});
        w = w === undefined ? r.message : w;
        if (K && c) {
            h(window, {
                fadeOut: 0
            })
        }
        if (w && typeof w != "string" && (w.parentNode || w.jquery)) {
            var D = w.jquery ? w[0] : w;
            var I = {};
            g(v).data("blockUI.history", I);
            I.el = D;
            I.parent = D.parentNode;
            I.display = D.style.display;
            I.position = D.style.position;
            if (I.parent) {
                I.parent.removeChild(D)
            }
        }
        var L = r.baseZ;
        var H = (g.browser.msie) ? g('<iframe class="blockUI" style="z-index:' + (L++) + ';display:none;border:none;margin:0;padding:0;position:absolute;width:100%;height:100%;top:0;left:0" src="about:blank"></iframe>') : g('<div class="blockUI" style="display:none"></div>');
        var G = g('<div class="blockUI blockOverlay" style="z-index:' + (L++) + ';display:none;cursor:wait;border:none;margin:0;padding:0;width:100%;height:100%;top:0;left:0"></div>');
        var C = K ? g('<div class="blockUI blockMsg blockPage" style="z-index:' + L + ';display:none;position:fixed"></div>') : g('<div class="blockUI blockMsg blockElement" style="z-index:' + L + ';display:none;position:absolute"></div>');
        if (w) {
            C.css(J)
        }
        if (!r.applyPlatformOpacityRules || !(g.browser.mozilla && /Linux/.test(navigator.platform))) {
            G.css(r.overlayCSS)
        }
        G.css("position", K ? "fixed" : "absolute");
        if (g.browser.msie) {
            H.css("opacity", "0.0")
        }
        g([H[0], G[0], C[0]]).appendTo(K ? "body" : v);
        var O = g.browser.msie && (!g.boxModel || g("object,embed", K ? null : v).length > 0);
        if (e || O && C[0].style.setExpression) {
            if (K && r.allowBodyStretch && g.boxModel) {
                g("html,body").css("height", "100%")
            }
            if ((e || !g.boxModel) && !K) {
                var P = o(v, "borderTopWidth"),
                    E = o(v, "borderLeftWidth");
                var N = P ? "(0 - " + P + ")" : 0;
                var u = E ? "(0 - " + E + ")" : 0
            }
            g.each([H, G, C], function(z, T) {
                var Q = T[0].style;
                Q.position = "absolute";
                if (z < 2) {
                    K ? Q.setExpression("height", "Math.max(document.body.scrollHeight, document.body.offsetHeight) - (jQuery.boxModel?0:" + r.quirksmodeOffsetHack + ') + "px"') : Q.setExpression("height", 'this.parentNode.offsetHeight + "px"');
                    K ? Q.setExpression("width", 'jQuery.boxModel && document.documentElement.clientWidth || document.body.clientWidth + "px"') : Q.setExpression("width", 'this.parentNode.offsetWidth + "px"');
                    if (u) {
                        Q.setExpression("left", u)
                    }
                    if (N) {
                        Q.setExpression("top", N)
                    }
                } else {
                    if (r.centerY) {
                        if (K) {
                            Q.setExpression("top", '(document.documentElement.clientHeight || document.body.clientHeight) / 2 - (this.offsetHeight / 2) + (blah = document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + "px"')
                        }
                        Q.marginTop = 0
                    } else {
                        if (!r.centerY && K) {
                            var R = (r.css && r.css.top) ? parseInt(r.css.top) : 0;
                            var S = "((document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop) + " + R + ') + "px"';
                            Q.setExpression("top", S)
                        }
                    }
                }
            })
        }
        if (w) {
            C.append(w);
            if (w.jquery || w.nodeType) {
                g(w).show()
            }
        }
        if (g.browser.msie && r.showOverlay) {
            H.show()
        }
        if (r.fadeIn) {
            if (r.showOverlay) {
                G._fadeIn(r.fadeIn)
            }
            if (w) {
                C.fadeIn(r.fadeIn)
            }
        } else {
            if (r.showOverlay) {
                G.show()
            }
            if (w) {
                C.show()
            }
        }
        n(1, v, r);
        if (K) {
            c = C[0];
            f = g(":input:enabled:visible", c);
            if (r.focusInput) {
                setTimeout(q, 20)
            }
        } else {
            b(C[0], r.centerX, r.centerY)
        }
        if (r.timeout) {
            var M = setTimeout(function() {
                K ? g.unblockUI(r) : g(v).unblock(r)
            }, r.timeout);
            g(v).data("blockUI.timeout", M)
        }
    }

    function h(w, z) {
        var v = w == window;
        var u = g(w);
        var C = u.data("blockUI.history");
        var D = u.data("blockUI.timeout");
        if (D) {
            clearTimeout(D);
            u.removeData("blockUI.timeout")
        }
        z = g.extend({}, g.blockUI.defaults, z || {});
        n(0, w, z);
        var r = v ? g("body").children().filter(".blockUI") : g(".blockUI", w);
        if (v) {
            c = f = null
        }
        if (z.fadeOut) {
            r.fadeOut(z.fadeOut);
            setTimeout(function() {
                m(r, C, z, w)
            }, z.fadeOut)
        } else {
            m(r, C, z, w)
        }
    }

    function m(r, w, v, u) {
        r.each(function(z, C) {
            if (this.parentNode) {
                this.parentNode.removeChild(this)
            }
        });
        if (w && w.el) {
            w.el.style.display = w.display;
            w.el.style.position = w.position;
            if (w.parent) {
                w.parent.appendChild(w.el)
            }
            g(w.el).removeData("blockUI.history")
        }
        if (typeof v.onUnblock == "function") {
            v.onUnblock(u, v)
        }
    }

    function n(r, z, C) {
        var w = z == window,
            v = g(z);
        if (!r && (w && !c || !w && !v.data("blockUI.isBlocked"))) {
            return
        }
        if (!w) {
            v.data("blockUI.isBlocked", r)
        }
        if (r && !C.showOverlay) {
            return
        }
        var u = "mousedown mouseup keydown keypress";
        r ? g(document).bind(u, C, p) : g(document).unbind(u, p)
    }

    function p(w) {
        if (w.keyCode && w.keyCode == 9) {
            if (c && w.data.constrainTabKey) {
                var v = f;
                var u = !w.shiftKey && w.target == v[v.length - 1];
                var r = w.shiftKey && w.target == v[0];
                if (u || r) {
                    setTimeout(function() {
                        q(r)
                    }, 10);
                    return false
                }
            }
        }
        if (g(w.target).parents("div.blockMsg").length > 0) {
            return true
        }
        return g(w.target).parents().children().filter("div.blockUI").length == 0
    }

    function q(r) {
        if (!f) {
            return
        }
        var u = f[r === true ? f.length - 1 : 0];
        if (u) {
            u.focus()
        }
    }

    function b(z, r, D) {
        var C = z.parentNode,
            w = z.style;
        var u = ((C.offsetWidth - z.offsetWidth) / 2) - o(C, "borderLeftWidth");
        var v = ((C.offsetHeight - z.offsetHeight) / 2) - o(C, "borderTopWidth");
        if (r) {
            w.left = u > 0 ? (u + "px") : "0"
        }
        if (D) {
            w.top = v > 0 ? (v + "px") : "0"
        }
    }

    function o(r, u) {
        return parseInt(g.css(r, u)) || 0
    }
})(jQuery);
(function(d) {
    d.fn.ajaxContent = function(e) {
        var f = d.extend({}, d.fn.ajaxContent.defaults, e);
        if (f.debug == "true") {
            b(this)
        }
        return this.each(function() {
            var u = d(this);
            var h = u.attr("href");
            var q = d.metadata ? d.extend({}, f, u.metadata()) : f;
            if (q.bind != "") {
                var p = q.bind.split(",");
                for (var n = 0; n < p.length; n++) {
                    var r = c(p);
                    var m = h + r;
                    u.attr({
                        href: m
                    });
                    if (d(p[n]).attr("type") == "radio" || d(p[n]).attr("type") == "checkbox") {
                        d("input[name=" + d(p[n]).attr("name") + "]").change(function() {
                            var v = c(p);
                            var o = h + v;
                            u.attr({
                                href: o
                            })
                        })
                    } else {
                        d(p[n]).change(function() {
                            var v = c(p);
                            var o = h + v;
                            u.attr({
                                href: o
                            })
                        })
                    }
                }
            }
            var g = d(q.target);
            u.bind(q.event, function(o) {
                if (q.loader == "true") {
                    if (q.loaderType == "img") {
                        g.html('<img src="' + q.loadingMsg + '"/>')
                    } else {
                        g.html(q.loadingMsg)
                    }
                }
                d("a." + q.currentClass).removeClass(q.currentClass);
                u.addClass(q.currentClass);
                d.ajax({
                    type: q.type,
                    url: u.attr("href"),
                    cache: "false",
                    beforeSend: function() {
                        if (typeof q.beforeSend == "function") {
                            q.beforeSend(u, g, o)
                        }
                    },
                    success: function(v) {
                        g.html(v);
                        if (q.extend == "true") {
                            d(q.filter, g).ajaxContent({
                                target: q.ex_target,
                                type: q.ex_type,
                                event: q.ex_event,
                                loader: q.ex_loader,
                                loaderType: q.ex_loaderType,
                                loadingMsg: q.ex_loadingMsg,
                                errorMsg: q.ex_errorMsg,
                                currentClass: q.ex_currentClass,
                                success: q.ex_success,
                                beforeSend: q.ex_beforeSend,
                                error: q.ex_error,
                                bind: q.ex_bind
                            })
                        }
                        if (typeof q.success == "function") {
                            q.success(u, g, v)
                        }
                    },
                    error: function() {
                        g.html("<p>" + q.errorMsg + "</p>");
                        if (typeof q.error == "function") {
                            q.error(g)
                        }
                    }
                });
                return false
            })
        })
    };

    function b(e) {
        if (window.console && window.console.log) {
            window.console.log("selection count: " + e.size() + "  with class:" + e.attr("class"))
        }
    }

    function c(f) {
        var g = "&";
        for (var e = 0; e < f.length; e++) {
            if (d(f[e]).attr("type") == "radio") {
                g += d("input[name=" + d(f[e]).attr("name") + "]").fieldSerialize()
            } else {
                if (d(f[e]).attr("type") == "checkbox") {
                    g += d(f[e]).attr("name") + "=" + d("input[name=" + d(f[e]).attr("name") + "]").fieldValue()
                } else {
                    g += d(f[e]).fieldSerialize()
                }
            }
            if (e != f.length - 1) {
                g += "&"
            }
        }
        return g
    }
})(jQuery);
$.fn.ajaxContent.defaults = {
    target: "#ajaxContent",
    type: "get",
    event: "click",
    loader: "true",
    loaderType: "text",
    loadingMsg: "Loading...",
    errorMsg: "An error occured durign the page requesting process!",
    currentClass: "selected",
    success: "",
    beforeSend: "",
    error: "",
    bind: "",
    debug: "false",
    extend: "false",
    filter: "",
    ex_target: "",
    ex_type: "get",
    ex_event: "click",
    ex_loader: "true",
    ex_loaderType: "text",
    ex_loadingMsg: "Loading...",
    ex_errorMsg: "An error occured durign the page requesting process!",
    ex_currentClass: "selected",
    ex_success: "",
    ex_beforeSend: "",
    ex_error: "",
    ex_bind: ""
};
jQuery.fn.pagination = function(b, c) {
    c = jQuery.extend({
        items_per_page: 10,
        num_display_entries: 10,
        current_page: 0,
        num_edge_entries: 0,
        link_to: "#",
        prev_text: "Prev",
        next_text: "Next",
        ellipse_text: "...",
        prev_show_always: true,
        next_show_always: true,
        callback: function() {
            return false
        }
    }, c || {});
    return this.each(function() {
        function g() {
            return Math.ceil(b / c.items_per_page)
        }

        function m() {
            var p = Math.ceil(c.num_display_entries / 2);
            var q = g();
            var o = q - c.num_display_entries;
            var r = h > p ? Math.max(Math.min(h - p, o), 0) : 0;
            var n = h > p ? Math.min(h + p, q) : Math.min(c.num_display_entries, q);
            return [r, n]
        }

        function f(o, n) {
            h = o;
            d();
            var p = c.callback(o, e);
            if (!p) {
                if (n.stopPropagation) {
                    n.stopPropagation()
                } else {
                    n.cancelBubble = true
                }
            }
            return p
        }

        function d() {
            e.empty();
            var o = m();
            var u = g();
            var v = function(w) {
                return function(z) {
                    return f(w, z)
                }
            };
            var r = function(w, z) {
                w = w < 0 ? 0 : (w < u ? w : u - 1);
                z = jQuery.extend({
                    text: w + 1,
                    classes: ""
                }, z || {});
                if (w == h) {
                    var C = $("<span class='current'>" + (z.text) + "</span>")
                } else {
                    var C = $("<a>" + (z.text) + "</a>").bind("click", v(w)).attr("href", c.link_to.replace(/__id__/, w))
                }
                if (z.classes) {
                    C.addClass(z.classes)
                }
                e.append(C)
            };
            if (c.prev_text && (h > 0 || c.prev_show_always)) {
                r(h - 1, {
                    text: c.prev_text,
                    classes: "prev"
                })
            }
            if (c.next_text && (h < u - 1 || c.next_show_always)) {
                r(h + 1, {
                    text: c.next_text,
                    classes: "next"
                })
            }
            if (o[0] > 0 && c.num_edge_entries > 0) {
                var n = Math.min(c.num_edge_entries, o[0]);
                for (var p = 0; p < n; p++) {
                    r(p)
                }
                if (c.num_edge_entries < o[0] && c.ellipse_text) {
                    jQuery("<span>" + c.ellipse_text + "</span>").appendTo(e)
                }
            }
            for (var p = o[0]; p < o[1]; p++) {
                r(p)
            }
            if (o[1] < u && c.num_edge_entries > 0) {
                if (u - c.num_edge_entries > o[1] && c.ellipse_text) {
                    jQuery("<span>" + c.ellipse_text + "</span>").appendTo(e)
                }
                var q = Math.max(u - c.num_edge_entries, o[1]);
                for (var p = q; p < u; p++) {
                    r(p)
                }
            }
        }
        var h = c.current_page;
        b = (!b || b < 0) ? 1 : b;
        c.items_per_page = (!c.items_per_page || c.items_per_page < 0) ? 1 : c.items_per_page;
        var e = jQuery(this);
        this.selectPage = function(n) {
            f(n)
        };
        this.prevPage = function() {
            if (h > 0) {
                f(h - 1);
                return true
            } else {
                return false
            }
        };
        this.nextPage = function() {
            if (h < g() - 1) {
                f(h + 1);
                return true
            } else {
                return false
            }
        };
        d()
    })
};
(function(f) {
    var c = {},
        p, r, v, o = f.browser.msie && /MSIE\s(5\.5|6\.)/.test(navigator.userAgent),
        b = false;
    f.tooltip = {
        blocked: false,
        defaults: {
            delay: 200,
            fade: false,
            showURL: true,
            extraClass: "",
            top: 15,
            left: 15,
            id: "tooltip"
        },
        block: function() {
            f.tooltip.blocked = !f.tooltip.blocked
        }
    };
    f.fn.extend({
        tooltip: function(w) {
            w = f.extend({}, f.tooltip.defaults, w);
            m(w);
            return this.each(function() {
                f.data(this, "tooltip", w);
                this.tOpacity = c.parent.css("opacity");
                this.tooltipText = this.title;
                f(this).removeAttr("title");
                this.alt = ""
            }).mouseover(q).mouseout(g).click(g)
        },
        fixPNG: o ? function() {
            return this.each(function() {
                var w = f(this).css("backgroundImage");
                if (w.match(/^url\(["']?(.*\.png)["']?\)$/i)) {
                    w = RegExp.$1;
                    f(this).css({
                        backgroundImage: "none",
                        filter: "progid:DXImageTransform.Microsoft.AlphaImageLoader(enabled=true, sizingMethod=crop, src='" + w + "')"
                    }).each(function() {
                        var z = f(this).css("position");
                        if (z != "absolute" && z != "relative") {
                            f(this).css("position", "relative")
                        }
                    })
                }
            })
        } : function() {
            return this
        },
        unfixPNG: o ? function() {
            return this.each(function() {
                f(this).css({
                    filter: "",
                    backgroundImage: ""
                })
            })
        } : function() {
            return this
        },
        hideWhenEmpty: function() {
            return this.each(function() {
                f(this)[f(this).html() ? "show" : "hide"]()
            })
        },
        url: function() {
            return this.attr("href") || this.attr("src")
        }
    });

    function m(w) {
        if (c.parent) {
            return
        }
        c.parent = f('<div id="' + w.id + '"><h3></h3><div class="body"></div><div class="url"></div></div>').appendTo(document.body).hide();
        if (f.fn.bgiframe) {
            c.parent.bgiframe()
        }
        c.title = f("h3", c.parent);
        c.body = f("div.body", c.parent);
        c.url = f("div.url", c.parent)
    }

    function d(w) {
        return f.data(w, "tooltip")
    }

    function h(w) {
        if (d(this).delay) {
            v = setTimeout(u, d(this).delay)
        } else {
            u()
        }
        b = !!d(this).track;
        f(document.body).bind("mousemove", e);
        e(w)
    }

    function q() {
        if (f.tooltip.blocked || this == p || (!this.tooltipText && !d(this).bodyHandler)) {
            return
        }
        p = this;
        r = this.tooltipText;
        if (d(this).bodyHandler) {
            c.title.hide();
            var D = d(this).bodyHandler.call(this);
            if (D.nodeType || D.jquery) {
                c.body.empty().append(D)
            } else {
                c.body.html(D)
            }
            c.body.show()
        } else {
            if (d(this).showBody) {
                var C = r.split(d(this).showBody);
                c.title.html(C.shift()).show();
                c.body.empty();
                for (var z = 0, w;
                    (w = C[z]); z++) {
                    if (z > 0) {
                        c.body.append("<br/>")
                    }
                    c.body.append(w)
                }
                c.body.hideWhenEmpty()
            } else {
                c.title.html(r).show();
                c.body.hide()
            }
        }
        if (d(this).showURL && f(this).url()) {
            c.url.html(f(this).url().replace("http://", "")).show()
        } else {
            c.url.hide()
        }
        c.parent.addClass(d(this).extraClass);
        if (d(this).fixPNG) {
            c.parent.fixPNG()
        }
        h.apply(this, arguments)
    }

    function u() {
        v = null;
        if ((!o || !f.fn.bgiframe) && d(p).fade) {
            if (c.parent.is(":animated")) {
                c.parent.stop().show().fadeTo(d(p).fade, p.tOpacity)
            } else {
                c.parent.is(":visible") ? c.parent.fadeTo(d(p).fade, p.tOpacity) : c.parent.fadeIn(d(p).fade)
            }
        } else {
            c.parent.show()
        }
        e()
    }

    function e(D) {
        if (f.tooltip.blocked) {
            return
        }
        if (D && D.target.tagName == "OPTION") {
            return
        }
        if (!b && c.parent.is(":visible")) {
            f(document.body).unbind("mousemove", e)
        }
        if (p == null) {
            f(document.body).unbind("mousemove", e);
            return
        }
        c.parent.removeClass("viewport-right").removeClass("viewport-bottom");
        var G = c.parent[0].offsetLeft;
        var E = c.parent[0].offsetTop;
        if (D) {
            G = D.pageX + d(p).left;
            E = D.pageY + d(p).top;
            var z = "auto";
            if (d(p).positionLeft) {
                z = f(window).width() - G;
                G = "auto"
            }
            c.parent.css({
                left: G,
                right: z,
                top: E
            })
        }
        var w = n(),
            C = c.parent[0];
        if (w.x + w.cx < C.offsetLeft + C.offsetWidth) {
            G -= C.offsetWidth + 20 + d(p).left;
            c.parent.css({
                left: G + "px"
            }).addClass("viewport-right")
        }
        if (w.y + w.cy < C.offsetTop + C.offsetHeight) {
            E -= C.offsetHeight + 20 + d(p).top;
            c.parent.css({
                top: E + "px"
            }).addClass("viewport-bottom")
        }
    }

    function n() {
        return {
            x: f(window).scrollLeft(),
            y: f(window).scrollTop(),
            cx: f(window).width(),
            cy: f(window).height()
        }
    }

    function g(C) {
        if (f.tooltip.blocked) {
            return
        }
        if (v) {
            clearTimeout(v)
        }
        p = null;
        var z = d(this);

        function w() {
            c.parent.removeClass(z.extraClass).hide().css("opacity", "")
        }
        if ((!o || !f.fn.bgiframe) && z.fade) {
            if (c.parent.is(":animated")) {
                c.parent.stop().fadeTo(z.fade, 0, w)
            } else {
                c.parent.stop().fadeOut(z.fade, w)
            }
        } else {
            w()
        }
        if (d(this).fixPNG) {
            c.parent.unfixPNG()
        }
    }
})(jQuery);
(function(b) {
    b.fn.extend({
        autocomplete: function(c, d) {
            var e = typeof c == "string";
            d = b.extend({}, b.Autocompleter.defaults, {
                url: e ? c : null,
                data: e ? null : c,
                delay: e ? b.Autocompleter.defaults.delay : 10,
                max: d && !d.scroll ? 10 : 150
            }, d);
            d.highlight = d.highlight || function(f) {
                return f
            };
            d.formatMatch = d.formatMatch || d.formatItem;
            return this.each(function() {
                new b.Autocompleter(this, d)
            })
        },
        result: function(c) {
            return this.bind("result", c)
        },
        search: function(c) {
            return this.trigger("search", [c])
        },
        flushCache: function() {
            return this.trigger("flushCache")
        },
        setOptions: function(c) {
            return this.trigger("setOptions", [c])
        },
        unautocomplete: function() {
            return this.trigger("unautocomplete")
        }
    });
    b.Autocompleter = function(q, h) {
        var d = {
            UP: 38,
            DOWN: 40,
            DEL: 46,
            TAB: 9,
            RETURN: 13,
            ESC: 27,
            COMMA: 188,
            PAGEUP: 33,
            PAGEDOWN: 34,
            BACKSPACE: 8
        };
        var c = b(q).attr("autocomplete", "off").addClass(h.inputClass);
        var o;
        var w = "";
        var r = b.Autocompleter.Cache(h);
        var f = 0;
        var G;
        var J = {
            mouseDownOnSelect: false
        };
        var C = b.Autocompleter.Select(h, q, e, J);
        var I;
        b.browser.opera && b(q.form).bind("submit.autocomplete", function() {
            if (I) {
                I = false;
                return false
            }
        });
        c.bind((b.browser.opera ? "keypress" : "keydown") + ".autocomplete", function(K) {
            f = 1;
            G = K.keyCode;
            switch (K.keyCode) {
                case d.UP:
                    K.preventDefault();
                    if (C.visible()) {
                        C.prev()
                    } else {
                        E(0, true)
                    }
                    break;
                case d.DOWN:
                    K.preventDefault();
                    if (C.visible()) {
                        C.next()
                    } else {
                        E(0, true)
                    }
                    break;
                case d.PAGEUP:
                    K.preventDefault();
                    if (C.visible()) {
                        C.pageUp()
                    } else {
                        E(0, true)
                    }
                    break;
                case d.PAGEDOWN:
                    K.preventDefault();
                    if (C.visible()) {
                        C.pageDown()
                    } else {
                        E(0, true)
                    }
                    break;
                case h.multiple && b.trim(h.multipleSeparator) == "," && d.COMMA:
                case d.TAB:
                case d.RETURN:
                    if (e()) {
                        K.preventDefault();
                        I = true;
                        return false
                    }
                    break;
                case d.ESC:
                    C.hide();
                    break;
                default:
                    clearTimeout(o);
                    o = setTimeout(E, h.delay);
                    break
            }
        }).focus(function() {
            f++
        }).blur(function() {
            f = 0;
            if (!J.mouseDownOnSelect) {
                D()
            }
        }).click(function() {
            if (f++ > 1 && !C.visible()) {
                E(0, true)
            }
        }).bind("search", function() {
            var K = (arguments.length > 1) ? arguments[1] : null;

            function L(P, O) {
                var M;
                if (O && O.length) {
                    for (var N = 0; N < O.length; N++) {
                        if (O[N].result.toLowerCase() == P.toLowerCase()) {
                            M = O[N];
                            break
                        }
                    }
                }
                if (typeof K == "function") {
                    K(M)
                } else {
                    c.trigger("result", M && [M.data, M.value])
                }
            }
            b.each(m(c.val()), function(M, N) {
                g(N, L, L)
            })
        }).bind("flushCache", function() {
            r.flush()
        }).bind("setOptions", function() {
            b.extend(h, arguments[1]);
            if ("data" in arguments[1]) {
                r.populate()
            }
        }).bind("unautocomplete", function() {
            C.unbind();
            c.unbind();
            b(q.form).unbind(".autocomplete")
        });

        function e() {
            var N = C.selected();
            if (!N) {
                return false
            }
            var K = N.result;
            w = K;
            if (h.multiple) {
                var Q = m(c.val());
                if (Q.length > 1) {
                    var M = h.multipleSeparator.length;
                    var P = b(q).selection().start;
                    var O, L = 0;
                    b.each(Q, function(R, S) {
                        L += S.length;
                        if (P <= L) {
                            O = R;
                            return false
                        }
                        L += M
                    });
                    Q[O] = K;
                    K = Q.join(h.multipleSeparator)
                }
                K += h.multipleSeparator
            }
            c.val(K);
            H();
            c.trigger("result", [N.data, N.value]);
            return true
        }

        function E(M, L) {
            if (G == d.DEL) {
                C.hide();
                return
            }
            var K = c.val();
            if (!L && K == w) {
                return
            }
            w = K;
            K = n(K);
            if (K.length >= h.minChars) {
                c.addClass(h.loadingClass);
                if (!h.matchCase) {
                    K = K.toLowerCase()
                }
                g(K, p, H)
            } else {
                u();
                C.hide()
            }
        }

        function m(K) {
            if (!K) {
                return [""]
            }
            if (!h.multiple) {
                return [b.trim(K)]
            }
            return b.map(K.split(h.multipleSeparator), function(L) {
                return b.trim(K).length ? b.trim(L) : null
            })
        }

        function n(K) {
            if (!h.multiple) {
                return K
            }
            var M = m(K);
            if (M.length == 1) {
                return M[0]
            }
            var L = b(q).selection().start;
            if (L == K.length) {
                M = m(K)
            } else {
                M = m(K.replace(K.substring(L), ""))
            }
            return M[M.length - 1]
        }

        function z(K, L) {
            if (h.autoFill && (n(c.val()).toLowerCase() == K.toLowerCase()) && G != d.BACKSPACE) {
                c.val(c.val() + L.substring(n(w).length));
                b(q).selection(w.length, w.length + L.length)
            }
        }

        function D() {
            clearTimeout(o);
            o = setTimeout(H, 200)
        }

        function H() {
            var K = C.visible();
            C.hide();
            clearTimeout(o);
            u();
            if (h.mustMatch) {
                c.search(function(L) {
                    if (!L) {
                        if (h.multiple) {
                            var M = m(c.val()).slice(0, -1);
                            c.val(M.join(h.multipleSeparator) + (M.length ? h.multipleSeparator : ""))
                        } else {
                            c.val("");
                            c.trigger("result", null)
                        }
                    }
                })
            }
        }

        function p(L, K) {
            if (K && K.length && f) {
                u();
                C.display(K, L);
                z(L, K[0].value);
                C.show()
            } else {
                H()
            }
        }

        function g(L, N, K) {
            if (!h.matchCase) {
                L = L.toLowerCase()
            }
            var M = r.load(L);
            if (M && M.length) {
                N(L, M)
            } else {
                if ((typeof h.url == "string") && (h.url.length > 0)) {
                    var O = {
                        timestamp: +new Date()
                    };
                    b.each(h.extraParams, function(P, Q) {
                        O[P] = typeof Q == "function" ? Q() : Q
                    });
                    b.ajax({
                        type: "post",
                        mode: "abort",
                        port: "autocomplete" + q.name,
                        dataType: h.dataType,
                        url: h.url,
                        data: b.extend({
                            q: n(L),
                            limit: h.max
                        }, O),
                        success: function(Q) {
                            var P = h.parse && h.parse(Q) || v(Q);
                            r.add(L, P);
                            N(L, P)
                        }
                    })
                } else {
                    C.emptyList();
                    K(L)
                }
            }
        }

        function v(N) {
            var K = [];
            var M = N.split("\n");
            for (var L = 0; L < M.length; L++) {
                var O = b.trim(M[L]);
                if (O) {
                    O = O.split("|");
                    K[K.length] = {
                        data: O,
                        value: O[0],
                        result: h.formatResult && h.formatResult(O, O[0]) || O[0]
                    }
                }
            }
            return K
        }

        function u() {
            c.removeClass(h.loadingClass)
        }
    };
    b.Autocompleter.defaults = {
        inputClass: "ac_input",
        resultsClass: "ac_results",
        loadingClass: "ac_loading",
        minChars: 1,
        delay: 400,
        matchCase: false,
        matchSubset: true,
        matchContains: false,
        cacheLength: 10,
        max: 100,
        mustMatch: false,
        extraParams: {},
        selectFirst: true,
        formatItem: function(c) {
            return c[0]
        },
        formatMatch: null,
        autoFill: false,
        width: 0,
        multiple: false,
        multipleSeparator: ", ",
        highlight: function(d, c) {
            return d.replace(new RegExp("(?![^&;]+;)(?!<[^<>]*)(" + c.replace(/([\^\$\(\)\[\]\{\}\*\.\+\?\|\\])/gi, "\\$1") + ")(?![^<>]*>)(?![^&;]+;)", "gi"), "<strong>$1</strong>")
        },
        scroll: true,
        scrollHeight: 180
    };
    b.Autocompleter.Cache = function(d) {
        var g = {};
        var e = 0;

        function m(p, o) {
            if (!d.matchCase) {
                p = p.toLowerCase()
            }
            var n = p.indexOf(o);
            if (d.matchContains == "word") {
                n = p.toLowerCase().search("\\b" + o.toLowerCase())
            }
            if (n == -1) {
                return false
            }
            return n == 0 || d.matchContains
        }

        function h(o, n) {
            if (e > d.cacheLength) {
                c()
            }
            if (!g[o]) {
                e++
            }
            g[o] = n
        }

        function f() {
            if (!d.data) {
                return false
            }
            var o = {},
                n = 0;
            if (!d.url) {
                d.cacheLength = 1
            }
            o[""] = [];
            for (var q = 0, p = d.data.length; q < p; q++) {
                var v = d.data[q];
                v = (typeof v == "string") ? [v] : v;
                var u = d.formatMatch(v, q + 1, d.data.length);
                if (u === false) {
                    continue
                }
                var r = u.charAt(0).toLowerCase();
                if (!o[r]) {
                    o[r] = []
                }
                var w = {
                    value: u,
                    data: v,
                    result: d.formatResult && d.formatResult(v) || u
                };
                o[r].push(w);
                if (n++ < d.max) {
                    o[""].push(w)
                }
            }
            b.each(o, function(z, C) {
                d.cacheLength++;
                h(z, C)
            })
        }
        setTimeout(f, 25);

        function c() {
            g = {};
            e = 0
        }
        return {
            flush: c,
            add: h,
            populate: f,
            load: function(r) {
                if (!d.cacheLength || !e) {
                    return null
                }
                if (!d.url && d.matchContains) {
                    var p = [];
                    for (var n in g) {
                        if (n.length > 0) {
                            var u = g[n];
                            b.each(u, function(v, q) {
                                if (m(q.value, r)) {
                                    p.push(q)
                                }
                            })
                        }
                    }
                    return p
                } else {
                    if (g[r]) {
                        return g[r]
                    } else {
                        if (d.matchSubset) {
                            for (var o = r.length - 1; o >= d.minChars; o--) {
                                var u = g[r.substr(0, o)];
                                if (u) {
                                    var p = [];
                                    b.each(u, function(v, q) {
                                        if (m(q.value, r)) {
                                            p[p.length] = q
                                        }
                                    });
                                    return p
                                }
                            }
                        }
                    }
                }
                return null
            }
        }
    };
    b.Autocompleter.Select = function(f, o, q, w) {
        var n = {
            ACTIVE: "ac_over"
        };
        var p, g = -1,
            C, r = "",
            D = true,
            d, v;

        function u() {
            if (!D) {
                return
            }
            d = b("<div/>").hide().addClass(f.resultsClass).css("position", "absolute").appendTo(document.body);
            v = b("<ul/>").appendTo(d).mouseover(function(E) {
                if (z(E).nodeName && z(E).nodeName.toUpperCase() == "LI") {
                    g = b("li", v).removeClass(n.ACTIVE).index(z(E));
                    b(z(E)).addClass(n.ACTIVE)
                }
            }).click(function(E) {
                b(z(E)).addClass(n.ACTIVE);
                q();
                o.focus();
                return false
            }).mousedown(function() {
                w.mouseDownOnSelect = true
            }).mouseup(function() {
                w.mouseDownOnSelect = false
            });
            if (f.width > 0) {
                d.css("width", f.width)
            }
            D = false
        }

        function z(G) {
            var E = G.target;
            while (E && E.tagName != "LI") {
                E = E.parentNode
            }
            if (!E) {
                return []
            }
            return E
        }

        function m(E) {
            p.slice(g, g + 1).removeClass(n.ACTIVE);
            h(E);
            var H = p.slice(g, g + 1).addClass(n.ACTIVE);
            if (f.scroll) {
                var G = 0;
                p.slice(0, g).each(function() {
                    G += this.offsetHeight
                });
                if ((G + H[0].offsetHeight - v.scrollTop()) > v[0].clientHeight) {
                    v.scrollTop(G + H[0].offsetHeight - v.innerHeight())
                } else {
                    if (G < v.scrollTop()) {
                        v.scrollTop(G)
                    }
                }
            }
        }

        function h(E) {
            g += E;
            if (g < 0) {
                g = p.size() - 1
            } else {
                if (g >= p.size()) {
                    g = 0
                }
            }
        }

        function c(E) {
            return f.max && f.max < E ? f.max : E
        }

        function e() {
            v.empty();
            var G = c(C.length);
            for (var H = 0; H < G; H++) {
                if (!C[H]) {
                    continue
                }
                var I = f.formatItem(C[H].data, H + 1, G, C[H].value, r);
                if (I === false) {
                    continue
                }
                var E = b("<li/>").html(f.highlight(I, r)).addClass(H % 2 == 0 ? "ac_even" : "ac_odd").appendTo(v)[0];
                b.data(E, "ac_data", C[H])
            }
            p = v.find("li");
            if (f.selectFirst) {
                p.slice(0, 1).addClass(n.ACTIVE);
                g = 0
            }
            if (b.fn.bgiframe) {
                v.bgiframe()
            }
        }
        return {
            display: function(G, E) {
                u();
                C = G;
                r = E;
                e()
            },
            next: function() {
                m(1)
            },
            prev: function() {
                m(-1)
            },
            pageUp: function() {
                if (g != 0 && g - 8 < 0) {
                    m(-g)
                } else {
                    m(-8)
                }
            },
            pageDown: function() {
                if (g != p.size() - 1 && g + 8 > p.size()) {
                    m(p.size() - 1 - g)
                } else {
                    m(8)
                }
            },
            hide: function() {
                d && d.hide();
                p && p.removeClass(n.ACTIVE);
                g = -1
            },
            visible: function() {
                return d && d.is(":visible")
            },
            current: function() {
                return this.visible() && (p.filter("." + n.ACTIVE)[0] || f.selectFirst && p[0])
            },
            show: function() {
                var H = b(o).offset();
                d.css({
                    width: typeof f.width == "string" || f.width > 0 ? f.width : b(o).width(),
                    top: H.top + o.offsetHeight,
                    left: H.left
                }).show();
                if (f.scroll) {
                    v.scrollTop(0);
                    v.css({
                        maxHeight: f.scrollHeight,
                        overflow: "auto"
                    });
                    if (b.browser.msie && typeof document.body.style.maxHeight === "undefined") {
                        var E = 0;
                        p.each(function() {
                            E += this.offsetHeight
                        });
                        var G = E > f.scrollHeight;
                        v.css("height", G ? f.scrollHeight : E);
                        if (!G) {
                            p.width(v.width() - parseInt(p.css("padding-left")) - parseInt(p.css("padding-right")))
                        }
                    }
                }
            },
            selected: function() {
                var E = p && p.filter("." + n.ACTIVE).removeClass(n.ACTIVE);
                return E && E.length && b.data(E[0], "ac_data")
            },
            emptyList: function() {
                v && v.empty()
            },
            unbind: function() {
                d && d.remove()
            }
        }
    };
    b.fn.selection = function(n, c) {
        if (n !== undefined) {
            return this.each(function() {
                if (this.createTextRange) {
                    var o = this.createTextRange();
                    if (c === undefined || n == c) {
                        o.move("character", n);
                        o.select()
                    } else {
                        o.collapse(true);
                        o.moveStart("character", n);
                        o.moveEnd("character", c);
                        o.select()
                    }
                } else {
                    if (this.setSelectionRange) {
                        this.setSelectionRange(n, c)
                    } else {
                        if (this.selectionStart) {
                            this.selectionStart = n;
                            this.selectionEnd = c
                        }
                    }
                }
            })
        }
        var h = this[0];
        if (h.createTextRange) {
            var d = document.selection.createRange(),
                m = h.value,
                g = "<->",
                e = d.text.length;
            d.text = g;
            var f = h.value.indexOf(g);
            h.value = m;
            this.selection(f, f + e);
            return {
                start: f,
                end: f + e
            }
        } else {
            if (h.selectionStart !== undefined) {
                return {
                    start: h.selectionStart,
                    end: h.selectionEnd
                }
            }
        }
    }
})(jQuery);
if (!WYMeditor) {
    var WYMeditor = {}
}
jQuery.extend(WYMeditor, {
    VERSION: "0.5-a1",
    INSTANCES: [],
    STRINGS: [],
    SKINS: [],
    NAME: "name",
    INDEX: "{Wym_Index}",
    BASE_PATH: "{Wym_Base_Path}",
    CSS_PATH: "{Wym_Css_Path}",
    WYM_PATH: "{Wym_Wym_Path}",
    SKINS_DEFAULT_PATH: "skins/",
    SKINS_DEFAULT_CSS: "skin.css",
    SKINS_DEFAULT_JS: "skin.js",
    LANG_DEFAULT_PATH: "lang/",
    IFRAME_BASE_PATH: "{Wym_Iframe_Base_Path}",
    IFRAME_DEFAULT: "iframe/default/",
    JQUERY_PATH: "{Wym_Jquery_Path}",
    LOGO: "{Wym_Logo}",
    TOOLS: "{Wym_Tools}",
    TOOLS_ITEMS: "{Wym_Tools_Items}",
    TOOL_NAME: "{Wym_Tool_Name}",
    TOOL_TITLE: "{Wym_Tool_Title}",
    TOOL_CLASS: "{Wym_Tool_Class}",
    CLASSES: "{Wym_Classes}",
    CLASSES_ITEMS: "{Wym_Classes_Items}",
    CLASS_NAME: "{Wym_Class_Name}",
    CLASS_TITLE: "{Wym_Class_Title}",
    CONTAINERS: "{Wym_Containers}",
    CONTAINERS_ITEMS: "{Wym_Containers_Items}",
    CONTAINER_NAME: "{Wym_Container_Name}",
    CONTAINER_TITLE: "{Wym_Containers_Title}",
    CONTAINER_CLASS: "{Wym_Container_Class}",
    HTML: "{Wym_Html}",
    IFRAME: "{Wym_Iframe}",
    STATUS: "{Wym_Status}",
    DIALOG_TITLE: "{Wym_Dialog_Title}",
    DIALOG_BODY: "{Wym_Dialog_Body}",
    STRING: "string",
    BODY: "body",
    DIV: "div",
    P: "p",
    H1: "h1",
    H2: "h2",
    H3: "h3",
    H4: "h4",
    H5: "h5",
    H6: "h6",
    PRE: "pre",
    BLOCKQUOTE: "blockquote",
    A: "a",
    BR: "br",
    IMG: "img",
    TABLE: "table",
    TD: "td",
    TH: "th",
    UL: "ul",
    OL: "ol",
    LI: "li",
    CLASS: "class",
    HREF: "href",
    SRC: "src",
    TITLE: "title",
    ALT: "alt",
    DIALOG_LINK: "Link",
    DIALOG_IMAGE: "Image",
    DIALOG_TABLE: "Table",
    DIALOG_PASTE: "Paste_From_Word",
    BOLD: "Bold",
    ITALIC: "Italic",
    CREATE_LINK: "CreateLink",
    INSERT_IMAGE: "InsertImage",
    INSERT_TABLE: "InsertTable",
    PASTE: "Paste",
    INDENT: "Indent",
    OUTDENT: "Outdent",
    TOGGLE_HTML: "ToggleHtml",
    FORMAT_BLOCK: "FormatBlock",
    PREVIEW: "Preview",
    UNLINK: "Unlink",
    INSERT_UNORDEREDLIST: "InsertUnorderedList",
    INSERT_ORDEREDLIST: "InsertOrderedList",
    MAIN_CONTAINERS: new Array("p", "h1", "h2", "h3", "h4", "h5", "h6", "pre", "blockquote"),
    BLOCKS: new Array("address", "blockquote", "div", "dl", "fieldset", "form", "h1", "h2", "h3", "h4", "h5", "h6", "hr", "noscript", "ol", "p", "pre", "table", "ul", "dd", "dt", "li", "tbody", "td", "tfoot", "th", "thead", "tr"),
    KEY: {
        BACKSPACE: 8,
        ENTER: 13,
        END: 35,
        HOME: 36,
        LEFT: 37,
        UP: 38,
        RIGHT: 39,
        DOWN: 40,
        CURSOR: new Array(37, 38, 39, 40),
        DELETE: 46
    },
    NODE: {
        ELEMENT: 1,
        ATTRIBUTE: 2,
        TEXT: 3
    },
    editor: function(c, b) {
        this._index = WYMeditor.INSTANCES.push(this) - 1;
        this._element = c;
        this._options = b;
        this._html = jQuery(c).val();
        if (this._options.html) {
            this._html = this._options.html
        }
        this._options.basePath = this._options.basePath || this.computeBasePath();
        this._options.skinPath = this._options.skinPath || this._options.basePath + WYMeditor.SKINS_DEFAULT_PATH + this._options.skin + "/";
        this._options.wymPath = this._options.wymPath || this.computeWymPath();
        this._options.langPath = this._options.langPath || this._options.basePath + WYMeditor.LANG_DEFAULT_PATH;
        this._options.iframeBasePath = this._options.iframeBasePath || this._options.basePath + WYMeditor.IFRAME_DEFAULT;
        this._options.jQueryPath = this._options.jQueryPath || this.computeJqueryPath();
        this.selection = new WYMeditor.WymSelection();
        this.init()
    }
});
jQuery.fn.wymeditor = function(b) {
    b = jQuery.extend({
        html: "",
        basePath: false,
        skinPath: false,
        wymPath: false,
        iframeBasePath: false,
        jQueryPath: false,
        styles: false,
        stylesheet: false,
        skin: "default",
        initSkin: true,
        loadSkin: true,
        lang: "en",
        boxHtml: "<div class='wym_box'><div class='wym_area_top'>" + WYMeditor.TOOLS + "</div><div class='wym_area_left'></div><div class='wym_area_right'>" + WYMeditor.CONTAINERS + WYMeditor.CLASSES + "</div><div class='wym_area_main'>" + WYMeditor.HTML + WYMeditor.IFRAME + WYMeditor.STATUS + "</div><div class='wym_area_bottom'>" + WYMeditor.LOGO + "</div></div>",
        logoHtml: "<a class='wym_wymeditor_link' href='http://www.wymeditor.org/'>WYMeditor</a>",
        iframeHtml: "<div class='wym_iframe wym_section'><iframe src='" + WYMeditor.IFRAME_BASE_PATH + "wymiframe.html' onload='this.contentWindow.parent.WYMeditor.INSTANCES[" + WYMeditor.INDEX + "].initIframe(this)'></iframe></div>",
        editorStyles: [],
        toolsHtml: "<div class='wym_tools wym_section'><h2>{Tools}</h2><ul>" + WYMeditor.TOOLS_ITEMS + "</ul></div>",
        toolsItemHtml: "<li class='" + WYMeditor.TOOL_CLASS + "'><a href='#' name='" + WYMeditor.TOOL_NAME + "' title='" + WYMeditor.TOOL_TITLE + "'>" + WYMeditor.TOOL_TITLE + "</a></li>",
        toolsItems: [{
            name: "Bold",
            title: "Strong",
            css: "wym_tools_strong"
        }, {
            name: "Italic",
            title: "Emphasis",
            css: "wym_tools_emphasis"
        }, {
            name: "Superscript",
            title: "Superscript",
            css: "wym_tools_superscript"
        }, {
            name: "Subscript",
            title: "Subscript",
            css: "wym_tools_subscript"
        }, {
            name: "InsertOrderedList",
            title: "Ordered_List",
            css: "wym_tools_ordered_list"
        }, {
            name: "InsertUnorderedList",
            title: "Unordered_List",
            css: "wym_tools_unordered_list"
        }, {
            name: "Indent",
            title: "Indent",
            css: "wym_tools_indent"
        }, {
            name: "Outdent",
            title: "Outdent",
            css: "wym_tools_outdent"
        }, {
            name: "Undo",
            title: "Undo",
            css: "wym_tools_undo"
        }, {
            name: "Redo",
            title: "Redo",
            css: "wym_tools_redo"
        }, {
            name: "CreateLink",
            title: "Link",
            css: "wym_tools_link"
        }, {
            name: "Unlink",
            title: "Unlink",
            css: "wym_tools_unlink"
        }, {
            name: "InsertImage",
            title: "Image",
            css: "wym_tools_image"
        }, {
            name: "InsertTable",
            title: "Table",
            css: "wym_tools_table"
        }, {
            name: "Paste",
            title: "Paste_From_Word",
            css: "wym_tools_paste"
        }, {
            name: "ToggleHtml",
            title: "HTML",
            css: "wym_tools_html"
        }, {
            name: "Preview",
            title: "Preview",
            css: "wym_tools_preview"
        }],
        containersHtml: "<div class='wym_containers wym_section'><h2>{Containers}</h2><ul>" + WYMeditor.CONTAINERS_ITEMS + "</ul></div>",
        containersItemHtml: "<li class='" + WYMeditor.CONTAINER_CLASS + "'><a href='#' name='" + WYMeditor.CONTAINER_NAME + "'>" + WYMeditor.CONTAINER_TITLE + "</a></li>",
        containersItems: [{
            name: "P",
            title: "Paragraph",
            css: "wym_containers_p"
        }, {
            name: "H1",
            title: "Heading_1",
            css: "wym_containers_h1"
        }, {
            name: "H2",
            title: "Heading_2",
            css: "wym_containers_h2"
        }, {
            name: "H3",
            title: "Heading_3",
            css: "wym_containers_h3"
        }, {
            name: "H4",
            title: "Heading_4",
            css: "wym_containers_h4"
        }, {
            name: "H5",
            title: "Heading_5",
            css: "wym_containers_h5"
        }, {
            name: "H6",
            title: "Heading_6",
            css: "wym_containers_h6"
        }, {
            name: "PRE",
            title: "Preformatted",
            css: "wym_containers_pre"
        }, {
            name: "BLOCKQUOTE",
            title: "Blockquote",
            css: "wym_containers_blockquote"
        }, {
            name: "TH",
            title: "Table_Header",
            css: "wym_containers_th"
        }],
        classesHtml: "<div class='wym_classes wym_section'><h2>{Classes}</h2><ul>" + WYMeditor.CLASSES_ITEMS + "</ul></div>",
        classesItemHtml: "<li><a href='#' name='" + WYMeditor.CLASS_NAME + "'>" + WYMeditor.CLASS_TITLE + "</a></li>",
        classesItems: [],
        statusHtml: "<div class='wym_status wym_section'><h2>{Status}</h2></div>",
        htmlHtml: "<div class='wym_html wym_section'><h2>{Source_Code}</h2><textarea class='wym_html_val'></textarea></div>",
        boxSelector: ".wym_box",
        toolsSelector: ".wym_tools",
        toolsListSelector: " ul",
        containersSelector: ".wym_containers",
        classesSelector: ".wym_classes",
        htmlSelector: ".wym_html",
        iframeSelector: ".wym_iframe iframe",
        statusSelector: ".wym_status",
        toolSelector: ".wym_tools a",
        containerSelector: ".wym_containers a",
        classSelector: ".wym_classes a",
        htmlValSelector: ".wym_html_val",
        hrefSelector: ".wym_href",
        srcSelector: ".wym_src",
        titleSelector: ".wym_title",
        altSelector: ".wym_alt",
        textSelector: ".wym_text",
        rowsSelector: ".wym_rows",
        colsSelector: ".wym_cols",
        captionSelector: ".wym_caption",
        summarySelector: ".wym_summary",
        submitSelector: ".wym_submit",
        cancelSelector: ".wym_cancel",
        previewSelector: "",
        dialogTypeSelector: ".wym_dialog_type",
        dialogLinkSelector: ".wym_dialog_link",
        dialogImageSelector: ".wym_dialog_image",
        dialogTableSelector: ".wym_dialog_table",
        dialogPasteSelector: ".wym_dialog_paste",
        dialogPreviewSelector: ".wym_dialog_preview",
        updateSelector: ".wymupdate",
        updateEvent: "click",
        dialogFeatures: "menubar=no,titlebar=no,toolbar=no,resizable=no,width=560,height=300,top=0,left=0",
        dialogHtml: "<!DOCTYPE html PUBLIC '-//W3C//DTD XHTML 1.0 Strict//EN' 'http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd'><html><head><link rel='stylesheet' type='text/css' media='screen' href='" + WYMeditor.CSS_PATH + "' /><title>" + WYMeditor.DIALOG_TITLE + "</title><script type='text/javascript' src='" + WYMeditor.JQUERY_PATH + "'><\/script><script type='text/javascript' src='" + WYMeditor.WYM_PATH + "'><\/script></head>" + WYMeditor.DIALOG_BODY + "</html>",
        dialogLinkHtml: "<body class='wym_dialog wym_dialog_link' onload='WYMeditor.INIT_DIALOG(" + WYMeditor.INDEX + ")'><form><fieldset><input type='hidden' class='wym_dialog_type' value='" + WYMeditor.DIALOG_LINK + "' /><legend>{Link}</legend><div class='row'><label>{URL}</label><input type='text' class='wym_href' value='' size='40' /></div><div class='row'><label>{Title}</label><input type='text' class='wym_title' value='' size='40' /></div><div class='row row-indent'><input class='wym_submit' type='button' value='{Submit}' /><input class='wym_cancel' type='button'value='{Cancel}' /></div></fieldset></form></body>",
        dialogImageHtml: "<body class='wym_dialog wym_dialog_image' onload='WYMeditor.INIT_DIALOG(" + WYMeditor.INDEX + ")'><form><fieldset><input type='hidden' class='wym_dialog_type' value='" + WYMeditor.DIALOG_IMAGE + "' /><legend>{Image}</legend><div class='row'><label>{URL}</label><input type='text' class='wym_src' value='' size='40' /></div><div class='row'><label>{Alternative_Text}</label><input type='text' class='wym_alt' value='' size='40' /></div><div class='row'><label>{Title}</label><input type='text' class='wym_title' value='' size='40' /></div><div class='row row-indent'><input class='wym_submit' type='button' value='{Submit}' /><input class='wym_cancel' type='button'value='{Cancel}' /></div></fieldset></form></body>",
        dialogTableHtml: "<body class='wym_dialog wym_dialog_table' onload='WYMeditor.INIT_DIALOG(" + WYMeditor.INDEX + ")'><form><fieldset><input type='hidden' class='wym_dialog_type' value='" + WYMeditor.DIALOG_TABLE + "' /><legend>{Table}</legend><div class='row'><label>{Caption}</label><input type='text' class='wym_caption' value='' size='40' /></div><div class='row'><label>{Summary}</label><input type='text' class='wym_summary' value='' size='40' /></div><div class='row'><label>{Number_Of_Rows}</label><input type='text' class='wym_rows' value='3' size='3' /></div><div class='row'><label>{Number_Of_Cols}</label><input type='text' class='wym_cols' value='2' size='3' /></div><div class='row row-indent'><input class='wym_submit' type='button' value='{Submit}' /><input class='wym_cancel' type='button'value='{Cancel}' /></div></fieldset></form></body>",
        dialogPasteHtml: "<body class='wym_dialog wym_dialog_paste' onload='WYMeditor.INIT_DIALOG(" + WYMeditor.INDEX + ")'><form><input type='hidden' class='wym_dialog_type' value='" + WYMeditor.DIALOG_PASTE + "' /><fieldset><legend>{Paste_From_Word}</legend><div class='row'><textarea class='wym_text' rows='10' cols='50'></textarea></div><div class='row'><input class='wym_submit' type='button' value='{Submit}' /><input class='wym_cancel' type='button'value='{Cancel}' /></div></fieldset></form></body>",
        dialogPreviewHtml: "<body class='wym_dialog wym_dialog_preview' onload='WYMeditor.INIT_DIALOG(" + WYMeditor.INDEX + ")'></body>",
        dialogStyles: [],
        stringDelimiterLeft: "{",
        stringDelimiterRight: "}",
        preInit: null,
        preBind: null,
        postInit: null,
        preInitDialog: null,
        postInitDialog: null
    }, b);
    return this.each(function() {
        new WYMeditor.editor(jQuery(this), b)
    })
};
jQuery.extend({
    wymeditors: function(b) {
        return (WYMeditor.INSTANCES[b])
    },
    wymstrings: function(b) {
        return (WYMeditor.STRINGS[b])
    }
});
WYMeditor.editor.prototype.init = function() {
    if (jQuery.browser.msie) {
        var WymClass = new WYMeditor.WymClassExplorer(this);
        var WymSel = new WYMeditor.WymSelExplorer(this)
    } else {
        if (jQuery.browser.mozilla) {
            var WymClass = new WYMeditor.WymClassMozilla(this);
            var WymSel = new WYMeditor.WymSelMozilla(this)
        } else {
            if (jQuery.browser.opera) {
                var WymClass = new WYMeditor.WymClassOpera(this);
                var WymSel = new WYMeditor.WymSelOpera(this)
            } else {
                if (jQuery.browser.safari) {
                    var WymClass = new WYMeditor.WymClassSafari(this);
                    var WymSel = new WYMeditor.WymSelSafari(this)
                }
            }
        }
    }
    if (WymClass) {
        if (jQuery.isFunction(this._options.preInit)) {
            this._options.preInit(this)
        }
        var SaxListener = new WYMeditor.XhtmlSaxListener();
        jQuery.extend(SaxListener, WymClass);
        this.parser = new WYMeditor.XhtmlParser(SaxListener);
        if (this._options.styles || this._options.stylesheet) {
            this.configureEditorUsingRawCss()
        }
        this.helper = new WYMeditor.XmlHelper();
        for (var prop in WymClass) {
            this[prop] = WymClass[prop]
        }
        this._box = jQuery(this._element).hide().after(this._options.boxHtml).next();
        var h = WYMeditor.Helper;
        var iframeHtml = this._options.iframeHtml;
        iframeHtml = h.replaceAll(iframeHtml, WYMeditor.INDEX, this._index);
        iframeHtml = h.replaceAll(iframeHtml, WYMeditor.IFRAME_BASE_PATH, this._options.iframeBasePath);
        var boxHtml = jQuery(this._box).html();
        boxHtml = h.replaceAll(boxHtml, WYMeditor.LOGO, this._options.logoHtml);
        boxHtml = h.replaceAll(boxHtml, WYMeditor.TOOLS, this._options.toolsHtml);
        boxHtml = h.replaceAll(boxHtml, WYMeditor.CONTAINERS, this._options.containersHtml);
        boxHtml = h.replaceAll(boxHtml, WYMeditor.CLASSES, this._options.classesHtml);
        boxHtml = h.replaceAll(boxHtml, WYMeditor.HTML, this._options.htmlHtml);
        boxHtml = h.replaceAll(boxHtml, WYMeditor.IFRAME, iframeHtml);
        boxHtml = h.replaceAll(boxHtml, WYMeditor.STATUS, this._options.statusHtml);
        var aTools = eval(this._options.toolsItems);
        var sTools = "";
        for (var i = 0; i < aTools.length; i++) {
            var oTool = aTools[i];
            if (oTool.name && oTool.title) {
                var sTool = this._options.toolsItemHtml
            }
            var sTool = h.replaceAll(sTool, WYMeditor.TOOL_NAME, oTool.name);
            sTool = h.replaceAll(sTool, WYMeditor.TOOL_TITLE, this._options.stringDelimiterLeft + oTool.title + this._options.stringDelimiterRight);
            sTool = h.replaceAll(sTool, WYMeditor.TOOL_CLASS, oTool.css);
            sTools += sTool
        }
        boxHtml = h.replaceAll(boxHtml, WYMeditor.TOOLS_ITEMS, sTools);
        var aClasses = eval(this._options.classesItems);
        var sClasses = "";
        for (var i = 0; i < aClasses.length; i++) {
            var oClass = aClasses[i];
            if (oClass.name && oClass.title) {
                var sClass = this._options.classesItemHtml
            }
            sClass = h.replaceAll(sClass, WYMeditor.CLASS_NAME, oClass.name);
            sClass = h.replaceAll(sClass, WYMeditor.CLASS_TITLE, oClass.title);
            sClasses += sClass
        }
        boxHtml = h.replaceAll(boxHtml, WYMeditor.CLASSES_ITEMS, sClasses);
        var aContainers = eval(this._options.containersItems);
        var sContainers = "";
        for (var i = 0; i < aContainers.length; i++) {
            var oContainer = aContainers[i];
            if (oContainer.name && oContainer.title) {
                var sContainer = this._options.containersItemHtml
            }
            sContainer = h.replaceAll(sContainer, WYMeditor.CONTAINER_NAME, oContainer.name);
            sContainer = h.replaceAll(sContainer, WYMeditor.CONTAINER_TITLE, this._options.stringDelimiterLeft + oContainer.title + this._options.stringDelimiterRight);
            sContainer = h.replaceAll(sContainer, WYMeditor.CONTAINER_CLASS, oContainer.css);
            sContainers += sContainer
        }
        boxHtml = h.replaceAll(boxHtml, WYMeditor.CONTAINERS_ITEMS, sContainers);
        boxHtml = this.replaceStrings(boxHtml);
        jQuery(this._box).html(boxHtml);
        jQuery(this._box).find(this._options.htmlSelector).hide();
        this.loadSkin()
    }
    if (WymSel) {
        for (prop in WymSel) {
            this.selection[prop] = WymSel[prop]
        }
    }
};
WYMeditor.editor.prototype.bindEvents = function() {
    var wym = this;
    jQuery(this._box).find(this._options.toolSelector).click(function() {
        wym.exec(jQuery(this).attr(WYMeditor.NAME));
        return (false)
    });
    jQuery(this._box).find(this._options.containerSelector).click(function() {
        wym.container(jQuery(this).attr(WYMeditor.NAME));
        return (false)
    });
    jQuery(this._box).find(this._options.htmlValSelector).keyup(function() {
        jQuery(wym._doc.body).html(jQuery(this).val())
    });
    jQuery(this._box).find(this._options.classSelector).click(function() {
        var aClasses = eval(wym._options.classesItems);
        var sName = jQuery(this).attr(WYMeditor.NAME);
        var oClass = WYMeditor.Helper.findByName(aClasses, sName);
        if (oClass) {
            var jqexpr = oClass.expr;
            wym.toggleClass(sName, jqexpr)
        }
        return (false)
    });
    jQuery(this._options.updateSelector).bind(this._options.updateEvent, function() {
        wym.update()
    })
};
WYMeditor.editor.prototype.ready = function() {
    return (this._doc != null)
};
WYMeditor.editor.prototype.box = function() {
    return (this._box)
};
WYMeditor.editor.prototype.html = function(b) {
    if (typeof b === "string") {
        jQuery(this._doc.body).html(b)
    } else {
        return (jQuery(this._doc.body).html())
    }
};
WYMeditor.editor.prototype.xhtml = function() {
    return this.parser.parse(this.html())
};
WYMeditor.editor.prototype.exec = function(c) {
    switch (c) {
        case WYMeditor.CREATE_LINK:
            var b = this.container();
            if (b || this._selected_image) {
                this.dialog(WYMeditor.DIALOG_LINK)
            }
            break;
        case WYMeditor.INSERT_IMAGE:
            this.dialog(WYMeditor.DIALOG_IMAGE);
            break;
        case WYMeditor.INSERT_TABLE:
            this.dialog(WYMeditor.DIALOG_TABLE);
            break;
        case WYMeditor.PASTE:
            this.dialog(WYMeditor.DIALOG_PASTE);
            break;
        case WYMeditor.TOGGLE_HTML:
            this.update();
            this.toggleHtml();
            break;
        case WYMeditor.PREVIEW:
            this.dialog(WYMeditor.PREVIEW);
            break;
        default:
            this._exec(c);
            break
    }
};
WYMeditor.editor.prototype.container = function(b) {
    if (b) {
        var e = null;
        if (b.toLowerCase() == WYMeditor.TH) {
            e = this.container();
            switch (e.tagName.toLowerCase()) {
                case WYMeditor.TD:
                case WYMeditor.TH:
                    break;
                default:
                    var f = new Array(WYMeditor.TD, WYMeditor.TH);
                    e = this.findUp(this.container(), f);
                    break
            }
            if (e != null) {
                b = (e.tagName.toLowerCase() == WYMeditor.TD) ? WYMeditor.TH : WYMeditor.TD;
                this.switchTo(e, b);
                this.update()
            }
        } else {
            var f = new Array(WYMeditor.P, WYMeditor.H1, WYMeditor.H2, WYMeditor.H3, WYMeditor.H4, WYMeditor.H5, WYMeditor.H6, WYMeditor.PRE, WYMeditor.BLOCKQUOTE);
            e = this.findUp(this.container(), f);
            if (e) {
                var n = null;
                if (b.toLowerCase() == WYMeditor.BLOCKQUOTE) {
                    var g = this.findUp(this.container(), WYMeditor.BLOCKQUOTE);
                    if (g == null) {
                        n = this._doc.createElement(b);
                        e.parentNode.insertBefore(n, e);
                        n.appendChild(e);
                        this.setFocusToNode(n.firstChild)
                    } else {
                        var d = g.childNodes;
                        var h = d.length;
                        var c = null;
                        if (h > 0) {
                            c = d.item(0)
                        }
                        for (var m = 0; m < h; m++) {
                            g.parentNode.insertBefore(d.item(0), g)
                        }
                        g.parentNode.removeChild(g);
                        if (c) {
                            this.setFocusToNode(c)
                        }
                    }
                } else {
                    this.switchTo(e, b)
                }
                this.update()
            }
        }
    } else {
        return (this.selected())
    }
};
WYMeditor.editor.prototype.toggleClass = function(d, c) {
    var b = (this._selected_image ? this._selected_image : jQuery(this.selected()));
    b = jQuery(b).parentsOrSelf(c);
    jQuery(b).toggleClass(d);
    if (!jQuery(b).attr(WYMeditor.CLASS)) {
        jQuery(b).removeAttr(this._class)
    }
};
WYMeditor.editor.prototype.findUp = function(e, d) {
    if (e) {
        var f = e.tagName.toLowerCase();
        if (typeof(d) == WYMeditor.STRING) {
            while (f != d && f != WYMeditor.BODY) {
                e = e.parentNode;
                f = e.tagName.toLowerCase()
            }
        } else {
            var c = false;
            while (!c && f != WYMeditor.BODY) {
                for (var b = 0; b < d.length; b++) {
                    if (f == d[b]) {
                        c = true;
                        break
                    }
                }
                if (!c) {
                    e = e.parentNode;
                    f = e.tagName.toLowerCase()
                }
            }
        }
        if (f != WYMeditor.BODY) {
            return (e)
        } else {
            return (null)
        }
    } else {
        return (null)
    }
};
WYMeditor.editor.prototype.switchTo = function(d, e) {
    var c = this._doc.createElement(e);
    var b = jQuery(d).html();
    d.parentNode.replaceChild(c, d);
    jQuery(c).html(b);
    this.setFocusToNode(c)
};
WYMeditor.editor.prototype.replaceStrings = function(sVal) {
    if (!WYMeditor.STRINGS[this._options.lang]) {
        eval(jQuery.ajax({
            url: this._options.langPath + this._options.lang + ".js",
            async: false
        }).responseText)
    }
    for (var key in WYMeditor.STRINGS[this._options.lang]) {
        sVal = WYMeditor.Helper.replaceAll(sVal, this._options.stringDelimiterLeft + key + this._options.stringDelimiterRight, WYMeditor.STRINGS[this._options.lang][key])
    }
    return (sVal)
};
WYMeditor.editor.prototype.encloseString = function(b) {
    return (this._options.stringDelimiterLeft + b + this._options.stringDelimiterRight)
};
WYMeditor.editor.prototype.status = function(b) {
    jQuery(this._box).find(this._options.statusSelector).html(b)
};
WYMeditor.editor.prototype.update = function() {
    var b = this.xhtml();
    jQuery(this._element).val(b);
    jQuery(this._box).find(this._options.htmlValSelector).val(b)
};
WYMeditor.editor.prototype.dialog = function(g) {
    var f = window.open("", "dialog", this._wym._options.dialogFeatures);
    if (f) {
        var b = "";
        switch (g) {
            case (WYMeditor.DIALOG_LINK):
                b = this._options.dialogLinkHtml;
                break;
            case (WYMeditor.DIALOG_IMAGE):
                b = this._options.dialogImageHtml;
                break;
            case (WYMeditor.DIALOG_TABLE):
                b = this._options.dialogTableHtml;
                break;
            case (WYMeditor.DIALOG_PASTE):
                b = this._options.dialogPasteHtml;
                break;
            case (WYMeditor.PREVIEW):
                b = this._options.dialogPreviewHtml;
                break
        }
        var c = WYMeditor.Helper;
        var e = this._options.dialogHtml;
        e = c.replaceAll(e, WYMeditor.BASE_PATH, this._options.basePath);
        e = c.replaceAll(e, WYMeditor.CSS_PATH, this._options.skinPath + WYMeditor.SKINS_DEFAULT_CSS);
        e = c.replaceAll(e, WYMeditor.WYM_PATH, this._options.wymPath);
        e = c.replaceAll(e, WYMeditor.JQUERY_PATH, this._options.jQueryPath);
        e = c.replaceAll(e, WYMeditor.DIALOG_TITLE, this.encloseString(g));
        e = c.replaceAll(e, WYMeditor.DIALOG_BODY, b);
        e = c.replaceAll(e, WYMeditor.INDEX, this._index);
        e = this.replaceStrings(e);
        var d = f.document;
        d.write(e);
        d.close()
    }
};
WYMeditor.editor.prototype.toggleHtml = function() {
    jQuery(this._box).find(this._options.htmlSelector).toggle()
};
WYMeditor.editor.prototype.uniqueStamp = function() {
    var b = new Date();
    return ("wym-" + b.getTime())
};
WYMeditor.editor.prototype.paste = function(c) {
    var f;
    var b = this.selected();
    var d = c.split(this._newLine + this._newLine);
    var e = new RegExp(this._newLine, "g");
    if (b && b.tagName.toLowerCase() != WYMeditor.BODY) {
        for (x = d.length - 1; x >= 0; x--) {
            f = d[x];
            f = f.replace(e, "<br />");
            jQuery(b).after("<p>" + f + "</p>")
        }
    } else {
        for (x = 0; x < d.length; x++) {
            f = d[x];
            f = f.replace(e, "<br />");
            jQuery(this._doc.body).append("<p>" + f + "</p>")
        }
    }
};
WYMeditor.editor.prototype.addCssRules = function(f, d) {
    var c = f.styleSheets[0];
    if (c) {
        for (var b = 0; b < d.length; b++) {
            var e = d[b];
            if (e.name && e.css) {
                this.addCssRule(c, e)
            }
        }
    }
};
WYMeditor.editor.prototype.computeBasePath = function() {
    return jQuery(jQuery.grep(jQuery("script"), function(b) {
        return (b.src && b.src.match(/jquery\.wymeditor(\.pack){0,1}\.js(\?.*)?$/))
    })).attr("src").replace(/jquery\.wymeditor(\.pack){0,1}\.js(\?.*)?$/, "")
};
WYMeditor.editor.prototype.computeWymPath = function() {
    return jQuery(jQuery.grep(jQuery("script"), function(b) {
        return (b.src && b.src.match(/jquery\.wymeditor(\.pack){0,1}\.js(\?.*)?$/))
    })).attr("src")
};
WYMeditor.editor.prototype.computeJqueryPath = function() {
    return jQuery(jQuery.grep(jQuery("script"), function(b) {
        return (b.src && b.src.match(/jquery(-(.*)){0,1}(\.pack){0,1}\.js(\?.*)?$/))
    })).attr("src")
};
WYMeditor.editor.prototype.computeCssPath = function() {
    return jQuery(jQuery.grep(jQuery("link"), function(b) {
        return (b.href && b.href.match(/wymeditor\/skins\/(.*)screen\.css(\?.*)?$/))
    })).attr("href")
};
WYMeditor.editor.prototype.configureEditorUsingRawCss = function() {
    var b = new WYMeditor.WymCssParser();
    if (this._options.stylesheet) {
        b.parse(jQuery.ajax({
            url: this._options.stylesheet,
            async: false
        }).responseText)
    } else {
        b.parse(this._options.styles, false)
    }
    if (this._options.classesItems.length == 0) {
        this._options.classesItems = b.css_settings.classesItems
    }
    if (this._options.editorStyles.length == 0) {
        this._options.editorStyles = b.css_settings.editorStyles
    }
    if (this._options.dialogStyles.length == 0) {
        this._options.dialogStyles = b.css_settings.dialogStyles
    }
};
WYMeditor.editor.prototype.listen = function() {
    jQuery(this._doc.body).bind("mouseup", this.mouseup);
    var b = this._doc.body.getElementsByTagName("img");
    for (var c = 0; c < b.length; c++) {
        jQuery(b[c]).bind("mouseup", this.mouseup)
    }
};
WYMeditor.editor.prototype.mouseup = function(b) {
    var c = WYMeditor.INSTANCES[this.ownerDocument.title];
    if (this.tagName.toLowerCase() == WYMeditor.IMG) {
        c._selected_image = this
    } else {
        c._selected_image = null
    }
    b.stopPropagation()
};
WYMeditor.loadCss = function(b) {
    var d = document.createElement("link");
    d.rel = "stylesheet";
    d.href = b;
    var c = jQuery("head").get(0);
    c.appendChild(d)
};
WYMeditor.editor.prototype.loadSkin = function() {
    if (this._options.loadSkin && !WYMeditor.SKINS[this._options.skin]) {
        var found = false;
        var rExp = new RegExp(this._options.skin + "/" + WYMeditor.SKINS_DEFAULT_CSS + "$");
        jQuery("link").each(function() {
            if (this.href.match(rExp)) {
                found = true
            }
        });
        if (!found) {
            WYMeditor.loadCss(this._options.skinPath + WYMeditor.SKINS_DEFAULT_CSS)
        }
    }
    jQuery(this._box).addClass("wym_skin_" + this._options.skin);
    if (this._options.initSkin && !WYMeditor.SKINS[this._options.skin]) {
        eval(jQuery.ajax({
            url: this._options.skinPath + WYMeditor.SKINS_DEFAULT_JS,
            async: false
        }).responseText)
    }
    if (WYMeditor.SKINS[this._options.skin] && WYMeditor.SKINS[this._options.skin].init) {
        WYMeditor.SKINS[this._options.skin].init(this)
    }
};
WYMeditor.INIT_DIALOG = function(index) {
    var wym = window.opener.WYMeditor.INSTANCES[index];
    var doc = window.document;
    var selected = wym.selected();
    var dialogType = jQuery(wym._options.dialogTypeSelector).val();
    var sStamp = wym.uniqueStamp();
    switch (dialogType) {
        case WYMeditor.DIALOG_LINK:
            if (selected && selected.tagName && selected.tagName.toLowerCase != WYMeditor.A) {
                selected = jQuery(selected).parentsOrSelf(WYMeditor.A)
            }
            if (!selected && wym._selected_image) {
                selected = jQuery(wym._selected_image).parentsOrSelf(WYMeditor.A)
            }
            break
    }
    if (jQuery.isFunction(wym._options.preInitDialog)) {
        wym._options.preInitDialog(wym, window)
    }
    var styles = doc.styleSheets[0];
    var aCss = eval(wym._options.dialogStyles);
    wym.addCssRules(doc, aCss);
    if (selected) {
        jQuery(wym._options.hrefSelector).val(jQuery(selected).attr(WYMeditor.HREF));
        jQuery(wym._options.srcSelector).val(jQuery(selected).attr(WYMeditor.SRC));
        jQuery(wym._options.titleSelector).val(jQuery(selected).attr(WYMeditor.TITLE));
        jQuery(wym._options.altSelector).val(jQuery(selected).attr(WYMeditor.ALT))
    }
    if (wym._selected_image) {
        jQuery(wym._options.dialogImageSelector + " " + wym._options.srcSelector).val(jQuery(wym._selected_image).attr(WYMeditor.SRC));
        jQuery(wym._options.dialogImageSelector + " " + wym._options.titleSelector).val(jQuery(wym._selected_image).attr(WYMeditor.TITLE));
        jQuery(wym._options.dialogImageSelector + " " + wym._options.altSelector).val(jQuery(wym._selected_image).attr(WYMeditor.ALT))
    }
    jQuery(wym._options.dialogLinkSelector + " " + wym._options.submitSelector).click(function() {
        var sUrl = jQuery(wym._options.hrefSelector).val();
        if (sUrl.length > 0) {
            wym._exec(WYMeditor.CREATE_LINK, sStamp);
            var link = null;
            var nodes = wym._doc.body.getElementsByTagName(WYMeditor.A);
            for (var i = 0; i < nodes.length; i++) {
                if (jQuery(nodes[i]).attr(WYMeditor.HREF) == sStamp) {
                    link = jQuery(nodes[i]);
                    break
                }
            }
            if (link) {
                link.attr(WYMeditor.HREF, sUrl);
                link.attr(WYMeditor.TITLE, jQuery(wym._options.titleSelector).val())
            }
        }
        window.close()
    });
    jQuery(wym._options.dialogImageSelector + " " + wym._options.submitSelector).click(function() {
        var sUrl = jQuery(wym._options.srcSelector).val();
        if (sUrl.length > 0) {
            wym._exec(WYMeditor.INSERT_IMAGE, sStamp);
            var image = null;
            var nodes = wym._doc.body.getElementsByTagName(WYMeditor.IMG);
            for (var i = 0; i < nodes.length; i++) {
                if (jQuery(nodes[i]).attr(WYMeditor.SRC) == sStamp) {
                    image = jQuery(nodes[i]);
                    break
                }
            }
            if (image) {
                image.attr(WYMeditor.SRC, sUrl);
                image.attr(WYMeditor.TITLE, jQuery(wym._options.titleSelector).val());
                image.attr(WYMeditor.ALT, jQuery(wym._options.altSelector).val())
            }
        }
        window.close()
    });
    jQuery(wym._options.dialogTableSelector + " " + wym._options.submitSelector).click(function() {
        var iRows = jQuery(wym._options.rowsSelector).val();
        var iCols = jQuery(wym._options.colsSelector).val();
        if (iRows > 0 && iCols > 0) {
            var table = wym._doc.createElement(WYMeditor.TABLE);
            var newRow = null;
            var newCol = null;
            var sCaption = jQuery(wym._options.captionSelector).val();
            var newCaption = table.createCaption();
            newCaption.innerHTML = sCaption;
            for (x = 0; x < iRows; x++) {
                newRow = table.insertRow(x);
                for (y = 0; y < iCols; y++) {
                    newRow.insertCell(y)
                }
            }
            jQuery(table).attr("summary", jQuery(wym._options.summarySelector).val());
            var node = jQuery(wym.findUp(wym.container(), WYMeditor.MAIN_CONTAINERS)).get(0);
            if (!node || !node.parentNode) {
                jQuery(wym._doc.body).append(table)
            } else {
                jQuery(node).after(table)
            }
        }
        window.close()
    });
    jQuery(wym._options.dialogPasteSelector + " " + wym._options.submitSelector).click(function() {
        var sText = jQuery(wym._options.textSelector).val();
        wym.paste(sText);
        window.close()
    });
    jQuery(wym._options.dialogPreviewSelector + " " + wym._options.previewSelector).html(wym.xhtml());
    jQuery(wym._options.cancelSelector).mousedown(function() {
        window.close()
    });
    if (jQuery.isFunction(wym._options.postInitDialog)) {
        wym._options.postInitDialog(wym, window)
    }
};
WYMeditor.WymSelection = function() {
    this.test = "test from WymSelection"
};
WYMeditor.WymSelection.prototype = {
    isAtStart: function(f) {
        var c = jQuery(this.startNode).parentsOrSelf(f);
        if (c.length == 0) {
            return false
        }
        var b = this.startNode;
        if (b.nodeType == WYMeditor.NODE.TEXT) {
            if ((b.previousSibling && !WYMeditor.isPhantomNode(b.previousSibling)) || (this.startOffset != 0 && !WYMeditor.isPhantomString(b.data.substring(0, this.startOffset)))) {
                return false
            } else {
                b = b.parentNode
            }
        } else {
            if (this.startOffset != 0) {
                return false
            }
        }
        for (var e = jQuery(b); e[0] != c[0]; e = e.parent()) {
            var d = e.parent().children(":first");
            if (d[0] != e[0] || (d[0].previousSibling && !WYMeditor.isPhantomNode(d[0].previousSibling))) {
                return false
            }
        }
        return true
    },
    isAtEnd: function(g) {
        var d = jQuery(this.endNode).parentsOrSelf(g);
        if (d.length == 0) {
            return false
        } else {
            d = d[0]
        }
        if (this.endNode == d) {
            if (this.endNode.lastChild.nodeName == "BR") {
                this.endNode.removeChild(b.lastChild)
            }
            if (this.endOffset == 0) {
                return false
            } else {
                for (var c = this.endNode.childNodes[this.endOffset - 1].nextSibling; c == null || c.nodeName == "BR"; c = c.nextSibling) {
                    if (c == null) {
                        return true
                    }
                }
            }
        } else {
            var b = this.endNode;
            if (b.nodeType == WYMeditor.NODE.TEXT) {
                if ((b.nextSibling && !WYMeditor.isPhantomNode(b.nextSibling)) || (this.endOffset != b.data.length)) {
                    return false
                } else {
                    b = b.parentNode
                }
            }
            for (var f = b; f != d; f = f.parentNode) {
                var e = f.parentNode.lastChild;
                if ((e != f) || (WYMeditor.isPhantomNode(e) && e.previousSibling != f)) {
                    return false
                }
            }
        }
        if (this.endOffset == this.endNode.length) {
            return true
        } else {
            return false
        }
    }
};
WYMeditor.XmlHelper = function() {
    this._entitiesDiv = document.createElement("div");
    return this
};
WYMeditor.XmlHelper.prototype.tag = function(d, c, b) {
    c = c || false;
    b = b || false;
    return "<" + d + (c ? this.tagOptions(c) : "") + (b ? ">" : " />")
};
WYMeditor.XmlHelper.prototype.contentTag = function(c, d, b) {
    b = b || false;
    return "<" + c + (b ? this.tagOptions(b) : "") + ">" + d + "</" + c + ">"
};
WYMeditor.XmlHelper.prototype.cdataSection = function(b) {
    return "<![CDATA[" + b + "]]>"
};
WYMeditor.XmlHelper.prototype.escapeOnce = function(b) {
    return this._fixDoubleEscape(this.escapeEntities(b))
};
WYMeditor.XmlHelper.prototype._fixDoubleEscape = function(b) {
    return b.replace(/&amp;([a-z]+|(#\d+));/ig, "&$1;")
};
WYMeditor.XmlHelper.prototype.tagOptions = function(c) {
    var b = this;
    b._formated_options = "";
    for (var d in c) {
        var e = "";
        var f = c[d];
        if (typeof f != "function" && f.length > 0) {
            if (parseInt(d) == d && typeof f == "object") {
                d = f.shift();
                f = f.pop()
            }
            if (d != "" && f != "") {
                b._formated_options += " " + d + '="' + b.escapeOnce(f) + '"'
            }
        }
    }
    return b._formated_options
};
WYMeditor.XmlHelper.prototype.escapeEntities = function(d, c) {
    this._entitiesDiv.innerHTML = d;
    this._entitiesDiv.textContent = d;
    var b = this._entitiesDiv.innerHTML;
    if (typeof c == "undefined") {
        if (c != false) {
            b = b.replace('"', "&quot;")
        }
        if (c == true) {
            b = b.replace('"', "&#039;")
        }
    }
    return b
};
WYMeditor.XmlHelper.prototype.parseAttributes = function(m) {
    var b = [];
    var h = m.split(/((=\s*")(")("))|((=\s*\')(\')(\'))|((=\s*[^>\s]*))/g);
    if (h.toString() != m) {
        for (var e in h) {
            var d = h[e];
            if (typeof d != "function" && d.length != 0) {
                var f = new RegExp("(\\w+)\\s*" + d);
                if (match = m.match(f)) {
                    var g = d.replace(/^[\s=]+/, "");
                    var c = g.charAt(0);
                    c = c == '"' ? '"' : (c == "'" ? "'" : "");
                    if (c != "") {
                        g = c == '"' ? g.replace(/^"|"+$/g, "") : g.replace(/^'|'+$/g, "")
                    }
                    m = m.replace(match[0], "");
                    b.push([match[1], g])
                }
            }
        }
    }
    return b
};
WYMeditor.XhtmlValidator = {
    _attributes: {
        core: {
            except: ["base", "head", "html", "meta", "param", "script", "style", "title"],
            attributes: ["class", "id", "style", "title", "accesskey", "tabindex"]
        },
        language: {
            except: ["base", "br", "hr", "iframe", "param", "script"],
            attributes: {
                dir: ["ltr", "rtl"],
                "0": "lang",
                "1": "xml:lang"
            }
        },
        keyboard: {
            attributes: {
                accesskey: /^(\w){1}$/,
                tabindex: /^(\d)+$/
            }
        }
    },
    _events: {
        window: {
            only: ["body"],
            attributes: ["onload", "onunload"]
        },
        form: {
            only: ["form", "input", "textarea", "select", "a", "label", "button"],
            attributes: ["onchange", "onsubmit", "onreset", "onselect", "onblur", "onfocus"]
        },
        keyboard: {
            except: ["base", "bdo", "br", "frame", "frameset", "head", "html", "iframe", "meta", "param", "script", "style", "title"],
            attributes: ["onkeydown", "onkeypress", "onkeyup"]
        },
        mouse: {
            except: ["base", "bdo", "br", "head", "html", "meta", "param", "script", "style", "title"],
            attributes: ["onclick", "ondblclick", "onmousedown", "onmousemove", "onmouseover", "onmouseout", "onmouseup"]
        }
    },
    _tags: {
        a: {
            attributes: {
                "0": "charset",
                "1": "coords",
                "2": "href",
                "3": "hreflang",
                "4": "name",
                rel: /^(alternate|designates|stylesheet|start|next|prev|contents|index|glossary|copyright|chapter|section|subsection|appendix|help|bookmark| |shortcut|icon)+$/,
                rev: /^(alternate|designates|stylesheet|start|next|prev|contents|index|glossary|copyright|chapter|section|subsection|appendix|help|bookmark| |shortcut|icon)+$/,
                shape: /^(rect|rectangle|circ|circle|poly|polygon)$/,
                "5": "type"
            }
        },
        "0": "abbr",
        "1": "acronym",
        "2": "address",
        area: {
            attributes: {
                "0": "alt",
                "1": "coords",
                "2": "href",
                nohref: /^(true|false)$/,
                shape: /^(rect|rectangle|circ|circle|poly|polygon)$/
            },
            required: ["alt"]
        },
        "3": "b",
        base: {
            attributes: ["href"],
            required: ["href"]
        },
        bdo: {
            attributes: {
                dir: /^(ltr|rtl)$/
            },
            required: ["dir"]
        },
        "4": "big",
        blockquote: {
            attributes: ["cite"]
        },
        "5": "body",
        "6": "br",
        button: {
            attributes: {
                disabled: /^(disabled)$/,
                type: /^(button|reset|submit)$/,
                "0": "value"
            },
            inside: "form"
        },
        "7": "caption",
        "8": "cite",
        "9": "code",
        col: {
            attributes: {
                align: /^(right|left|center|justify)$/,
                "0": "char",
                "1": "charoff",
                span: /^(\d)+$/,
                valign: /^(top|middle|bottom|baseline)$/,
                "2": "width"
            },
            inside: "colgroup"
        },
        colgroup: {
            attributes: {
                align: /^(right|left|center|justify)$/,
                "0": "char",
                "1": "charoff",
                span: /^(\d)+$/,
                valign: /^(top|middle|bottom|baseline)$/,
                "2": "width"
            }
        },
        "10": "dd",
        del: {
            attributes: {
                "0": "cite",
                datetime: /^([0-9]){8}/
            }
        },
        "11": "div",
        "12": "dfn",
        "13": "dl",
        "14": "dt",
        "15": "em",
        fieldset: {
            inside: "form"
        },
        form: {
            attributes: {
                "0": "action",
                "1": "accept",
                "2": "accept-charset",
                "3": "enctype",
                method: /^(get|post)$/
            },
            required: ["action"]
        },
        head: {
            attributes: ["profile"]
        },
        "16": "h1",
        "17": "h2",
        "18": "h3",
        "19": "h4",
        "20": "h5",
        "21": "h6",
        "22": "hr",
        html: {
            attributes: ["xmlns"]
        },
        "23": "i",
        img: {
            attributes: ["alt", "src", "height", "ismap", "longdesc", "usemap", "width"],
            required: ["alt", "src"]
        },
        input: {
            attributes: {
                "0": "accept",
                "1": "alt",
                checked: /^(checked)$/,
                disabled: /^(disabled)$/,
                maxlength: /^(\d)+$/,
                "2": "name",
                readonly: /^(readonly)$/,
                size: /^(\d)+$/,
                "3": "src",
                type: /^(button|checkbox|file|hidden|image|password|radio|reset|submit|text)$/,
                "4": "value"
            },
            inside: "form"
        },
        ins: {
            attributes: {
                "0": "cite",
                datetime: /^([0-9]){8}/
            }
        },
        "24": "kbd",
        label: {
            attributes: ["for"],
            inside: "form"
        },
        "25": "legend",
        "26": "li",
        link: {
            attributes: {
                "0": "charset",
                "1": "href",
                "2": "hreflang",
                media: /^(all|braille|print|projection|screen|speech|,|;| )+$/i,
                rel: /^(alternate|appendix|bookmark|chapter|contents|copyright|glossary|help|home|index|next|prev|section|start|stylesheet|subsection| |shortcut|icon)+$/i,
                rev: /^(alternate|appendix|bookmark|chapter|contents|copyright|glossary|help|home|index|next|prev|section|start|stylesheet|subsection| |shortcut|icon)+$/i,
                "3": "type"
            },
            inside: "head"
        },
        map: {
            attributes: ["id", "name"],
            required: ["id"]
        },
        meta: {
            attributes: {
                "0": "content",
                "http-equiv": /^(content\-type|expires|refresh|set\-cookie)$/i,
                "1": "name",
                "2": "scheme"
            },
            required: ["content"]
        },
        "27": "noscript",
        object: {
            attributes: ["archive", "classid", "codebase", "codetype", "data", "declare", "height", "name", "standby", "type", "usemap", "width"]
        },
        "28": "ol",
        optgroup: {
            attributes: {
                "0": "label",
                disabled: /^(disabled)$/
            },
            required: ["label"]
        },
        option: {
            attributes: {
                "0": "label",
                disabled: /^(disabled)$/,
                selected: /^(selected)$/,
                "1": "value"
            },
            inside: "select"
        },
        "29": "p",
        param: {
            attributes: {
                "0": "type",
                valuetype: /^(data|ref|object)$/,
                "1": "valuetype",
                "2": "value"
            },
            required: ["name"]
        },
        "30": "pre",
        q: {
            attributes: ["cite"]
        },
        "31": "samp",
        script: {
            attributes: {
                type: /^(text\/ecmascript|text\/javascript|text\/jscript|text\/vbscript|text\/vbs|text\/xml)$/,
                "0": "charset",
                defer: /^(defer)$/,
                "1": "src"
            },
            required: ["type"]
        },
        select: {
            attributes: {
                disabled: /^(disabled)$/,
                multiple: /^(multiple)$/,
                "0": "name",
                "1": "size"
            },
            inside: "form"
        },
        "32": "small",
        "33": "span",
        "34": "strong",
        style: {
            attributes: {
                "0": "type",
                media: /^(screen|tty|tv|projection|handheld|print|braille|aural|all)$/
            },
            required: ["type"]
        },
        "35": "sub",
        "36": "sup",
        table: {
            attributes: {
                "0": "border",
                "1": "cellpadding",
                "2": "cellspacing",
                frame: /^(void|above|below|hsides|lhs|rhs|vsides|box|border)$/,
                rules: /^(none|groups|rows|cols|all)$/,
                "3": "summary",
                "4": "width"
            }
        },
        tbody: {
            attributes: {
                align: /^(right|left|center|justify)$/,
                "0": "char",
                "1": "charoff",
                valign: /^(top|middle|bottom|baseline)$/
            }
        },
        td: {
            attributes: {
                "0": "abbr",
                align: /^(left|right|center|justify|char)$/,
                "1": "axis",
                "2": "char",
                "3": "charoff",
                colspan: /^(\d)+$/,
                "4": "headers",
                rowspan: /^(\d)+$/,
                scope: /^(col|colgroup|row|rowgroup)$/,
                valign: /^(top|middle|bottom|baseline)$/
            }
        },
        textarea: {
            attributes: ["cols", "rows", "disabled", "name", "readonly"],
            required: ["cols", "rows"],
            inside: "form"
        },
        tfoot: {
            attributes: {
                align: /^(right|left|center|justify)$/,
                "0": "char",
                "1": "charoff",
                valign: /^(top|middle|bottom)$/,
                "2": "baseline"
            }
        },
        th: {
            attributes: {
                "0": "abbr",
                align: /^(left|right|center|justify|char)$/,
                "1": "axis",
                "2": "char",
                "3": "charoff",
                colspan: /^(\d)+$/,
                "4": "headers",
                rowspan: /^(\d)+$/,
                scope: /^(col|colgroup|row|rowgroup)$/,
                valign: /^(top|middle|bottom|baseline)$/
            }
        },
        thead: {
            attributes: {
                align: /^(right|left|center|justify)$/,
                "0": "char",
                "1": "charoff",
                valign: /^(top|middle|bottom|baseline)$/
            }
        },
        "37": "title",
        tr: {
            attributes: {
                align: /^(right|left|center|justify|char)$/,
                "0": "char",
                "1": "charoff",
                valign: /^(top|middle|bottom|baseline)$/
            }
        },
        "38": "tt",
        "39": "ul",
        "40": "var"
    },
    skiped_attributes: [],
    skiped_attribute_values: [],
    getValidTagAttributes: function(b, c) {
        var d = {};
        var m = this.getPossibleTagAttributes(b);
        for (var f in c) {
            var g = c[f];
            var e = WYMeditor.Helper;
            if (!e.contains(this.skiped_attributes, f) && !e.contains(this.skiped_attribute_values, g)) {
                if (typeof g != "function" && e.contains(m, f)) {
                    if (this.doesAttributeNeedsValidation(b, f)) {
                        if (this.validateAttribute(b, f, g)) {
                            d[f] = g
                        }
                    } else {
                        d[f] = g
                    }
                }
            }
        }
        return d
    },
    getUniqueAttributesAndEventsForTag: function(c) {
        var b = [];
        if (this._tags[c] && this._tags[c]["attributes"]) {
            for (k in this._tags[c]["attributes"]) {
                b.push(parseInt(k) == k ? this._tags[c]["attributes"][k] : k)
            }
        }
        return b
    },
    getDefaultAttributesAndEventsForTags: function() {
        var b = [];
        for (var c in this._events) {
            b.push(this._events[c])
        }
        for (var c in this._attributes) {
            b.push(this._attributes[c])
        }
        return b
    },
    isValidTag: function(b) {
        if (this._tags[b]) {
            return true
        }
        for (var c in this._tags) {
            if (this._tags[c] == b) {
                return true
            }
        }
        return false
    },
    getDefaultAttributesAndEventsForTag: function(b) {
        var n = [];
        if (this.isValidTag(b)) {
            var m = this.getDefaultAttributesAndEventsForTags();
            for (var e in m) {
                var g = m[e];
                if (typeof g == "object") {
                    var f = WYMeditor.Helper;
                    if ((g.except && f.contains(g.except, b)) || (g.only && !f.contains(g.only, b))) {
                        continue
                    }
                    var d = g.attributes ? g.attributes : g.events;
                    for (var c in d) {
                        n.push(typeof d[c] != "string" ? c : d[c])
                    }
                }
            }
        }
        return n
    },
    doesAttributeNeedsValidation: function(b, c) {
        return this._tags[b] && ((this._tags[b]["attributes"] && this._tags[b]["attributes"][c]) || (this._tags[b]["required"] && WYMeditor.Helper.contains(this._tags[b]["required"], c)))
    },
    validateAttribute: function(b, c, d) {
        if (this._tags[b] && (this._tags[b]["attributes"] && this._tags[b]["attributes"][c] && d.length > 0 && !d.match(this._tags[b]["attributes"][c])) || (this._tags[b] && this._tags[b]["required"] && WYMeditor.Helper.contains(this._tags[b]["required"], c) && d.length == 0)) {
            return false
        }
        return this._tags[b] != undefined
    },
    getPossibleTagAttributes: function(b) {
        if (!this._possible_tag_attributes) {
            this._possible_tag_attributes = {}
        }
        if (!this._possible_tag_attributes[b]) {
            this._possible_tag_attributes[b] = this.getUniqueAttributesAndEventsForTag(b).concat(this.getDefaultAttributesAndEventsForTag(b))
        }
        return this._possible_tag_attributes[b]
    }
};
WYMeditor.ParallelRegex = function(b) {
    this._case = b;
    this._patterns = [];
    this._labels = [];
    this._regex = null;
    return this
};
WYMeditor.ParallelRegex.prototype.addPattern = function(d, b) {
    b = b || true;
    var c = this._patterns.length;
    this._patterns[c] = d;
    this._labels[c] = b;
    this._regex = null
};
WYMeditor.ParallelRegex.prototype.match = function(d) {
    if (this._patterns.length == 0) {
        return [false, ""]
    }
    var e = d.match(this._getCompoundedRegex());
    if (!e) {
        return [false, ""]
    }
    var b = e[0];
    for (var c = 1; c < e.length; c++) {
        if (e[c]) {
            return [this._labels[c - 1], b]
        }
    }
    return [true, e[0]]
};
WYMeditor.ParallelRegex.prototype._getCompoundedRegex = function() {
    if (this._regex == null) {
        for (var b = 0, c = this._patterns.length; b < c; b++) {
            this._patterns[b] = "(" + this._untokenizeRegex(this._tokenizeRegex(this._patterns[b]).replace(/([\/\(\)])/g, "\\$1")) + ")"
        }
        this._regex = new RegExp(this._patterns.join("|"), this._getPerlMatchingFlags())
    }
    return this._regex
};
WYMeditor.ParallelRegex.prototype._tokenizeRegex = function(b) {
    return b.replace(/\(\?(i|m|s|x|U)\)/, "~~~~~~Tk1$1~~~~~~").replace(/\(\?(\-[i|m|s|x|U])\)/, "~~~~~~Tk2$1~~~~~~").replace(/\(\?\=(.*)\)/, "~~~~~~Tk3$1~~~~~~").replace(/\(\?\!(.*)\)/, "~~~~~~Tk4$1~~~~~~").replace(/\(\?\<\=(.*)\)/, "~~~~~~Tk5$1~~~~~~").replace(/\(\?\<\!(.*)\)/, "~~~~~~Tk6$1~~~~~~").replace(/\(\?\:(.*)\)/, "~~~~~~Tk7$1~~~~~~")
};
WYMeditor.ParallelRegex.prototype._untokenizeRegex = function(b) {
    return b.replace(/~~~~~~Tk1(.{1})~~~~~~/, "(?$1)").replace(/~~~~~~Tk2(.{2})~~~~~~/, "(?$1)").replace(/~~~~~~Tk3(.*)~~~~~~/, "(?=$1)").replace(/~~~~~~Tk4(.*)~~~~~~/, "(?!$1)").replace(/~~~~~~Tk5(.*)~~~~~~/, "(?<=$1)").replace(/~~~~~~Tk6(.*)~~~~~~/, "(?<!$1)").replace(/~~~~~~Tk7(.*)~~~~~~/, "(?:$1)")
};
WYMeditor.ParallelRegex.prototype._getPerlMatchingFlags = function() {
    return (this._case ? "m" : "mi")
};
WYMeditor.StateStack = function(b) {
    this._stack = [b];
    return this
};
WYMeditor.StateStack.prototype.getCurrent = function() {
    return this._stack[this._stack.length - 1]
};
WYMeditor.StateStack.prototype.enter = function(b) {
    this._stack.push(b)
};
WYMeditor.StateStack.prototype.leave = function() {
    if (this._stack.length == 1) {
        return false
    }
    this._stack.pop();
    return true
};
WYMeditor.LEXER_ENTER = 1;
WYMeditor.LEXER_MATCHED = 2;
WYMeditor.LEXER_UNMATCHED = 3;
WYMeditor.LEXER_EXIT = 4;
WYMeditor.LEXER_SPECIAL = 5;
WYMeditor.Lexer = function(d, c, b) {
    c = c || "accept";
    this._case = b || false;
    this._regexes = {};
    this._parser = d;
    this._mode = new WYMeditor.StateStack(c);
    this._mode_handlers = {};
    this._mode_handlers[c] = c;
    return this
};
WYMeditor.Lexer.prototype.addPattern = function(b, c) {
    var c = c || "accept";
    if (this._regexes[c] == undefined) {
        this._regexes[c] = new WYMeditor.ParallelRegex(this._case)
    }
    this._regexes[c].addPattern(b);
    if (this._mode_handlers[c] == undefined) {
        this._mode_handlers[c] = c
    }
};
WYMeditor.Lexer.prototype.addEntryPattern = function(c, d, b) {
    if (this._regexes[d] == undefined) {
        this._regexes[d] = new WYMeditor.ParallelRegex(this._case)
    }
    this._regexes[d].addPattern(c, b);
    if (this._mode_handlers[b] == undefined) {
        this._mode_handlers[b] = b
    }
};
WYMeditor.Lexer.prototype.addExitPattern = function(b, c) {
    if (this._regexes[c] == undefined) {
        this._regexes[c] = new WYMeditor.ParallelRegex(this._case)
    }
    this._regexes[c].addPattern(b, "__exit");
    if (this._mode_handlers[c] == undefined) {
        this._mode_handlers[c] = c
    }
};
WYMeditor.Lexer.prototype.addSpecialPattern = function(c, d, b) {
    if (this._regexes[d] == undefined) {
        this._regexes[d] = new WYMeditor.ParallelRegex(this._case)
    }
    this._regexes[d].addPattern(c, "_" + b);
    if (this._mode_handlers[b] == undefined) {
        this._mode_handlers[b] = b
    }
};
WYMeditor.Lexer.prototype.mapHandler = function(c, b) {
    this._mode_handlers[c] = b
};
WYMeditor.Lexer.prototype.parse = function(e) {
    if (this._parser == undefined) {
        return false
    }
    var f = e.length;
    var d;
    while (typeof(d = this._reduce(e)) == "object") {
        var e = d[0];
        var c = d[1];
        var b = d[2];
        var g = d[3];
        if (!this._dispatchTokens(c, b, g)) {
            return false
        }
        if (e == "") {
            return true
        }
        if (e.length == f) {
            return false
        }
        f = e.length
    }
    if (!d) {
        return false
    }
    return this._invokeParser(e, WYMeditor.LEXER_UNMATCHED)
};
WYMeditor.Lexer.prototype._dispatchTokens = function(c, b, d) {
    d = d || false;
    if (!this._invokeParser(c, WYMeditor.LEXER_UNMATCHED)) {
        return false
    }
    if (typeof d == "boolean") {
        return this._invokeParser(b, WYMeditor.LEXER_MATCHED)
    }
    if (this._isModeEnd(d)) {
        if (!this._invokeParser(b, WYMeditor.LEXER_EXIT)) {
            return false
        }
        return this._mode.leave()
    }
    if (this._isSpecialMode(d)) {
        this._mode.enter(this._decodeSpecial(d));
        if (!this._invokeParser(b, WYMeditor.LEXER_SPECIAL)) {
            return false
        }
        return this._mode.leave()
    }
    this._mode.enter(d);
    return this._invokeParser(b, WYMeditor.LEXER_ENTER)
};
WYMeditor.Lexer.prototype._isModeEnd = function(b) {
    return (b === "__exit")
};
WYMeditor.Lexer.prototype._isSpecialMode = function(b) {
    return (b.substring(0, 1) == "_")
};
WYMeditor.Lexer.prototype._decodeSpecial = function(b) {
    return b.substring(1)
};
WYMeditor.Lexer.prototype._invokeParser = function(content, is_match) {
    if (!/ +/.test(content) && ((content === "") || (content == false))) {
        return true
    }
    var current = this._mode.getCurrent();
    var handler = this._mode_handlers[current];
    var result;
    eval("result = this._parser." + handler + "(content, is_match);");
    return result
};
WYMeditor.Lexer.prototype._reduce = function(d) {
    var b = this._regexes[this._mode.getCurrent()].match(d);
    var c = b[1];
    var f = b[0];
    if (f) {
        var g = d.indexOf(c);
        var e = d.substr(0, g);
        d = d.substring(g + c.length);
        return [d, e, c, f]
    }
    return true
};
WYMeditor.XhtmlLexer = function(b) {
    jQuery.extend(this, new WYMeditor.Lexer(b, "Text"));
    this.mapHandler("Text", "Text");
    this.addTokens();
    this.init();
    return this
};
WYMeditor.XhtmlLexer.prototype.init = function() {};
WYMeditor.XhtmlLexer.prototype.addTokens = function() {
    this.addCommentTokens("Text");
    this.addScriptTokens("Text");
    this.addCssTokens("Text");
    this.addTagTokens("Text")
};
WYMeditor.XhtmlLexer.prototype.addCommentTokens = function(b) {
    this.addEntryPattern("<!--", b, "Comment");
    this.addExitPattern("-->", "Comment")
};
WYMeditor.XhtmlLexer.prototype.addScriptTokens = function(b) {
    this.addEntryPattern("<script", b, "Script");
    this.addExitPattern("<\/script>", "Script")
};
WYMeditor.XhtmlLexer.prototype.addCssTokens = function(b) {
    this.addEntryPattern("<style", b, "Css");
    this.addExitPattern("</style>", "Css")
};
WYMeditor.XhtmlLexer.prototype.addTagTokens = function(b) {
    this.addSpecialPattern("<\\s*[a-z0-9:-]+\\s*>", b, "OpeningTag");
    this.addEntryPattern("<[a-z0-9:-]+[\\/ \\>]+", b, "OpeningTag");
    this.addInTagDeclarationTokens("OpeningTag");
    this.addSpecialPattern("</\\s*[a-z0-9:-]+\\s*>", b, "ClosingTag")
};
WYMeditor.XhtmlLexer.prototype.addInTagDeclarationTokens = function(b) {
    this.addSpecialPattern("\\s+", b, "Ignore");
    this.addAttributeTokens(b);
    this.addExitPattern("/>", b);
    this.addExitPattern(">", b)
};
WYMeditor.XhtmlLexer.prototype.addAttributeTokens = function(b) {
    this.addSpecialPattern("\\s*[a-z-_0-9]*:?[a-z-_0-9]+\\s*(?==)\\s*", b, "TagAttributes");
    this.addEntryPattern('=\\s*"', b, "DoubleQuotedAttribute");
    this.addPattern('\\\\"', "DoubleQuotedAttribute");
    this.addExitPattern('"', "DoubleQuotedAttribute");
    this.addEntryPattern("=\\s*'", b, "SingleQuotedAttribute");
    this.addPattern("\\\\'", "SingleQuotedAttribute");
    this.addExitPattern("'", "SingleQuotedAttribute");
    this.addSpecialPattern("=\\s*[^>\\s]*", b, "UnquotedAttribute")
};
WYMeditor.XhtmlParser = function(b, c) {
    var c = c || "Text";
    this._Lexer = new WYMeditor.XhtmlLexer(this);
    this._Listener = b;
    this._mode = c;
    this._matches = [];
    this._last_match = "";
    this._current_match = "";
    return this
};
WYMeditor.XhtmlParser.prototype.parse = function(b) {
    this._Lexer.parse(this.beforeParsing(b));
    return this.afterParsing(this._Listener.getResult())
};
WYMeditor.XhtmlParser.prototype.beforeParsing = function(b) {
    if (b.match(/class="MsoNormal"/) || b.match(/ns = "urn:schemas-microsoft-com/)) {
        this._Listener.avoidStylingTagsAndAttributes()
    }
    return this._Listener.beforeParsing(b)
};
WYMeditor.XhtmlParser.prototype.afterParsing = function(b) {
    if (this._Listener._avoiding_tags_implicitly) {
        this._Listener.allowStylingTagsAndAttributes()
    }
    return this._Listener.afterParsing(b)
};
WYMeditor.XhtmlParser.prototype.Ignore = function(b, c) {
    return true
};
WYMeditor.XhtmlParser.prototype.Text = function(b) {
    this._Listener.addContent(b);
    return true
};
WYMeditor.XhtmlParser.prototype.Comment = function(c, b) {
    return this._addNonTagBlock(c, b, "addComment")
};
WYMeditor.XhtmlParser.prototype.Script = function(c, b) {
    return this._addNonTagBlock(c, b, "addScript")
};
WYMeditor.XhtmlParser.prototype.Css = function(c, b) {
    return this._addNonTagBlock(c, b, "addCss")
};
WYMeditor.XhtmlParser.prototype._addNonTagBlock = function(b, d, c) {
    switch (d) {
        case WYMeditor.LEXER_ENTER:
            this._non_tag = b;
            break;
        case WYMeditor.LEXER_UNMATCHED:
            this._non_tag += b;
            break;
        case WYMeditor.LEXER_EXIT:
            switch (c) {
                case "addComment":
                    this._Listener.addComment(this._non_tag + b);
                    break;
                case "addScript":
                    this._Listener.addScript(this._non_tag + b);
                    break;
                case "addCss":
                    this._Listener.addCss(this._non_tag + b);
                    break
            }
    }
    return true
};
WYMeditor.XhtmlParser.prototype.OpeningTag = function(b, c) {
    switch (c) {
        case WYMeditor.LEXER_ENTER:
            this._tag = this.normalizeTag(b);
            this._tag_attributes = {};
            break;
        case WYMeditor.LEXER_SPECIAL:
            this._callOpenTagListener(this.normalizeTag(b));
            break;
        case WYMeditor.LEXER_EXIT:
            this._callOpenTagListener(this._tag, this._tag_attributes)
    }
    return true
};
WYMeditor.XhtmlParser.prototype.ClosingTag = function(b, c) {
    this._callCloseTagListener(this.normalizeTag(b));
    return true
};
WYMeditor.XhtmlParser.prototype._callOpenTagListener = function(b, c) {
    var c = c || {};
    this.autoCloseUnclosedBeforeNewOpening(b);
    if (this._Listener.isBlockTag(b)) {
        this._Listener._tag_stack.push(b);
        this._Listener.fixNestingBeforeOpeningBlockTag(b, c);
        this._Listener.openBlockTag(b, c);
        this._increaseOpenTagCounter(b)
    } else {
        if (this._Listener.isInlineTag(b)) {
            this._Listener.inlineTag(b, c)
        } else {
            this._Listener.openUnknownTag(b, c);
            this._increaseOpenTagCounter(b)
        }
    }
    this._Listener.last_tag = b;
    this._Listener.last_tag_opened = true;
    this._Listener.last_tag_attributes = c
};
WYMeditor.XhtmlParser.prototype._callCloseTagListener = function(b) {
    if (this._decreaseOpenTagCounter(b)) {
        this.autoCloseUnclosedBeforeTagClosing(b);
        if (this._Listener.isBlockTag(b)) {
            var c = this._Listener._tag_stack.pop();
            if (c == false) {
                return
            } else {
                if (c != b) {
                    b = c
                }
            }
            this._Listener.closeBlockTag(b)
        } else {
            this._Listener.closeUnknownTag(b)
        }
    } else {
        this._Listener.closeUnopenedTag(b)
    }
    this._Listener.last_tag = b;
    this._Listener.last_tag_opened = false
};
WYMeditor.XhtmlParser.prototype._increaseOpenTagCounter = function(b) {
    this._Listener._open_tags[b] = this._Listener._open_tags[b] || 0;
    this._Listener._open_tags[b]++
};
WYMeditor.XhtmlParser.prototype._decreaseOpenTagCounter = function(b) {
    if (this._Listener._open_tags[b]) {
        this._Listener._open_tags[b]--;
        if (this._Listener._open_tags[b] == 0) {
            this._Listener._open_tags[b] = undefined
        }
        return true
    }
    return false
};
WYMeditor.XhtmlParser.prototype.autoCloseUnclosedBeforeNewOpening = function(b) {
    this._autoCloseUnclosed(b, false)
};
WYMeditor.XhtmlParser.prototype.autoCloseUnclosedBeforeTagClosing = function(b) {
    this._autoCloseUnclosed(b, true)
};
WYMeditor.XhtmlParser.prototype._autoCloseUnclosed = function(d, e) {
    var e = e || false;
    if (this._Listener._open_tags) {
        for (var b in this._Listener._open_tags) {
            var c = this._Listener._open_tags[b];
            if (c > 0 && this._Listener.shouldCloseTagAutomatically(b, d, e)) {
                this._callCloseTagListener(b, true)
            }
        }
    }
};
WYMeditor.XhtmlParser.prototype.getTagReplacements = function() {
    return this._Listener.getTagReplacements()
};
WYMeditor.XhtmlParser.prototype.normalizeTag = function(b) {
    b = b.replace(/^([\s<\/>]*)|([\s<\/>]*)$/gm, "").toLowerCase();
    var c = this._Listener.getTagReplacements();
    if (c[b]) {
        return c[b]
    }
    return b
};
WYMeditor.XhtmlParser.prototype.TagAttributes = function(b, c) {
    if (WYMeditor.LEXER_SPECIAL == c) {
        this._current_attribute = b
    }
    return true
};
WYMeditor.XhtmlParser.prototype.DoubleQuotedAttribute = function(b, c) {
    if (WYMeditor.LEXER_UNMATCHED == c) {
        this._tag_attributes[this._current_attribute] = b
    }
    return true
};
WYMeditor.XhtmlParser.prototype.SingleQuotedAttribute = function(b, c) {
    if (WYMeditor.LEXER_UNMATCHED == c) {
        this._tag_attributes[this._current_attribute] = b
    }
    return true
};
WYMeditor.XhtmlParser.prototype.UnquotedAttribute = function(b, c) {
    this._tag_attributes[this._current_attribute] = b.replace(/^=/, "");
    return true
};
WYMeditor.XhtmlSaxListener = function() {
    this.output = "";
    this.helper = new WYMeditor.XmlHelper();
    this._open_tags = {};
    this.validator = WYMeditor.XhtmlValidator;
    this._tag_stack = [];
    this.avoided_tags = [];
    this.entities = {
        "&nbsp;": "&#160;",
        "&iexcl;": "&#161;",
        "&cent;": "&#162;",
        "&pound;": "&#163;",
        "&curren;": "&#164;",
        "&yen;": "&#165;",
        "&brvbar;": "&#166;",
        "&sect;": "&#167;",
        "&uml;": "&#168;",
        "&copy;": "&#169;",
        "&ordf;": "&#170;",
        "&laquo;": "&#171;",
        "&not;": "&#172;",
        "&shy;": "&#173;",
        "&reg;": "&#174;",
        "&macr;": "&#175;",
        "&deg;": "&#176;",
        "&plusmn;": "&#177;",
        "&sup2;": "&#178;",
        "&sup3;": "&#179;",
        "&acute;": "&#180;",
        "&micro;": "&#181;",
        "&para;": "&#182;",
        "&middot;": "&#183;",
        "&cedil;": "&#184;",
        "&sup1;": "&#185;",
        "&ordm;": "&#186;",
        "&raquo;": "&#187;",
        "&frac14;": "&#188;",
        "&frac12;": "&#189;",
        "&frac34;": "&#190;",
        "&iquest;": "&#191;",
        "&Agrave;": "&#192;",
        "&Aacute;": "&#193;",
        "&Acirc;": "&#194;",
        "&Atilde;": "&#195;",
        "&Auml;": "&#196;",
        "&Aring;": "&#197;",
        "&AElig;": "&#198;",
        "&Ccedil;": "&#199;",
        "&Egrave;": "&#200;",
        "&Eacute;": "&#201;",
        "&Ecirc;": "&#202;",
        "&Euml;": "&#203;",
        "&Igrave;": "&#204;",
        "&Iacute;": "&#205;",
        "&Icirc;": "&#206;",
        "&Iuml;": "&#207;",
        "&ETH;": "&#208;",
        "&Ntilde;": "&#209;",
        "&Ograve;": "&#210;",
        "&Oacute;": "&#211;",
        "&Ocirc;": "&#212;",
        "&Otilde;": "&#213;",
        "&Ouml;": "&#214;",
        "&times;": "&#215;",
        "&Oslash;": "&#216;",
        "&Ugrave;": "&#217;",
        "&Uacute;": "&#218;",
        "&Ucirc;": "&#219;",
        "&Uuml;": "&#220;",
        "&Yacute;": "&#221;",
        "&THORN;": "&#222;",
        "&szlig;": "&#223;",
        "&agrave;": "&#224;",
        "&aacute;": "&#225;",
        "&acirc;": "&#226;",
        "&atilde;": "&#227;",
        "&auml;": "&#228;",
        "&aring;": "&#229;",
        "&aelig;": "&#230;",
        "&ccedil;": "&#231;",
        "&egrave;": "&#232;",
        "&eacute;": "&#233;",
        "&ecirc;": "&#234;",
        "&euml;": "&#235;",
        "&igrave;": "&#236;",
        "&iacute;": "&#237;",
        "&icirc;": "&#238;",
        "&iuml;": "&#239;",
        "&eth;": "&#240;",
        "&ntilde;": "&#241;",
        "&ograve;": "&#242;",
        "&oacute;": "&#243;",
        "&ocirc;": "&#244;",
        "&otilde;": "&#245;",
        "&ouml;": "&#246;",
        "&divide;": "&#247;",
        "&oslash;": "&#248;",
        "&ugrave;": "&#249;",
        "&uacute;": "&#250;",
        "&ucirc;": "&#251;",
        "&uuml;": "&#252;",
        "&yacute;": "&#253;",
        "&thorn;": "&#254;",
        "&yuml;": "&#255;",
        "&OElig;": "&#338;",
        "&oelig;": "&#339;",
        "&Scaron;": "&#352;",
        "&scaron;": "&#353;",
        "&Yuml;": "&#376;",
        "&fnof;": "&#402;",
        "&circ;": "&#710;",
        "&tilde;": "&#732;",
        "&Alpha;": "&#913;",
        "&Beta;": "&#914;",
        "&Gamma;": "&#915;",
        "&Delta;": "&#916;",
        "&Epsilon;": "&#917;",
        "&Zeta;": "&#918;",
        "&Eta;": "&#919;",
        "&Theta;": "&#920;",
        "&Iota;": "&#921;",
        "&Kappa;": "&#922;",
        "&Lambda;": "&#923;",
        "&Mu;": "&#924;",
        "&Nu;": "&#925;",
        "&Xi;": "&#926;",
        "&Omicron;": "&#927;",
        "&Pi;": "&#928;",
        "&Rho;": "&#929;",
        "&Sigma;": "&#931;",
        "&Tau;": "&#932;",
        "&Upsilon;": "&#933;",
        "&Phi;": "&#934;",
        "&Chi;": "&#935;",
        "&Psi;": "&#936;",
        "&Omega;": "&#937;",
        "&alpha;": "&#945;",
        "&beta;": "&#946;",
        "&gamma;": "&#947;",
        "&delta;": "&#948;",
        "&epsilon;": "&#949;",
        "&zeta;": "&#950;",
        "&eta;": "&#951;",
        "&theta;": "&#952;",
        "&iota;": "&#953;",
        "&kappa;": "&#954;",
        "&lambda;": "&#955;",
        "&mu;": "&#956;",
        "&nu;": "&#957;",
        "&xi;": "&#958;",
        "&omicron;": "&#959;",
        "&pi;": "&#960;",
        "&rho;": "&#961;",
        "&sigmaf;": "&#962;",
        "&sigma;": "&#963;",
        "&tau;": "&#964;",
        "&upsilon;": "&#965;",
        "&phi;": "&#966;",
        "&chi;": "&#967;",
        "&psi;": "&#968;",
        "&omega;": "&#969;",
        "&thetasym;": "&#977;",
        "&upsih;": "&#978;",
        "&piv;": "&#982;",
        "&ensp;": "&#8194;",
        "&emsp;": "&#8195;",
        "&thinsp;": "&#8201;",
        "&zwnj;": "&#8204;",
        "&zwj;": "&#8205;",
        "&lrm;": "&#8206;",
        "&rlm;": "&#8207;",
        "&ndash;": "&#8211;",
        "&mdash;": "&#8212;",
        "&lsquo;": "&#8216;",
        "&rsquo;": "&#8217;",
        "&sbquo;": "&#8218;",
        "&ldquo;": "&#8220;",
        "&rdquo;": "&#8221;",
        "&bdquo;": "&#8222;",
        "&dagger;": "&#8224;",
        "&Dagger;": "&#8225;",
        "&bull;": "&#8226;",
        "&hellip;": "&#8230;",
        "&permil;": "&#8240;",
        "&prime;": "&#8242;",
        "&Prime;": "&#8243;",
        "&lsaquo;": "&#8249;",
        "&rsaquo;": "&#8250;",
        "&oline;": "&#8254;",
        "&frasl;": "&#8260;",
        "&euro;": "&#8364;",
        "&image;": "&#8465;",
        "&weierp;": "&#8472;",
        "&real;": "&#8476;",
        "&trade;": "&#8482;",
        "&alefsym;": "&#8501;",
        "&larr;": "&#8592;",
        "&uarr;": "&#8593;",
        "&rarr;": "&#8594;",
        "&darr;": "&#8595;",
        "&harr;": "&#8596;",
        "&crarr;": "&#8629;",
        "&lArr;": "&#8656;",
        "&uArr;": "&#8657;",
        "&rArr;": "&#8658;",
        "&dArr;": "&#8659;",
        "&hArr;": "&#8660;",
        "&forall;": "&#8704;",
        "&part;": "&#8706;",
        "&exist;": "&#8707;",
        "&empty;": "&#8709;",
        "&nabla;": "&#8711;",
        "&isin;": "&#8712;",
        "&notin;": "&#8713;",
        "&ni;": "&#8715;",
        "&prod;": "&#8719;",
        "&sum;": "&#8721;",
        "&minus;": "&#8722;",
        "&lowast;": "&#8727;",
        "&radic;": "&#8730;",
        "&prop;": "&#8733;",
        "&infin;": "&#8734;",
        "&ang;": "&#8736;",
        "&and;": "&#8743;",
        "&or;": "&#8744;",
        "&cap;": "&#8745;",
        "&cup;": "&#8746;",
        "&int;": "&#8747;",
        "&there4;": "&#8756;",
        "&sim;": "&#8764;",
        "&cong;": "&#8773;",
        "&asymp;": "&#8776;",
        "&ne;": "&#8800;",
        "&equiv;": "&#8801;",
        "&le;": "&#8804;",
        "&ge;": "&#8805;",
        "&sub;": "&#8834;",
        "&sup;": "&#8835;",
        "&nsub;": "&#8836;",
        "&sube;": "&#8838;",
        "&supe;": "&#8839;",
        "&oplus;": "&#8853;",
        "&otimes;": "&#8855;",
        "&perp;": "&#8869;",
        "&sdot;": "&#8901;",
        "&lceil;": "&#8968;",
        "&rceil;": "&#8969;",
        "&lfloor;": "&#8970;",
        "&rfloor;": "&#8971;",
        "&lang;": "&#9001;",
        "&rang;": "&#9002;",
        "&loz;": "&#9674;",
        "&spades;": "&#9824;",
        "&clubs;": "&#9827;",
        "&hearts;": "&#9829;",
        "&diams;": "&#9830;"
    };
    this.block_tags = ["a", "abbr", "acronym", "address", "area", "b", "base", "bdo", "big", "blockquote", "body", "button", "caption", "cite", "code", "col", "colgroup", "dd", "del", "div", "dfn", "dl", "dt", "em", "fieldset", "form", "head", "h1", "h2", "h3", "h4", "h5", "h6", "html", "i", "ins", "kbd", "label", "legend", "li", "map", "noscript", "object", "ol", "optgroup", "option", "p", "param", "pre", "q", "samp", "script", "select", "small", "span", "strong", "style", "sub", "sup", "table", "tbody", "td", "textarea", "tfoot", "th", "thead", "title", "tr", "tt", "ul", "var", "extends"];
    this.inline_tags = ["br", "hr", "img", "input"];
    return this
};
WYMeditor.XhtmlSaxListener.prototype.shouldCloseTagAutomatically = function(b, d, c) {
    var c = c || false;
    if (b == "td") {
        if ((c && d == "tr") || (!c && d == "td")) {
            return true
        }
    }
    if (b == "option") {
        if ((c && d == "select") || (!c && d == "option")) {
            return true
        }
    }
    return false
};
WYMeditor.XhtmlSaxListener.prototype.beforeParsing = function(b) {
    this.output = "";
    return b
};
WYMeditor.XhtmlSaxListener.prototype.afterParsing = function(b) {
    b = this.replaceNamedEntities(b);
    b = this.joinRepeatedEntities(b);
    b = this.removeEmptyTags(b);
    return b
};
WYMeditor.XhtmlSaxListener.prototype.replaceNamedEntities = function(c) {
    for (var b in this.entities) {
        c = c.replace(b, this.entities[b])
    }
    return c
};
WYMeditor.XhtmlSaxListener.prototype.joinRepeatedEntities = function(c) {
    var b = "em|strong|sub|sup|acronym|pre|del|blockquote|address";
    return c.replace(new RegExp("</(" + b + ")><\\1>", ""), "").replace(new RegExp("(s*<(" + b + ")>s*){2}(.*)(s*</\\2>s*){2}", ""), "<$2>$3<$2>")
};
WYMeditor.XhtmlSaxListener.prototype.removeEmptyTags = function(b) {
    return b.replace(new RegExp("<(" + this.block_tags.join("|") + ")>(<br />|&#160;|&nbsp;|\\s)*</\\1>", "g"), "")
};
WYMeditor.XhtmlSaxListener.prototype.getResult = function() {
    return this.output
};
WYMeditor.XhtmlSaxListener.prototype.getTagReplacements = function() {
    return {
        b: "strong",
        i: "em"
    }
};
WYMeditor.XhtmlSaxListener.prototype.addContent = function(b) {
    this.output += b
};
WYMeditor.XhtmlSaxListener.prototype.addComment = function(b) {
    if (this.remove_comments) {
        this.output += b
    }
};
WYMeditor.XhtmlSaxListener.prototype.addScript = function(b) {
    if (!this.remove_scripts) {
        this.output += b
    }
};
WYMeditor.XhtmlSaxListener.prototype.addCss = function(b) {
    if (!this.remove_embeded_styles) {
        this.output += b
    }
};
WYMeditor.XhtmlSaxListener.prototype.openBlockTag = function(b, c) {
    this.output += this.helper.tag(b, this.validator.getValidTagAttributes(b, c), true)
};
WYMeditor.XhtmlSaxListener.prototype.inlineTag = function(b, c) {
    this.output += this.helper.tag(b, this.validator.getValidTagAttributes(b, c))
};
WYMeditor.XhtmlSaxListener.prototype.openUnknownTag = function(b, c) {};
WYMeditor.XhtmlSaxListener.prototype.closeBlockTag = function(b) {
    this.output = this.output.replace(/<br \/>$/, "") + this._getClosingTagContent("before", b) + "</" + b + ">" + this._getClosingTagContent("after", b)
};
WYMeditor.XhtmlSaxListener.prototype.closeUnknownTag = function(b) {};
WYMeditor.XhtmlSaxListener.prototype.closeUnopenedTag = function(b) {
    this.output += "</" + b + ">"
};
WYMeditor.XhtmlSaxListener.prototype.avoidStylingTagsAndAttributes = function() {
    this.avoided_tags = ["div", "span"];
    this.validator.skiped_attributes = ["style"];
    this.validator.skiped_attribute_values = ["MsoNormal", "main1"];
    this._avoiding_tags_implicitly = true
};
WYMeditor.XhtmlSaxListener.prototype.allowStylingTagsAndAttributes = function() {
    this.avoided_tags = [];
    this.validator.skiped_attributes = [];
    this.validator.skiped_attribute_values = [];
    this._avoiding_tags_implicitly = false
};
WYMeditor.XhtmlSaxListener.prototype.isBlockTag = function(b) {
    return !WYMeditor.Helper.contains(this.avoided_tags, b) && WYMeditor.Helper.contains(this.block_tags, b)
};
WYMeditor.XhtmlSaxListener.prototype.isInlineTag = function(b) {
    return !WYMeditor.Helper.contains(this.avoided_tags, b) && WYMeditor.Helper.contains(this.inline_tags, b)
};
WYMeditor.XhtmlSaxListener.prototype.insertContentAfterClosingTag = function(b, c) {
    this._insertContentWhenClosingTag("after", b, c)
};
WYMeditor.XhtmlSaxListener.prototype.insertContentBeforeClosingTag = function(b, c) {
    this._insertContentWhenClosingTag("before", b, c)
};
WYMeditor.XhtmlSaxListener.prototype.fixNestingBeforeOpeningBlockTag = function(b, c) {
    if (b != "li" && (b == "ul" || b == "ol") && this.last_tag && !this.last_tag_opened && this.last_tag == "li") {
        this.output = this.output.replace(/<\/li>$/, "");
        this.insertContentAfterClosingTag(b, "</li>")
    }
};
WYMeditor.XhtmlSaxListener.prototype._insertContentWhenClosingTag = function(c, b, d) {
    if (!this["_insert_" + c + "_closing"]) {
        this["_insert_" + c + "_closing"] = []
    }
    if (!this["_insert_" + c + "_closing"][b]) {
        this["_insert_" + c + "_closing"][b] = []
    }
    this["_insert_" + c + "_closing"][b].push(d)
};
WYMeditor.XhtmlSaxListener.prototype._getClosingTagContent = function(c, b) {
    if (this["_insert_" + c + "_closing"] && this["_insert_" + c + "_closing"][b] && this["_insert_" + c + "_closing"][b].length > 0) {
        return this["_insert_" + c + "_closing"][b].pop()
    }
    return ""
};
WYMeditor.WymCssLexer = function(c, b) {
    var b = (b == undefined ? true : b);
    jQuery.extend(this, new WYMeditor.Lexer(c, (b ? "Ignore" : "WymCss")));
    this.mapHandler("WymCss", "Ignore");
    if (b == true) {
        this.addEntryPattern("/\\\x2a[<\\s]*WYMeditor[>\\s]*\\\x2a/", "Ignore", "WymCss");
        this.addExitPattern("/\\\x2a[</\\s]*WYMeditor[>\\s]*\\\x2a/", "WymCss")
    }
    this.addSpecialPattern("\\\x2e[a-z-_0-9]+[\\sa-z]*", "WymCss", "WymCssStyleDeclaration");
    this.addEntryPattern("/\\\x2a", "WymCss", "WymCssComment");
    this.addExitPattern("\\\x2a/", "WymCssComment");
    this.addEntryPattern("\x7b", "WymCss", "WymCssStyle");
    this.addExitPattern("\x7d", "WymCssStyle");
    this.addEntryPattern("/\\\x2a", "WymCssStyle", "WymCssFeddbackStyle");
    this.addExitPattern("\\\x2a/", "WymCssFeddbackStyle");
    return this
};
WYMeditor.WymCssParser = function() {
    this._in_style = false;
    this._has_title = false;
    this.only_wym_blocks = true;
    this.css_settings = {
        classesItems: [],
        editorStyles: [],
        dialogStyles: []
    };
    return this
};
WYMeditor.WymCssParser.prototype.parse = function(b, c) {
    var c = (c == undefined ? this.only_wym_blocks : c);
    this._Lexer = new WYMeditor.WymCssLexer(this, c);
    this._Lexer.parse(b)
};
WYMeditor.WymCssParser.prototype.Ignore = function(b, c) {
    return true
};
WYMeditor.WymCssParser.prototype.WymCssComment = function(c, b) {
    if (c.match(/end[a-z0-9\s]*wym[a-z0-9\s]*/mi)) {
        return false
    }
    if (b == WYMeditor.LEXER_UNMATCHED) {
        if (!this._in_style) {
            this._has_title = true;
            this._current_item = {
                title: WYMeditor.Helper.trim(c)
            }
        } else {
            if (this._current_item[this._current_element]) {
                if (!this._current_item[this._current_element].expressions) {
                    this._current_item[this._current_element].expressions = [c]
                } else {
                    this._current_item[this._current_element].expressions.push(c)
                }
            }
        }
        this._in_style = true
    }
    return true
};
WYMeditor.WymCssParser.prototype.WymCssStyle = function(c, b) {
    if (b == WYMeditor.LEXER_UNMATCHED) {
        c = WYMeditor.Helper.trim(c);
        if (c != "") {
            this._current_item[this._current_element].style = c
        }
    } else {
        if (b == WYMeditor.LEXER_EXIT) {
            this._in_style = false;
            this._has_title = false;
            this.addStyleSetting(this._current_item)
        }
    }
    return true
};
WYMeditor.WymCssParser.prototype.WymCssFeddbackStyle = function(c, b) {
    if (b == WYMeditor.LEXER_UNMATCHED) {
        this._current_item[this._current_element].feedback_style = c.replace(/^([\s\/\*]*)|([\s\/\*]*)$/gm, "")
    }
    return true
};
WYMeditor.WymCssParser.prototype.WymCssStyleDeclaration = function(c) {
    c = c.replace(/^([\s\.]*)|([\s\.*]*)$/gm, "");
    var b = "";
    if (c.indexOf(" ") > 0) {
        var d = c.split(" ");
        this._current_element = d[0];
        var b = d[1]
    } else {
        this._current_element = c
    }
    if (!this._has_title) {
        this._current_item = {
            title: (!b ? "" : b.toUpperCase() + ": ") + this._current_element
        };
        this._has_title = true
    }
    if (!this._current_item[this._current_element]) {
        this._current_item[this._current_element] = {
            name: this._current_element
        }
    }
    if (b) {
        if (!this._current_item[this._current_element].tags) {
            this._current_item[this._current_element].tags = [b]
        } else {
            this._current_item[this._current_element].tags.push(b)
        }
    }
    return true
};
WYMeditor.WymCssParser.prototype.addStyleSetting = function(b) {
    for (var c in b) {
        var d = b[c];
        if (typeof d == "object" && c != "title") {
            this.css_settings.classesItems.push({
                name: WYMeditor.Helper.trim(d.name),
                title: b.title,
                expr: WYMeditor.Helper.trim((d.expressions || d.tags).join(", "))
            });
            if (d.feedback_style) {
                this.css_settings.editorStyles.push({
                    name: "." + WYMeditor.Helper.trim(d.name),
                    css: d.feedback_style
                })
            }
            if (d.style) {
                this.css_settings.dialogStyles.push({
                    name: "." + WYMeditor.Helper.trim(d.name),
                    css: d.style
                })
            }
        }
    }
};
jQuery.fn.isPhantomNode = function() {
    if (this[0].nodeType == 3) {
        return !(/[^\t\n\r ]/.test(this[0].data))
    }
    return false
};
WYMeditor.isPhantomNode = function(b) {
    if (b.nodeType == 3) {
        return !(/[^\t\n\r ]/.test(b.data))
    }
    return false
};
WYMeditor.isPhantomString = function(b) {
    return !(/[^\t\n\r ]/.test(b))
};
jQuery.fn.parentsOrSelf = function(c) {
    var b = this;
    if (b[0].nodeType == 3) {
        b = b.parents().slice(0, 1)
    }
    if (b.filter(c).size() == 1) {
        return b
    } else {
        return b.parents(c).slice(0, 1)
    }
};
WYMeditor.Helper = {
    replaceAll: function(e, b, d) {
        var c = new RegExp(b, "g");
        return (e.replace(c, d))
    },
    insertAt: function(c, b, d) {
        return (c.substr(0, d) + b + c.substring(d))
    },
    trim: function(b) {
        return b.replace(/^(\s*)|(\s*)$/gm, "")
    },
    contains: function(b, d) {
        for (var c = 0; c < b.length; c++) {
            if (b[c] === d) {
                return true
            }
        }
        return false
    },
    indexOf: function(b, e) {
        var c = -1;
        for (var d = 0; d < b.length; d++) {
            if (b[d] == e) {
                c = d;
                break
            }
        }
        return (c)
    },
    findByName: function(b, c) {
        for (var d = 0; d < b.length; d++) {
            var e = b[d];
            if (e.name == c) {
                return (e)
            }
        }
        return (null)
    }
};
WYMeditor.WymClassExplorer = function(b) {
    this._wym = b;
    this._class = "className";
    this._newLine = "\r\n"
};
WYMeditor.WymClassExplorer.prototype.initIframe = function(iframe) {
    this._iframe = iframe;
    this._doc = iframe.contentWindow.document;
    var styles = this._doc.styleSheets[0];
    var aCss = eval(this._options.editorStyles);
    this.addCssRules(this._doc, aCss);
    this._doc.title = this._wym._index;
    jQuery(this._doc.body).html(this._wym._html);
    var wym = this;
    this._doc.body.onfocus = function() {
        wym._doc.designMode = "on";
        wym._doc = iframe.contentWindow.document
    };
    this._doc.onbeforedeactivate = function() {
        wym.saveCaret()
    };
    this._doc.onkeyup = function() {
        wym.saveCaret();
        wym.keyup()
    };
    this._doc.onclick = function() {
        wym.saveCaret()
    };
    this._doc.body.onbeforepaste = function() {
        wym._iframe.contentWindow.event.returnValue = false
    };
    this._doc.body.onpaste = function() {
        wym._iframe.contentWindow.event.returnValue = false;
        wym.paste(window.clipboardData.getData("Text"))
    };
    if (this._initialized) {
        if (jQuery.isFunction(this._options.preBind)) {
            this._options.preBind(this)
        }
        this._wym.bindEvents();
        jQuery(this._doc).bind("keydown", this.handleKeydown);
        if (jQuery.isFunction(this._options.postInit)) {
            this._options.postInit(this)
        }
        this.listen()
    }
    this._initialized = true;
    this._doc.designMode = "on";
    try {
        this._doc = iframe.contentWindow.document
    } catch (e) {}
};
WYMeditor.WymClassExplorer.prototype._exec = function(c, d) {
    switch (c) {
        case WYMeditor.INDENT:
        case WYMeditor.OUTDENT:
            var b = this.findUp(this.container(), WYMeditor.LI);
            if (b) {
                this._doc.execCommand(c)
            }
            break;
        default:
            if (d) {
                this._doc.execCommand(c, false, d)
            } else {
                this._doc.execCommand(c)
            }
            break
    }
    this.listen()
};
WYMeditor.WymClassExplorer.prototype.selected = function() {
    var b = this._iframe.contentWindow.document.caretPos;
    if (b != null) {
        if (b.parentElement != undefined) {
            return (b.parentElement())
        }
    }
};
WYMeditor.WymClassExplorer.prototype.saveCaret = function() {
    this._doc.caretPos = this._doc.selection.createRange()
};
WYMeditor.WymClassExplorer.prototype.addCssRule = function(b, c) {
    b.addRule(c.name, c.css)
};
WYMeditor.WymClassExplorer.prototype.keyup = function() {
    this._selected_image = null
};
WYMeditor.WymClassExplorer.prototype.setFocusToNode = function(c) {
    var b = this._doc.selection.createRange();
    b.moveToElementText(c);
    b.collapse(false);
    b.move("character", -1);
    b.select();
    c.focus()
};
WYMeditor.WymClassExplorer.prototype.handleKeydown = function(b) {
    var d = WYMeditor.INSTANCES[this.title];
    var c = d.selection.getSelection()
};
WYMeditor.WymSelExplorer = function(b) {
    this._wym = b
};
WYMeditor.WymSelExplorer.prototype = {
    getSelection: function() {
        var d = this._wym._iframe.contentWindow.document.selection;
        var c = d.createRange();
        this.original = d;
        if (d.type == "None") {
            this.isCollapsed = true
        } else {
            this.isCollapsed = false
        }
        var e = this._getNodeAndOffset(c.duplicate(), true);
        this.startNode = e.node;
        this.startOffset = e.offset;
        if (this.isCollapsed) {
            this.endNode = this.startNode;
            this.endOffset = this.startOffset
        } else {
            var b = this._getNodeAndOffset(c.duplicate(), false);
            this.endNode = b.node;
            this.endOffset = b.offset
        }
        this.container = jQuery(c.parentElement()).parentsOrSelf(WYMeditor.MAIN_CONTAINERS.join(","))[0];
        return this
    },
    _getNodeAndOffset: function(p, q) {
        var f = p.parentElement();
        var m = p.duplicate();
        var u;
        var v = 0;
        var g = 0;
        p.collapse(q);
        m.moveToElementText(f);
        u = m.text.length;
        var w = m.duplicate();
        var c = m.duplicate();
        m.setEndPoint("EndToStart", p);
        v = m.text.length;
        var z = 1;
        var n = 0;
        var h = v / u;
        var g = 0;
        var d = f.childNodes;
        if (d.length > 20 && h > 0.1) {
            var b = c.duplicate();
            n = Math.round(h * d.length - 1);
            if (n <= 0) {
                n = 1
            }
            while ((d[n].nodeType == WYMeditor.NODE.TEXT || d[n].nodeName == "BR") && n > 0) {
                n--
            }
            if (n > 0) {
                b.moveToElementText(d[n]);
                b.setEndPoint("EndToStart", c);
                if (v > b.text.length) {
                    z = 1;
                    c.setEndPoint("StartToEnd", b);
                    c.setEndPoint("EndToEnd", m)
                } else {
                    z = -1;
                    c.setEndPoint("StartToEnd", m);
                    c.setEndPoint("EndToEnd", b);
                    n--
                }
            } else {
                z = 1;
                c = m.duplicate()
            }
        } else {
            if (z == 1) {
                c = m.duplicate()
            } else {
                c = w.duplicate();
                c.setEndPoint("StartToEnd", m)
            }
        }
        var r = f.childNodes[n];
        var D = c.duplicate();
        if (z == 1) {
            var E = 0;
            var C = 0;
            while (r) {
                if (r.nodeName == "BR") {
                    C++
                }
                E = this._getTextLength(r);
                if (D.text.length > E) {
                    D.moveStart("character", E + C);
                    C = 0
                } else {
                    break
                }
                r = r.nextSibling
            }
            g = D.text.length
        } else {
            var E = 0;
            var C = 0;
            while (r) {
                if (r.nodeName == "BR") {
                    C++
                }
                E = this._getTextLength(r);
                if (D.text.length > E) {
                    var e = D.text.length;
                    D.moveEnd("character", -(E + C));
                    if (C == 0) {
                        var o = (e - E) - D.text.length;
                        D.moveEnd("character", o)
                    }
                    C = 0
                } else {
                    break
                }
                if (r.previousSibling) {
                    r = r.previousSibling
                } else {
                    break
                }
            }
            g = E - D.text.length
        }
        return {
            node: r,
            offset: g
        }
    },
    _getTextLength: function(b) {
        if (b.nodeType == WYMeditor.NODE.ELEMENT) {
            return b.innerText.length
        } else {
            if (b.nodeType == WYMeditor.NODE.TEXT) {
                return b.data.length
            }
        }
    },
    deleteIfExpanded: function() {
        if (!this.isCollapsed) {
            this.original.clear();
            return true
        }
        return false
    }
};
WYMeditor.WymClassMozilla = function(b) {
    this._wym = b;
    this._class = "class";
    this._newLine = "\n"
};
WYMeditor.WymClassMozilla.prototype.initIframe = function(iframe) {
    this._iframe = iframe;
    this._doc = iframe.contentDocument;
    var styles = this._doc.styleSheets[0];
    var aCss = eval(this._options.editorStyles);
    this.addCssRules(this._doc, aCss);
    this._doc.title = this._wym._index;
    this.html(this._wym._html);
    this.enableDesignMode();
    if (jQuery.isFunction(this._options.preBind)) {
        this._options.preBind(this)
    }
    this._wym.bindEvents();
    jQuery(this._doc).bind("keydown", this.keydown);
    jQuery(this._doc).bind("keyup", this.keyup);
    jQuery(this._doc).bind("focus", this.enableDesignMode);
    if (jQuery.isFunction(this._options.postInit)) {
        this._options.postInit(this)
    }
    this.listen()
};
WYMeditor.WymClassMozilla.prototype.html = function(b) {
    if (typeof b === "string") {
        try {
            this._doc.designMode = "off"
        } catch (c) {}
        b = b.replace(/<em([^>]*)>/gi, "<i$1>").replace(/<\/em>/gi, "</i>").replace(/<strong([^>]*)>/gi, "<b$1>").replace(/<\/strong>/gi, "</b>");
        jQuery(this._doc.body).html(b);
        this.enableDesignMode()
    } else {
        return (jQuery(this._doc.body).html())
    }
};
WYMeditor.WymClassMozilla.prototype._exec = function(f, h) {
    if (!this.selected()) {
        return (false)
    }
    switch (f) {
        case WYMeditor.INDENT:
        case WYMeditor.OUTDENT:
            var g = this.selected();
            var e = this._iframe.contentWindow.getSelection();
            var c = e.anchorNode;
            if (c.nodeName == "#text") {
                c = c.parentNode
            }
            g = this.findUp(g, WYMeditor.BLOCKS);
            c = this.findUp(c, WYMeditor.BLOCKS);
            if (g && g == c && g.tagName.toLowerCase() == WYMeditor.LI) {
                var d = g.parentNode.parentNode;
                if (g.parentNode.childNodes.length > 1 || d.tagName.toLowerCase() == WYMeditor.OL || d.tagName.toLowerCase() == WYMeditor.UL) {
                    this._doc.execCommand(f, "", null)
                }
            }
            break;
        default:
            if (h) {
                this._doc.execCommand(f, "", h)
            } else {
                this._doc.execCommand(f, "", null)
            }
    }
    var b = this.selected();
    if (b.tagName.toLowerCase() == WYMeditor.BODY) {
        this._exec(WYMeditor.FORMAT_BLOCK, WYMeditor.P)
    }
    this.listen()
};
WYMeditor.WymClassMozilla.prototype.selected = function() {
    var c = this._iframe.contentWindow.getSelection();
    var b = c.focusNode;
    if (b) {
        if (b.nodeName == "#text") {
            return (b.parentNode)
        } else {
            return (b)
        }
    } else {
        return (null)
    }
};
WYMeditor.WymClassMozilla.prototype.addCssRule = function(b, c) {
    b.insertRule(c.name + " {" + c.css + "}", b.cssRules.length)
};
WYMeditor.WymClassMozilla.prototype.keydown = function(b) {
    var d = WYMeditor.INSTANCES[this.title];
    var c = d.selection.getSelection();
    if (b.ctrlKey) {
        if (b.keyCode == 66) {
            d._exec(WYMeditor.BOLD);
            return false
        }
        if (b.keyCode == 73) {
            d._exec(WYMeditor.ITALIC);
            return false
        }
    }
};
WYMeditor.WymClassMozilla.prototype.keyup = function(c) {
    var e = WYMeditor.INSTANCES[this.title];
    e._selected_image = null;
    var b = null;
    if (c.keyCode == 13 && !c.shiftKey) {
        jQuery(e._doc.body).children(WYMeditor.BR).remove();
        b = e.selected();
        if (b && b.tagName.toLowerCase() == WYMeditor.PRE) {
            e._exec(WYMeditor.FORMAT_BLOCK, WYMeditor.P)
        }
    } else {
        if (c.keyCode != 8 && c.keyCode != 17 && c.keyCode != 46 && c.keyCode != 224 && !c.metaKey && !c.ctrlKey) {
            b = e.selected();
            var d = b.tagName.toLowerCase();
            if (d == "strong" || d == "b" || d == "em" || d == "i" || d == "sub" || d == "sup" || d == "a") {
                d = b.parentNode.tagName.toLowerCase()
            }
            if (d == WYMeditor.BODY) {
                e._exec(WYMeditor.FORMAT_BLOCK, WYMeditor.P)
            }
        }
    }
};
WYMeditor.WymClassMozilla.prototype.enableDesignMode = function() {
    if (this.designMode == "off") {
        try {
            this.designMode = "on";
            this.execCommand("styleWithCSS", "", false)
        } catch (b) {}
    }
};
WYMeditor.WymClassMozilla.prototype.setFocusToNode = function(d) {
    var b = document.createRange();
    b.selectNode(d);
    var c = this._iframe.contentWindow.getSelection();
    c.addRange(b);
    c.collapse(d, d.childNodes.length);
    this._iframe.contentWindow.focus()
};
WYMeditor.WymClassMozilla.prototype.openBlockTag = function(b, d) {
    var d = this.validator.getValidTagAttributes(b, d);
    if (b == "span" && d.style) {
        var c = this.getTagForStyle(d.style);
        if (c) {
            this._tag_stack.pop();
            var b = c;
            this._tag_stack.push(c);
            d.style = ""
        } else {
            return
        }
    }
    this.output += this.helper.tag(b, d, true)
};
WYMeditor.WymClassMozilla.prototype.getTagForStyle = function(b) {
    if (/bold/.test(b)) {
        return "strong"
    }
    if (/italic/.test(b)) {
        return "em"
    }
    if (/sub/.test(b)) {
        return "sub"
    }
    if (/sub/.test(b)) {
        return "super"
    }
    return false
};
WYMeditor.WymSelMozilla = function(b) {
    this._wym = b
};
WYMeditor.WymSelMozilla.prototype = {
    getSelection: function() {
        var b = this._wym._iframe.contentWindow.getSelection();
        this.startNode = b.getRangeAt(0).startContainer;
        this.endNode = b.getRangeAt(0).endContainer;
        this.startOffset = b.getRangeAt(0).startOffset;
        this.endOffset = b.getRangeAt(0).endOffset;
        this.isCollapsed = b.isCollapsed;
        this.original = b;
        this.container = jQuery(this.startNode).parentsOrSelf(WYMeditor.MAIN_CONTAINERS.join(","))[0];
        return this
    },
    cursorToStart: function(c) {
        if (c.nodeType == WYMeditor.NODE.TEXT) {
            c = c.parentNode
        }
        var b = jQuery(c)[0];
        while (b.nodeType != WYMeditor.NODE.TEXT) {
            if (!b.hasChildNodes()) {
                break
            }
            b = b.firstChild
        }
        if (WYMeditor.isPhantomNode(b)) {
            b = b.nextSibling
        }
        if (b.nodeType == WYMeditor.NODE.ELEMENT) {
            this.original.collapse(b.parentNode, 0)
        } else {
            this.original.collapse(b, 0)
        }
    },
    cursorToEnd: function(c) {
        if (c.nodeType == WYMeditor.NODE.TEXT) {
            c = c.parentNode
        }
        var b = jQuery(c)[0];
        while (b.nodeType != WYMeditor.NODE.TEXT) {
            if (!b.hasChildNodes()) {
                break
            }
            b = b.lastChild
        }
        if (WYMeditor.isPhantomNode(b)) {
            b = b.previousSibling
        }
        if (b.nodeType == WYMeditor.NODE.ELEMENT) {
            this.original.collapse(b.parentNode, b.parentNode.childNodes.length)
        } else {
            this.original.collapse(b, b.length)
        }
    },
    deleteIfExpanded: function() {
        if (!this.original.isCollapsed) {
            this.original.deleteFromDocument();
            return true
        }
        return false
    }
};
WYMeditor.WymClassOpera = function(b) {
    this._wym = b;
    this._class = "class";
    this._newLine = "\r\n"
};
WYMeditor.WymClassOpera.prototype.initIframe = function(iframe) {
    this._iframe = iframe;
    this._doc = iframe.contentWindow.document;
    var styles = this._doc.styleSheets[0];
    var aCss = eval(this._options.editorStyles);
    this.addCssRules(this._doc, aCss);
    this._doc.title = this._wym._index;
    this._doc.designMode = "on";
    this.html(this._wym._html);
    if (jQuery.isFunction(this._options.preBind)) {
        this._options.preBind(this)
    }
    jQuery(this._box).find(this._options.toolSelector + "[@name=" + WYMeditor.INDENT + "]").hide();
    jQuery(this._box).find(this._options.toolSelector + "[@name=" + WYMeditor.OUTDENT + "]").hide();
    this._wym.bindEvents();
    jQuery(this._doc).bind("keydown", this.keydown);
    jQuery(this._doc).bind("keyup", this.keyup);
    if (jQuery.isFunction(this._options.postInit)) {
        this._options.postInit(this)
    }
    this.listen()
};
WYMeditor.WymClassOpera.prototype._exec = function(b, c) {
    switch (b) {
        case WYMeditor.INDENT:
        case WYMeditor.OUTDENT:
            this.status("Unsupported feature.");
            break;
        default:
            if (c) {
                this._doc.execCommand(b, false, c)
            } else {
                this._doc.execCommand(b)
            }
            break
    }
    this.listen()
};
WYMeditor.WymClassOpera.prototype.selected = function() {
    var c = this._iframe.contentWindow.getSelection();
    var b = c.focusNode;
    if (b) {
        if (b.nodeName == "#text") {
            return (b.parentNode)
        } else {
            return (b)
        }
    } else {
        return (null)
    }
};
WYMeditor.WymClassOpera.prototype.addCssRule = function(b, c) {
    b.insertRule(c.name + " {" + c.css + "}", b.cssRules.length)
};
WYMeditor.WymClassOpera.prototype.keydown = function(b) {
    var d = WYMeditor.INSTANCES[this.title];
    var c = d.selection.getSelection();
    if (!c.container && b.keyCode != WYMeditor.KEY.ENTER && b.keyCode != WYMeditor.KEY.LEFT && b.keyCode != WYMeditor.KEY.UP && b.keyCode != WYMeditor.KEY.RIGHT && b.keyCode != WYMeditor.KEY.DOWN && b.keyCode != WYMeditor.KEY.BACKSPACE && b.keyCode != WYMeditor.KEY.DELETE) {
        d._exec(WYMeditor.FORMAT_BLOCK, WYMeditor.P)
    }
};
WYMeditor.WymClassOpera.prototype.keyup = function(b) {
    var c = WYMeditor.INSTANCES[this.title];
    c._selected_image = null
};
WYMeditor.WymClassOpera.prototype.setFocusToNode = function(b) {};
WYMeditor.WymSelOpera = function(b) {
    this._wym = b
};
WYMeditor.WymSelOpera.prototype = {
    getSelection: function() {
        var b = this._wym._iframe.contentWindow.getSelection();
        this.startNode = b.getRangeAt(0).startContainer;
        this.endNode = b.getRangeAt(0).endContainer;
        this.startOffset = b.getRangeAt(0).startOffset;
        this.endOffset = b.getRangeAt(0).endOffset;
        this.isCollapsed = b.isCollapsed;
        this.original = b;
        this.container = jQuery(this.startNode).parentsOrSelf(WYMeditor.MAIN_CONTAINERS.join(","))[0];
        return this
    },
    cursorToStart: function(c) {
        if (c.nodeType == WYMeditor.NODE.TEXT) {
            c = c.parentNode
        }
        var b = jQuery(c)[0];
        while (b.nodeType != WYMeditor.NODE.TEXT) {
            if (!b.hasChildNodes()) {
                break
            }
            b = b.firstChild
        }
        if (WYMeditor.isPhantomNode(b)) {
            b = b.nextSibling
        }
        if (b.nodeType == WYMeditor.NODE.ELEMENT) {
            this.original.collapse(b.parentNode, 0)
        } else {
            this.original.collapse(b, 0)
        }
    },
    cursorToEnd: function(c) {
        if (c.nodeType == WYMeditor.NODE.TEXT) {
            c = c.parentNode
        }
        var b = jQuery(c)[0];
        while (b.nodeType != WYMeditor.NODE.TEXT) {
            if (!b.hasChildNodes()) {
                break
            }
            b = b.lastChild
        }
        if (WYMeditor.isPhantomNode(b)) {
            b = b.previousSibling
        }
        if (b.nodeType == WYMeditor.NODE.ELEMENT) {
            this.original.collapse(b.parentNode, b.parentNode.childNodes.length)
        } else {
            this.original.collapse(b, b.length)
        }
    },
    deleteIfExpanded: function() {
        if (!this.original.isCollapsed) {
            this.original.deleteFromDocument();
            return true
        }
        return false
    }
};
WYMeditor.WymClassSafari = function(b) {
    this._wym = b;
    this._class = "class";
    this._newLine = "\n"
};
WYMeditor.WymClassSafari.prototype.initIframe = function(iframe) {
    this._iframe = iframe;
    this._doc = iframe.contentDocument;
    var styles = this._doc.styleSheets[0];
    var aCss = eval(this._options.editorStyles);
    this.addCssRules(this._doc, aCss);
    this._doc.title = this._wym._index;
    this._doc.designMode = "on";
    this.html(this._wym._html);
    if (jQuery.isFunction(this._options.preBind)) {
        this._options.preBind(this)
    }
    this._wym.bindEvents();
    jQuery(this._doc).bind("keydown", this.keydown);
    jQuery(this._doc).bind("keyup", this.keyup);
    if (jQuery.isFunction(this._options.postInit)) {
        this._options.postInit(this)
    }
    this.listen()
};
WYMeditor.WymClassSafari.prototype._exec = function(f, h) {
    if (!this.selected()) {
        return (false)
    }
    switch (f) {
        case WYMeditor.INDENT:
        case WYMeditor.OUTDENT:
            var g = this.selected();
            var e = this._iframe.contentWindow.getSelection();
            var c = e.anchorNode;
            if (c.nodeName == "#text") {
                c = c.parentNode
            }
            g = this.findUp(g, WYMeditor.BLOCKS);
            c = this.findUp(c, WYMeditor.BLOCKS);
            if (g && g == c && g.tagName.toLowerCase() == WYMeditor.LI) {
                var d = g.parentNode.parentNode;
                if (g.parentNode.childNodes.length > 1 || d.tagName.toLowerCase() == WYMeditor.OL || d.tagName.toLowerCase() == WYMeditor.UL) {
                    this._doc.execCommand(f, "", null)
                }
            }
            break;
        case WYMeditor.INSERT_ORDEREDLIST:
        case WYMeditor.INSERT_UNORDEREDLIST:
            this._doc.execCommand(f, "", null);
            var g = this.selected();
            var b = this.findUp(g, WYMeditor.MAIN_CONTAINERS);
            if (b) {
                jQuery(b).replaceWith(jQuery(b).html())
            }
            break;
        default:
            if (h) {
                this._doc.execCommand(f, "", h)
            } else {
                this._doc.execCommand(f, "", null)
            }
    }
    var b = this.selected();
    if (b && b.tagName.toLowerCase() == WYMeditor.BODY) {
        this._exec(WYMeditor.FORMAT_BLOCK, WYMeditor.P)
    }
    this.listen()
};
WYMeditor.WymClassSafari.prototype.selected = function() {
    var c = this._iframe.contentWindow.getSelection();
    var b = c.focusNode;
    if (b) {
        if (b.nodeName == "#text") {
            return (b.parentNode)
        } else {
            return (b)
        }
    } else {
        return (null)
    }
};
WYMeditor.WymClassSafari.prototype.addCssRule = function(b, c) {
    b.insertRule(c.name + " {" + c.css + "}", b.cssRules.length)
};
WYMeditor.WymClassSafari.prototype.keydown = function(b) {
    var c = WYMeditor.INSTANCES[this.title];
    if (b.ctrlKey) {
        if (b.keyCode == 66) {
            c._exec(WYMeditor.BOLD);
            return false
        }
        if (b.keyCode == 73) {
            c._exec(WYMeditor.ITALIC);
            return false
        }
    }
};
WYMeditor.WymClassSafari.prototype.keyup = function(c) {
    var e = WYMeditor.INSTANCES[this.title];
    e._selected_image = null;
    var b = null;
    if (c.keyCode == 13 && !c.shiftKey) {
        jQuery(e._doc.body).children(WYMeditor.BR).remove();
        b = e.selected();
        if (b && b.tagName.toLowerCase() == WYMeditor.PRE) {
            e._exec(WYMeditor.FORMAT_BLOCK, WYMeditor.P)
        }
    }
    if (c.keyCode == 13 && c.shiftKey) {
        e._exec("InsertLineBreak")
    }
    if (c.keyCode != 8 && c.keyCode != 17 && c.keyCode != 46 && c.keyCode != 224 && !c.metaKey && !c.ctrlKey) {
        b = e.selected();
        var d = b.tagName.toLowerCase();
        if (d == "strong" || d == "b" || d == "em" || d == "i" || d == "sub" || d == "sup" || d == "a" || d == "span") {
            d = b.parentNode.tagName.toLowerCase()
        }
        if (d == WYMeditor.BODY || d == WYMeditor.DIV) {
            e._exec(WYMeditor.FORMAT_BLOCK, WYMeditor.P)
        }
    }
};
WYMeditor.WymClassSafari.prototype.setFocusToNode = function(b) {};
WYMeditor.WymClassSafari.prototype.openBlockTag = function(b, d) {
    var d = this.validator.getValidTagAttributes(b, d);
    if (b == "span" && d.style) {
        var c = this.getTagForStyle(d.style);
        if (c) {
            this._tag_stack.pop();
            var b = c;
            this._tag_stack.push(c);
            d.style = ""
        } else {
            return
        }
    }
    this.output += this.helper.tag(b, d, true)
};
WYMeditor.WymClassSafari.prototype.getTagForStyle = function(b) {
    if (/bold/.test(b)) {
        return "strong"
    }
    if (/italic/.test(b)) {
        return "em"
    }
    if (/sub/.test(b)) {
        return "sub"
    }
    if (/super/.test(b)) {
        return "sup"
    }
    return false
};
WYMeditor.editor.prototype.xhtml = function() {
    jQuery(".Apple-style-span", this._doc.body).removeClass("Apple-style-span");
    return this.parser.parse(this.html())
};
WYMeditor.WymSelSafari = function(b) {
    this._wym = b
};
WYMeditor.WymSelSafari.prototype = {
    getSelection: function() {
        var b = this._wym._iframe.contentWindow.getSelection();
        this.startNode = b.getRangeAt(0).startContainer;
        this.endNode = b.getRangeAt(0).endContainer;
        this.startOffset = b.getRangeAt(0).startOffset;
        this.endOffset = b.getRangeAt(0).endOffset;
        this.isCollapsed = b.isCollapsed;
        this.original = b;
        this.container = jQuery(this.startNode).parentsOrSelf(WYMeditor.MAIN_CONTAINERS.join(","))[0];
        return this
    },
    cursorToStart: function(c) {
        if (c.nodeType == WYMeditor.NODE.TEXT) {
            c = c.parentNode
        }
        var b = jQuery(c)[0];
        while (b.nodeType != WYMeditor.NODE.TEXT) {
            if (!b.hasChildNodes()) {
                break
            }
            b = b.firstChild
        }
        if (WYMeditor.isPhantomNode(b)) {
            b = b.nextSibling
        }
        if (b.nodeType == WYMeditor.NODE.ELEMENT) {
            this.original.collapse(b.parentNode, 0)
        } else {
            this.original.collapse(b, 0)
        }
    },
    cursorToEnd: function(c) {
        if (c.nodeType == WYMeditor.NODE.TEXT) {
            c = c.parentNode
        }
        var b = jQuery(c)[0];
        while (b.nodeType != WYMeditor.NODE.TEXT) {
            if (!b.hasChildNodes()) {
                break
            }
            b = b.lastChild
        }
        if (WYMeditor.isPhantomNode(b)) {
            b = b.previousSibling
        }
        if (b.nodeType == WYMeditor.NODE.ELEMENT) {
            this.original.collapse(b.parentNode, b.parentNode.childNodes.length)
        } else {
            this.original.collapse(b, b.length)
        }
    },
    deleteIfExpanded: function() {
        if (!this.original.isCollapsed) {
            this.original.deleteFromDocument();
            return true
        }
        return false
    }
};
WYMeditor.editor.prototype.tidy = function(c) {
    var b = new WymTidy(c, this);
    return (b)
};

function WymTidy(b, c) {
    b = jQuery.extend({
        sUrl: "wymeditor/plugins/tidy/tidy.php",
        sButtonHtml: "<li class='wym_tools_tidy'><a name='CleanUp' href='#' style='background-image: url(wymeditor/plugins/tidy/wand.png)'>Clean up HTML</a></li>",
        sButtonSelector: "li.wym_tools_tidy a"
    }, b);
    this._options = b;
    this._wym = c
}
WymTidy.prototype.init = function() {
    var b = this;
    jQuery(this._wym._box).find(this._wym._options.toolsSelector + this._wym._options.toolsListSelector).append(this._options.sButtonHtml);
    jQuery(this._wym._box).find(this._options.sButtonSelector).click(function() {
        b.cleanup();
        return (false)
    })
};
WymTidy.prototype.cleanup = function() {
    var c = this._wym;
    var b = "<html><body>" + c.xhtml() + "</body></html>";
    jQuery.post(this._options.sUrl, {
        html: b
    }, function(d) {
        if (d.length > 0 && d != "0") {
            if (d.indexOf("<?php") == 0) {
                c.status("Ooops... Is PHP installed?")
            } else {
                c.html(d);
                c.status("HTML has been cleaned up.")
            }
        } else {
            c.status("An error occurred.")
        }
    })
};
jQuery.iDrag = {
    helper: null,
    dragged: null,
    destroy: function() {
        return this.each(function() {
            if (this.isDraggable) {
                this.dragCfg.dhe.unbind("mousedown", jQuery.iDrag.draginit);
                this.dragCfg = null;
                this.isDraggable = false;
                if (jQuery.browser.msie) {
                    this.unselectable = "off"
                } else {
                    this.style.MozUserSelect = "";
                    this.style.KhtmlUserSelect = "";
                    this.style.userSelect = ""
                }
            }
        })
    },
    draginit: function(b) {
        if (jQuery.iDrag.dragged != null) {
            jQuery.iDrag.dragstop(b);
            return false
        }
        var c = this.dragElem;
        jQuery(document).bind("mousemove", jQuery.iDrag.dragmove).bind("mouseup", jQuery.iDrag.dragstop);
        c.dragCfg.pointer = jQuery.iUtil.getPointer(b);
        c.dragCfg.currentPointer = c.dragCfg.pointer;
        c.dragCfg.init = false;
        c.dragCfg.fromHandler = this != this.dragElem;
        jQuery.iDrag.dragged = c;
        if (c.dragCfg.si && this != this.dragElem) {
            parentPos = jQuery.iUtil.getPosition(c.parentNode);
            sliderSize = jQuery.iUtil.getSize(c);
            sliderPos = {
                x: parseInt(jQuery.css(c, "left")) || 0,
                y: parseInt(jQuery.css(c, "top")) || 0
            };
            dx = c.dragCfg.currentPointer.x - parentPos.x - sliderSize.wb / 2 - sliderPos.x;
            dy = c.dragCfg.currentPointer.y - parentPos.y - sliderSize.hb / 2 - sliderPos.y;
            jQuery.iSlider.dragmoveBy(c, [dx, dy])
        }
        return jQuery.selectKeyHelper || false
    },
    dragstart: function(g) {
        var h = jQuery.iDrag.dragged;
        h.dragCfg.init = true;
        var f = h.style;
        h.dragCfg.oD = jQuery.css(h, "display");
        h.dragCfg.oP = jQuery.css(h, "position");
        if (!h.dragCfg.initialPosition) {
            h.dragCfg.initialPosition = h.dragCfg.oP
        }
        h.dragCfg.oR = {
            x: parseInt(jQuery.css(h, "left")) || 0,
            y: parseInt(jQuery.css(h, "top")) || 0
        };
        h.dragCfg.diffX = 0;
        h.dragCfg.diffY = 0;
        if (jQuery.browser.msie) {
            var d = jQuery.iUtil.getBorder(h, true);
            h.dragCfg.diffX = d.l || 0;
            h.dragCfg.diffY = d.t || 0
        }
        h.dragCfg.oC = jQuery.extend(jQuery.iUtil.getPosition(h), jQuery.iUtil.getSize(h));
        if (h.dragCfg.oP != "relative" && h.dragCfg.oP != "absolute") {
            f.position = "relative"
        }
        jQuery.iDrag.helper.empty();
        var c = h.cloneNode(true);
        jQuery(c).css({
            display: "block",
            left: "0px",
            top: "0px"
        });
        c.style.marginTop = "0";
        c.style.marginRight = "0";
        c.style.marginBottom = "0";
        c.style.marginLeft = "0";
        jQuery.iDrag.helper.append(c);
        var b = jQuery.iDrag.helper.get(0).style;
        if (h.dragCfg.autoSize) {
            b.width = "auto";
            b.height = "auto"
        } else {
            b.height = h.dragCfg.oC.hb + "px";
            b.width = h.dragCfg.oC.wb + "px"
        }
        b.display = "block";
        b.marginTop = "0px";
        b.marginRight = "0px";
        b.marginBottom = "0px";
        b.marginLeft = "0px";
        jQuery.extend(h.dragCfg.oC, jQuery.iUtil.getSize(c));
        if (h.dragCfg.cursorAt) {
            if (h.dragCfg.cursorAt.left) {
                h.dragCfg.oR.x += h.dragCfg.pointer.x - h.dragCfg.oC.x - h.dragCfg.cursorAt.left;
                h.dragCfg.oC.x = h.dragCfg.pointer.x - h.dragCfg.cursorAt.left
            }
            if (h.dragCfg.cursorAt.top) {
                h.dragCfg.oR.y += h.dragCfg.pointer.y - h.dragCfg.oC.y - h.dragCfg.cursorAt.top;
                h.dragCfg.oC.y = h.dragCfg.pointer.y - h.dragCfg.cursorAt.top
            }
            if (h.dragCfg.cursorAt.right) {
                h.dragCfg.oR.x += h.dragCfg.pointer.x - h.dragCfg.oC.x - h.dragCfg.oC.hb + h.dragCfg.cursorAt.right;
                h.dragCfg.oC.x = h.dragCfg.pointer.x - h.dragCfg.oC.wb + h.dragCfg.cursorAt.right
            }
            if (h.dragCfg.cursorAt.bottom) {
                h.dragCfg.oR.y += h.dragCfg.pointer.y - h.dragCfg.oC.y - h.dragCfg.oC.hb + h.dragCfg.cursorAt.bottom;
                h.dragCfg.oC.y = h.dragCfg.pointer.y - h.dragCfg.oC.hb + h.dragCfg.cursorAt.bottom
            }
        }
        h.dragCfg.nx = h.dragCfg.oR.x;
        h.dragCfg.ny = h.dragCfg.oR.y;
        if (h.dragCfg.insideParent || h.dragCfg.containment == "parent") {
            parentBorders = jQuery.iUtil.getBorder(h.parentNode, true);
            h.dragCfg.oC.x = h.offsetLeft + (jQuery.browser.msie ? 0 : jQuery.browser.opera ? -parentBorders.l : parentBorders.l);
            h.dragCfg.oC.y = h.offsetTop + (jQuery.browser.msie ? 0 : jQuery.browser.opera ? -parentBorders.t : parentBorders.t);
            jQuery(h.parentNode).append(jQuery.iDrag.helper.get(0))
        }
        if (h.dragCfg.containment) {
            jQuery.iDrag.getContainment(h);
            h.dragCfg.onDragModifier.containment = jQuery.iDrag.fitToContainer
        }
        if (h.dragCfg.si) {
            jQuery.iSlider.modifyContainer(h)
        }
        b.left = h.dragCfg.oC.x - h.dragCfg.diffX + "px";
        b.top = h.dragCfg.oC.y - h.dragCfg.diffY + "px";
        b.width = h.dragCfg.oC.wb + "px";
        b.height = h.dragCfg.oC.hb + "px";
        jQuery.iDrag.dragged.dragCfg.prot = false;
        if (h.dragCfg.gx) {
            h.dragCfg.onDragModifier.grid = jQuery.iDrag.snapToGrid
        }
        if (h.dragCfg.zIndex != false) {
            jQuery.iDrag.helper.css("zIndex", h.dragCfg.zIndex)
        }
        if (h.dragCfg.opacity) {
            jQuery.iDrag.helper.css("opacity", h.dragCfg.opacity);
            if (window.ActiveXObject) {
                jQuery.iDrag.helper.css("filter", "alpha(opacity=" + h.dragCfg.opacity * 100 + ")")
            }
        }
        if (h.dragCfg.frameClass) {
            jQuery.iDrag.helper.addClass(h.dragCfg.frameClass);
            jQuery.iDrag.helper.get(0).firstChild.style.display = "none"
        }
        if (h.dragCfg.onStart) {
            h.dragCfg.onStart.apply(h, [c, h.dragCfg.oR.x, h.dragCfg.oR.y])
        }
        if (jQuery.iDrop && jQuery.iDrop.count > 0) {
            jQuery.iDrop.highlight(h)
        }
        if (h.dragCfg.ghosting == false) {
            f.display = "none"
        }
        return false
    },
    getContainment: function(d) {
        if (d.dragCfg.containment.constructor == String) {
            if (d.dragCfg.containment == "parent") {
                d.dragCfg.cont = jQuery.extend({
                    x: 0,
                    y: 0
                }, jQuery.iUtil.getSize(d.parentNode));
                var c = jQuery.iUtil.getBorder(d.parentNode, true);
                d.dragCfg.cont.w = d.dragCfg.cont.wb - c.l - c.r;
                d.dragCfg.cont.h = d.dragCfg.cont.hb - c.t - c.b
            } else {
                if (d.dragCfg.containment == "document") {
                    var b = jQuery.iUtil.getClient();
                    d.dragCfg.cont = {
                        x: 0,
                        y: 0,
                        w: b.w,
                        h: b.h
                    }
                }
            }
        } else {
            if (d.dragCfg.containment.constructor == Array) {
                d.dragCfg.cont = {
                    x: parseInt(d.dragCfg.containment[0]) || 0,
                    y: parseInt(d.dragCfg.containment[1]) || 0,
                    w: parseInt(d.dragCfg.containment[2]) || 0,
                    h: parseInt(d.dragCfg.containment[3]) || 0
                }
            }
        }
        d.dragCfg.cont.dx = d.dragCfg.cont.x - d.dragCfg.oC.x;
        d.dragCfg.cont.dy = d.dragCfg.cont.y - d.dragCfg.oC.y
    },
    hidehelper: function(b) {
        if (b.dragCfg.insideParent || b.dragCfg.containment == "parent") {
            jQuery("body", document).append(jQuery.iDrag.helper.get(0))
        }
        jQuery.iDrag.helper.empty().hide().css("opacity", 1);
        if (window.ActiveXObject) {
            jQuery.iDrag.helper.css("filter", "alpha(opacity=100)")
        }
    },
    dragstop: function(g) {
        jQuery(document).unbind("mousemove", jQuery.iDrag.dragmove).unbind("mouseup", jQuery.iDrag.dragstop);
        if (jQuery.iDrag.dragged == null) {
            return
        }
        var c = jQuery.iDrag.dragged;
        jQuery.iDrag.dragged = null;
        if (c.dragCfg.init == false) {
            return false
        }
        if (c.dragCfg.so == true) {
            jQuery(c).css("position", c.dragCfg.oP)
        }
        var f = c.style;
        if (c.si) {
            jQuery.iDrag.helper.css("cursor", "move")
        }
        if (c.dragCfg.frameClass) {
            jQuery.iDrag.helper.removeClass(c.dragCfg.frameClass)
        }
        if (c.dragCfg.revert == false) {
            if (c.dragCfg.fx > 0) {
                if (!c.dragCfg.axis || c.dragCfg.axis == "horizontally") {
                    var b = new jQuery.fx(c, {
                        duration: c.dragCfg.fx
                    }, "left");
                    b.custom(c.dragCfg.oR.x, c.dragCfg.nRx)
                }
                if (!c.dragCfg.axis || c.dragCfg.axis == "vertically") {
                    var h = new jQuery.fx(c, {
                        duration: c.dragCfg.fx
                    }, "top");
                    h.custom(c.dragCfg.oR.y, c.dragCfg.nRy)
                }
            } else {
                if (!c.dragCfg.axis || c.dragCfg.axis == "horizontally") {
                    c.style.left = c.dragCfg.nRx + "px"
                }
                if (!c.dragCfg.axis || c.dragCfg.axis == "vertically") {
                    c.style.top = c.dragCfg.nRy + "px"
                }
            }
            jQuery.iDrag.hidehelper(c);
            if (c.dragCfg.ghosting == false) {
                jQuery(c).css("display", c.dragCfg.oD)
            }
        } else {
            if (c.dragCfg.fx > 0) {
                c.dragCfg.prot = true;
                var d = false;
                if (jQuery.iDrop && jQuery.iSort && c.dragCfg.so) {
                    d = jQuery.iUtil.getPosition(jQuery.iSort.helper.get(0))
                }
                jQuery.iDrag.helper.animate({
                    left: d ? d.x : c.dragCfg.oC.x,
                    top: d ? d.y : c.dragCfg.oC.y
                }, c.dragCfg.fx, function() {
                    c.dragCfg.prot = false;
                    if (c.dragCfg.ghosting == false) {
                        c.style.display = c.dragCfg.oD
                    }
                    jQuery.iDrag.hidehelper(c)
                })
            } else {
                jQuery.iDrag.hidehelper(c);
                if (c.dragCfg.ghosting == false) {
                    jQuery(c).css("display", c.dragCfg.oD)
                }
            }
        }
        if (jQuery.iDrop && jQuery.iDrop.count > 0) {
            jQuery.iDrop.checkdrop(c)
        }
        if (jQuery.iSort && c.dragCfg.so) {
            jQuery.iSort.check(c)
        }
        if (c.dragCfg.onChange && (c.dragCfg.nRx != c.dragCfg.oR.x || c.dragCfg.nRy != c.dragCfg.oR.y)) {
            c.dragCfg.onChange.apply(c, c.dragCfg.lastSi || [0, 0, c.dragCfg.nRx, c.dragCfg.nRy])
        }
        if (c.dragCfg.onStop) {
            c.dragCfg.onStop.apply(c)
        }
        return false
    },
    snapToGrid: function(b, e, d, c) {
        if (d != 0) {
            d = parseInt((d + (this.dragCfg.gx * d / Math.abs(d)) / 2) / this.dragCfg.gx) * this.dragCfg.gx
        }
        if (c != 0) {
            c = parseInt((c + (this.dragCfg.gy * c / Math.abs(c)) / 2) / this.dragCfg.gy) * this.dragCfg.gy
        }
        return {
            dx: d,
            dy: c,
            x: 0,
            y: 0
        }
    },
    fitToContainer: function(b, e, d, c) {
        d = Math.min(Math.max(d, this.dragCfg.cont.dx), this.dragCfg.cont.w + this.dragCfg.cont.dx - this.dragCfg.oC.wb);
        c = Math.min(Math.max(c, this.dragCfg.cont.dy), this.dragCfg.cont.h + this.dragCfg.cont.dy - this.dragCfg.oC.hb);
        return {
            dx: d,
            dy: c,
            x: 0,
            y: 0
        }
    },
    dragmove: function(h) {
        if (jQuery.iDrag.dragged == null || jQuery.iDrag.dragged.dragCfg.prot == true) {
            return
        }
        var b = jQuery.iDrag.dragged;
        b.dragCfg.currentPointer = jQuery.iUtil.getPointer(h);
        if (b.dragCfg.init == false) {
            distance = Math.sqrt(Math.pow(b.dragCfg.pointer.x - b.dragCfg.currentPointer.x, 2) + Math.pow(b.dragCfg.pointer.y - b.dragCfg.currentPointer.y, 2));
            if (distance < b.dragCfg.snapDistance) {
                return
            } else {
                jQuery.iDrag.dragstart(h)
            }
        }
        var d = b.dragCfg.currentPointer.x - b.dragCfg.pointer.x;
        var c = b.dragCfg.currentPointer.y - b.dragCfg.pointer.y;
        for (var f in b.dragCfg.onDragModifier) {
            var g = b.dragCfg.onDragModifier[f].apply(b, [b.dragCfg.oR.x + d, b.dragCfg.oR.y + c, d, c]);
            if (g && g.constructor == Object) {
                d = f != "user" ? g.dx : (g.x - b.dragCfg.oR.x);
                c = f != "user" ? g.dy : (g.y - b.dragCfg.oR.y)
            }
        }
        b.dragCfg.nx = b.dragCfg.oC.x + d - b.dragCfg.diffX;
        b.dragCfg.ny = b.dragCfg.oC.y + c - b.dragCfg.diffY;
        if (b.dragCfg.si && (b.dragCfg.onSlide || b.dragCfg.onChange)) {
            jQuery.iSlider.onSlide(b, b.dragCfg.nx, b.dragCfg.ny)
        }
        if (b.dragCfg.onDrag) {
            b.dragCfg.onDrag.apply(b, [b.dragCfg.oR.x + d, b.dragCfg.oR.y + c])
        }
        if (!b.dragCfg.axis || b.dragCfg.axis == "horizontally") {
            b.dragCfg.nRx = b.dragCfg.oR.x + d;
            jQuery.iDrag.helper.get(0).style.left = b.dragCfg.nx + "px"
        }
        if (!b.dragCfg.axis || b.dragCfg.axis == "vertically") {
            b.dragCfg.nRy = b.dragCfg.oR.y + c;
            jQuery.iDrag.helper.get(0).style.top = b.dragCfg.ny + "px"
        }
        if (jQuery.iDrop && jQuery.iDrop.count > 0) {
            jQuery.iDrop.checkhover(b)
        }
        return false
    },
    build: function(d) {
        if (!jQuery.iDrag.helper) {
            jQuery("body", document).append('<div id="dragHelper"></div>');
            jQuery.iDrag.helper = jQuery("#dragHelper");
            var c = jQuery.iDrag.helper.get(0);
            var b = c.style;
            b.position = "absolute";
            b.display = "none";
            b.cursor = "move";
            b.listStyle = "none";
            b.overflow = "hidden";
            if (window.ActiveXObject) {
                c.unselectable = "on"
            } else {
                b.mozUserSelect = "none";
                b.userSelect = "none";
                b.KhtmlUserSelect = "none"
            }
        }
        if (!d) {
            d = {}
        }
        return this.each(function() {
            if (this.isDraggable || !jQuery.iUtil) {
                return
            }
            if (window.ActiveXObject) {
                this.onselectstart = function() {
                    return false
                };
                this.ondragstart = function() {
                    return false
                }
            }
            var f = this;
            var e = d.handle ? jQuery(this).find(d.handle) : jQuery(this);
            if (jQuery.browser.msie) {
                e.each(function() {
                    this.unselectable = "on"
                })
            } else {
                e.css("-moz-user-select", "none");
                e.css("user-select", "none");
                e.css("-khtml-user-select", "none")
            }
            this.dragCfg = {
                dhe: e,
                revert: d.revert ? true : false,
                ghosting: d.ghosting ? true : false,
                so: d.so ? d.so : false,
                si: d.si ? d.si : false,
                insideParent: d.insideParent ? d.insideParent : false,
                zIndex: d.zIndex ? parseInt(d.zIndex) || 0 : false,
                opacity: d.opacity ? parseFloat(d.opacity) : false,
                fx: parseInt(d.fx) || null,
                hpc: d.hpc ? d.hpc : false,
                onDragModifier: {},
                pointer: {},
                onStart: d.onStart && d.onStart.constructor == Function ? d.onStart : false,
                onStop: d.onStop && d.onStop.constructor == Function ? d.onStop : false,
                onChange: d.onChange && d.onChange.constructor == Function ? d.onChange : false,
                axis: /vertically|horizontally/.test(d.axis) ? d.axis : false,
                snapDistance: d.snapDistance ? parseInt(d.snapDistance) || 0 : 0,
                cursorAt: d.cursorAt ? d.cursorAt : false,
                autoSize: d.autoSize ? true : false,
                frameClass: d.frameClass || false
            };
            if (d.onDragModifier && d.onDragModifier.constructor == Function) {
                this.dragCfg.onDragModifier.user = d.onDragModifier
            }
            if (d.onDrag && d.onDrag.constructor == Function) {
                this.dragCfg.onDrag = d.onDrag
            }
            if (d.containment && ((d.containment.constructor == String && (d.containment == "parent" || d.containment == "document")) || (d.containment.constructor == Array && d.containment.length == 4))) {
                this.dragCfg.containment = d.containment
            }
            if (d.fractions) {
                this.dragCfg.fractions = d.fractions
            }
            if (d.grid) {
                if (typeof d.grid == "number") {
                    this.dragCfg.gx = parseInt(d.grid) || 1;
                    this.dragCfg.gy = parseInt(d.grid) || 1
                } else {
                    if (d.grid.length == 2) {
                        this.dragCfg.gx = parseInt(d.grid[0]) || 1;
                        this.dragCfg.gy = parseInt(d.grid[1]) || 1
                    }
                }
            }
            if (d.onSlide && d.onSlide.constructor == Function) {
                this.dragCfg.onSlide = d.onSlide
            }
            this.isDraggable = true;
            e.each(function() {
                this.dragElem = f
            });
            e.bind("mousedown", jQuery.iDrag.draginit)
        })
    }
};
jQuery.fn.extend({
    DraggableDestroy: jQuery.iDrag.destroy,
    Draggable: jQuery.iDrag.build
});
jQuery.iUtil = {
    getPosition: function(h) {
        var b = 0;
        var n = 0;
        var m = h.style;
        var g = false;
        if (jQuery(h).css("display") == "none") {
            var c = m.visibility;
            var f = m.position;
            g = true;
            m.visibility = "hidden";
            m.display = "block";
            m.position = "absolute"
        }
        var d = h;
        while (d) {
            b += d.offsetLeft + (d.currentStyle && !jQuery.browser.opera ? parseInt(d.currentStyle.borderLeftWidth) || 0 : 0);
            n += d.offsetTop + (d.currentStyle && !jQuery.browser.opera ? parseInt(d.currentStyle.borderTopWidth) || 0 : 0);
            d = d.offsetParent
        }
        d = h;
        while (d && d.tagName && d.tagName.toLowerCase() != "body") {
            b -= d.scrollLeft || 0;
            n -= d.scrollTop || 0;
            d = d.parentNode
        }
        if (g == true) {
            m.display = "none";
            m.position = f;
            m.visibility = c
        }
        return {
            x: b,
            y: n
        }
    },
    getPositionLite: function(c) {
        var b = 0,
            d = 0;
        while (c) {
            b += c.offsetLeft || 0;
            d += c.offsetTop || 0;
            c = c.offsetParent
        }
        return {
            x: b,
            y: d
        }
    },
    getSize: function(m) {
        var b = jQuery.css(m, "width");
        var f = jQuery.css(m, "height");
        var g = 0;
        var o = 0;
        var n = m.style;
        if (jQuery(m).css("display") != "none") {
            g = m.offsetWidth;
            o = m.offsetHeight
        } else {
            var c = n.visibility;
            var d = n.position;
            n.visibility = "hidden";
            n.display = "block";
            n.position = "absolute";
            g = m.offsetWidth;
            o = m.offsetHeight;
            n.display = "none";
            n.position = d;
            n.visibility = c
        }
        return {
            w: b,
            h: f,
            wb: g,
            hb: o
        }
    },
    getSizeLite: function(b) {
        return {
            wb: b.offsetWidth || 0,
            hb: b.offsetHeight || 0
        }
    },
    getClient: function(d) {
        var c, b, f;
        if (d) {
            b = d.clientWidth;
            c = d.clientHeight
        } else {
            f = document.documentElement;
            b = window.innerWidth || self.innerWidth || (f && f.clientWidth) || document.body.clientWidth;
            c = window.innerHeight || self.innerHeight || (f && f.clientHeight) || document.body.clientHeight
        }
        return {
            w: b,
            h: c
        }
    },
    getScroll: function(n) {
        var f = 0,
            c = 0,
            b = 0,
            g = 0,
            d = 0,
            m = 0;
        if (n && n.nodeName.toLowerCase() != "body") {
            f = n.scrollTop;
            c = n.scrollLeft;
            b = n.scrollWidth;
            g = n.scrollHeight;
            d = 0;
            m = 0
        } else {
            if (document.documentElement) {
                f = document.documentElement.scrollTop;
                c = document.documentElement.scrollLeft;
                b = document.documentElement.scrollWidth;
                g = document.documentElement.scrollHeight
            } else {
                if (document.body) {
                    f = document.body.scrollTop;
                    c = document.body.scrollLeft;
                    b = document.body.scrollWidth;
                    g = document.body.scrollHeight
                }
            }
            d = self.innerWidth || document.documentElement.clientWidth || document.body.clientWidth || 0;
            m = self.innerHeight || document.documentElement.clientHeight || document.body.clientHeight || 0
        }
        return {
            t: f,
            l: c,
            w: b,
            h: g,
            iw: d,
            ih: m
        }
    },
    getMargins: function(n, f) {
        var h = jQuery(n);
        var g = h.css("marginTop") || "";
        var m = h.css("marginRight") || "";
        var c = h.css("marginBottom") || "";
        var d = h.css("marginLeft") || "";
        if (f) {
            return {
                t: parseInt(g) || 0,
                r: parseInt(m) || 0,
                b: parseInt(c) || 0,
                l: parseInt(d)
            }
        } else {
            return {
                t: g,
                r: m,
                b: c,
                l: d
            }
        }
    },
    getPadding: function(n, f) {
        var h = jQuery(n);
        var g = h.css("paddingTop") || "";
        var m = h.css("paddingRight") || "";
        var c = h.css("paddingBottom") || "";
        var d = h.css("paddingLeft") || "";
        if (f) {
            return {
                t: parseInt(g) || 0,
                r: parseInt(m) || 0,
                b: parseInt(c) || 0,
                l: parseInt(d)
            }
        } else {
            return {
                t: g,
                r: m,
                b: c,
                l: d
            }
        }
    },
    getBorder: function(n, f) {
        var h = jQuery(n);
        var g = h.css("borderTopWidth") || "";
        var m = h.css("borderRightWidth") || "";
        var c = h.css("borderBottomWidth") || "";
        var d = h.css("borderLeftWidth") || "";
        if (f) {
            return {
                t: parseInt(g) || 0,
                r: parseInt(m) || 0,
                b: parseInt(c) || 0,
                l: parseInt(d) || 0
            }
        } else {
            return {
                t: g,
                r: m,
                b: c,
                l: d
            }
        }
    },
    getPointer: function(c) {
        var b = c.pageX || (c.clientX + (document.documentElement.scrollLeft || document.body.scrollLeft)) || 0;
        var d = c.pageY || (c.clientY + (document.documentElement.scrollTop || document.body.scrollTop)) || 0;
        return {
            x: b,
            y: d
        }
    },
    traverseDOM: function(b, c) {
        c(b);
        b = b.firstChild;
        while (b) {
            jQuery.iUtil.traverseDOM(b, c);
            b = b.nextSibling
        }
    },
    purgeEvents: function(b) {
        jQuery.iUtil.traverseDOM(b, function(d) {
            for (var c in d) {
                if (typeof d[c] === "function") {
                    d[c] = null
                }
            }
        })
    },
    centerEl: function(e, d) {
        var b = jQuery.iUtil.getScroll();
        var c = jQuery.iUtil.getSize(e);
        if (!d || d == "vertically") {
            jQuery(e).css({
                top: b.t + ((Math.max(b.h, b.ih) - b.t - c.hb) / 2) + "px"
            })
        }
        if (!d || d == "horizontally") {
            jQuery(e).css({
                left: b.l + ((Math.max(b.w, b.iw) - b.l - c.wb) / 2) + "px"
            })
        }
    },
    fixPNG: function(c, e) {
        var b = jQuery('img[@src*="png"]', c || document),
            d;
        b.each(function() {
            d = this.src;
            this.src = e;
            this.style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(src='" + d + "')"
        })
    }
};
[].indexOf || (Array.prototype.indexOf = function(c, e) {
    e = (e == null) ? 0 : e;
    var b = this.length;
    for (var d = e; d < b; d++) {
        if (this[d] == c) {
            return d
        }
    }
    return -1
});
jQuery.fn.columnSizing = function(d) {
    d = jQuery.extend({
        selectCells: "tr:first>*",
        minWidth: 8,
        viewResize: true,
        viewGhost: true,
        tableWidthFixed: false,
        fadeOut: true,
        opacity: 0.5,
        classTable: "jquery_columnSizing",
        classHandler: "jquery_columnSizing_handler",
        classDragLine: "jquery_columnSizing_dragLine",
        classDragArea: "jquery_columnSizing_dragArea",
        cssHandler: {
            position: "relative",
            right: "-3px",
            borderRight: "2px solid #fff",
            borderLeft: "2px solid #555",
            height: "20px",
            cursor: "col-resize"
        },
        cssDragLine: {
            borderRight: "4px solid #777",
            cursor: "col-resize"
        },
        cssDragArea: {
            border: "2px solid #777",
            backgroundColor: "#eee",
            cursor: "col-resize"
        },
        title: "Expand/Collapse this column",
        speed: true,
        cookies: false,
        dtop: -2,
        dleft: -4,
        loadingTime: 0,
        onLoad: null
    }, d || {});
    d.cookies = d.cookies && !!jQuery.cookie;
    if (d.viewGhost) {
        var c = $('<div style="display:none;position:absolute;top:0;left:0;height:0;width:0;"></div>').appendTo("body").css(d.cssDragArea).addClass(d.classDragArea).css("opacity", d.opacity);
        var b = c.get(0).style
    }
    return this.each(function(g) {
        d.loadingTime = new Date().getTime();
        if (d.cookies) {
            var f = document.location.href + "_" + g;
            var m = $.cookie(f);
            if (m != null) {
                this.style.width = m + "px"
            }
        }
        $(this).addClass(d.classTable);
        var e = this;
        var h = (d.speed) ? e.clientWidth : $(this).width();
        var n = (d.speed) ? e.clientHeight : $(this).height();
        $(d.selectCells, this).each(function(o) {
            $('<div class="' + d.classHandler + '" title="' + d.title + '"></div>').css(d.cssHandler).prependTo(this).each(function() {
                this.dx = 0;
                this.ancho = 0;
                this.umbral = false;
                this.$td = $(this).parents("td,th").eq(0);
                this.otd = this.$td.get(0);
                this.sDragHelper = null;
                this.wtd = (d.speed) ? null : this.$td.width();
                this.wtd0 = this.wtd;
                if (d.cookies) {
                    this.cookieColName = f + "_" + o;
                    this.cookieColName0 = this.cookieColName + "0";
                    this.cookieColValue = $.cookie(this.cookieColName);
                    this.cookieColValue0 = $.cookie(this.cookieColName0);
                    if (this.cookieColValue != null) {
                        this.otd.style.width = this.cookieColValue + "px";
                        this.wtd = this.cookieColValue;
                        this.wtd0 = this.cookieColValue0
                    }
                }
            }).dblclick(function() {
                if (this.wtd == null) {
                    this.wtd = this.otd.offsetWidth;
                    this.wtd0 = this.wtd
                }
                var p = this.wtd == d.minWidth;
                this.wtd = (p) ? this.wtd0 : d.minWidth;
                this.otd.style.width = this.wtd + "px";
                if (!d.tableWidthFixed) {
                    var q = this.wtd0 - d.minWidth;
                    h = h + ((p) ? q : -q);
                    e.style.width = h + "px"
                }
                if (d.cookies) {
                    $.cookie(this.cookieColName, this.wtd);
                    $.cookie(this.cookieColName0, this.wtd0);
                    $.cookie(f, h)
                }
            }).Draggable({
                axis: "horizontally",
                containment: "document",
                frameClass: d.classDragLine,
                ghosting: true,
                opacity: d.opacity,
                revert: true,
                onStart: function(p) {
                    if (this.wtd == null) {
                        this.wtd = this.otd.offsetWidth;
                        this.wtd0 = this.wtd
                    }
                    n = e.clientHeight;
                    if (d.viewGhost) {
                        b.top = this.dragCfg.oC.y + d.dtop + "px";
                        b.left = this.dragCfg.currentPointer.x + d.dleft - this.wtd + "px";
                        b.height = n + "px";
                        b.width = this.wtd + "px";
                        b.display = "block"
                    } else {
                        if (!this.sDragHelper) {
                            this.sDragHelper = $("#dragHelper").css(d.cssDragLine).get(0).style
                        }
                        this.sDragHelper.height = n + "px"
                    }
                },
                onDrag: (d.viewResize || d.viewGhost) ? function(p) {
                    this.dx = this.dragCfg.currentPointer.x - this.dragCfg.pointer.x;
                    this.ancho = this.wtd + this.dx;
                    this.umbral = (d.minWidth - this.ancho > 0);
                    this.jarrr = (this.umbral) ? d.minWidth : this.ancho;
                    if (d.viewGhost) {
                        b.width = this.jarrr + "px";
                        if (!d.viewResize) {
                            return
                        }
                    }
                    this.otd.style.width = this.jarrr + "px";
                    if (!d.tableWidthFixed) {
                        e.style.width = (this.umbral) ? h + d.minWidth - this.wtd + "px" : h + this.dx + "px"
                    }
                } : null,
                onStop: function(p) {
                    if (!d.viewResize || d.viewGhost) {
                        this.dx = this.dragCfg.currentPointer.x - this.dragCfg.pointer.x;
                        this.ancho = this.wtd + this.dx;
                        this.umbral = (d.minWidth - this.ancho > 0);
                        this.jarrr = (this.umbral) ? d.minWidth : this.ancho;
                        this.otd.style.width = this.jarrr + "px";
                        if (d.viewGhost) {
                            if (d.fadeOut) {
                                c.fadeOut("slow")
                            } else {
                                b.display = "none"
                            }
                        }
                    }
                    if (!d.tableWidthFixed) {
                        h = (this.umbral) ? h + d.minWidth - this.wtd : h + this.dx;
                        e.style.width = h + "px"
                    }
                    this.wtd0 = this.wtd;
                    this.wtd = parseInt(this.otd.style.width);
                    this.wtd0 = (this.wtd == d.minWidth) ? this.wtd0 : this.wtd;
                    if (d.cookies) {
                        $.cookie(this.cookieColName, this.wtd);
                        $.cookie(this.cookieColName0, this.wtd0);
                        $.cookie(f, h)
                    }
                    this.dragCfg.dhe.bind("mousedown", jQuery.iDrag.draginit)
                }
            })
        });
        d.loadingTime = new Date().getTime() - d.loadingTime;
        if (typeof(d.onLoad) == "function") {
            d.onLoad()
        }
    })
};
(function(b) {
    b.extend(b.expr[":"], {
        icontains: function(d, e, c) {
            return (d.textContent || d.innerText || jQuery(d).text() || "").toLowerCase().indexOf(c[3].toLowerCase()) >= 0
        }
    });
    b.iterators = {
        getText: function() {
            return b(this).text()
        },
        parseInt: function(c) {
            return parseInt(c, 10)
        }
    };
    b.extend({
        keyCode: {
            BACKSPACE: 8,
            CAPS_LOCK: 20,
            COMMA: 188,
            CONTROL: 17,
            DELETE: 46,
            DOWN: 40,
            END: 35,
            ENTER: 13,
            ESCAPE: 27,
            HOME: 36,
            INSERT: 45,
            LEFT: 37,
            NUMPAD_ADD: 107,
            NUMPAD_DECIMAL: 110,
            NUMPAD_DIVIDE: 111,
            NUMPAD_ENTER: 108,
            NUMPAD_MULTIPLY: 106,
            NUMPAD_SUBTRACT: 109,
            PAGE_DOWN: 34,
            PAGE_UP: 33,
            PERIOD: 190,
            RIGHT: 39,
            SHIFT: 16,
            SPACE: 32,
            TAB: 9,
            UP: 38
        },
        keyIs: function(c, d) {
            return parseInt(b.keyCode[c.toUpperCase()], 10) == parseInt((typeof(d) == "number") ? d : d.keyCode, 10)
        },
        redirect: function(c) {
            window.location.href = c;
            return c
        },
        stop: function(f, d, c) {
            if (d) {
                f.preventDefault()
            }
            if (c) {
                f.stopPropagation()
            }
            return d && false || true
        },
        basename: function(d) {
            var c = d.split("/");
            return c[c.length] === "" && s || c.slice(0, c.length).join("/")
        },
        filename: function(c) {
            return c.split("/").pop()
        },
        filesizeformat: function(d, e) {
            var c = parseInt(d, 10);
            var f = e || ["byte", "bytes", "KB", "MB", "GB"];
            if (isNaN(c) || c === 0) {
                return "0 " + f[0]
            }
            if (c == 1) {
                return "1 " + f[0]
            }
            if (c < 1024) {
                return c.toFixed(2) + " " + f[1]
            }
            if (c < 1048576) {
                return (c / 1024).toFixed(2) + " " + f[2]
            }
            if (c < 1073741824) {
                return (c / 1048576).toFixed(2) + " " + f[3]
            } else {
                return (c / 1073741824).toFixed(2) + " " + f[4]
            }
        },
        fileExtension: function(c) {
            var d = c.split(".");
            return d[d.length - 1] || false
        },
        isString: function(c) {
            return typeof(c) == "string" && true || false
        },
        isRegExp: function(c) {
            return c && c.constructor.toString().indexOf("RegExp()") != -1 || false
        },
        isArray: function(c) {
            if (!c) {
                return false
            }
            return Object.prototype.toString.apply(c.constructor.prototype) === "[object Array]"
        },
        isObject: function(c) {
            return (typeof(c) == "object")
        },
        toCurrency: function(c) {
            c = parseFloat(c, 10).toFixed(2);
            return (c == "NaN") ? "0.00" : c
        },
        pxToEm: function(d, e) {
            e = jQuery.extend({
                scope: "body",
                reverse: false
            }, e);
            var h = (d === "") ? 0 : parseFloat(d);
            var g;
            var f = function() {
                var n = document.documentElement;
                return self.innerWidth || (n && n.clientWidth) || document.body.clientWidth
            };
            if (e.scope == "body" && b.browser.msie && (parseFloat(b("body").css("font-size")) / f()).toFixed(1) > 0) {
                var m = function() {
                    return (parseFloat(b("body").css("font-size")) / f()).toFixed(3) * 16
                };
                g = m()
            } else {
                g = parseFloat(jQuery(e.scope).css("font-size"))
            }
            var c = (e.reverse === true) ? (h * g).toFixed(2) + "px" : (h / g).toFixed(2) + "em";
            return c
        }
    });
    b.extend(b.fn, {
        selectRange: function(e, c) {
            if (b(this).get(0).createTextRange) {
                var d = b(this).get(0).createTextRange();
                d.collapse(true);
                d.moveEnd("character", c);
                d.moveStart("character", e);
                d.select()
            } else {
                if (b(this).get(0).setSelectionRange) {
                    b(this).bind("focus", function(f) {
                        f.preventDefault()
                    }).get(0).setSelectionRange(e, c)
                }
            }
            return b(this)
        },
        equalHeights: function(c) {
            b(this).each(function() {
                var d = 0;
                b(this).children().each(function(e) {
                    if (b(this).height() > d) {
                        d = b(this).height()
                    }
                });
                if (!c || !b.pxToEm) {
                    d = b.pxToEm(d)
                }
                if (b.browser.msie && b.browser.version == 6) {
                    b(this).children().css({
                        height: d
                    })
                }
                b(this).children().css({
                    "min-height": d
                })
            });
            return this
        },
        delay: function(c, d) {
            jQuery.fx.step.delay = function() {};
            return this.animate({
                delay: 1
            }, c, d)
        }
    })
})(jQuery);
(function($) {
    var strings = {
        strConversion: {
            __repr: function(i) {
                switch (this.__getType(i)) {
                    case "array":
                    case "date":
                    case "number":
                        return i.toString();
                    case "object":
                        var o = [];
                        for (x = 0; x < i.length; i++) {
                            o.push(i + ": " + this.__repr(i[x]))
                        }
                        return o.join(", ");
                    case "string":
                        return i;
                    default:
                        return i
                }
            },
            __getType: function(i) {
                if (!i || !i.constructor) {
                    return typeof(i)
                }
                var match = i.constructor.toString().match(/Array|Number|String|Object|Date/);
                return match && match[0].toLowerCase() || typeof(i)
            },
            __pad: function(str, l, s, t) {
                var p = s || " ";
                var o = str;
                if (l - str.length > 0) {
                    o = new Array(Math.ceil(l / p.length)).join(p).substr(0, t = !t ? l : t == 1 ? 0 : Math.ceil(l / 2)) + str + p.substr(0, l - t)
                }
                return o
            },
            __getInput: function(arg, args) {
                var key = arg.getKey();
                switch (this.__getType(args)) {
                    case "object":
                        var keys = key.split(".");
                        var obj = args;
                        for (var subkey = 0; subkey < keys.length; subkey++) {
                            obj = obj[keys[subkey]]
                        }
                        if (typeof(obj) != "undefined") {
                            if (strings.strConversion.__getType(obj) == "array") {
                                return arg.getFormat().match(/\.\*/) && obj[1] || obj
                            }
                            return obj
                        } else {}
                        break;
                    case "array":
                        key = parseInt(key, 10);
                        if (arg.getFormat().match(/\.\*/) && typeof args[key + 1] != "undefined") {
                            return args[key + 1]
                        } else {
                            if (typeof args[key] != "undefined") {
                                return args[key]
                            } else {
                                return key
                            }
                        }
                        break
                }
                return "{" + key + "}"
            },
            __formatToken: function(token, args) {
                var arg = new Argument(token, args);
                return strings.strConversion[arg.getFormat().slice(-1)](this.__getInput(arg, args), arg)
            },
            d: function(input, arg) {
                var o = parseInt(input, 10);
                var p = arg.getPaddingLength();
                if (p) {
                    return this.__pad(o.toString(), p, arg.getPaddingString(), 0)
                } else {
                    return o
                }
            },
            i: function(input, args) {
                return this.d(input, args)
            },
            o: function(input, arg) {
                var o = input.toString(8);
                if (arg.isAlternate()) {
                    o = this.__pad(o, o.length + 1, "0", 0)
                }
                return this.__pad(o, arg.getPaddingLength(), arg.getPaddingString(), 0)
            },
            u: function(input, args) {
                return Math.abs(this.d(input, args))
            },
            x: function(input, arg) {
                var o = parseInt(input, 10).toString(16);
                o = this.__pad(o, arg.getPaddingLength(), arg.getPaddingString(), 0);
                return arg.isAlternate() ? "0x" + o : o
            },
            X: function(input, arg) {
                return this.x(input, arg).toUpperCase()
            },
            e: function(input, arg) {
                return parseFloat(input, 10).toExponential(arg.getPrecision())
            },
            E: function(input, arg) {
                return this.e(input, arg).toUpperCase()
            },
            f: function(input, arg) {
                return this.__pad(parseFloat(input, 10).toFixed(arg.getPrecision()), arg.getPaddingLength(), arg.getPaddingString(), 0)
            },
            F: function(input, args) {
                return this.f(input, args)
            },
            g: function(input, arg) {
                var o = parseFloat(input, 10);
                return (o.toString().length > 6) ? Math.round(o.toExponential(arg.getPrecision())) : o
            },
            G: function(input, args) {
                return this.g(input, args)
            },
            c: function(input, args) {
                var match = input.match(/\w|\d/);
                return match && match[0] || ""
            },
            r: function(input, args) {
                return this.__repr(input)
            },
            s: function(input, args) {
                return input.toString && input.toString() || "" + input
            }
        },
        format: function(str, args) {
            var end = 0;
            var start = 0;
            var match = false;
            var buffer = [];
            var token = "";
            var tmp = (str || "").split("");
            for (start = 0; start < tmp.length; start++) {
                if (tmp[start] == "{" && tmp[start + 1] != "{") {
                    end = str.indexOf("}", start);
                    token = tmp.slice(start + 1, end).join("");
                    buffer.push(strings.strConversion.__formatToken(token, (typeof arguments[1] != "object") ? arguments2Array(arguments, 2) : args || []))
                } else {
                    if (start > end || buffer.length < 1) {
                        buffer.push(tmp[start])
                    }
                }
            }
            return (buffer.length > 1) ? buffer.join("") : buffer[0]
        },
        calc: function(str, args) {
            return eval(format(str, args))
        },
        repeat: function(s, n) {
            return new Array(n + 1).join(s)
        },
        UTF8encode: function(s) {
            return unescape(encodeURIComponent(s))
        },
        UTF8decode: function(s) {
            return decodeURIComponent(escape(s))
        },
        tpl: function() {
            var out = "",
                render = true;
            if (arguments.length == 2 && $.isArray(arguments[1])) {
                this[arguments[0]] = arguments[1].join("");
                return jQuery
            }
            if (arguments.length == 2 && $.isString(arguments[1])) {
                this[arguments[0]] = arguments[1];
                return jQuery
            }
            if (arguments.length == 1) {
                return $(this[arguments[0]])
            }
            if (arguments.length == 2 && arguments[1] == false) {
                return this[arguments[0]]
            }
            if (arguments.length == 2 && $.isObject(arguments[1])) {
                return $($.format(this[arguments[0]], arguments[1]))
            }
            if (arguments.length == 3 && $.isObject(arguments[1])) {
                return (arguments[2] == true) ? $.format(this[arguments[0]], arguments[1]) : $($.format(this[arguments[0]], arguments[1]))
            }
        }
    };
    var Argument = function(arg, args) {
        this.__arg = arg;
        this.__args = args;
        this.__max_precision = parseFloat("1." + (new Array(32)).join("1"), 10).toString().length - 3;
        this.__def_precision = 6;
        this.getString = function() {
            return this.__arg
        };
        this.getKey = function() {
            return this.__arg.split(":")[0]
        };
        this.getFormat = function() {
            var match = this.getString().split(":");
            return (match && match[1]) ? match[1] : "s"
        };
        this.getPrecision = function() {
            var match = this.getFormat().match(/\.(\d+|\*)/g);
            if (!match) {
                return this.__def_precision
            } else {
                match = match[0].slice(1);
                if (match != "*") {
                    return parseInt(match, 10)
                } else {
                    if (strings.strConversion.__getType(this.__args) == "array") {
                        return this.__args[1] && this.__args[0] || this.__def_precision
                    } else {
                        if (strings.strConversion.__getType(this.__args) == "object") {
                            return this.__args[this.getKey()] && this.__args[this.getKey()][0] || this.__def_precision
                        } else {
                            return this.__def_precision
                        }
                    }
                }
            }
        };
        this.getPaddingLength = function() {
            var match = false;
            if (this.isAlternate()) {
                match = this.getString().match(/0?#0?(\d+)/);
                if (match && match[1]) {
                    return parseInt(match[1], 10)
                }
            }
            match = this.getString().match(/(0|\.)(\d+|\*)/g);
            return match && parseInt(match[0].slice(1), 10) || 0
        };
        this.getPaddingString = function() {
            var o = "";
            if (this.isAlternate()) {
                o = " "
            }
            if (this.getFormat().match(/#0|0#|^0|\.\d+/)) {
                o = "0"
            }
            return o
        };
        this.getFlags = function() {
            var match = this.getString().matc(/^(0|\#|\-|\+|\s)+/);
            return match && match[0].split("") || []
        };
        this.isAlternate = function() {
            return !!this.getFormat().match(/^0?#/)
        }
    };
    var arguments2Array = function(args, shift) {
        var o = [];
        for (l = args.length, x = (shift || 0) - 1; x < l; x++) {
            o.push(args[x])
        }
        return o
    };
    $.extend(strings)
})(jQuery);
(function(b) {
    var c = function(e) {
        return e
    };
    var d = function(e) {
        return !!e
    };
    b.extend({
        all: function(f, g) {
            var e = true;
            var g = g || d;
            b.each(f, function(h, m) {
                if (!g(m)) {
                    e = false
                }
            });
            return e
        },
        any: function(f, g) {
            var e = false;
            var g = g || d;
            b.each(f, function(h, m) {
                return g(m) && !(e = true) || true
            });
            return e
        },
        detect: function(f, g) {
            var e = false;
            var g = g || d;
            b.each(f, function(h, m) {
                if (g(m)) {
                    e = m;
                    return false
                }
            });
            return e
        },
        eachSlice: function(f, g, h) {
            var e = -g,
                m = [];
            while ((e += g) < f.length) {
                m.push(b.map(f.slice(e, e + g), h || c))
            }
            return m
        },
        inject: function(e, g, f) {
            b.each(e, function(h, m) {
                g = f(g, m, h)
            });
            return g
        },
        invoke: function(f, g, e) {
            b.each(f, function() {
                if (b.isFunction(g)) {
                    g.apply(f, e)
                } else {
                    if (b.isFunction(window[g])) {
                        window[g].apply(f, e)
                    }
                }
            });
            return f
        },
        max: function(f, g) {
            var e = false;
            b.each(f, function(h, n) {
                var m = (g || c)(n, h);
                if (!e || m > e) {
                    e = m
                }
            });
            return e
        },
        min: function(f, g) {
            var e = false;
            b.each(f, function(h, n) {
                var m = (g || c)(n, h);
                if (!e || m < e) {
                    e = m
                }
            });
            return e
        },
        partition: function(e, h) {
            var g = [],
                f = [];
            b.each(e, function(m, n) {
                ((h || d)(n, m) ? g : f).push(n)
            });
            return [g, f]
        },
        pluck: function(f, h, g) {
            var e = [];
            var g = g || c;
            b.each(f, function() {
                e.push(g(this[h] || this))
            });
            return e
        },
        sum: function(e, g) {
            var g = g || function(h) {
                return parseInt(h, 10)
            };
            var f = 0;
            b.each(e, function() {
                var h = g(this);
                if (!isNaN(h)) {
                    f = f + h
                }
            });
            return f
        },
        zip: function(f, h, g) {
            var e = [];
            var g = g || c;
            b.each(f, function(m, n) {
                if (h[m]) {
                    e.push([n, h[m]])
                }
            });
            return e
        },
        randomize: function(f) {
            var g = f.length;
            if (g == 0) {
                return false
            }
            while (--g) {
                var e = Math.floor(Math.random() * (g + 1));
                var m = f[g];
                var h = f[e];
                f[g] = h;
                f[e] = m
            }
            return f
        },
        range: function() {
            if (!arguments.length) {
                return []
            }
            var m, e, n;
            if (arguments.length == 1) {
                m = 0;
                e = arguments[0] - 1;
                n = 1
            } else {
                m = arguments[0];
                e = arguments[1] - 1;
                n = arguments[2] || 1
            }
            if (n < 0 && m >= e) {
                n *= -1;
                var h = m;
                m = e;
                e = h;
                m += ((e - m) % n)
            }
            var f = [];
            for (var g = m; g <= e; g += n) {
                f.push(g)
            }
            return f
        }
    });
    b.extend(b.fn, {
        all: function(e) {
            return b.all(this, e)
        },
        any: function(e) {
            return b.any(this, e)
        },
        pluck: function(f, e) {
            return b.pluck(this, f, e)
        },
        detect: function(e) {
            return b(b.detect(this, e))
        },
        eachSlice: function(e, f) {
            return b.eachSlice(this, e, f)
        },
        sum: function(e) {
            var e = e || function(f) {
                return parseFloat(b(f).val() || b(f).text(), 10)
            };
            return b.sum(this, e)
        }
    })
})(jQuery);
(function(b) {
    b.widget("ui.dropslide", b.extend({}, b.ui.mouse, {
        getter: "showLevel showNextLevel getSelection",
        init: function() {
            var c = this;
            this.wrapper = this.element.next();
            this.element.bind(this.options.trigger + ".dropslide", function() {
                c.show()
            });
            this.wrapper.data("dropslide", this).css({
                width: this.options.width
            }).find("li, li ol li").bind("mouseover.dropslide", function(d) {
                b(this).siblings().removeClass("hover").find("ol").hide().end().find("span").removeClass("ui-state-hover").end();
                b(this).find("ol").show().end().addClass("hover").children(0).addClass("ui-state-hover");
                c.showNextLevel()
            }).bind("click.dropslide", function(d) {
                b(c.element).triggerHandler("dropslideclick", [d, c], c.options.click);
                b(c.element).triggerHandler("select", [d, c], c.options.select)
            }).end().find("ol").bind("mousemove.dropslide", function(d) {
                return c.redraw()
            }).addClass("ui-widget ui-helper-clearfix ui-helper-reset").hide().end().find("span").addClass("ui-state-default ui-corner-all");
            this.redraw()
        },
        showLevel: function(e) {
            var d = this.wrapper.find("ol");
            var c = this;
            if (e == 0) {
                d.eq(0).css("left", this.element.position().left);
                this.wrapper.css("top", c.element.position().top + c.element.height() + c.options.top);
                this.wrapper.css("z-index", 1000)
            }
            setTimeout(function() {
                d.removeClass("active").eq(e).addClass("active").show(c.options.animSpeed)
            }, c.options.showDelay)
        },
        showNextLevel: function() {
            this.wrapper.find("ol.active").removeClass("active").next("ol").addClass("active").show(this.options.animSpeed)
        },
        getSelection: function(c) {
            return c && this.wrapper.find("ol").eq(c).find("li span.ui-state-hover") || b.makeArray(this.wrapper.find("span.ui-state-hover").map(b.iterators.getText))
        },
        redraw: function() {
            var g, c, e, h = false;
            var f = this.element.position().left + this.options.left;
            var d = b(this.wrapper).find("ol");
            b(this.wrapper).css({
                top: this.element.position().top + this.element.height() + this.options.top,
                left: this.element.position().left
            });
            d.each(function(m) {
                c = b(this).prevAll("ol:visible:first");
                if (c.get(0)) {
                    g = c.find("li.hover").get(0) && c.find("li.hover") || c.find("li:first");
                    b(this).css("margin-left", g.position().left)
                }
            })
        },
        show: function(c) {
            this.showLevel(0);
            this.element.dropslide("redraw")
        },
        hide: function() {
            var c = this;
            setTimeout(function() {
                c.wrapper.find("ol").hide()
            }, c.options.hideDelay)
        },
        activate: function(c) {
            this.element.focus();
            this.show(this.options.animSpeed)
        },
        destroy: function(c) {
            this.wrapper.remove()
        }
    }));
    b.ui.dropslide.defaults = {
        tree: false,
        trigger: "mouseover",
        top: 6,
        left: 0,
        showDelay: 0,
        hideDelay: 0,
        animSpeed: 0,
        select: function() {},
        click: function(d, c) {
            c.hide()
        }
    }
})(jQuery);
(function(b) {
    b.tpl("timepickr.menu", '<span class="ui-helper-reset ui-dropslide ui-timepickr ui-widget" />');
    b.tpl("timepickr.row", '<ol class="ui-timepickr" />');
    b.tpl("timepickr.button", '<li class="{className:s}"><span>{label:s}</span></li>');
    b.widget("ui.timepickr", {
        init: function() {
            var n = this;
            var c = n.buildMenu();
            var f = n.element;
            f.data("timepickr.initialValue", f.val());
            c.insertAfter(n.element);
            f.addClass("ui-timepickr").dropslide(n.options.dropslide).bind("select", n.select);
            f.blur(function(q) {
                b(this).dropslide("hide");
                if (n.options.resetOnBlur) {
                    b(this).val(b(this).data("timepickr.initialValue"))
                }
            });
            if (n.options.val) {
                f.val(this.options.val)
            }
            if (n.options.handle) {
                b(this.options.handle).click(function() {
                    b(f).dropslide("show")
                })
            }
            if (n.options.resetOnBlur) {
                c.find("li > span").bind("mousedown.timepickr", function() {
                    b(f).data("timepickr.initialValue", b(f).val())
                })
            }
            if (n.options.updateLive) {
                c.find("li").bind("mouseover.timepickr", function() {
                    b(f).timepickr("update")
                })
            }
            var p = c.find("ol:eq(1)").find("li:first").addClass("hover").find("span").addClass("ui-state-hover").end().end();
            var e = c.find("ol:eq(2)").find("li:first").addClass("hover").find("span").addClass("ui-state-hover").end().end();
            var h = c.find("ol:eq(3)").find("li:first").addClass("hover").find("span").addClass("ui-state-hover").end().end();
            if (this.options.convention === 24) {
                var d = p.find("li").slice(8, 22);
                var m = p.find("li").slice(12, 24);
                var g = 0;
                var o = function(q) {
                    p.find("li").removeClass("hover");
                    p.find("span").removeClass("ui-state-hover");
                    p.find("li").eq(q).addClass("hover").find("span").addClass("ui-state-hover")
                }
            }
            f.dropslide("redraw");
            f.data("timepickr", this)
        },
        update: function() {
            var e = this.options.convention === 24 && "format24" || "format12";
            var d = {
                h: this.getValue("hour"),
                m: this.getValue("minute"),
                s: this.getValue("second"),
                prefix: this.getValue("prefix"),
                suffix: this.getValue("suffix")
            };
            var c = b.format(this.options[e], d);
            b(this.element).val(c)
        },
        select: function(d) {
            var c = b(this).data("dropslide");
            b(c.element).timepickr("update");
            d.stopPropagation()
        },
        getHour: function() {
            return this.getValue("hour")
        },
        getMinute: function() {
            return this.getValue("minute")
        },
        getSecond: function() {
            return this.getValue("second")
        },
        getValue: function(c) {
            return b(".ui-timepickr." + c + ".hover", this.element.next()).text()
        },
        activate: function() {
            this.element.dropslide("activate")
        },
        destroy: function() {
            this.element.dropslide("destroy")
        },
        createButton: function(c, e, d) {
            var f = e && b.format(e, c) || c;
            var g = d && "ui-timepickr " + d || "ui-timepickr";
            return b.tpl("timepickr.button", {
                className: g,
                label: f
            }).data("id", c)
        },
        createRow: function(c, f, e) {
            var g = b.tpl("timepickr.row");
            var d = this.createButton;
            b.each(c, function(h, m) {
                g.append(d(m, f || false, e || false))
            });
            return g
        },
        getRanges12: function() {
            var d = [],
                c = this.options;
            if (c.hours) {
                d.push(this.createRow(b.range(1, 13), "{0:0.2d}", "hour"))
            }
            if (c.minutes) {
                d.push(this.createRow(c.rangeMin, "{0:0.2d}", "minute"))
            }
            if (c.seconds) {
                d.push(this.createRow(c.rangeSec, "{0:0.2d}", "second"))
            }
            if (c.suffix) {
                d.push(this.createRow(c.suffix, false, "suffix"))
            }
            return d
        },
        getRanges24: function() {
            var d = [],
                c = this.options;
            if (c.hours) {
                d.push(this.createRow(b.range(8, 22), "{0:0.2d}", "hour"))
            }
            if (c.minutes) {
                d.push(this.createRow(c.rangeMin, "{0:0.2d}", "minute"))
            }
            if (c.seconds) {
                d.push(this.createRow(c.rangeSec, "{0:0.2d}", "second"))
            }
            return d
        },
        buildMenu: function() {
            var d = b.tpl("timepickr.menu");
            var c = this.options.convention === 24 && this.getRanges24() || this.getRanges12();
            b.each(c, function(e, f) {
                d.append(f)
            });
            return d
        }
    });
    b.extend(b.ui.timepickr, {
        version: "@VERSION",
        eventPrefix: "",
        getter: "",
        defaults: {
            convention: 24,
            dropslide: {
                trigger: "focus"
            },
            format12: "{h:02.d}:{m:02.d} {suffix:s}",
            format24: "{h:02.d}:{m:02.d}",
            handle: false,
            hours: true,
            minutes: true,
            seconds: false,
            prefix: ["am", "pm"],
            suffix: ["am", "pm"],
            rangeMin: b.range(0, 60, 15),
            rangeSec: b.range(0, 60, 15),
            updateLive: true,
            resetOnBlur: true,
            val: false
        }
    })
})(jQuery);
MSDropDown = {
    settings: {
        theme: "blue",
        autoHide: "off",
        offClass: "aOff",
        onClass: "aOn",
        maintainHeight: 0,
        idpostfixmain: "_ms",
        idpostfixchild: "_child",
        idpostfixa: "_msa",
        idposttitlediv: "_divtitle",
        idposttitle: "_title",
        idhidden: "_input",
        showTitle: true,
        visibleRows: 7,
        iconWithTitle: true
    },
    styles: {
        ddclass: "msDropDown",
        childclass: "msDropDown_Child",
        arrow: current_color_theme_path + "/img/dd_arrow.gif",
        arrowclass: "msArrow",
        titleclass: "msDropdownTitle",
        disabled: "msDisabled",
        enabled: "msEnabled"
    },
    attributes: {
        action: "onfocus,onblur,onchange,onclick,ondblclick,onmousedown,onmouseup,onmouseover,onmousemove,onmouseout,onkeypress,onkeydown,onkeyup",
        prop: "size,multiple,disabled,tabindex"
    },
    selected: new Object(),
    zIndex: 999,
    insideWindow: false,
    dp_array: new Object(),
    currentDiv: "",
    init: function(b) {
        this.storeNmake(b)
    },
    storeNmake: function(w) {
        var C = this.getAllDropDown(w);
        var D = C.length;
        for (var g = 0; g < D; g++) {
            var o = C[g];
            if (o.id != undefined && o.id.length > 0) {
                this.addNewEvents(o.id);
                var e = new Array();
                var m = this.getSelectProperties(o.id);
                e.selectAttributes = m.attributes;
                e.selectAction = m.action;
                var p = (this.dp_array[o.id] == undefined) ? $(o).width() : this.dp_array[o.id].width;
                if (p < 80) {
                    p = 80
                }
                var n = (this.dp_array[o.id] == undefined) ? $(o).height() : this.dp_array[o.id].height;
                $(o).css({
                    width: p + "px"
                });
                var q = $("#" + o.id + "> *");
                var z = q.length;
                for (var f = 0; f < z; f++) {
                    var h = false;
                    if (q[f].nodeName == "OPTION") {
                        var d = q[f];
                        var c = this.getOptionsProperties(d);
                        e.push(c)
                    } else {
                        if (q[f].nodeName == "OPTGROUP") {
                            h = true;
                            var u = false;
                            var r = q[f].childNodes;
                            for (var v = 0; v < r.length; v++) {
                                var d = r[v];
                                var c = this.getOptionsProperties(d);
                                if (c != false) {
                                    if (u == false) {
                                        u = true;
                                        var b = this.getOptGroupProperties(q[f]);
                                        c.optstart = b
                                    }
                                    e.push(c)
                                }
                            }
                            if (h) {
                                e[e.length - 1].optend = "end"
                            }
                        }
                    }
                }
                e.id = o.id;
                e.position = (this.dp_array[o.id] == undefined) ? $("#" + o.id).position() : this.dp_array[o.id].position;
                e.width = p;
                e.height = n;
                this.store(o.id, e)
            } else {
                throw "An id is required!"
            }
        }
        this.makeAdropDown(w)
    },
    setOutOfVision: function(b) {
        $("#" + b).css({
            position: "absolute",
            left: "-5000px",
            top: "-5000px"
        })
    },
    makeAdropDown: function() {
        var J = this.getdps();
        var aa = this.settings.idpostfixmain;
        var Y = this.settings.idpostfixchild;
        var X = this.settings.idhidden;
        var K = this.settings.idpostfixa;
        var H = this.settings.idposttitlediv;
        var I = this.settings.idposttitle;
        var m = this.styles.ddclass;
        var u = this.styles.childclass;
        var P = this.styles.arrowclass;
        var O = this.styles.arrow;
        var N = this.styles.titleclass;
        var e = 0;
        for (i in J) {
            var S = i;
            this.setOutOfVision(S);
            var ai = J[i];
            var q = ai.selectAttributes;
            var f = ai.selectAction;
            var V = ai.position;
            var b = (ai.width) + "px";
            var z = (ai.width - 18) + "px";
            var o = V.top + "px";
            var n = V.left + "px";
            var E = S + aa;
            if ($("#" + E).length > 0) {
                $("#" + E).remove()
            }
            var R = E + Y;
            var ag = E + H;
            var d = E + I;
            var U = E + X;
            var aj = ai.onchange;
            var C = "";
            if (ai.length > this.getVisibleRows()) {
                C = "120"
            }
            var ad = "";
            var D = this.zIndex--;
            var ac = (q.disabled == true) ? " " + this.styles.disabled : this.styles.enabled;
            ad += "<div  id='" + E + "' class='" + m + "' style='position:relative;width:" + b + ";z-Index:" + D + "'>";
            if (q.disabled == true) {
                ad += "<div id='" + ag + "' class='" + ac + "'><div class='" + P + "'><img src='" + O + "' border='0' align='right' /></div><div style='white-space:nowrap;width:" + z + "' class='" + N + "' id='" + d + "'>Loading...</div><input style='text-indent:-400px;position:absolute; top:0; left:0; border:none; background:transparent;cursor:pointer;width:0px;height:0px;' type='text' value='' id='" + U + "' name='" + U + "' /></div>"
            } else {
                ad += "<div id='" + ag + "' class='" + ac + "' onclick=\"MSDropDown.openDropDown('" + E + "')\"><div class='" + P + "'><img src='" + O + "' border='0' align='right' /></div><div style='white-space:nowrap;width:" + z + "' class='" + N + "' id='" + d + "'>Loading...</div><input style='position:absolute; top:0; left:0; border:none; background:transparent;cursor:pointer;width:0px;height:0px;' type='text' value='' id='" + U + "' name='" + U + "' /></div>"
            }
            ad += "<div id='" + R + "' class='coloredScroll " + u + "' style='width:" + (ai.width + 2) + "px'>";
            var c = "";
            var ae = "";
            var h = "";
            for (var Q = 0; Q < ai.length; Q++) {
                var ab = ai[Q];
                var r = E + "_a_" + Q;
                var Z = ab.value;
                if (Q == 0) {
                    var w = r
                }
                var M = ab.text;
                var L = ab.selected;
                var v = ab.icon;
                if ($("#" + S + " option:selected").text() == M) {
                    ae = M;
                    w = r;
                    var g = this.getSetting("iconWithTitle");
                    if (v != undefined && g == true) {
                        h = "<img hspace='2' align='absMiddle' src='" + v + "' />"
                    }
                }
                var af = ab.disabled;
                var p = "";
                var T = (this.getShowTitle() == true) ? M : "";
                var ah = (ab.style != undefined) ? ab.style : "";
                if (ab.optstart != undefined) {
                    var G = (ab.optstart.label == undefined) ? "" : ab.optstart.label;
                    c += "<div style='display:block;clear:both;'><span style='font-weight:bold;font-style:italic'>" + G + "</span><div style='display:block;text-indent:10px;clear:both:'>"
                }
                if (v != undefined) {
                    p = "<img id='" + r + "_icon' class='icon' align='left' src='" + v + "' />"
                }
                if (af == undefined || af == false) {
                    c += "<a id='" + r + "' style='display:block;" + ah + "'+ name='0' value='" + (Z) + "' onclick=\"MSDropDown.setSelected('" + E + "', '" + M + "', '" + r + "', '" + Z + "', '" + v + "')\">"
                } else {
                    c += "<a id='" + r + "' style='cursor:pointer;filter:alpha(opacity=50);-moz-opacity:.50;opacity:.50;display:block;" + ah + "' name='0' value='" + (Z) + "'>"
                }
                c += p + "<span>" + M + "</span></a>";
                if (ab.optend == "end") {
                    c += "</div></div>"
                }
            }
            ae = (ae == "") ? ai[0].text : ae;
            ad += c;
            ad += "</div>";
            ad += "</div>";
            e++;
            $("#" + S).after(ad);
            if (q.disabled == false) {} else {
                $("#" + E).css({
                    opacity: 0.4
                })
            }
            this.applyEvents(E, ai, S);
            if (C != "") {
                $("#" + R).css({
                    overflowY: "scroll",
                    overflowX: "hidden",
                    height: C + "px"
                })
            }
            $("#" + d).html(h + ae);
            this.manageSelection(S, w)
        }
    },
    hasAction: function(f, e) {
        var b = e;
        var c = f;
        for (var d in c) {
            if (d.toString().toLowerCase() == b.toString().toLowerCase() && c[d] == true) {
                return true
            }
        }
        return false
    },
    applyEvents: function(b, m, h) {
        var e = b;
        var f = h;
        var g = m;
        var c = g.selectAttributes;
        var n = g.selectAction;
        if (c.disabled == false) {
            for (var d in n) {
                if (n[d] == true) {
                    switch (d) {
                        case "onfocus":
                            $("#" + e).bind("focus", function(o) {
                                $("#" + f).focus()
                            });
                            break;
                        case "onblur":
                            break;
                        case "onchange":
                            break;
                        case "onclick":
                            $("#" + e).bind("click", function(o) {
                                $("#" + f).click()
                            });
                            break;
                        case "ondblclick":
                            $("#" + e).bind("dblclick", function(o) {
                                $("#" + f).dblclick()
                            });
                            break;
                        case "onmousedown":
                            $("#" + e).bind("mousedown", function(o) {
                                $("#" + f).mousedown()
                            });
                            break;
                        case "onmouseup":
                            $("#" + e).bind("mouseup", function(o) {
                                $("#" + f).mouseup()
                            });
                            break;
                        case "onmouseover":
                            $("#" + e).bind("mouseover", function(o) {
                                $("#" + f).mouseover()
                            });
                            break;
                        case "onmousemove":
                            $("#" + e).bind("mousemove", function(o) {
                                $("#" + f).mousemove()
                            });
                            break;
                        case "onmouseout":
                            $("#" + e).bind("mouseleave", function(o) {
                                $("#" + f).mouseout()
                            });
                            break;
                        case "onkeypress":
                            $("#" + e).bind("keypress", function(o) {
                                $("#" + f).keypress()
                            });
                            break;
                        case "onkeydown":
                            $("#" + e).bind("keydown", function(o) {
                                $("#" + f).keydown()
                            });
                            break;
                        case "onkeyup":
                            $("#" + e).bind("keyup", function(o) {
                                $("#" + f).keyup()
                            });
                            break
                    }
                }
            }
        }
    },
    addNewEvents: function(b) {
        document.getElementById(b).refresh = function(c) {
            MSDropDown.refresh(this.id)
        }
    },
    refresh: function(b) {
        MSDropDown.storeNmake("#" + b)
    },
    manageSelection: function(c, b) {
        if (this.selected[c] == undefined) {
            this.selected[c] = {
                selected: b,
                previous: b
            }
        }
        this.selected[c].selected = b;
        if (this.selected[c].previous != this.selected[c].selected) {
            $("#" + this.selected[c].previous).removeClass("selected")
        }
        $("#" + this.selected[c].selected).addClass("selected");
        this.selected[c].previous = this.selected[c].selected
    },
    setSelected: function(c, o, n, d, q) {
        var p = c.split("_")[0];
        this.selected[p].current = n;
        var m = c;
        var f = b;
        var e = m + this.settings.idposttitle;
        var h = m + this.settings.idhidden;
        var b = this.getdps(p);
        $("#" + p + " option:selected").text(o.toString());
        $("#" + p + " option:selected").val(d.toString());
        if ($("#" + p).attr("onfocus") != undefined) {
            $("#" + p).focus();
            $("#" + h).focus()
        }
        if ($("#" + p).attr("onchange") != undefined) {
            $("#" + p).change()
        }
        $("#" + h).val(o);
        var g = this.getSetting("iconWithTitle");
        if (q.toString() != "undefined" && g == true) {
            o = "<img hspace='2' align='absmiddle' src='" + q + "' />" + o
        }
        $("#" + e).html(o);
        this.manageSelection(p, n);
        this.closeDropDown()
    },
    openDropDown: function(h) {
        var e = h;
        var d = h += "_child";
        if ($("#" + d).css("display") == "block") {
            MSDropDown.closeDropDown();
            return false
        }
        var b = $("#" + e).position();
        var g = $("#" + e).height() + parseInt($("#" + e).css("padding-top")) + "px";
        var f = parseInt($("#" + e).width());
        var c = parseInt($("#" + d).width());
        if (c < f) {
            $("#" + d).css({
                width: $("#" + e).width() + "px"
            })
        }
        this.currentDiv = d;
        $("#" + d).css({
            position: "absolute",
            top: g,
            left: "-1px"
        });
        $("#" + d).show();
        $("#" + d).mouseover(function(m) {
            MSDropDown.setInsideWindow(true)
        });
        $("#" + d).mouseout(function(m) {
            MSDropDown.setInsideWindow(false)
        });
        $(document).bind("mouseup", function(m) {
            if (MSDropDown.insideWindow == false) {
                $(document).unbind("mouseup");
                MSDropDown.closeDropDown()
            }
        })
    },
    setInsideWindow: function(b) {
        this.insideWindow = b
    },
    closeDropDown: function() {
        var d = this.currentDiv;
        var b = d.split("_")[0];
        var c = d + this.settings.idhidden;
        if ($("#" + b).attr("onblur") != undefined) {
            $("#" + b).focus();
            $("#" + c).focus()
        }
        $("#" + this.currentDiv).hide()
    },
    store: function(c, b) {
        this.dp_array[c] = b
    },
    getdps: function(b) {
        return (b == undefined) ? this.dp_array : this.dp_array[b]
    },
    getAllDropDown: function(b) {
        return (b == undefined) ? $("body select") : $(b)
    },
    showTitle: function(b) {
        this.settings.showTitle = b
    },
    getShowTitle: function() {
        return this.settings.showTitle
    },
    setVisibleRows: function(b) {
        this.settings.visibleRows = b
    },
    getVisibleRows: function() {
        return this.settings.visibleRows
    },
    getSelectProperties: function(d) {
        var e = d;
        var f = this.attributes.prop;
        var b = new Object();
        var c = f.split(",");
        var h = c.length;
        b.attributes = new Object();
        for (var g = 0; g < h; g++) {
            var n = c[g].toString();
            var m = $("#" + e).attr(n);
            if (m != undefined) {
                b.attributes[n] = m
            }
        }
        f = this.attributes.action;
        c = f.split(",");
        h = c.length;
        b.action = new Object();
        for (var g = 0; g < h; g++) {
            var n = c[g].toString();
            var m = $("#" + e).attr(n);
            if (m != undefined) {
                b.action[n] = true
            } else {
                b.action[n] = false
            }
        }
        return b
    },
    getOptionsProperties: function(d) {
        var c = d;
        if (c.text != undefined) {
            var h = new Object();
            h.text = c.text;
            h.value = (c.value == undefined) ? c.text : c.value;
            var g = c.attributes;
            var e = g.length;
            for (var f = 0; f < e; f++) {
                var b = g[f];
                h[b.nodeName] = b.nodeValue
            }
            return h
        } else {
            return false
        }
    },
    getOptGroupProperties: function(c) {
        var f = c;
        var h = new Object();
        h.optstart = "start";
        var g = f.attributes;
        var d = g.length;
        if (d > 0) {
            for (var e = 0; e < d; e++) {
                var b = g[e];
                h[b.nodeName] = b.nodeValue
            }
        }
        return h
    },
    showIconWithTitle: function(b) {
        this.settings.iconWithTitle = b
    },
    getSetting: function(b) {
        return this.settings[b]
    }
};

function iColorShow(d) {
    var h = jQuery(d).offset();
    jQuery("#iColorPicker").css({
        top: (h.top) + "px",
        left: (h.left) + "px",
        position: "absolute",
        display: "block"
    });
    jQuery("#iColorPickerBg").css({
        position: "absolute",
        top: 0,
        left: 0,
        width: "100%",
        height: "100%",
        display: "block"
    });
    var f = jQuery(d).val();
    jQuery("#colorPreview span").text(f);
    jQuery("#colorPreview").css("background", f);
    jQuery("#color").val(f);
    var c = jQuery("#iColorPicker");
    for (i = 0; i < c.length; i++) {
        var g = document.getElementById("hexSection" + i);
        var e = g.childNodes;
        for (j = 0; j < e.length; j++) {
            var b = e[j].childNodes;
            for (k = 0; k < b.length; k++) {
                jQuery(e[j].childNodes[k]).unbind().mouseover(function(m) {
                    var n = "#" + jQuery(this).attr("hx");
                    jQuery("#colorPreview").css("background", n);
                    jQuery("#colorPreview span").text(n)
                }).click(function() {
                    var m = "#" + jQuery(this).attr("hx");
                    jQuery(d).val(m).css("background", m);
                    jQuery("#iColorPickerBg").hide();
                    jQuery("#iColorPicker").hide()
                })
            }
        }
    }
}

function iColorHide() {
    jQuery("#iColorPickerBg").hide();
    jQuery("#iColorPicker").hide()
}
$.fn.alphanumeric = function(b) {
    b = $.extend({
        ichars: "!@#$%^&*()+=[]\\';,/{}|\":<>?~`.- ",
        nchars: "",
        allow: ""
    }, b);
    return this.each(function() {
        if (b.nocaps) {
            b.nchars += "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
        }
        if (b.allcaps) {
            b.nchars += "abcdefghijklmnopqrstuvwxyz"
        }
        s = b.allow.split("");
        for (i = 0; i < s.length; i++) {
            if (b.ichars.indexOf(s[i]) != -1) {
                s[i] = "\\" + s[i]
            }
        }
        b.allow = s.join("|");
        var d = new RegExp(b.allow, "gi");
        var c = b.ichars + b.nchars;
        c = c.replace(d, "");
        $(this).keypress(function(f) {
            if (!f.charCode) {
                k = String.fromCharCode(f.which)
            } else {
                k = String.fromCharCode(f.charCode)
            }
            if (c.indexOf(k) != -1) {
                f.preventDefault()
            }
            if (f.ctrlKey && k == "v") {
                f.preventDefault()
            }
        });
        $(this).bind("contextmenu", function() {
            return false
        })
    })
};
$.fn.numeric = function(c) {
    var b = "abcdefghijklmnopqrstuvwxyz";
    b += b.toUpperCase();
    c = $.extend({
        nchars: b
    }, c);
    return this.each(function() {
        $(this).alphanumeric(c)
    })
};
$.fn.alpha = function(c) {
    var b = "1234567890";
    c = $.extend({
        nchars: b
    }, c);
    return this.each(function() {
        $(this).alphanumeric(c)
    })
};
$.fn.scrollView = function() {
    return this.each(function() {
        $("html, body").animate({
            scrollTop: $(this).offset().top
        }, 1000)
    })
};
$.blockUI.defaults.css = {};
$.blockUI.defaults.overlayCSS = {};
$.blockUI.defaults.fadeOut = 0;
$.blockUI.defaults.fadeIn = 0;
$.blockUI.defaults.applyPlatformOpacityRules = false;
$.blockUI.defaults.allowBodyStretch = false;
$.blockUI.defaults.centerX = false;
$.blockUI.defaults.centerY = false;
ToolTipOptions = ({
    track: false,
    fade: 0,
    delay: 150,
    positionLeft: false,
    showURL: false
});
ToolTipOptionsWithTrack = ({
    delay: 50,
    fade: 0,
    track: true,
    positionLeft: false,
    showURL: false
});
ToolTipOptionsEmpty = ({});
IE = $.browser.msie && /MSIE/.test(navigator.userAgent);

function GoToTopOfPage(b) {
    if (b) {
        window.scrollTo(0, 0)
    } else {
        $("html, body").animate({
            scrollTop: 0
        }, "fast")
    }
    return false
}

function GoToBottomOfPage(b) {
    if (b) {
        window.scrollTo(0, 8000)
    } else {
        $("html, body").animate({
            scrollTop: 8000
        }, "fast")
    }
    return false
}

function getCookie(c) {
    var e = " " + document.cookie;
    var d = " " + c + "=";
    var f = null;
    var g = 0;
    var b = 0;
    if (e.length > 0) {
        g = e.indexOf(d);
        if (g != -1) {
            g += d.length;
            b = e.indexOf(";", g);
            if (b == -1) {
                b = e.length
            }
            f = unescape(e.substring(g, b))
        }
    }
    return (f)
}

function setCookie(c, e, b, g, d, f) {
    document.cookie = c + "=" + escape(e) + ((b) ? "; expires=" + b : "") + ((g) ? "; path=" + g : "") + ((d) ? "; domain=" + d : "") + ((f) ? "; secure" : "")
}

function check_sav_complement(c, b, e, f, h) {
    var d = "";
    var g = c.val();
    c.val(g.replace(",", "."));
    if (c.attr("id") == f + "_marge_down_rco" && c.val() == 0 && $("#" + f + "_debit_down_rco").val() != 0) {
        d = "CR IncohÃ©rent. DebitDownRCO est diffÃ©rent de 0, MargedownRCO ne peut Ãªtre Ã©gale Ã  0."
    } else {
        if (c.attr("id") == f + "_marge_down_ro" && c.val() == 0 && $("#" + f + "_debit_down_ro").val() != 0) {
            d = "CR IncohÃ©rent. DebitDownRO est diffÃ©rent de 0, MargedownRO ne peut Ãªtre Ã©gale Ã  0."
        } else {
            if (c.attr("id") == f + "_marge_down_tv" && c.val() == 0 && $("#" + f + "_debit_down_tv").val() != 0) {
                d = "CR IncohÃ©rent. DebitDownTV est diffÃ©rent de 0, MargedownTV ne peut Ãªtre Ã©gale Ã  0."
            } else {
                if (c.attr("id") == f + "_marge_down_sr" && c.val() == 0 && $("#" + f + "_debit_down_sr").val() != 0) {
                    d = "CR IncohÃ©rent. DebitDownSR est diffÃ©rent de 0, MargedownSR ne peut Ãªtre Ã©gale Ã  0."
                } else {
                    if (c.attr("id") == f + "_marge_down_pc" && c.val() == 0 && $("#" + f + "_debit_down_pc").val() != 0) {
                        d = "CR IncohÃ©rent. DebitDownPC est diffÃ©rent de 0, MargedownPC ne peut Ãªtre Ã©gale Ã  0."
                    } else {
                        if (c.attr("id") == f + "_marge_down_dti" && c.val() == 0 && $("#" + f + "_debit_down_dti").val() != 0) {
                            d = "CR IncohÃ©rent. DebitDownDTI est diffÃ©rent de 0, MargedownDTI ne peut Ãªtre Ã©gale Ã  0."
                        } else {
                            if (c.attr("id") == f + "_resistance_a_t" && ((c.val() >= 0 && c.val() < 1 && !isNaN(c.val())) || (isNaN(c.val()) && c.val() != "infini")) && $("#" + f + "_ligne_bae").val() == "OUI") {
                                d = "CR IncohÃ©rent. Si ligne BAE, ResistanceA_T doit Ãªtre supÃ©rieur ou Ã©gale Ã  1 megaOhm."
                            } else {
                                if (c.attr("id") == f + "_resistance_b_t" && ((c.val() >= 0 && c.val() < 1 && !isNaN(c.val())) || (isNaN(c.val()) && c.val() != "infini")) && $("#" + f + "_ligne_bae").val() == "OUI") {
                                    d = "CR IncohÃ©rent. Si ligne BAE, ResistanceB_T doit Ãªtre supÃ©rieur ou Ã©gale Ã  1 megaOhm."
                                } else {
                                    if (c.attr("id") == f + "_caa" && c.val() >= 4 && $("#" + f + "_ligne_bae").val() == "OUI") {
                                        d = "CR IncohÃ©rent. Si ligne BAE, CAA doit Ãªtre infÃ©rieur ou Ã©gale Ã  4 Volt."
                                    } else {
                                        if (c.attr("id") == f + "_cab" && c.val() >= 4 && $("#" + f + "_ligne_bae").val() == "OUI") {
                                            d = "CR IncohÃ©rent. Si ligne BAE, CAB doit Ãªtre infÃ©rieur ou Ã©gale Ã  4 Volt."
                                        } else {
                                            if (c.attr("id") == f + "_cca" && c.val() >= 4 && $("#" + f + "_ligne_bae").val() == "OUI") {
                                                d = "CR IncohÃ©rent. Si ligne BAE, CCA doit Ãªtre infÃ©rieur ou Ã©gale Ã  4 Volt."
                                            } else {
                                                if (c.attr("id") == f + "_ccb" && c.val() >= 4 && $("#" + f + "_ligne_bae").val() == "OUI") {
                                                    d = "CR IncohÃ©rent. Si ligne BAE, CCB doit Ãªtre infÃ©rieur ou Ã©gale Ã  4 Volt."
                                                } else {
                                                    if (c.attr("id") == f + "_resistance_a_batterie" && ((c.val() >= 0 && c.val() < 1 && !isNaN(c.val())) || (isNaN(c.val()) && c.val() != "infini")) && $("#" + f + "_ligne_bae").val() == "OUI") {
                                                        d = "CR IncohÃ©rent. Si ligne BAE, ResistanceA_BATTERIE doit Ãªtre supÃ©rieur ou Ã©gale Ã  1 megaOhm."
                                                    } else {
                                                        if (c.attr("id") == f + "_resistance_b_batterie" && ((c.val() >= 0 && c.val() < 1 && !isNaN(c.val())) || (isNaN(c.val()) && c.val() != "infini")) && $("#" + f + "_ligne_bae").val() == "OUI") {
                                                            d = "CR IncohÃ©rent. Si ligne BAE, ResistanceB_BATTERIE doit Ãªtre supÃ©rieur ou Ã©gale Ã  1 megaOhm."
                                                        } else {
                                                            if (c.attr("id") == f + "_resistance_a_b" && ((c.val() >= 0 && c.val() < 1 && !isNaN(c.val())) || (isNaN(c.val()) && c.val() != "infini")) && $("#" + f + "_ligne_bae").val() == "OUI") {
                                                                d = "CR IncohÃ©rent. Si ligne BAE, ResistanceA_B doit Ãªtre supÃ©rieur ou Ã©gale Ã  1 megaOhm."
                                                            } else {
                                                                if (c.attr("id") == f + "_tonalite_sur_arrivee" && c.val() == "NON" && $("#" + f + "_ligne_bae").val() == "OUI") {
                                                                    d = "CR IncohÃ©rent. Si ligne BAE,Il doit y avoir de la tonalitÃ© Ã  la DTI au moment du test."
                                                                } else {
                                                                    if (c.attr("id") == f + "_capacite_a_b" && c.val() == 0 && ($("#" + f + "_debit_down_dti").val() != 0 && $("#" + f + "_debit_down_pc").val() != 0)) {
                                                                        d = "CR IncohÃ©rent. La capacitÃ© AB ne peut Ãªtre Ã©gale Ã  0 si il y a du dÃ©bit Ã  la DTI ou au PC."
                                                                    } else {
                                                                        if (c.attr("id") == f + "_desequilibre_a_t_sav" && c.val() == 0 && ($("#" + f + "_debit_down_dti").val() != 0 && $("#" + f + "_debit_down_pc").val() != 0)) {
                                                                            d = "CR IncohÃ©rent. La capacitÃ© AT ne peut Ãªtre Ã©gale Ã  0 si il y a du dÃ©bit Ã  la DTI ou au PC."
                                                                        } else {
                                                                            if (c.attr("id") == f + "_desequilibre_b_t_sav" && c.val() == 0 && ($("#" + f + "_debit_down_dti").val() != 0 && $("#" + f + "_debit_down_pc").val() != 0)) {
                                                                                d = "CR IncohÃ©rent. La capacitÃ© BT ne peut Ãªtre Ã©gale Ã  0 si il y a du dÃ©bit Ã  la DTI ou au PC."
                                                                            } else {
                                                                                if (c.attr("id") == f + "_resistance" && c.val() == 0 && ($("#" + f + "_debit_down_dti").val() != 0 && $("#" + f + "_debit_down_pc").val() != 0)) {
                                                                                    d = "CR IncohÃ©rent. La rÃ©sistance ne peut Ãªtre Ã©gale Ã  0 si il y a du dÃ©bit Ã  la DTI ou au PC. "
                                                                                } else {
                                                                                    if (c.attr("id") == f + "_capacite_a_b" && c.val() == $("#" + f + "_desequilibre_a_t_sav").val() && $("#" + f + "_desequilibre_a_t_sav").val() == $("#" + f + "_desequilibre_b_t_sav").val() && $("#" + f + "_tension").val() == 0) {
                                                                                        d = "CR IncohÃ©rent. CapaciteA_B ne peut Ãªtre Ã©gale Ã  DesequilibreA_T_SAV ou Ã  DesequilibreB_T_SAV et en mÃªme temps avoir une tension de 0V."
                                                                                    } else {
                                                                                        if (c.attr("id") == f + "_desequilibre_a_t_sav" && c.val() == 1 && c.val() == $("#" + f + "_desequilibre_b_t_sav").val()) {
                                                                                            d = "CR IncohÃ©rent. DesequilibreA_T_SAV et DesequilibreB_T_SAV ne peuvent en mÃªme temps valeur 1."
                                                                                        } else {
                                                                                            if (c.attr("id") == f + "_debit_down_ro" && c.val() == 0 && $("#" + f + "_debit_down_rco").val() != 0) {
                                                                                                d = "CR IncohÃ©rent. debitDownRO ne peut Ãªtre Ã©gale Ã  0 si debitdownRCO est diffÃ©rent de 0. "
                                                                                            } else {
                                                                                                if (c.attr("id") == f + "_debit_down_tv" && c.val() == 0 && $("#" + f + "_debit_down_ro").val() != 0) {
                                                                                                    d = "CR IncohÃ©rent. debitDownTV ne peut Ãªtre Ã©gale Ã  0 si debitdownRO est diffÃ©rent de 0."
                                                                                                } else {
                                                                                                    if (((e == 1007 || e == 1008) && $("#" + f + "_debit_down_sr").val() == 0) && $("#" + f + "_debit_down_tv").val() != 0) {
                                                                                                        d = "CR IncohÃ©rent. debitDownSR ne peut Ãªtre Ã©gale Ã  0 si debitdownTV est diffÃ©rent de 0."
                                                                                                    } else {
                                                                                                        if (((e == 1007 || e == 1008) && $("#" + f + "_debit_down_pc").val() == 0) && $("#" + f + "_debit_down_sr").val() != 0) {
                                                                                                            d = "CR IncohÃ©rent. debitDownPC ne peut Ãªtre Ã©gale Ã  0 si debitdownSR est diffÃ©rent de 0."
                                                                                                        } else {
                                                                                                            if (c.attr("id") == f + "_installation_conforme" && c.val() == "OUI" && b == "SNR1a") {
                                                                                                                d = "CR IncohÃ©rent. Code cloture incorrect si l'installation est conforme."
                                                                                                            } else {
                                                                                                                if (c.attr("id") == f + "_installation_conforme" && c.val() == "NON" && b != "SNR1a") {
                                                                                                                    d = "CR IncohÃ©rent. Code cloture incorrect si l'installation n'est pas conforme."
                                                                                                                } else {
                                                                                                                    if (c.attr("id") == f + "_presence_module_rc_2_pattes" && c.val() == "NON" && $("#type_arrivee").val() == "0") {
                                                                                                                        d = "CR IncohÃ©rent. L'installation comporte une DTI. Il est necessaire d'avoir un module RC Ã  l'interieur."
                                                                                                                    } else {
                                                                                                                        if (c.attr("id") == f + "_facture_ft_conforme" && c.val() == "1" && ($("#" + f + "_debit_down_dti").val() != 0 || $("#" + f + "_debit_down_pc").val() != 0)) {
                                                                                                                            d = "CR IncohÃ©rent. La facture doit Ãªtre conforme si vous avez du dÃ©bit au PC ou Ã  la DTI."
                                                                                                                        } else {
                                                                                                                            if (c.attr("id") == f + "_service_fonctionnel" && c.val() != "0" && b.substring(0, 3) == "RET") {
                                                                                                                                d = "CR IncohÃ©rent. Code cloture incorrect si les services sont fonctionnels."
                                                                                                                            } else {
                                                                                                                                if (c.attr("id") == f + "_test_telechargement_eth" && c.val() == 0 && ($("#" + f + "_debit_down_dti").val() != 0 || $("#" + f + "_debit_down_pc").val() != 0)) {
                                                                                                                                    d = "CR IncohÃ©rent. Le test de tÃ©lÃ©chaergement en ETHERNET ne peut Ãªtre Ã©gale Ã  0 si vous avez du dÃ©bit au PC ou Ã  la DTI."
                                                                                                                                } else {
                                                                                                                                    if (c.attr("id") == f + "_test_telechargement_wifi" && c.val() == 0 && ($("#" + f + "_debit_down_dti").val() != 0 || $("#" + f + "_debit_down_pc").val() != 0)) {
                                                                                                                                        d = "CR IncohÃ©rent. Le test de tÃ©lÃ©chaergement en WIFI ne peut Ãªtre Ã©gale Ã  0 si vous avez du dÃ©bit au PC ou Ã  la DTI."
                                                                                                                                    }
                                                                                                                                }
                                                                                                                            }
                                                                                                                        }
                                                                                                                    }
                                                                                                                }
                                                                                                            }
                                                                                                        }
                                                                                                    }
                                                                                                }
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    if (c.attr("id") == f + "_couleur_fil_a_bouygues") {
        d = check_colors_cohrence(c, f, d, h)
    }
    if (c.attr("id") == f + "_couleur_fil_a_orange") {
        d = check_colors_cohrence(c, f, d, h)
    }
    return d
}

function check_colors_cohrence(o, b, e, f) {
    var d = "";
    var m = $("#formclient_" + f + "_intervention_" + b + " textarea[name=requst_details]").text();
    var c = [];
    c = m.split("Identifiant du plot associe :");
    if (c[1] === undefined) {
        c = m.split("Identifiant du plot associe")
    }
    var r = [];
    if (c[1] !== undefined) {
        r = c[1].split("<br />")
    }
    var g = -1;
    if (r[0] !== undefined) {
        g = parseInt(r[0])
    }
    if (g != -1 && !isNaN(g)) {
        var q;
        q = getJSON("../../var/data/colors-contraint.json");
        var n = $.parseJSON(q);
        var p = 0;
        var h = 0;
        console.log(n[g][1]);
        switch ($("#" + b + "_couleur_fil_a_bouygues").val()) {
            case n[g][1][0]:
                if ($("#" + b + "_couleur_fil_b_bouygues").val() == n[g][1][1]) {
                    p = 1
                }
                break;
            case n[g][1][2]:
                if ($("#" + b + "_couleur_fil_b_bouygues").val() == n[g][1][3]) {
                    p = 1
                }
                break;
            case n[g][1][4]:
                if ($("#" + b + "_couleur_fil_b_bouygues").val() == n[g][1][5]) {
                    p = 1
                }
                break;
            default:
                p = 0;
                break
        }
        if (p == 0) {
            $("#" + b + "_couleur_fil_a_bouygues").focus();
            d = "vÃ©rifiez les couleurs du fil BOUYGUES qui n'est pas la couleur attendue avec le plot nÂ°" + g + "."
        } else {
            if (!($("#" + b + "_couleur_fil_a_orange").val() == n[g][1][6] && $("#" + b + "_couleur_fil_b_orange").val() == n[g][1][7])) {
                $("#" + b + "_couleur_fil_a_orange").focus();
                d = "vÃ©rifiez les couleurs du fil ORANGE qui n'est pas la couleur attendue avec le plot nÂ°" + g + "."
            } else {
                d = e
            }
        }
    }
    return d
}

function getJSON(c) {
    var d;
    var b;
    d = "";
    b = new XMLHttpRequest();
    if (b != null) {
        b.open("GET", c, false);
        b.send(null);
        d = b.responseText
    }
    return d
}

function HeartBeatCheck() {
    if (($("#heartbeat_mark").length < 1) || ($("#heartbeat_mark").html() != "OK")) {
        CloseAdditionalWindows();
        window.onbeforeunload = null;
        $("body").html("");
        document.cookie = "";
        window.location.reload()
    } else {
        heartbeat_timer = setTimeout("HeartBeat()", 300000)
    }
}

function HeartBeat() {
    if ($("#heartbeat_mark").length < 1) {
        HeartBeatCheck()
    }
    $("#heartbeat_mark").html("");
    $("#heartbeat_mark").load("heartbeat/touch");
    heartbeat_check_timer = setTimeout("HeartBeatCheck()", 10000)
}

function init_Login_Form() {
    $("#login_loginform").ajaxForm({
        type: "POST",
        url: "login/checklogin",
        dataType: "json",
        data: "login_username=" + encodeURIComponent($("#login_username").val()) + "&login_password=" + encodeURIComponent($("#login_password").val()),
        success: updateLogin,
        beforeSubmit: function() {
            $("#login_submit").attr("disabled", "true");
            blockAllUI();
            $("#login_loginerror").html("")
        },
        timeout: default_time_out_ms
    });
    $("#login_username").focus()
}

function init_Login_NewPassword_Form() {
    $("#login_new_password_container").show();
    $("#login_loginform").ajaxForm({
        type: "POST",
        url: "login/checklogin",
        dataType: "json",
        data: "login_username=" + encodeURIComponent($("#login_username").val()) + "&login_password=" + encodeURIComponent($("#login_password").val()) + "&login_new_password=" + encodeURIComponent($("#login_new_password").val()) + "&login_new_password_rep=" + encodeURIComponent($("#login_new_password_rep").val()),
        success: updateLogin,
        beforeSubmit: function() {
            $("#login_submit").attr("disabled", "true");
            blockAllUI();
            $("#login_loginerror").html("")
        },
        timeout: default_time_out_ms
    });
    $("#login_username").focus()
}

function updateLogin(b) {
    $("#login_loginerror").html(b.message);
    if (b.success == "yes") {
        $.cookie("pc30net_u", $("#login_username").val(), {
            expires: 365
        });
        if ($("#login_new_password").val().length > 0) {
            $.cookie("pc30net_p", $("#login_new_password").val(), {
                expires: 365
            })
        } else {
            $.cookie("pc30net_p", $("#login_password").val(), {
                expires: 365
            })
        }
        window.location = "/"
    } else {
        UNblockAllUI();
        $("#login_submit").removeAttr("disabled");
        $("#login_username").focus();
        if (b.success == "expired") {
            init_Login_NewPassword_Form()
        }
    }
}

function blockAllUI() {
    BLcnt++;
    if (BLcnt > 1) {
        if (setTimeoutHolder != null) {
            clearTimeout(setTimeoutHolder)
        }
        setTimeoutHolder = setTimeout(function() {
            jQuery.unblockUI()
        }, default_time_out_ms);
        return true
    }
    prmW = "95%";
    prmL = "3%";
    WW = 280;
    W = $(window).width();
    if (W > WW) {
        A = Math.round((WW * 100) / W);
        B = Math.round((100 - A) / 2);
        prmW = A + "%";
        prmL = B + "%"
    }
    msg = '<span id="Wait_Message"><br>' + message_wait + "<br></span>";
    jQuery.blockUI({
        message: msg,
        css: {
            width: prmW,
            left: prmL,
            top: "2%"
        }
    });
    if (setTimeoutHolder != null) {
        clearTimeout(setTimeoutHolder)
    }
    setTimeoutHolder = setTimeout(function() {
        BLcnt--;
        jQuery.unblockUI()
    }, default_time_out_ms)
}

function UNblockAllUI() {
    BLcnt--;
    if (BLcnt < 1) {
        BLcnt = 0;
        jQuery.unblockUI();
        if (setTimeoutHolder) {
            clearTimeout(setTimeoutHolder)
        }
    }
}
$(function() {
    jQuery.wkDLG = function(f, c, e, b, d) {
        jQuery.MyDLG(f, c === undefined ? dlg_button_ok : c, b === undefined ? "" : b, e === undefined ? function() {} : e, d === undefined ? function() {} : d);
        clearTimeout(setTimeoutHolder)
    }, jQuery.MyDLG = function(b, d, c, f, e) {
        function o() {
            $("#MyDLG_message").html(b);
            if (d != "") {
                $("#MyDLG_button1").attr("value", d);
                $("#MyDLG_button1").css("display", "inline")
            } else {
                $("#MyDLG_button1").css("display", "none")
            }
            if (c != "") {
                $("#MyDLG_button2").attr("value", c);
                $("#MyDLG_button2").css("display", "inline")
            } else {
                $("#MyDLG_button2").css("display", "none")
            }
            $(document).bind("keydown", m);
            $("#MyDLG_button1").bind("click", h);
            $("#MyDLG_button2").bind("click", g)
        }

        function n() {
            $(document).unbind("keydown");
            $("#MyDLG_button1").unbind("click");
            $("#MyDLG_button2").unbind("click");
            jQuery.unblockUI()
        }

        function m(p) {
            p.preventDefault();
            if (p.keyCode == 13) {
                n();
                f();
                return false
            }
            if (p.keyCode == 27) {
                n();
                e();
                return false
            }
        }

        function h() {
            n();
            f();
            return false
        }

        function g() {
            n();
            e();
            return false
        }
        o();
        prmW = "95%";
        prmL = "3%";
        WW = 280;
        W = $(document).width();
        if (W > WW) {
            A = (WW * 100) / W;
            B = (100 - A) / 2;
            prmW = A + "%";
            prmL = B + "%"
        }
        jQuery.blockUI({
            message: $("#MyDLG_form"),
            css: {
                width: prmW,
                left: prmL,
                top: "5%"
            },
            overlayCSS: {
                cursor: "default"
            }
        });
        if (setTimeoutHolder != null) {
            clearTimeout(setTimeoutHolder)
        }
        setTimeoutHolder = setTimeout(function() {
            jQuery.unblockUI()
        }, default_time_out_ms)
    };
    jQuery.fn.center = function() {
        var b = $(window);
        this.css({
            position: "absolute",
            top: Math.abs(((b.height() - this.outerHeight()) / 2) + b.scrollTop()),
            left: Math.abs(((b.width() - this.outerWidth()) / 2) + b.scrollLeft())
        });
        return this
    }
});

function init_Common_Top_Menu() {
    $("a.LogoutLink").click(function() {
        CloseAdditionalWindows();
        $.MyDLG(login_logout_confirm, dlg_button_yes, dlg_button_cancel, function() {
            window.onbeforeunload = null;
            window.location.href = "login/logout"
        }, function() {});
        return false
    });
    $("a.HelpLink").click(function() {
        jQuery.blockUI({
            message: $("#MyHelp_form"),
            css: {
                width: "100%",
                height: "100%",
                top: "0"
            },
            overlayCSS: {
                cursor: "default"
            }
        });
        if (setTimeoutHolder != null) {
            clearTimeout(setTimeoutHolder)
        }
        setTimeoutHolder = setTimeout(function() {
            BLcnt--;
            jQuery.unblockUI()
        }, default_time_out_ms);
        return false
    })
}

function ajaxerror(b) {
    if (wk_mode) {
        console.log(b.responseText);
        $("#my_popup_form").html(b.responseText);
        show_my_popupform()
    } else {
        alert(lang_action_failed);
        UNblockAllUI()
    }
}

function chk_rsp_error(e, c, d, b) {
    if (typeof b == "undefined") {
        b = "error"
    }
    if (e.toLowerCase().indexOf(b) == -1) {
        return true
    }
    if (typeof d != "undefined") {
        if (wk_mode) {
            console.log(e);
            alert(d + "\n\n" + e)
        } else {
            alert(d)
        }
    } else {
        alert(lang_action_failed)
    }
    if (typeof c == "undefined") {
        UNblockAllUI();
        throw new Error(e)
    }
    return false
}

function chkRes(d, b, c) {
    c = c.toString();
    console.log(b);
    console.log(d);
    if ((b != "success") || (c.substring(0, 2) != " \n")) {
        if (myDEBUG) {
            if (c == "") {
                console.log(d);
                d.html("<b>DEBUG: ERROR</b> Status: " + b);
                console.log(d.html())
            }
        } else {
            console.log(d, b);
            d.html(message_error_pres_refresh)
        }
        CloseAdditionalWindows();
        window.onbeforeunload = null;
        return false
    }
    return true
}

function chkResChat(d, b, c) {
    if (b != "success") {
        if (myDEBUG) {
            if (c == "") {
                console.log(d);
                d.html("<b>DEBUG: ERROR</b> Status: " + b);
                console.log(d.html())
            }
        } else {
            console.log(d, b);
            d.html(message_error_pres_refresh)
        }
        CloseAdditionalWindows();
        window.onbeforeunload = null;
        return false
    }
    return true
}

function tabs_delimiter_height() {
    var b = $(window).height() - 96;
    if (b < 200) {
        b = 200
    }
    $("#LAgenciesTabTree").css("height", b + "px");
    if ($("#left_side_tabs").height() > $("#right_top_level_tabs").height()) {
        $("#left_side_tabs_container").css("height", $("#left_side_tabs").height() + "px")
    } else {
        $("#left_side_tabs_container").css("height", $("#right_top_level_tabs").height() - 2 + "px")
    }
    if ($("#tableTimitable_container").position() && !wk_mode) {
        $("#tableTimitable_container").css("width", $(window).width() - 20 - $("#tableTimitable_container").position().left)
    }
}

function tab_on_show(Event, ui) {
    if ($(ui.panel).length > 0) {
        var OnShow = $(ui.panel).attr("on_show");
        if (OnShow != null) {
            eval(OnShow)
        }
    }
}

function get_left_tab_idx_by_ref(b) {
    return TopLeftTabs.find("a").index($('a[href="' + b + '"]'))
}

function my_close_left_tab(b) {
    var c = $(b).parent().children("a").attr("href");
    var d = TopLeftTabs.find("a").index($('a[href="' + c + '"]'));
    if (d >= 0) {
        if (TopLeftTabs) {
            TopLeftTabs.tabs("remove", d)
        }
    }
    return false
}

function get_right_tab_idx_by_ref(b) {
    return TopRightTabs.find("a").index($('a[href="' + b + '"]'))
}

function my_close_right_tab(b) {
    var c = $(b).parent().children("a").attr("href");
    var d = TopRightTabs.find("a").index($('a[href="' + c + '"]'));
    if (d >= 0) {
        if (TopRightTabs) {
            if (TopRightPreviousTab) {
                TopRightTabs.tabs("select", TopRightPreviousTab)
            }
            TopRightTabs.tabs("remove", d)
        }
    }
    return false
}

function init_tableTimitable() {
    $(".temp_text_messageC").html(Planning_date);
    $.ui.tabs.defaults.tabTemplate = '<li><a href="#{href}"><span>#{label}</span></a><em class="ui-tabs-close" onclick="my_close_right_tab(this);" title="' + button_close + '">&nbsp;</em></li>';
    $.ui.tabs.defaults.show = function(e, f) {
        tabs_delimiter_height();
        tab_on_show(e, f)
    };
    $("#left_side_tabs").tabs();
    $("#left_side_tabs_container").resizable({
        stop: function(g, f) {
            tabs_delimiter_height()
        },
        transparent: false,
        autoHide: false,
        helper: "proxy",
        minWidth: 210,
        maxWidth: 800,
        handles: "e"
    });
    if ($("#LInterventionsContainer").length) {
        blockAllUI()
    }
    $("#LInterventionsContainer").load("planning/planning_interventions", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#LInterventionsContainer"), e, g);
        tabs_delimiter_height();
        UNblockAllUI()
    });
    $.datepicker.setDefaults($.datepicker.regional[default_language]);
    var b = new Date(SRVtime * 1000);
    var c = new Date(b.getTime() - CalendarDeltaMin);
    if ((user_group_id == 5) || (user_group_id == 15) || (user_group_id == 16)) {
        var d = new Date(b.getFullYear(), b.getMonth(), b.getDate() + 30)
    } else {
        var d = new Date(b.getTime() + CalendarDeltaMax)
    }
    $("#PlanningCalendar").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        minDate: c,
        maxDate: d,
        showWeek: true,
        changeMonth: true,
        yearRange: "-1:+1",
        changeYear: true,
        yearRange: "-1:+1",
        dateFormat: "yy-mm-dd",
        onSelect: function(e) {
            Planning_date = e;
            Planning_date_is_set = true;
            $(".temp_text_messageC").html(Planning_date);
            if (TopRightTabs) {
                TopRightTabs.tabs("select", "#RPlanningTab")
            }
            LoadTimeTables(1)
        }
    });
    if (wk_mode) {
        Planning_date = "2015-08-10";
        $("#PlanningCalendar").datepicker("setDate", new Date(Planning_date.replace(/\-/g, "/")))
    }
    $(".temp_text_messageC").html(Planning_date);
    $("#AllAgenciesTree").load("lists/agencies_all/" + default_language + "/" + user_id + "/" + employe_id + "/0/0/0/0/dummy.html", function(g, e, f) {
        if (chkRes($("#AllAgenciesTree"), e, g)) {
            $("#AllAgenciesTree").treeview({
                collapsed: true,
                unique: true,
                speed: 1,
                prerendered: false,
                toggle: function() {
                    tabs_delimiter_height();
                    if ($(this).attr("class").indexOf("collapsable") >= 0) {
                        Planning_soc_id = $(this).find(">span").attr("ag_id");
                        Planning_soc_name = $(this).find(">span").text();
                        Planning_age_id = -1;
                        Planning_age_name = "";
                        if (Tree_el_old != null) {
                            $(Tree_el_old).find(">span").removeClass("selected")
                        }
                        $(".temp_text_messageA").html('<span class="debug_info">' + Planning_soc_id + "</span> " + Planning_soc_name);
                        $(".temp_text_messageB").html("&nbsp;");
                        LoadTimeTables(1)
                    }
                }
            })
        }
        UNblockAllUI()
    })
}

function CloseAdditionalWindows() {
    try {
        printwindown.close()
    } catch (b) {}
    try {
        printwindowv.close()
    } catch (b) {}
}

function OpenNewPrintWindow(c) {
    printwindowv = window.open("printing/wait/" + c, "printwindown", "toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=0,resizable=1,history=0,width=780,height=570", true);
    try {
        printwindowv.focus()
    } catch (b) {}
    try {
        printwindowv.scrollTo(0, 0)
    } catch (b) {}
    try {
        printwindown.focus()
    } catch (b) {}
    try {
        printwindown.scrollTo(0, 0)
    } catch (b) {}
    return false
}

function TimitableTechContextMenu(b, c, e) {
    if ($(c).attr("eml_id") > 0) {
        if (b == "event_cr") {
            Create_New_Event(c, e);
            return
        }
        if (b == "event_ed") {
            Edit_Event(c, e);
            return
        }
        if (b == "close") {
            return
        }
        if (b == "print") {
            if ($(c).attr("inters") > 0) {
                OpenNewPrintWindow("printing/ints/" + Planning_date + "/" + Planning_age_id + "/1/" + $(c).attr("eml_id") + "/intervention_" + Planning_date + "_a" + Planning_age_id + "_t" + $(c).attr("eml_id") + ".pdf")
            } else {
                CloseAdditionalWindows()
            }
            return
        }
        if (b == "notify_tech") {
            NotificationContextMenu(b, c, e)
        }
        if (b == "plan") {
            var d = confirm("Etes vous sÃ»r de valider la planification dÃ©finitive des interventions de ce technicien!");
            if (d == true) {
                changeStatusTechTOPlan(c, Planning_date, 1);
                return
            } else {
                return
            }
        }
        if (b == "deplan") {
            var d = confirm("Attention, vous Ãªtes sur le point de dÃ©planifier les interventions de ce technicien!");
            if (d == true) {
                changeStatusTechTOPlan(c, Planning_date, 0);
                return
            } else {
                return
            }
        }
    }
}

function changeStatusTechTOPlan(c, d, e) {
    blockAllUI();
    var b = $(c).attr("eml_id");
    $.ajax({
        url: "planning/slot_to_plan",
        data: {
            Empl_Id: b,
            Pl_Date: d,
            Part_Id: 393,
            Planifi: e
        },
        async: false,
        type: "POST",
        success: function(f) {
            LoadTimeTables(1, f);
            UNblockAllUI()
        }
    })
}

function changeStatusTechTOPlanAgence(c, d, e) {
    blockAllUI();
    var b = $(c).find(">a").attr("a_id");
    if (b != undefined) {
        if (b != 100000) {
            $.ajax({
                url: "planning/slot_to_plan_agence",
                data: {
                    Age_Id: b,
                    Pl_Date: d,
                    Part_Id: 393,
                    Planifi: e
                },
                async: false,
                type: "POST",
                success: function(f) {
                    LoadTimeTables(1, f);
                    UNblockAllUI()
                }
            })
        } else {
            UNblockAllUI()
        }
    } else {
        UNblockAllUI()
    }
}

function CloseOpenTimeSlot(b, e, c, d, f) {
    blockAllUI();
    $("#dummy_container").load("planning/slot_manipulate", {
        inside: "yes",
        ToDo: b,
        Empl_Id: e,
        Agen_Id: c,
        PlDate: d,
        PlTime: f,
        All: 0
    }, function(m, g, h) {
        chkRes($("#dummy_container"), g, m);
        UNblockAllUI()
    });
    LoadTimeTables(0)
}

function CloseOpenTimeSlotAll(b, e, c, d, f) {
    blockAllUI();
    $.ajax({
        url: "planning/slot_manipulate",
        data: {
            inside: "yes",
            ToDo: b,
            Empl_Id: e,
            Agen_Id: c,
            PlDate: d,
            PlTime: f,
            All: 1
        },
        async: false,
        type: "POST",
        success: function(g) {
            chkRes($("#dummy_container"), "success", g);
            UNblockAllUI()
        }
    })
}

function TimeTableSlotOpenContextMenu(b, d, e) {
    if (b == "event_cr") {
        Create_New_Event(d, e);
        return
    }
    if (b == "event_ed") {
        Edit_Event(d, e);
        return
    }
    if (b == "close") {
        return
    }
    if (b == "s_open") {
        CloseOpenTimeSlot(1, $(d).attr("tc"), Planning_age_id, Planning_date, $(d).attr("id"));
        return
    }
    if (b == "s_open_all") {
        for (var c = 0; c <= 25; c++) {
            CloseOpenTimeSlotAll(1, $(d).attr("tc"), Planning_age_id, Planning_date, c)
        }
        LoadTimeTables(0);
        return
    }
}

function TimeTableSlotCloseContextMenu(b, d, e) {
    if (b == "event_cr") {
        Create_New_Event(d, e);
        return
    }
    if (b == "event_ed") {
        Edit_Event(d, e);
        return
    }
    if (b == "close") {
        return
    }
    if (b == "s_close") {
        CloseOpenTimeSlot(0, $(d).attr("tc"), Planning_age_id, Planning_date, $(d).attr("id"));
        return
    }
    if (b == "s_close_all") {
        for (var c = 0; c <= 25; c++) {
            CloseOpenTimeSlotAll(0, $(d).attr("tc"), Planning_age_id, Planning_date, c)
        }
        LoadTimeTables(0);
        return
    }
}

function TimeTableEventContextMenu(b, c, d) {
    if (b == "event_cr") {
        Create_New_Event(c, d);
        return
    }
    if (b == "event_ed") {
        Edit_Event(c, d);
        return
    }
    if (b == "close") {
        return
    }
}

function RefreshInterventionListCellToolTipIfItExists(b) {
    var d = $("#tableInetvention").find("div[inter_id=" + b + "]").get(0);
    if ((d != null) && $(d).length) {
        var c = d.tooltipText;
        d.tooltipText = c.replace(/<span mid="adress_detail">(.*?)<\/span>/gi, '<span mid="adress_detail">' + TempStorageA + "</span>")
    }
}

function RefreshClientIfItsOpened(d) {
    var b = $("#client_" + d + "_details_" + d);
    var c = $("#client_" + d + "_details_" + d + "nav");
    if ((b != null) && (c != null) && $(b).length && $(c).length) {
        blockAllUI();
        $(c).html(message_loading);
        $(b).load("clients/get_client", {
            inside: "yes",
            client_id: d,
            sub_id: d,
            arch: 0
        }, function(g, e, f) {
            chkRes($(b), e, g);
            client_details_switch(this, "#client_" + d + "_details_" + d);
            UNblockAllUI()
        });
        UNblockAllUI()
    }
}

function TimitableAndIntListContextMenu(b, c, e, d) {
    if ($(c).attr("cli_id") > 0) {
        if (b == "event_cr") {
            Create_New_Event(c, e);
            return
        }
        if (b == "event_ed") {
            Edit_Event(c, e);
            return
        }
        if (b == "close") {
            return
        }
        if (b == "edit_cli") {
            OpenClientTab($(c).attr("cli_id"), $(c).attr("cli_name"), -1, -1);
            return
        }
        if (b == "edit_int") {
            OpenClientTab($(c).attr("cli_id"), $(c).attr("cli_name"), $(c).attr("inter_id"), -1);
            return
        }
        if (b == "new_call") {
            OpenClientTab($(c).attr("cli_id"), $(c).attr("cli_name"), $(c).attr("inter_id"), -2);
            return
        }
        if (b == "recomm_agency") {
            Get_And_Select_Recommended_Agency($(c).attr("cli_zip"), $(c).attr("cli_id"), $(c).attr("inter_id"));
            return
        }
        if (b == "address_det") {
            Edit_Client_Address_Details($(c).attr("cli_id"), $(c).attr("inter_id"), c, e, d);
            return
        }
        if (b == "recomm_tech") {
            recommended_tech($(c).attr("inter_id"), $(c).attr("comptence"), $(c).attr("cli_zip"), $(c).attr("cli_id"), $(c).attr("northing"), $(c).attr("easting"));
            return
        }
        if (b == "recomm_tech_by_skills") {
            recommended_tech_by_skills($(c).attr("inter_id"), $(c).attr("comptence"), $(c).attr("cli_zip"), $(c).attr("cli_id"), $(c).attr("northing"), $(c).attr("easting"));
            return
        }
        if (b == "backlog_closest") {
            backlog_closest($(c).attr("inter_id"), $(c).attr("comptence"), $(c).attr("cli_zip"), $(c).attr("cli_id"), $(c).attr("northing"), $(c).attr("easting"));
            return
        }
        if (b == "backlog_closest_partner") {
            backlog_closest_partner($(c).attr("inter_id"), $(c).attr("comptence"), $(c).attr("cli_zip"), $(c).attr("cli_id"), $(c).attr("northing"), $(c).attr("easting"), $(c).attr("partner_id"));
            return
        }
        if (b == "print") {
            if ($(c).attr("inter_id") > 0) {
                OpenNewPrintWindow("printing/ints/" + Planning_date + "/" + Planning_age_id + "/2/" + $(c).attr("inter_id") + "/intervention_" + Planning_date + "_a" + Planning_age_id + "_i" + $(c).attr("inter_id") + ".pdf")
            }
            return
        }
    }
}

function recommended_tech(d, c, b, g, f, e) {
    blockAllUI();
    $(".temp_text_messageA").html("Agence Virtuelle");
    $(".temp_text_messageB").html("Agence Virtuelle");
    $("#TimeTableContainer").load("planning/planning_timetables_recomm_tech", {
        inside: "yes",
        planning_date: Planning_date,
        id_inter: d,
        northing: f,
        easting: e,
        comptence: c
    }, function(n, h, m) {
        if (chkRes($("#AllAgenciesTree"), h, n)) {}
        tabs_delimiter_height();
        Planning_age_id = 9999;
        Planning_date_is_set = true;
        if (TopRightTabs) {
            TopRightTabs.tabs("select", "#RPlanningTab")
        }
        UNblockAllUI()
    })
}

function recommended_tech_by_skills(d, c, b, g, f, e) {
    blockAllUI();
    $(".temp_text_messageA").html("Agence Virtuelle");
    $(".temp_text_messageB").html("Agence Virtuelle");
    $("#TimeTableContainer").load("planning/planning_timetables_recomm_tech_by_skills", {
        inside: "yes",
        planning_date: Planning_date,
        id_inter: d,
        northing: f,
        easting: e,
        comptence: c
    }, function(n, h, m) {
        if (chkRes($("#AllAgenciesTree"), h, n)) {}
        tabs_delimiter_height();
        Planning_age_id = 9999;
        Planning_date_is_set = true;
        if (TopRightTabs) {
            TopRightTabs.tabs("select", "#RPlanningTab")
        }
        UNblockAllUI()
    })
}

function backlog_closest(d, c, b, g, f, e) {
    blockAllUI();
    $(".temp_text_messageA").html("Agence Virtuelle");
    $(".temp_text_messageB").html("Agence Virtuelle");
    $("#InterventionContainer").load("planning/get_backlog_closest_list", {
        inside: "yes",
        planning_date: Planning_date,
        id_inter: d,
        northing: f,
        easting: e,
        comptence: c
    }, function(n, h, m) {
        if (chkRes($("#InterventionContainer"), h, n)) {}
        tabs_delimiter_height();
        $("#left_side_tabs").tabs("select", "#LInterventionsTab");
        $("#LInterventionsContainer > div:first:visible").hide(function() {
            $("<button id='newintersearch' class='ui-widget-header ui-corner-all' style='width: 100%; margin:10px 0px; cursor: pointer'>" + lang_new_search + "</button>").insertBefore("#LInterventionsContainer > div:first").bind("click", function() {
                $(this).fadeOut("slow", function() {
                    $(this).remove;
                    $("#LInterventionsContainer > div:first").slideToggle("slow")
                })
            })
        });
        GoToTopOfPage();
        UNblockAllUI()
    })
}

function backlog_closest_partner(d, c, b, h, g, f, e) {
    blockAllUI();
    $(".temp_text_messageA").html("Agence Virtuelle");
    $(".temp_text_messageB").html("Agence Virtuelle");
    $("#InterventionContainer").load("planning/get_backlog_closest_partner_list", {
        inside: "yes",
        planning_date: Planning_date,
        id_inter: d,
        northing: g,
        easting: f,
        comptence: c,
        partner_id: e
    }, function(o, m, n) {
        if (chkRes($("#InterventionContainer"), m, o)) {}
        tabs_delimiter_height();
        $("#left_side_tabs").tabs("select", "#LInterventionsTab");
        $("#LInterventionsContainer > div:first:visible").hide(function() {
            $("<button id='newintersearch' class='ui-widget-header ui-corner-all' style='width: 100%; margin:10px 0px; cursor: pointer'>" + lang_new_search + "</button>").insertBefore("#LInterventionsContainer > div:first").bind("click", function() {
                $(this).fadeOut("slow", function() {
                    $(this).remove;
                    $("#LInterventionsContainer > div:first").slideToggle("slow")
                })
            })
        });
        GoToTopOfPage();
        UNblockAllUI()
    })
}

function TimitableContextMenu(b, c, d) {
    TimitableAndIntListContextMenu(b, c, d, 1)
}

function InterventionListContextMenu(b, c, d) {
    TimitableAndIntListContextMenu(b, c, d, 2)
}

function NotificationContextMenu(b, d, f) {
    if (b == "close") {
        return
    } else {
        if (b == "planAgence") {
            var c = $(d).find(">a").attr("a_id");
            if (c != undefined) {
                if (c != 100000) {
                    var e = confirm("Etes vous sÃ»r de valider la planification dÃ©finitive des interventions sur cette agence!");
                    if (e == true) {
                        changeStatusTechTOPlanAgence(d, Planning_date, 1);
                        return
                    } else {
                        return
                    }
                } else {
                    return
                }
            } else {
                return
            }
        } else {
            soc_id = $(d).find(">span").attr("ag_id");
            c = $(d).find(">a").attr("a_id");
            emp_id = $(d).attr("eml_id");
            if (soc_id == undefined) {
                soc_id = Planning_soc_id
            }
            if ($(d).find(">a").attr("a_id") == undefined) {
                c = 100000
            }
            if (emp_id == undefined) {
                emp_id = -1
            }
            NotificationForm(b, soc_id, emp_id, c)
        }
    }
}

function Get_And_Select_Recommended_Agency(b, d, c) {
    blockAllUI();
    if (regional_version == "IB01") {
        $("#dummy_container").load("planning/get_recommended_agency_from_inter", {
            inside: "yes",
            zip: b,
            inter_id: c
        }, function(e, h, f) {
            chkRes($("#dummy_container"), h, e);
            var o = $("#get_recommended_agency_result");
            var q = $(o).attr("s_id");
            var m = $(o).attr("a_id");
            var g = false;
            var n = null;
            var p = null;
            if ((q >= 0) && (m >= 0)) {
                n = $("#LAgenciesTabTree").find('span[ag_id="' + q + '"]');
                p = $("#LAgenciesTabTree").find('a[a_id="' + m + '"]');
                if (($(n).length > 0) && ($(p).length > 0)) {
                    g = true
                }
            }
            if (g) {
                $(n).click();
                $(p).click()
            } else {
                $("#LAgenciesTabTree").find(".collapsable-hitarea").click();
                Planning_age_id = -1;
                Planning_age_name = "";
                $(".temp_text_messageA").html("&nbsp;");
                $(".temp_text_messageB").html("&nbsp;");
                LoadTimeTables(1, c);
                if (TopRightTabs) {
                    TopRightTabs.tabs("select", "#RPlanningTab")
                }
            }
            UNblockAllUI()
        })
    } else {
        $("#dummy_container").load("planning/get_recommended_agency", {
            inside: "yes",
            zip: b
        }, function(e, h, f) {
            chkRes($("#dummy_container"), h, e);
            var o = $("#get_recommended_agency_result");
            var q = $(o).attr("s_id");
            var m = $(o).attr("a_id");
            var g = false;
            var n = null;
            var p = null;
            if ((q >= 0) && (m >= 0)) {
                n = $("#LAgenciesTabTree").find('span[ag_id="' + q + '"]');
                p = $("#LAgenciesTabTree").find('a[a_id="' + m + '"]');
                if (($(n).length > 0) && ($(p).length > 0)) {
                    g = true
                }
            }
            if (g) {
                $(n).click();
                $(p).click()
            } else {
                $("#LAgenciesTabTree").find(".collapsable-hitarea").click();
                Planning_age_id = -1;
                Planning_age_name = "";
                $(".temp_text_messageA").html("&nbsp;");
                $(".temp_text_messageB").html("&nbsp;");
                LoadTimeTables(1, c);
                if (TopRightTabs) {
                    TopRightTabs.tabs("select", "#RPlanningTab")
                }
            }
            UNblockAllUI()
        })
    }
}

function init_tableTimitablesss() {
    $(".ShowToolTipT").tooltip(ToolTipOptions);
    $("#tableTimitable tbody tr.first td:not(.left) div").bind("mouseover", function(e) {
        $(this).addClass("raisedth")
    });
    $("#tableTimitable tbody tr.first td:not(.left) div").bind("mouseout", function(e) {
        $(this).removeClass("raisedth")
    });
    $("#tableTimitable tbody tr.first td:not(.left) div").contextMenu({
        menu: "TimeTableTechContextMenu",
        inSpeed: 0,
        outSpeed: 0
    }, TimitableTechContextMenu);
    $("#tableTimitable tbody tr.DD td:not(.left) div").bind("mouseover", function(e) {
        $(this).addClass("raised")
    });
    $("#tableTimitable tbody tr.DD td:not(.left) div").bind("mouseout", function(e) {
        $(this).removeClass("raised")
    });
    $("#tableTimitable tbody tr:odd tr:not(.thead) td").addClass("odd");
    $("#tableTimitable div.engaged").contextMenu({
        menu: "TimeTablecontextMenu",
        inSpeed: 0,
        outSpeed: 0
    }, TimitableContextMenu);
    $("#tableTimitable div.engagedX").contextMenu({
        menu: "TimeTablecontextMenu",
        inSpeed: 0,
        outSpeed: 0
    }, TimitableContextMenu);
    $("#tableTimitable div.outofaction:not(.not_modifable)").each(function(n, el) {
        $(el).contextMenu({
            menu: "TimeTableSlotOpenContextMenu",
            inSpeed: 0,
            outSpeed: 0
        }, TimeTableSlotOpenContextMenu)
    });
    $("#tableTimitable div.free:not(.not_modifable)").each(function(n, el) {
        $(el).contextMenu({
            menu: "TimeTableSlotCloseContextMenu",
            inSpeed: 0,
            outSpeed: 0
        }, TimeTableSlotCloseContextMenu)
    });
    $("#tableTimitable div:not(.free, .outofaction, .engaged, .engagedX, .contextMenu, .thead, .time)").add("#tableTimitable div.not_modifable").not(".engaged, .engagedX").each(function(n, el) {
        $(el).contextMenu({
            menu: "TimeTableEventContextMenu",
            inSpeed: 0,
            outSpeed: 0
        }, TimeTableSlotCloseContextMenu)
    });

    function TimitableCellDblCl() {
        if ($(this).attr("class").indexOf("engaged") >= 0) {
            if ($(this).attr("cli_id") > 0) {
                OpenClientTab($(this).attr("cli_id"), $(this).attr("cli_name"), $(this).attr("inter_id"), -1)
            }
        } else {}
    }
    $("#tableTimitable tbody tr.DD td:not(.left) div").bind("dblclick", TimitableCellDblCl);
    $("#tableTimitable tbody tr.DC td:not(.left) div").bind("dblclick", TimitableCellDblCl);

    function TimitableTitleDblCl() {}
    $("#tableTimitable tbody tr.first td:not(.left) div").bind("dblclick", TimitableTitleDblCl);
    TimitableOptionsDraggable = ({
        start: function(ev, ui) {
            GoToTopOfPage(true);
            if (ev.altKey) {
                $("#tableTimitable tbody tr.DD td:not(.left) div.free").add("#tableTimitable tbody tr.DD td:not(.left) div.engagedX").add("#tableTimitable tbody tr.DD td:not(.left) div.engaged").hide();
                ui.helper.show();
                $("<ul>").attr("id", "planning_targets").addClass("drop_targets").addClass("NotSelect").hide().appendTo("body");
                $("#tableTimitable div[id^='horizontal_'].thead").each(function() {
                    var nbinters = $(this).attr("inters");
                    var myborder = "";
                    if (parseInt(nbinters) < 5) {
                        myborder = "background: -moz-linear-gradient(top, white, #CCFFCC);color:black"
                    } else {
                        if (parseInt(nbinters) > 7) {
                            myborder = "background: -moz-linear-gradient(top, white, #FFCCCC);color:black"
                        } else {
                            myborder = "background: -moz-linear-gradient(top, white, #FFFFCC);color:black"
                        }
                    }
                    var tc = $(this).attr("tc");
                    var eml_name = $(this).html();
                    var imgstyle = $(this).css("background-image").replace(/"/gi, "'");
                    $("#planning_targets").append('<li style="' + myborder + '"><div data-id="' + tc + '" data-name="' + eml_name + '" style="background-image: ' + imgstyle + ';background-position:center left;background-repeat:no-repeat;padding-left: 18px;"> <span style="font-weight:bold">' + $(this).html() + "</span> [" + nbinters + "]</div></li>")
                });
                $("<div>").attr("id", "planning_overlay").attr("style", "opacity: 0.7; background-color:#000; position:absolute; top:0; left:0; width:200%;height:200%; z-index:99997;").appendTo("body");
                $("#planning_targets li").droppable({
                    tolerance: "pointer",
                    accept: function(dr) {
                        var aID = dr.attr("id");
                        if (typeof aID !== "undefined" && aID !== false && aID.match("^horizontal_")) {
                            return false
                        } else {
                            if ($("#planning_targets").children().length == 0) {
                                return false
                            } else {
                                return true
                            }
                        }
                    },
                    over: function(event, ui) {
                        $(this).attr("style", $(this).attr("style") + ";border: 2px solid yellow")
                    },
                    out: function() {
                        $(this).attr("style", $(this).attr("style") + ";border: 2px solid black")
                    },
                    drop: function(event, ui) {
                        var techid = $(this).find("div").attr("data-id");
                        var techname = $(this).find("div").attr("data-name");
                        $.jGrowl("Simulation dÃ©placement inter " + ui.helper.attr("cli_name") + " (" + ui.helper.attr("inter_id") + ") <hr>de " + ui.helper.attr("tc_n") + " (" + ui.helper.attr("tc") + ")<hr>vers tech " + techname + " (" + techid + ")", {
                            life: 10000,
                            header: lang_stk_information,
                            theme: "jGrowlInfo"
                        });
                        var otarg = $("#tableTimitable div[id^='horizontal_'].thead[tc='" + techid + "']");
                        $("#tableTimitable tbody tr.DD td:not(.left) div.free").add("#tableTimitable tbody tr.DD td:not(.left) div.engagedX").add("#tableTimitable tbody tr.DD td:not(.left) div.engaged").show();
                        if (otarg.length) {
                            otarg.parent().show;
                            $("#tableTimitable_container").animate({
                                scrollLeft: otarg.position().left - $("#tableTimitable_container").offset().left
                            })
                        }
                    }
                });
                var itop = $(window).scrollTop();
                var iwidth = $("body").width() - ui.helper.width();
                var ileft = 0;
                $("#planning_targets").css("width", iwidth).css("left", ileft).css("top", itop).slideDown("fast")
            } else {
                Hide_Intervention_Search(true)
            }
        },
        stop: function(ev, ui) {
            $("#planning_targets").slideUp("fast", function() {
                $(this).remove()
            });
            $("#planning_overlay").fadeOut("fast", function() {
                $(this).remove()
            });
            $("#tableTimitable tbody tr.DD td:not(.left) div.free").add("#tableTimitable tbody tr.DD td:not(.left) div.engagedX").add("#tableTimitable tbody tr.DD td:not(.left) div.engaged").show()
        },
        zIndex: 99999,
        containment: "document",
        scroll: true,
        scrollSensitivity: 60,
        scrollSpeed: 400,
        delay: 10,
        cursorAt: {
            left: 0
        },
        revert: "invalid",
        helper: "clone"
    });
    if (PlanningDandD > 0) {
        $("#tableTimitable tbody tr.DD div.engaged").draggable(TimitableOptionsDraggable)
    }

    function dialog_confirm_callback(Mythis, MyDate, MyUiDrag, MyUiHelp, diff_date) {
        if (diff_date == undefined || diff_date == null || diff_date == false) {
            diff_date = 0
        }
        $("#tableTimitable tbody tr.DD > td").each(function(n, el) {
            $(el).removeClass("raisedtr")
        });
        var Moving = (MyUiDrag.parents("table").attr("id") == "tableTimitable");
        MyUiHelp.remove();
        var oldHtml = null;
        var draggedID = MyUiDrag.attr("inter_id");
        var cli_id = MyUiDrag.attr("cli_id");
        var tooltipText = MyUiDrag.get(0).tooltipText;
        var secs = MyDate;
        var duration = MyUiDrag.attr("m_dur");
        var tech_id = Mythis.attr("tc");
        var tech_name = un_technicien;
        if (MyUiDrag.attr("tc_n") != null && MyUiDrag.attr("tc_n").length > 1) {
            tech_name = MyUiDrag.attr("tc_n")
        }
        var id_real_agency = Mythis.attr("id_real_agency").split(",");
        if (id_real_agency.length == 0) {
            return false
        }
        id_real_agency_pipe = Mythis.attr("id_real_agency").replace(/,/g, "|");
        if (check_planning_on_drop) {
            var is_recommended_agenecy = false;
            var has_recommended_comptences = false;
            $.ajax({
                url: "planning/check_agency_competence",
                data: {
                    inside: "yes",
                    zip: MyUiDrag.attr("cli_zip"),
                    id_agency: id_real_agency_pipe,
                    id_inter: draggedID,
                    id_tech: tech_id,
                    competence: MyUiDrag.attr("comptence")
                },
                async: false,
                type: "POST",
                success: function(msg) {
                    chheck_result = msg.split("|");
                    if (chheck_result[0] != "undefined") {
                        recomanded_agency = chheck_result[0].split(":");
                        if (recomanded_agency[1] == "OK") {
                            is_recommended_agenecy = true
                        }
                    }
                    if (chheck_result[1] != "undefined") {
                        recommended_comptences = chheck_result[1].split(":");
                        if (recommended_comptences[1] == "OK") {
                            has_recommended_comptences = true
                        }
                    }
                    UNblockAllUI()
                }
            });
            print_message = false;
            message_to_print = "";
            if (!is_recommended_agenecy) {
                message_to_print = not_is_recommended_agenecy;
                print_message = true
            }
            if (!has_recommended_comptences) {
                message_to_print = not_is_recommended_comptences;
                print_message = true
            }
            if (!has_recommended_comptences && !is_recommended_agenecy) {
                message_to_print = not_is_recommended_both;
                print_message = true
            }
            if (print_message) {
                if (user_group_id == 3 || user_group_id == 1 || user_group_id == 1033 || user_group_id == 8109) {
                    if (!confirm(message_to_print + "\n" + would_you_like_to_contine)) {
                        return false
                    }
                } else {
                    $.MyDLG(message_to_print, dlg_button_ok, "", function() {}, function() {});
                    return false
                }
            }
        }
        if (tech_id != MyUiDrag.attr("tc") && MyUiDrag.attr("materiel_ok") == 2) {
            if (!MyUiDrag.attr("catch_me")) {
                var reg = new RegExp("tech_name", "g");
                if (user_group_id == 3 || user_group_id == 1) {
                    temp_dbs_warning_when_transfer_inter_to_backlog_and_piece_received = dbs_warning_when_transfer_inter_to_backlog_and_piece_received.replace(reg, tech_name);
                    if (!confirm(temp_dbs_warning_when_transfer_inter_to_backlog_and_piece_received)) {
                        return false
                    }
                } else {
                    temp_dbs_error_when_transfer_inter_to_backlog_and_piece_received = dbs_error_when_transfer_inter_to_backlog_and_piece_received.replace(reg, tech_name);
                    $.MyDLG(temp_dbs_error_when_transfer_inter_to_backlog_and_piece_received, dlg_button_ok, "", function() {}, function() {});
                    return false
                }
            }
        }
        if (Moving) {
            oldHtml = MyUiDrag.parent().html();
            var oldP = MyUiDrag.parent();
            MyUiDrag.remove();
            oldP.html('<div  class="free" style="background-color:#C8C8FE;border-color:#C8C8FE;">&nbsp;</div>');
            var oldChl = oldP.children();
            oldChl.droppable(TimitableOptionsDroppable);
            oldChl.contextMenu({
                menu: "TimeTablecontextMenu",
                inSpeed: 0,
                outSpeed: 0
            }, TimitableContextMenu);
            oldChl.bind("dblclick", TimitableCellDblCl);
            oldChl.bind("mouseover", function(e) {
                Mythis.addClass("raised")
            });
            oldChl.bind("mouseout", function(e) {
                Mythis.removeClass("raised")
            })
        } else {
            MyUiDrag.removeClass("todo");
            MyUiDrag.addClass("engaged");
            oldHtml = MyUiDrag.parent().html();
            MyUiDrag.parent().parent().remove()
        }
        var newP = Mythis.parent();
        Mythis.remove();
        newP.html(oldHtml);
        var newChl = newP.children();
        newChl.draggable(TimitableOptionsDraggable);
        newChl.contextMenu({
            menu: "TimeTablecontextMenu",
            inSpeed: 0,
            outSpeed: 0
        }, TimitableContextMenu);
        newChl.bind("dblclick", TimitableCellDblCl);
        newChl.attr("title", tooltipText);
        newChl.tooltip(ToolTipOptions);
        newChl.bind("mouseover", function(e) {
            Mythis.addClass("raised")
        });
        newChl.bind("mouseout", function(e) {
            Mythis.removeClass("raised")
        });
        if (Moving) {
            var id_old_real_agency = MyUiDrag.attr("id_real_agency").split(",");
            if (id_old_real_agency.length == 0) {
                return false
            }
            temp_odl_Planning_age_id = 100000;
            if (id_old_real_agency.length == 1) {
                temp_odl_Planning_age_id = id_old_real_agency[0]
            }
            InterventionManipulate(1, draggedID, temp_odl_Planning_age_id, id_real_agency, tech_id, cli_id, secs, duration, MyUiDrag.attr("tc"));
            nb_techs = $("#tableTimitable").attr("nb_techs");
            for (i = 0; i < nb_techs; i++) {
                if ($("#gmap_div" + i).attr("id_emp") == tech_id) {
                    if ($("#gmap_div" + i).attr("do_computing_km_tps") == 1) {
                        calc_trajet_from_planning($("#gmap_div" + i), i, 0)
                    }
                }
            }
        } else {
            InterventionManipulate(0, draggedID, 0, id_real_agency, tech_id, cli_id, secs, duration, -10);
            nb_techs = $("#tableTimitable").attr("nb_techs");
            for (i = 0; i < nb_techs; i++) {
                if ($("#gmap_div" + i).attr("id_emp") == tech_id) {
                    if ($("#gmap_div" + i).attr("do_computing_km_tps") == 1) {
                        calc_trajet_from_planning($("#gmap_div" + i), i, 0)
                    }
                }
            }
        }
        newP.parents("tr").children("td").each(function(n, el) {
            $(el).removeClass("raisedtr")
        });
        tabs_delimiter_height();
        var interHtml = MyUiDrag.get(0).outerHTML;
        var interID = MyUiDrag.get(0).attributes.inter_id.nodeValue;
        if (diff_date > 0) {
            $.ajax({
                url: "interventions/updategarantie",
                type: "POST",
                data: {
                    idIntervention: interID
                },
                dataType: "JSON",
                success: function(data) {
                    if (data.result == 1) {
                        var response = confirm("le  RDV  n'Ã©tait pas honorÃ©?");
                        if (response == true) {
                            $.ajax({
                                url: "anomalies/replanification_anomalie",
                                type: "POST",
                                data: {
                                    inter_id: interID,
                                    anomalie_code: "715",
                                    anomalie_statut: "1"
                                },
                                dataType: "JSON",
                                success: function(data) {
                                    if (data.result == 1) {
                                        return true
                                    } else {
                                        return false
                                    }
                                },
                                error: function(xhr, ajaxOptions, thrownError) {
                                    console.log(xhr);
                                    console.log(ajaxOptions);
                                    console.log(thrownError)
                                }
                            })
                        } else {
                            return false
                        }
                    } else {
                        return false
                    }
                },
                error: function(xhr, ajaxOptions, thrownError) {
                    console.log(xhr);
                    console.log(ajaxOptions);
                    console.log(thrownError)
                }
            })
        }
    }
    var compteurHover = 0;
    var cInter = false;
    var dI = "";
    var di_original = "";
    var diff_dates = 0;

    function parseDate(str) {
        var mdy = str.split("/");
        return new Date(mdy[2], mdy[0] - 1, mdy[1])
    }

    function datediff(first, second) {
        return Math.round((second - first) / (1000 * 60 * 60 * 24))
    }
    TimitableOptionsDroppable = ({
        hoverClass: "droppable-hover",
        tolerance: "pointer",
        accept: function(dr) {
            var aID = dr.attr("id");
            if (typeof aID !== "undefined" && aID !== false && aID.match("^horizontal_")) {
                return false
            } else {
                return true
            }
        },
        over: function(ev, ui) {
            $(this).parents("tr > td").each(function(n, el) {
                $(el).addClass("raisedtr")
            });
            $(this).prepend("<span id='tmp_time'>" + $(this).parents("tr").find("td:first > div.time").html() + "</span>");
            if (compteurHover == 0) {
                var interID = ui.draggable.get(0).attributes.inter_id.nodeValue;
                $.ajax({
                    type: "POST",
                    async: false,
                    url: "/interventions/get_date_inter_by_id",
                    data: "id=" + interID,
                    success: function(response) {
                        var res = $.parseJSON(response);
                        if (res.result == 1 && res.data != null) {
                            cInter = res.res;
                            var arr = res.data.split("-");
                            di_original = res.data
                        } else {
                            console.log("NOK over")
                        }
                    }
                });
                compteurHover++
            }
        },
        out: function(ev, ui) {
            $(this).parents("tr > td").each(function(n, el) {
                $(el).removeClass("raisedtr")
            });
            $(this).find("#tmp_time").remove()
        },
        drop: function(ev, ui) {
            var partenaire = $(ui.draggable).attr("partner_id");
            var Thethis = $(this);
            var interToDrag = $(ui.draggable).attr("inter_id");
            var interDate = $(this).parent().parent().attr("secs");
            var MyUiD = $(ui.draggable);
            var MyUiH = $(ui.helper);
            var dt = eval(interDate * 1000);
            var myDate = new Date(dt);
            var start = new Date();
            var myDate_format = formatDate_js(myDate);
            var start_format = formatDate_js(start);
            if (regional_version == "FR01" && myDate_format < start_format) {
                alert("Vous ne pouvez pas planifier cette intervention dans le passÃ©");
                return false
            }
            var str = myDate.toLocaleString();
            var tab = str.split(" ");
            var arr = tab[0].split("/");
            if (partenaire == "393" && di_original != "") {
                var arrr = di_original.split("-");
                diff_dates = datediff(new Date(arrr[0], arrr[1] - 1, arrr[2]), new Date(arr[2], arr[1] - 1, arr[0]))
            }
            if (regional_version == "FR01" && (partenaire == 226 || partenaire == 227 || partenaire == 228 || partenaire == 257 || partenaire == 1002 || partenaire == 1003 || partenaire == 1004 || partenaire == 1005 || partenaire == 1006 || partenaire == 1007 || partenaire == 1008 || partenaire == 704 || partenaire == 250 || partenaire == 757)) {
                $.ajax({
                    type: "POST",
                    url: "planning/testdrop",
                    data: "id_intervention=" + interToDrag + "&case=verifFirst",
                    success: function(msg) {
                        $("#descriptionC").val(" ");
                        $("#descriptionC2").val(" ");
                        if (msg == 1) {
                            alert("L'intervention a dÃ©jÃ  Ã©tÃ© confirmÃ©e, si vous la modifiez, une information de replanification sera transmise Ã  Bytel");
                            $("#dialog1").data({
                                interDate: interDate,
                                id_intervention: interToDrag,
                                Thethis: Thethis,
                                MyUiD: MyUiD,
                                MyUiH: MyUiH
                            }).dialog("open");
                            $("#dialog1").dialog({
                                bgiframe: false,
                                resizable: false,
                                draggable: false,
                                closeOnEscape: false,
                                height: 140,
                                modal: true,
                                overlay: {
                                    backgroundColor: "#000",
                                    opacity: 0.5
                                },
                                buttons: {
                                    "Oui : l'intervention ne devra plus Ãªtre bougÃ©e": function() {
                                        $("#dialog2").data({
                                            interDate: $(this).data("interDate"),
                                            id_intervention: $(this).data("id_intervention"),
                                            Thethis: $(this).data("Thethis"),
                                            MyUiD: $(this).data("MyUiD"),
                                            MyUiH: $(this).data("MyUiH")
                                        }).dialog("open");
                                        $("#dialog2").dialog({
                                            bgiframe: true,
                                            height: 500,
                                            modal: true,
                                            resizable: false,
                                            draggable: false,
                                            closeOnEscape: false,
                                            buttons: {
                                                Suivant: function() {
                                                    $.ajax({
                                                        type: "POST",
                                                        url: "planning/testdrop",
                                                        data: "id_intervention=" + $(this).data("id_intervention") + "&interDate=" + $(this).data("interDate") + "&description=" + $("#descriptionC2").val(),
                                                        success: function(msg) {
                                                            alert(msg)
                                                        }
                                                    });
                                                    dialog_confirm_callback($(this).data("Thethis"), $(this).data("interDate"), $(this).data("MyUiD"), $(this).data("MyUiH"));
                                                    $(this).dialog("close")
                                                }
                                            },
                                        });
                                        $(this).dialog("close")
                                    },
                                    "Non : vous pourrez continuer les planifications": function() {
                                        $.ajax({
                                            type: "POST",
                                            url: "planning/testdrop",
                                            data: "id_intervention=" + $(this).data("id_intervention") + "&interDate=" + $(this).data("interDate") + "&case=noConfirm2",
                                            success: function(msg) {}
                                        });
                                        dialog_confirm_callback($(this).data("Thethis"), $(this).data("interDate"), $(this).data("MyUiD"), $(this).data("MyUiH"));
                                        $(this).dialog("close")
                                    }
                                }
                            })
                        } else {
                            $("#dialog").data({
                                interDate: interDate,
                                id_intervention: interToDrag,
                                Thethis: Thethis,
                                MyUiD: MyUiD,
                                MyUiH: MyUiH
                            }).dialog("open");
                            $("#dialog").dialog({
                                bgiframe: false,
                                resizable: false,
                                draggable: false,
                                closeOnEscape: false,
                                height: 150,
                                modal: true,
                                overlay: {
                                    backgroundColor: "#000",
                                    opacity: 0.5
                                },
                                buttons: {
                                    "Oui : l'intervention ne devra plus Ãªtre bougÃ©e": function() {
                                        $("#dialog0").data({
                                            interDate: $(this).data("interDate"),
                                            id_intervention: $(this).data("id_intervention"),
                                            Thethis: $(this).data("Thethis"),
                                            MyUiD: $(this).data("MyUiD"),
                                            MyUiH: $(this).data("MyUiH")
                                        }).dialog("open");
                                        $("#dialog0").dialog({
                                            bgiframe: true,
                                            height: 500,
                                            modal: true,
                                            resizable: false,
                                            draggable: false,
                                            closeOnEscape: false,
                                            buttons: {
                                                Suivant: function() {
                                                    $.ajax({
                                                        type: "POST",
                                                        url: "planning/testdrop",
                                                        data: "id_intervention=" + $(this).data("id_intervention") + "&interDate=" + $(this).data("interDate") + "&description=" + $("#descriptionC").val(),
                                                        success: function(msg) {
                                                            alert(msg)
                                                        }
                                                    });
                                                    dialog_confirm_callback($(this).data("Thethis"), $(this).data("interDate"), $(this).data("MyUiD"), $(this).data("MyUiH"));
                                                    $(this).dialog("close")
                                                }
                                            },
                                        });
                                        $(this).dialog("close")
                                    },
                                    "Non : vous pourrez continuer les planifications": function() {
                                        $.ajax({
                                            type: "POST",
                                            url: "planning/testdrop",
                                            data: "id_intervention=" + $(this).data("id_intervention") + "&interDate=" + $(this).data("interDate") + "&case=noConfirm",
                                            success: function(msg) {}
                                        });
                                        dialog_confirm_callback($(this).data("Thethis"), $(this).data("interDate"), $(this).data("MyUiD"), $(this).data("MyUiH"));
                                        $(this).dialog("close")
                                    }
                                }
                            })
                        }
                    }
                })
            } else {
                if (diff_dates > 0 && partenaire == "393") {
                    dialog_confirm_callback(Thethis, interDate, MyUiD, MyUiH, diff_dates)
                } else {
                    dialog_confirm_callback(Thethis, interDate, MyUiD, MyUiH)
                }
            }
            if (regional_version == "BN01") {
                var syncro_inter_id = $(ui.draggable).attr("inter_id");
                var syncro_client_id = $(ui.draggable).attr("cli_id");
                $.ajax({
                    type: "POST",
                    url: "interventions/syncrosopmiddlecalendar",
                    data: {
                        inter_id: syncro_inter_id,
                        method: "PUT"
                    },
                    dataType: "JSON",
                    success: function(data) {
                        console.log(data);
                        console.log(cInter);
                        console.log(data.http_code);
                        if (data.http_code == 409) {
                            if (cInter != false) {
                                $.ajax({
                                    type: "POST",
                                    url: "/interventions/cancelDropInter",
                                    data: {
                                        id: cInter.ID,
                                        id_tech: cInter.ID_TECH,
                                        date_planif: cInter.DATE_PLANIF,
                                        heure_debut: cInter.HEURE_DEBUT,
                                        heure_fin: cInter.HEURE_FIN
                                    },
                                    dataType: "JSON",
                                    success: function(response) {
                                        if (response.result == 1) {
                                            alert("rescheduling not allowed")
                                        } else {
                                            console.log(response.message);
                                            alert("rescheduling not allowed (error)")
                                        }
                                        LoadTimeTables(1, cInter.ID)
                                    }
                                })
                            } else {
                                LoadTimeTables(1, cInter.ID)
                            }
                        } else {
                            if (data.http_code == 406) {
                                alert(data.result)
                            } else {
                                if (data.http_code != 200) {
                                    alert("an error has been occurred while syncing the intervention with SOP ( Error : " + data.http_code + " )")
                                }
                            }
                        }
                    },
                    error: function(xhr, ajaxOptions, thrownError) {
                        console.log(xhr);
                        console.log(ajaxOptions);
                        console.log(thrownError)
                    }
                })
            }
        }
    });
    if (PlanningDandD > 0) {
        $("#tableTimitable tbody tr.DD td:not(.left) div.free").droppable(TimitableOptionsDroppable);
        $("#tableTimitable tbody tr.DD td:not(.left) div.engagedX").droppable(TimitableOptionsDroppable);
        $("#tableTimitable tbody tr.DD td:not(.left) div.engaged").droppable(TimitableOptionsDroppable)
    }
}

function formatDate_js(c) {
    var g = new Date(c),
        f = "" + (g.getMonth() + 1),
        b = "" + g.getDate(),
        e = g.getFullYear();
    if (f.length < 2) {
        f = "0" + f
    }
    if (b.length < 2) {
        b = "0" + b
    }
    return [e, f, b].join("-")
}

function LoadTimeTables(c, b) {
    var d = $("#right_top_level_tabs").find("input[name=Time_table_tech_name]").val();
    if (!((Planning_date_is_set) && (Planning_age_id >= 0))) {
        blockAllUI();
        if (PlanningDandD > 0) {
            $("#tableTimitable tbody tr.DD td:not(.left) div.free").droppable("destroy");
            $("#tableTimitable tbody tr.DD td:not(.left) div.engagedX").droppable("destroy");
            $("#tableTimitable tbody tr.DD div.engaged").draggable("destroy")
        }
        $("#TimeTableContainer").html('<div class="DivCenter ShowResult_pages">' + select_agency_date + "</div>");
        tabs_delimiter_height();
        if (Planning_age_id >= 0) {
            GoToTopOfPage()
        }
        UNblockAllUI();
        return
    }
    blockAllUI();
    if (PlanningDandD > 0) {
        $("#tableTimitable tbody tr.DD td:not(.left) div.free").droppable("destroy");
        $("#tableTimitable tbody tr.DD td:not(.left) div.engagedX").droppable("destroy");
        $("#tableTimitable tbody tr.DD div.engaged").draggable("destroy")
    }
    agence_virtuelle = false;
    if (Planning_age_id == 9999) {
        agence_virtuelle = true
    }
    if (agence_virtuelle) {
        UNblockAllUI();
        id_inter = $("#tableTimitable").attr("id_inter_pour_agence_virtuelle");
        id_inter_pour_agence_virtuelle = id_inter;
        easting = $("#tableTimitable").attr("easting");
        northing = $("#tableTimitable").attr("northing");
        recommended_tech(id_inter, 1, "", "", northing, easting);
        return
    }
    $("#TimeTableContainer").load("planning/planning_timetables", {
        inside: "yes",
        planning_date: Planning_date,
        planning_age_id: Planning_age_id,
        planning_soc_id: Planning_soc_id,
        techName: d
    }, function(g, e, f) {
        if (chkRes($("#AllAgenciesTree"), e, g)) {}
        tabs_delimiter_height();
        if (c > 0) {
            GoToTopOfPage()
        }
        if (typeof b != "undefined" && parseInt(b) > 0) {
            var h = $("#tableTimitable > tbody > tr > td > div[inter_id=" + b + "]");
            if (h.length) {
                h.parent().show;
                $("#tableTimitable_container").animate({
                    scrollLeft: h.position().left - $("#tableTimitable_container").offset().left - 40
                }, function() {
                    h.animate({
                        opacity: 0
                    }).animate({
                        opacity: 1
                    }, {
                        duration: "slow"
                    }).animate({
                        opacity: 0
                    }).animate({
                        opacity: 1
                    }, {
                        duration: "slow"
                    })
                })
            }
        }
        UNblockAllUI()
    })
}

function LoadVirtualTimeTables(b) {
    if (PlanningDandD > 0) {
        $("#tableTimitable tbody tr.DD td:not(.left) div.free").droppable("destroy");
        $("#tableTimitable tbody tr.DD td:not(.left) div.engagedX").droppable("destroy");
        $("#tableTimitable tbody tr.DD div.engaged").draggable("destroy")
    }
}

function RefreshInterventionIfItsOpened(f, d) {
    var b = $("#client_" + f + "_intervention_" + d);
    var c = $("#client_" + f + "_intervention_" + d + "nav");
    if ((b != null) && (c != null) && $(b).length && $(c).length) {
        var e = $(b).find("input[name=arch]").val();
        blockAllUI();
        $(c).html(message_loading);
        $(b).load("interventions/get_intervention", {
            inside: "yes",
            client_id: f,
            sub_id: d,
            arch: e
        }, function(m, g, h) {
            chkRes($(b), g, m);
            client_details_switch(this, "#client_" + f + "_intervention_" + d);
            UNblockAllUI()
        });
        UNblockAllUI()
    }
}

function InterventionManipulate(e, m, g, h, n, c, f, b, d) {
    if (h.length > 0) {
        age_id = h[0]
    } else {
        age_id = Planning_age_id
    }
    agence_virtuelle = false;
    if (Planning_age_id == 9999) {
        agence_virtuelle = true
    }
    blockAllUI();
    $("#dummy_container").load("planning/planning_manipulate", {
        inside: "yes",
        mode: e,
        inter_id: m,
        age_id: age_id,
        tech_id: n,
        secs: f,
        duration: b,
        old_id_tech: d
    }, function(q, o, p) {
        chkRes($("#dummy_container"), o, q);
        i;
        LoadTimeTables(1, m);
        RefreshInterventionIfItsOpened(c, m);
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function SCA(b, c) {
    if (Tree_el_old != null) {
        $(Tree_el_old).find(">span").removeClass("selected")
    }
    Planning_age_id = $(b).attr("a_id");
    Planning_age_name = $(b).text();
    $(".temp_text_messageB").html('<span class="debug_info">' + Planning_age_id + "</span> " + Planning_age_name);
    Tree_el_old = b;
    $(Tree_el_old).find(">span").addClass("selected");
    if (TopRightTabs) {
        TopRightTabs.tabs("select", "#RPlanningTab")
    }
    LoadTimeTables(1, c);
    return false
}

function int_f(c) {
    if ($(c).attr("my_cls") == 1) {
        return
    }
    $(c).removeAttr("value");
    $(c).attr("my_cls", "1");
    var b = $("#get_interventions_for_planning").find("input[name=valid]");
    b.attr("value", b.attr("value") + ";" + $(c).attr("name") + ";")
}

function Clear_Get_Interventions_Form() {
    $("#get_interventions_for_planning").resetForm();
    $("#get_interventions_for_planning").find("[my_cls]").each(function(b, c) {
        $(c).attr("my_cls", "0")
    });
    $("#get_interventions_for_planning").find("input[name=valid]").removeAttr("value");
    Date_Filter_Change($("#get_interventions_for_planning").find("[name=int_src_date_filter]"))
}

function Hide_Intervention_Search(b) {
    if ($("#always_visible:checked").length) {
        return false
    }
    if (b) {
        $("#LInterventionsContainer > div:first:visible").hide(function() {
            $("<button id='newintersearch' class='ui-widget-header ui-corner-all' style='width: 100%; margin:10px 0px; cursor: pointer'>" + lang_new_search + "</button>").insertBefore("#LInterventionsContainer > div:first").bind("click", function() {
                $(this).fadeOut("slow", function() {
                    $(this).remove;
                    $("#LInterventionsContainer > div:first").slideToggle("slow")
                })
            })
        })
    } else {
        $("#LInterventionsContainer > div:first:visible").slideToggle("slow", function() {
            $("<button id='newintersearch' class='ui-widget-header ui-corner-all' style='width: 100%; margin:10px 0px; cursor: pointer'>" + lang_new_search + "</button>").insertBefore("#LInterventionsContainer > div:first").bind("click", function() {
                $(this).fadeOut("slow", function() {
                    $(this).remove;
                    $("#LInterventionsContainer > div:first").slideToggle("slow")
                })
            });
            GoToTopOfPage()
        })
    }
}

function SubmitGetInterventions() {
    var b = {
        target: "#InterventionContainer",
        url: "planning/get_interventions_list",
        type: "post",
        beforeSubmit: function(e, d, c) {
            blockAllUI();
            $("#tableInetvention tbody tr.DD div").draggable("destroy");
            $("#tableInetvention tbody tr.first td div.canceled").droppable("destroy")
        },
        error: function() {
            chkRes($("#InterventionContainer"), "", "");
            tabs_delimiter_height();
            UNblockAllUI()
        },
        success: function(d, c) {
            Hide_Intervention_Search();
            chkRes($("#InterventionContainer"), c, d);
            tabs_delimiter_height();
            UNblockAllUI()
        }
    };
    $("#get_interventions_for_planning").ajaxSubmit(b)
}

function Date_Filter_Change(h) {
    var e = $(h).children("option:eq(" + $(h).get(0).selectedIndex + ")");
    if ($(e).length > 0) {
        var g = e.attr("value");
        var f = $(h).parents("form");
        var d = $(f).find("input[name=int_src_from_date]");
        var c = $(f).find("input[name=int_src_to_date]");
        if (g < 0) {
            Set_Disabled(d);
            Set_Disabled(c)
        } else {
            SetSelectedByOptionAndEnable(d, "", true);
            SetSelectedByOptionAndEnable(c, "", true)
        }
    }
}

function Inter_State_Src_Change(e) {
    var c = $(e).children("option:eq(" + $(e).get(0).selectedIndex + ")");
    if ($(c).length > 0) {
        var d = c.attr("value");
        var b = $(e).parents("form").find("input[name=include_canceled]");
        if (d == -777) {
            Set_Disabled(b)
        } else {
            SetSelectedByOptionAndEnable(b, "", true)
        }
    }
}

function init_tableInetvention() {
    blockAllUI();
    $("#get_interventions_for_planning").find("[name=int_src_inter_state]").append($("#intervention_states_list_any").html());
    $("#get_interventions_for_planning").find("[name=int_src_inter_state]").bind("change", function() {
        Inter_State_Src_Change(this)
    });
    if (user_is_partner < 0) {
        $("#get_interventions_for_planning").find("[name=int_src_client_partner]").append($("#partners_list_any").html());
        blockAllUI();
        var c = $("#get_interventions_for_planning").find("[name=int_src_for_agency]");
        c.load("lists/int_src_for_agency/" + default_language + "/0/0/0/0/0/0/dummy.html", function(f, d, e) {
            chkRes(c, d, f);
            UNblockAllUI()
        })
    }
    blockAllUI();
    var b = $("#get_interventions_for_planning").find("[name=int_src_order_by]");
    b.load("lists/int_src_order_by/" + default_language + "/0/0/0/0/0/0/dummy.html", function(f, d, e) {
        chkRes(b, d, f);
        UNblockAllUI()
    });
    blockAllUI();
    var b = $("#get_interventions_for_planning").find("[name=int_src_date_filter]");
    b.load("lists/date_filter/" + default_language + "/0/0/0/0/0/0/dummy.html", function(f, d, e) {
        chkRes(b, d, f);
        Date_Filter_Change(b);
        UNblockAllUI()
    });
    b.bind("change", function() {
        Date_Filter_Change(this)
    });
    $("#get_interventions_for_planning").find("[name=int_src_from_date]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#get_interventions_for_planning").find("[name=int_src_to_date]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#get_interventions_for_planning").submit(function(d) {
        d.stopImmediatePropagation();
        SubmitGetInterventions();
        return false
    });
    $(".ShowToolTipC").tooltip(ToolTipOptions);
    $("#InterventionContainer").load("planning/get_interventions_list", {
        inside: "yes",
        do_not_sql: "1"
    }, function(f, d, e) {
        if (chkRes($("#InterventionContainer"), d, f)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    });
    UNblockAllUI()
}

function OpenClientTab(g, f, c, b) {
    var d = "#client_id_" + g;
    if (!$(d).length) {
        if (TopRightTabs) {
            TopRightTabs.tabs("add", d, f)
        }
        if ($(d).length) {
            blockAllUI();
            CurrentClientID = g;
            $(d).attr("client_id", g);
            $(d).attr("client_name", f)
        }
        $(d).load("clients/get_client_container", {
            inside: "yes",
            client_id: g,
            intervention_id: c,
            wcall_id: b
        }, function(n, h, m) {
            chkRes($(d), h, n);
            UNblockAllUI()
        })
    } else {
        if (c > 0) {
            var e = $("#client_" + g + "_intervention_" + c + "nav");
            client_details_switch(e, "#client_" + g + "_intervention_" + c);
            my_LCurrentInterID = -1;
            if (b == -2) {
                e = $("#client_id_" + g).find("span.client_details_buttons").get(0);
                client_details_new_call(e);
                my_LCurrentCallID = -1
            }
        } else {
            var e = $("#client_" + g + "_details_" + g + "nav");
            client_details_switch(e, "#client_" + g + "_details_" + g)
        }
    }
    if (TopRightTabs) {
        TopRightTabs.tabs("select", d)
    }
}

function init_tableInetvention_List() {
    $(".ShowToolTipI").tooltip(ToolTipOptionsWithTrack);
    $("#tableInetvention tbody tr.DD div").bind("mouseover", function(c) {
        $(this).addClass("raised")
    });
    $("#tableInetvention tbody tr.DD div").bind("mouseout", function(c) {
        $(this).removeClass("raised")
    });

    function b() {
        if ($(this).attr("cli_id") > 0) {
            GoToTopOfPage();
            OpenClientTab($(this).attr("cli_id"), $(this).attr("cli_name"), $(this).attr("inter_id"), -1)
        }
    }
    $("#tableInetvention tbody tr.DD div").contextMenu({
        menu: "InterListTablecontextMenu",
        inSpeed: 0,
        outSpeed: 0
    }, InterventionListContextMenu);
    $("#tableInetvention tbody tr.DC div").contextMenu({
        menu: "InterListTablecontextMenu",
        inSpeed: 0,
        outSpeed: 0
    }, InterventionListContextMenu);
    $("#AllAgenciesTree li").contextMenu({
        menu: "NotificationContextMenu",
        inSpeed: 0,
        outSpeed: 0
    }, NotificationContextMenu);
    $("#tableInetvention tbody tr.DD div").bind("dblclick", b);
    $("#tableInetvention tbody tr.DC div").bind("dblclick", b);
    tableInetventionOptionsDraggable = ({
        start: function(f, g) {
            GoToTopOfPage(true);
            if (f.altKey) {
                $("#tableTimitable tbody tr.DD td:not(.left) div.free").add("#tableTimitable tbody tr.DD td:not(.left) div.engagedX").add("#tableTimitable tbody tr.DD td:not(.left) div.engaged").hide();
                g.helper.show();
                $("<ul>").attr("id", "planning_targets").addClass("drop_targets").addClass("NotSelect").hide().appendTo("body");
                $("#tableTimitable div[id^='horizontal_'].thead").each(function() {
                    var p = $(this).attr("inters");
                    var n = "";
                    if (parseInt(p) < 5) {
                        n = "background: -moz-linear-gradient(top, white, #CCFFCC);color:black"
                    } else {
                        if (parseInt(p) > 7) {
                            n = "background: -moz-linear-gradient(top, white, #FFCCCC);color:black"
                        } else {
                            n = "background: -moz-linear-gradient(top, white, #FFFFCC);color:black"
                        }
                    }
                    var m = $(this).attr("tc");
                    var h = $(this).html();
                    var o = $(this).css("background-image").replace(/"/gi, "'");
                    $("#planning_targets").append('<li style="' + n + '"><div data-id="' + m + '" data-name="' + h + '" style="background-image: ' + o + ';background-position:center left;background-repeat:no-repeat;padding-left: 18px;"> <span style="font-weight:bold">' + $(this).html() + "</span> [" + p + "]</div></li>")
                });
                $("<div>").attr("id", "planning_overlay").attr("style", "opacity: 0.7; background-color:#000; position:absolute; top:0; left:0; width:200%;height:200%; z-index:99997;").appendTo("body");
                $("#planning_targets li").droppable({
                    tolerance: "pointer",
                    accept: function(m) {
                        var h = m.attr("id");
                        if (typeof h !== "undefined" && h !== false && h.match("^horizontal_")) {
                            return false
                        } else {
                            if ($("#planning_targets").children().length == 0) {
                                return false
                            } else {
                                return true
                            }
                        }
                    },
                    over: function(h, m) {
                        $(this).attr("style", $(this).attr("style") + ";border: 2px solid yellow")
                    },
                    out: function() {
                        $(this).attr("style", $(this).attr("style") + ";border: 2px solid black")
                    },
                    drop: function(m, n) {
                        var o = $(this).find("div").attr("data-id");
                        var h = $(this).find("div").attr("data-name");
                        $.jGrowl("Simulation dÃ©placement inter " + n.helper.attr("cli_name") + " (" + n.helper.attr("inter_id") + ") <hr>de " + n.helper.attr("tc_n") + " (" + n.helper.attr("tc") + ")<hr>vers tech " + h + " (" + o + ")", {
                            life: 10000,
                            header: lang_stk_information,
                            theme: "jGrowlInfo"
                        });
                        var p = $("#tableTimitable div[id^='horizontal_'].thead[tc='" + o + "']");
                        $("#tableTimitable tbody tr.DD td:not(.left) div.free").add("#tableTimitable tbody tr.DD td:not(.left) div.engagedX").add("#tableTimitable tbody tr.DD td:not(.left) div.engaged").show();
                        p.parent().show;
                        $("#tableTimitable_container").animate({
                            scrollLeft: p.position().left - $("#tableTimitable_container").offset().left
                        })
                    }
                });
                var e = $(window).scrollTop();
                var d = $("body").width() - g.helper.width();
                var c = 0;
                $("#planning_targets").css("width", d).css("left", c).css("top", e).slideDown("fast")
            }
            if ($(this).width > 200) {
                $(this).width = 200
            }
        },
        stop: function(c, d) {
            $("#planning_targets").slideUp("fast", function() {
                $(this).remove()
            });
            $("#planning_overlay").fadeOut("fast", function() {
                $(this).remove()
            });
            $("#tableTimitable tbody tr.DD td:not(.left) div.free").add("#tableTimitable tbody tr.DD td:not(.left) div.engagedX").add("#tableTimitable tbody tr.DD td:not(.left) div.engaged").show()
        },
        zIndex: 99999,
        containment: "document",
        appendTo: "#tableTimitable",
        scroll: true,
        scrollSensitivity: 60,
        scrollSpeed: 400,
        delay: 10,
        cursorAt: {
            left: 0
        },
        revert: "invalid",
        helper: "clone"
    });
    if (PlanningDandD > 0) {
        $("#tableInetvention tbody tr.DD div").draggable(tableInetventionOptionsDraggable);
        $("#tableInetvention tbody tr.first td div.canceled").droppable({
            hoverClass: "droppable-hover",
            tolerance: "pointer",
            accept: function(c) {
                if ($(c).parents("table").attr("id") == "tableTimitable") {
                    return true
                }
                return false
            },
            drop: function(r, q) {
                $(q.helper).remove();
                $("#tableTimitable tbody tr.DD").children("td").each(function(w, v) {
                    $(v).removeClass("raisedtr")
                });
                var m = null;
                var u = $(q.draggable).attr("inter_id");
                var g = $(q.draggable).attr("cli_id");
                var o = o = $(q.draggable).get(0).tooltipText;
                m = $(q.draggable).parent().html();
                var h = un_technicien;
                if ($(q.draggable).attr("tc_n") != null) {
                    h = $(q.draggable).attr("tc_n")
                }
                if ($(q.draggable).attr("materiel_ok") == 2) {
                    var c = new RegExp("tech_name", "g");
                    if (user_group_id == 3 || user_group_id == 1) {
                        temp_dbs_warning_when_transfer_inter_to_backlog_and_piece_received = dbs_warning_when_transfer_inter_to_backlog_and_piece_received.replace(c, h);
                        if (!confirm(temp_dbs_warning_when_transfer_inter_to_backlog_and_piece_received)) {
                            return false
                        }
                    } else {
                        temp_dbs_error_when_transfer_inter_to_backlog_and_piece_received = dbs_error_when_transfer_inter_to_backlog_and_piece_received.replace(c, h);
                        $.MyDLG(temp_dbs_error_when_transfer_inter_to_backlog_and_piece_received, dlg_button_ok, "", function() {}, function() {});
                        return false
                    }
                }
                var e = $(q.draggable).parent();
                $(q.draggable).remove();
                e.html('<div class="free" style="background-color:#C8C8FE;border-color:#C8C8FE;">&nbsp;</div>');
                var d = e.children();
                d.droppable(TimitableOptionsDroppable);
                d.contextMenu({
                    menu: "InterListTablecontextMenu",
                    inSpeed: 0,
                    outSpeed: 0
                }, InterventionListContextMenu);
                d.bind("dblclick", b);
                d.bind("mouseover", function(v) {
                    $(this).addClass("raised")
                });
                d.bind("mouseout", function(v) {
                    $(this).removeClass("raised")
                });
                var f = $(this).parent().parent().after("<tr><td></td></tr>").next().children("td");
                f.html(m);
                var p = f.children();
                p.removeClass("engaged");
                p.attr("catch_me", "true");
                p.addClass("todo");
                p.draggable(tableInetventionOptionsDraggable);
                p.contextMenu({
                    menu: "InterListTablecontextMenu",
                    inSpeed: 0,
                    outSpeed: 0
                }, InterventionListContextMenu);
                p.bind("dblclick", b);
                p.attr("title", o);
                p.tooltip(ToolTipOptions);
                p.bind("mouseover", function(v) {
                    $(this).addClass("raised")
                });
                p.bind("mouseout", function(v) {
                    $(this).removeClass("raised")
                });
                var n = $(q.draggable).attr("id_real_agency").split(",");
                if (n.length == 0) {
                    return false
                }
                temp_odl_Planning_age_id = 100000;
                if (n.length == 1) {
                    temp_odl_Planning_age_id = n[0]
                }
                InterventionManipulate(2, u, temp_odl_Planning_age_id, 0, 0, g, 0, 0, $(q.draggable).attr("tc"))
            }
        })
    }
}

function Client_Search_View_pageselectCallback(b, c) {
    $("#clients_search_form").find("[name=from]").val(b);
    SubmitClientSearch();
    return false
}

function init_client_searc_results(c, b, m, h, g, f, e) {
    $("#Client_Search_pagination").pagination(c, {
        current_page: b,
        items_per_page: m,
        num_edge_entries: h,
        num_display_entries: g,
        next_text: f,
        prev_text: e,
        link_to: "#",
        callback: Client_Search_View_pageselectCallback
    });
    $("#Client_Search_Res_Table").columnSizing({
        minWidth: 32,
        viewResize: false,
        tableWidthFixed: false,
        fadeOut: false,
        cookies: false,
        cssHandler: {
            position: "relative",
            width: "3px",
            backgroundColor: "#5C7B99",
            borderRight: "none",
            borderLeft: "none",
            height: "16px",
            cursor: "e-resize"
        },
        cssDragLine: {
            borderRight: "1px dashed #000000",
            cursor: "e-resize"
        },
        cssDragArea: {
            border: "1px dashed #000000",
            cursor: "e-resize",
            backgroundColor: "transparent"
        },
        title: ""
    });
    $("table.jquery_columnSizing tbody tr:odd").addClass("odd");
    $("table.jquery_columnSizing tbody tr.DD").bind("mouseover", function(n) {
        $(this).addClass("raised")
    });
    $("table.jquery_columnSizing tbody tr.DD").bind("mouseout", function(n) {
        $(this).removeClass("raised")
    });
    $("table.jquery_columnSizing tbody tr td").each(function(p, o) {
        $(o).disableSelection()
    });

    function d() {
        var o = $(this).attr("clid");
        var n = $(this).attr("my_clnm");
        if (o > 0) {
            OpenClientTab(o, n, -1, -1)
        }
    }
    $("table.jquery_columnSizing tbody tr.DD").bind("click tap", d);
    $("table.jquery_columnSizing tbody tr.DC").bind("click tap", d)
}

function Clear_Client_Search_Form() {
    $("#clients_search_form").resetForm();
    OrdSel($("#clients_search_form").find("[name=order_by1]").get(0))
}

function SubmitClientSearch() {
    if ($("#Client_Search_Res_Table").get(0)) {
        var b = $("#Client_Search_Res_Table").get(0).style.width;
        var c = $("#Client_Search_Res_Table").children("tbody").children("tr.first").children("td");
        c.each(function(e, f) {
            b = b + $(f).get(0).style.width
        });
        $("#clients_search_form").find("[name=cols_w]").val(b)
    }
    var d = {
        target: "#clients_search_result",
        url: "clients/search",
        type: "post",
        beforeSubmit: function(o, g, e) {
            var f = $("#clients_search_form").find("[name=client_partner]").get(0);
            var m = $(f).children("option:eq(" + $(f).get(0).selectedIndex + ")").attr("value");
            var f = $("#clients_search_form").find("[name=particular_enterprise]").get(0);
            var n = $(f).children("option:eq(" + $(f).get(0).selectedIndex + ")").attr("value");
            var f = $("#clients_search_form").find("[name=balance]").get(0);
            var h = $(f).children("option:eq(" + $(f).get(0).selectedIndex + ")").attr("value");
            blockAllUI();
            if ($("#clients_search_form").find("[name=client_name]").val() == "" && $("#clients_search_form").find("[name=phone_num]").val() == "" && $("#clients_search_form").find("[name=mob_phone_num]").val() == "" && $("#clients_search_form").find("[name=zip_code]").val() == "" && $("#clients_search_form").find("[name=customer_number]").val() == "" && $("#clients_search_form").find("[name=inter_number]").val() == "" && $("#clients_search_form").find("[name=parntner_ref]").val() == "" && $("#clients_search_form").find("[name=inter_parntner_ref]").val() == "" && $("#clients_search_form").find("[name=machine_serial]").val() == "" && m == -1 && n == -1 && h == -1) {
                UNblockAllUI();
                $.MyDLG(client_view_input_empty, dlg_button_ok, "", function() {}, function() {});
                return false
            }
        },
        error: function() {
            chkRes($("#clients_search_result"), "", "");
            tabs_delimiter_height();
            UNblockAllUI()
        },
        success: function(f, e) {
            chkRes($("#clients_search_result"), e, f);
            tabs_delimiter_height();
            UNblockAllUI()
        }
    };
    $("#clients_search_form").ajaxSubmit(d)
}

function OrdSel(h) {
    var g = $(h).attr("name");
    var b;
    var f = g.match(/[1-9]$/);
    var m = clients_search_form_ords.length;
    var d = h.selectedIndex;
    var e = clients_search_form_ords[f];
    if (h.options[d].disabled) {
        while (h.options[d] && h.options[d].disabled) {
            d++
        }
        if (h.options[d]) {
            h.selectedIndex = d
        } else {
            h.selectedIndex = 0;
            d = 0
        }
    }
    for (i = 1; i < m; i++) {
        g = SelA[i].get(0);
        g.options[e].disabled = false;
        $(g.options[e]).removeClass("disabled");
        if (i == f) {
            g.options[d].disabled = false;
            $(g.options[d]).removeClass("disabled")
        } else {
            if (d > 0) {
                g.options[d].disabled = true;
                $(g.options[d]).addClass("disabled")
            }
        }
    }
    for (i = f; i < m; i++) {
        g = SelA[i];
        b = CheA[i];
        if (d == 0) {
            if (f != i) {
                g.get(0).disabled = true;
                g.get(0).selectedIndex = 0;
                if (clients_search_form_ords[i] > 0) {
                    var c = clients_search_form_ords[i];
                    for (j = 1; j < m; j++) {
                        SelA[j].get(0).options[c].disabled = false;
                        $(SelA[j].get(0).options[c]).removeClass("disabled")
                    }
                    clients_search_form_ords[i] = 0
                }
                g.addClass("disabled")
            }
            b.get(0).checked = false;
            b.get(0).disabled = true;
            b.addClass("disabled")
        } else {
            if (i == f) {
                b.get(0).disabled = false;
                b.removeClass("disabled")
            } else {
                g.get(0).disabled = false;
                g.removeClass("disabled");
                break
            }
        }
    }
    clients_search_form_ords[f] = d;
    return false
}

function CLient_Search_Tab_On_Show() {
    $("#RClientsTab").find("[name=client_name]").get(0).focus()
}

function init_CLient_Search_View() {
    blockAllUI();
    for (i = 0; i < clients_search_form_ords.length; i++) {
        clients_search_form_ords[i] = 0
    }
    for (i = 0; i < clients_search_form_ords.length; i++) {
        SelA[i] = $($("#clients_search_form").find("[name=order_by" + i + "]").get(0))
    }
    for (i = 0; i < clients_search_form_ords.length; i++) {
        CheA[i] = $($("#clients_search_form").find("[name=desc" + i + "]").get(0))
    }
    $("#clients_search_form").find("[name=client_partner]").append($("#partners_list_any").html());
    if (user_is_partner >= 0) {
        $("#clients_search_form").find("[name=client_partner]").attr("disabled", "disabled");
        $("#clients_search_form").find("[name=client_partner]").addClass("disabled_inf")
    }
    var b = $("#client_search_order").html();
    for (i = 0; i < clients_search_form_ords.length; i++) {
        SelA[i].append(b)
    }
    $("#clients_search_form").submit(function(c) {
        c.stopImmediatePropagation();
        $("#clients_search_form").find("[name=from]").val(0);
        SubmitClientSearch();
        return false
    });
    OrdSel($("#clients_search_form").find("[name=order_by1]").get(0));
    $("#RClientsTab").attr("on_show", "CLient_Search_Tab_On_Show();");
    $(".ShowToolTipD").tooltip(ToolTipOptions);
    $("#villes").load("lists/villes/" + default_language + "/0/0/0/0/dummy.html", function(e, c, d) {
        var f = e.split("|");
        $("#clients_search_form").find("[name=city]").focus().autocomplete(f)
    });
    $("#clients_search_form").find("[name=city]").result(function(c, e, d) {
        ville = d.split("---");
        if ((ville[0] != "undefined" || ville[0] != null) && (ville[1] != "undefined" || ville[1] != null)) {
            $("#clients_search_form").find("[name=city]").val(ville[0]);
            $("#clients_search_form").find("[name=zip_code]").val(ville[1])
        } else {
            return false
        }
    });
    UNblockAllUI()
}

function Create_Quick_Call(c, b) {
    blockAllUI();
    $("#my_popup_form").load("clients/get_quick_call_popup_form", {
        inside: "yes"
    }, function(d, m, e) {
        if (chkRes($("#my_popup_form"), m, d)) {}
        UNblockAllUI();
        var n = 710;
        var p = 360;
        var g = -9;
        var f = 18;
        var h = $(window).width();
        if (h > n) {
            g = Math.round(h / 2 - n / 2 - 9)
        }
        var o = $(window).height();
        if (o > p) {
            f = Math.round(o / 2 - p / 2 + 18)
        }
        show_my_popupform(g, f, false)
    })
}

function init_client_quick_call_popup() {
    $("#form_client_quick_call_popup").find("[name=client_partner]").append($("#partners_list").html());
    LoadSelectFromHiddenStorage("_client_quick_call_popup", "origine_appel_list", "#origine_appel_list");
    Call_Motive_Change_Switch($("#form_client_quick_call_popup").find("select[name=motive]").get(0));
    $("#form_client_quick_call_popup").find("select[name=client_partner]").bind("change", function() {
        Call_Type_Change_Switch(this)
    });
    $("#form_client_quick_call_popup").find("select[name=type_of_call]").bind("change", function() {
        Call_Type_Change_Switch(this)
    });
    $("#form_client_quick_call_popup").find("select[name=motive]").bind("change", function() {
        Call_Motive_Change_Switch(this)
    });
    $("#form_client_quick_call_popup").find("select[name=call_orange_motive]").bind("change", function() {
        Call_Orange_Motive_Change(this)
    });
    $("#form_client_quick_call_popup").find("select[name=call_orange_result]").bind("change", function() {
        Call_Orange_Result_Change(this)
    });
    Call_Orange_Motive_Change_Switch($("#form_client_quick_call_popup").find("select[name=call_orange_motive]").get(0));
    Set_Disabled($("#form_client_quick_call_popup").find("select[name=call_orange_motive]"));
    Set_Disabled($("#form_client_quick_call_popup").find("select[name=call_orange_result]"));
    $("#form_client_quick_call_popup").submit(function(c) {
        c.stopImmediatePropagation();
        var b = {
            target: "#dummy_container",
            url: "clients/save_quick_call_popup_form",
            type: "post",
            beforeSubmit: function(n, g, e) {
                var f = g[0];
                if (f.client_name.value == "") {
                    events_popupReportFormError();
                    return false
                }
                if (f.client_partner.value == "") {
                    events_popupReportFormError();
                    return false
                }
                if (f.cl_phone.value == "") {
                    events_popupReportFormError();
                    return false
                }
                var d = $("#form_client_quick_call_popup").find("select[name=client_partner]").children("option:eq(" + $("#form_client_quick_call_popup").find("select[name=client_partner]").get(0).selectedIndex + ")");
                var m = d.attr("call_a");
                var h = d.attr("call_b");
                if (h == 1) {
                    if (f.call_orange_motive.selectedIndex == 0) {
                        events_popupReportFormError();
                        return false
                    }
                    if (f.call_orange_result.selectedIndex == 0) {
                        events_popupReportFormError();
                        return false
                    }
                } else {
                    if (f.call_res_combobox.selectedIndex == 0) {
                        events_popupReportFormError();
                        return false
                    }
                }
                MyPopUpFormBlock();
                return true
            },
            error: function() {
                hide_my_popupform()
            },
            success: function(f, d) {
                hide_my_popupform();
                blockAllUI();
                var g = $("#dummy_container").find("[xcli_id]").attr("xcli_id");
                var e = $("#dummy_container").find("[xcli_name]").attr("xcli_name");
                OpenClientTab(g, e, -1, -1);
                UNblockAllUI()
            }
        };
        $("#form_client_quick_call_popup").ajaxSubmit(b);
        return false
    })
}

function Create_New_Client(e, b) {
    var g = -1;
    var c = "#client_id_NEW";
    var f = e;
    if (!$(c).length) {
        if (TopRightTabs) {
            TopRightTabs.tabs("add", c, f)
        }
        if ($(c).length) {
            blockAllUI();
            CurrentClientID = g;
            $(c).attr("client_id", g);
            $(c).attr("client_name", f)
        }
        var d = -1;
        if (b == 2) {
            d = -2
        }
        $(c).load("clients/get_client_container", {
            inside: "yes",
            client_id: g,
            intervention_id: -1,
            wcall_id: d
        }, function(n, h, m) {
            chkRes($(c), h, n);
            UNblockAllUI()
        })
    }
    if (TopRightTabs) {
        TopRightTabs.tabs("select", c)
    }
}

function LoadListsHiddenStorages(b, c) {
    if ($(b).length < 1) {
        return
    }
    blockAllUI();
    HiddenStorageCounter++;
    $(b).load("lists/" + c + "/" + default_language + "/0/0/0/0/0/0/dummy.html", function(f, d, e) {
        chkRes($(b), d, f);
        HiddenStorageCounter--;
        UNblockAllUI()
    })
}

function LoadALLHiddenStorages() {
    if (HiddenStorageCounter < 0) {
        HiddenStorageCounter = 0;
        LoadListsHiddenStorages("#client_search_order", "clients_search_order_by");
        LoadListsHiddenStorages("#partners_list", "partners_all");
        LoadListsHiddenStorages("#partners_list_any", "partners_all_any");
        LoadListsHiddenStorages("#clients_titles", "clients_titles");
        LoadListsHiddenStorages("#clients_code_pays", "clients_code_pays");
        LoadListsHiddenStorages("#common_oses", "common_oses");
        LoadListsHiddenStorages("#common_providers", "common_providers");
        LoadListsHiddenStorages("#common_adsls", "common_adsls");
        LoadListsHiddenStorages("#common_intervention_not_paids", "common_intervention_not_paids");
        LoadListsHiddenStorages("#common_intervention_paids", "common_intervention_paids");
        LoadListsHiddenStorages("#common_hours", "common_hours");
        LoadListsHiddenStorages("#common_minutes", "common_minutes");
        LoadListsHiddenStorages("#common_days", "common_days");
        LoadListsHiddenStorages("#common_months", "common_months");
        LoadListsHiddenStorages("#common_years", "common_years");
        LoadListsHiddenStorages("#common_short_years", "common_short_years");
        LoadListsHiddenStorages("#intervention_states_list", "intervention_codes");
        LoadListsHiddenStorages("#intervention_states_list_any", "intervention_codes_any");
        LoadListsHiddenStorages("#ticket_states_all", "ticket_states_all");
        LoadListsHiddenStorages("#common_call_duration", "call_duration");
        LoadListsHiddenStorages("#interv_addon_a_list_a", "interv_addon_a_list_a");
        LoadListsHiddenStorages("#interv_addon_a_list_b", "interv_addon_a_list_b");
        LoadListsHiddenStorages("#interv_addon_a_list_c", "interv_addon_a_list_c");
        LoadListsHiddenStorages("#interv_addon_a_list_d", "interv_addon_a_list_d");
        LoadListsHiddenStorages("#interv_addon_c_list_c", "interv_addon_c_list_c");
        LoadListsHiddenStorages("#orange_select_diag_assistance", "orange_select_diag_assistance");
        LoadListsHiddenStorages("#interv_addon_d_list_a", "interv_addon_d_list_a");
        LoadListsHiddenStorages("#interv_addon_d_list_b", "interv_addon_d_list_b");
        LoadListsHiddenStorages("#interv_addon_d_list_c", "interv_addon_d_list_c");
        LoadListsHiddenStorages("#common_sbe_list_garantie", "common_sbe_list_garantie");
        LoadListsHiddenStorages("#common_sbe_list_travaux", "common_sbe_list_travaux");
        LoadListsHiddenStorages("#profil_gender", "profil_gender");
        LoadListsHiddenStorages("#society_all", "society_all");
        LoadListsHiddenStorages("#common_weeks", "common_weeks");
        LoadListsHiddenStorages("#employee_function_all", "employee_function_all");
        LoadListsHiddenStorages("#user_status", "user_status");
        LoadListsHiddenStorages("#employee_type", "employee_type");
        LoadListsHiddenStorages("#interv_duration", "interv_duration");
        LoadListsHiddenStorages("#sfr_prise_en_charge", "sfr_prise_en_charge");
        LoadListsHiddenStorages("#sfr_origine_panne", "sfr_origine_panne");
        LoadListsHiddenStorages("#sfr_motifs_suspension", "sfr_motifs_suspension");
        LoadListsHiddenStorages("#sfr_choix_origine_panne", "sfr_choix_origine_panne");
        LoadListsHiddenStorages("#sfr_resultats_inter", "sfr_resultats_inter");
        LoadListsHiddenStorages("#sogetrel_code_echec", "sogetrel_code_echec");
        LoadListsHiddenStorages("#vodafone_posizionamento", "vodafone_posizionamento");
        LoadListsHiddenStorages("#vodafone_tipo_impianto", "vodafone_tipo_impianto");
        LoadListsHiddenStorages("#vodafone_tipo_presa_primaria", "vodafone_tipo_presa_primaria");
        LoadListsHiddenStorages("#esito_linea_tim", "esito_linea_tim");
        LoadListsHiddenStorages("#origine_appel_list", "origine_appel_list");
        LoadListsHiddenStorages("#society_by_profile", "society_by_profile");
        LoadListsHiddenStorages("#anomalies_code", "anomalies_code");
        LoadListsHiddenStorages("#anomalies_statut", "anomalies_statut");
        LoadListsHiddenStorages("#interv_ok_nok", "interv_ok_nok");
        LoadListsHiddenStorages("#hpge_ticket", "hpge_ticket");
        LoadListsHiddenStorages("#sfr_gp_diag_hotline", "sfr_gp_diag_hotline");
        LoadListsHiddenStorages("#sfr_gp_localisation", "sfr_gp_localisation");
        LoadListsHiddenStorages("#sfr_gp_causes", "sfr_gp_causes");
        LoadListsHiddenStorages("#sfr_gp_diag_precis", "sfr_gp_diag_precis");
        LoadListsHiddenStorages("#sfr_gp_resolution", "sfr_gp_resolution");
        LoadListsHiddenStorages("#sfr_gp_liste_equipements", "sfr_gp_liste_equipements");
        LoadListsHiddenStorages("#orange_hors_perimetre", "orange_hors_perimetre");
        LoadListsHiddenStorages("#afone_logistique_etat_piece_do", "afone_logistique_etat_piece_do");
        LoadListsHiddenStorages("#afone_logistique_etat_piece_pu", "afone_logistique_etat_piece_pu");
        LoadListsHiddenStorages("#afone_logistique_anomalie", "afone_logistique_anomalie");
        LoadListsHiddenStorages("#oa_ai_indice", "oa_ai_indice");
        LoadListsHiddenStorages("#voltalis_mod_type", "voltalis_mod_type");
        LoadListsHiddenStorages("#voltalis_tic_racc", "voltalis_tic_racc");
        LoadListsHiddenStorages("#voltalis_ok_nok", "voltalis_ok_nok");
        LoadListsHiddenStorages("#voltalis_puiss_list", "voltalis_puiss_list");
        LoadListsHiddenStorages("#bouygues_ai_select_diag_assistance", "bouygues_ai_select_diag_assistance");
        LoadListsHiddenStorages("#common_number", "common_number");
        LoadListsHiddenStorages("#fujitsu_cause_list", "fujitsu_cause_list");
        LoadListsHiddenStorages("#fujitsu_reso_std_list", "fujitsu_reso_std_list");
        LoadListsHiddenStorages("#fujitsu_reso_client_sncf_list", "fujitsu_reso_client_sncf_list");
        LoadListsHiddenStorages("#fujitsu_reso_client_auchan_list", "fujitsu_reso_client_auchan_list");
        LoadListsHiddenStorages("#fujitsu_reso_client_std_list", "fujitsu_reso_client_std_list");
        LoadListsHiddenStorages("#fujitsu_reso_client_fsc_condition_list", "fujitsu_reso_client_fsc_condition_list");
        LoadListsHiddenStorages("#fujitsu_reso_client_fsc_action_list", "fujitsu_reso_client_fsc_action_list");
        LoadListsHiddenStorages("#fujitsu_reso_client_fsc_symptom_family_list", "fujitsu_reso_client_fsc_symptom_family_list");
        LoadListsHiddenStorages("#machine_types_list", "machine_codes");
        LoadListsHiddenStorages("#vru_formazione_addizionale_argo_princ", "vru_formazione_addizionale_argo_princ");
        LoadListsHiddenStorages("#vru_formazione_addizionale_argo_secon", "vru_formazione_addizionale_argo_secon");
        LoadListsHiddenStorages("#epson_warranty_type", "epson_warranty_type");
        LoadListsHiddenStorages("#epson_cause_code", "epson_cause_code");
        LoadListsHiddenStorages("#epson_phenomenon_code", "epson_phenomenon_code");
        LoadListsHiddenStorages("#epson_market_code", "epson_market_code");
        LoadListsHiddenStorages("#samsung_status_15", "samsung_status_15");
        LoadListsHiddenStorages("#samsung_status_25", "samsung_status_25");
        LoadListsHiddenStorages("#samsung_status_30", "samsung_status_30");
        LoadListsHiddenStorages("#samsung_status_35", "samsung_status_35");
        LoadListsHiddenStorages("#samsung_status_40", "samsung_status_40");
        LoadListsHiddenStorages("#samsung_status_52", "samsung_status_52");
        LoadListsHiddenStorages("#wincor_rcbt_inter_type", "wincor_rcbt_inter_type");
        LoadListsHiddenStorages("#wincor_rcbt_device_type", "wincor_rcbt_device_type");
        LoadListsHiddenStorages("#voda_prem_res_class_int", "voda_prem_res_class_int");
        LoadListsHiddenStorages("#voda_prem_res_cat_chia", "voda_prem_res_cat_chia");
        LoadListsHiddenStorages("#bp2i_code_panne", "bp2i_code_panne");
        LoadListsHiddenStorages("#vru_tipo_dispositivo", "vru_tipo_dispositivo");
        if (regional_version == "DE01") {
            LoadListsHiddenStorages("#unitymedia_faultCode", "unitymedia_faultCode");
            LoadListsHiddenStorages("#unitymedia_fixCode", "unitymedia_fixCode");
            LoadListsHiddenStorages("#unitymedia_solutionCode", "unitymedia_solutionCode");
            LoadListsHiddenStorages("#unitymedia_modem_location", "unitymedia_modem_location");
            LoadListsHiddenStorages("#prestation_price_group", "prestation_price_group");
            LoadListsHiddenStorages("#actual_projects", "actual_projects");
            LoadListsHiddenStorages("#vodafone_de_status_techniker", "vodafone_de_status_techniker");
            LoadListsHiddenStorages("#vodafone_de_status_bauakte", "vodafone_de_status_bauakte");
            LoadListsHiddenStorages("#vodafone_de_eskalation_kunde", "vodafone_de_eskalation_kunde");
            LoadListsHiddenStorages("#vodafone_de_vertragsart", "vodafone_de_vertragsart");
            LoadListsHiddenStorages("#vodafone_de_togo_abschluss", "vodafone_de_togo_abschluss");
            LoadListsHiddenStorages("#vodafone_de_vertragsstatus", "vodafone_de_vertragsstatus");
            LoadListsHiddenStorages("#vodafone_de_ksc_gemeldet", "vodafone_de_ksc_gemeldet");
            LoadListsHiddenStorages("#vodafone_de_kundenkontakt", "vodafone_de_kundenkontakt");
            LoadListsHiddenStorages("#vodafone_de_togo_beratung", "vodafone_de_togo_beratung")
        }
        LoadListsHiddenStorages("#yesNoCode", "yesNoCode");
        LoadListsHiddenStorages("#causale_ingaggio_babysitting", "causale_Ingaggio_BabySitting");
        LoadListsHiddenStorages("#stato_npd", "stato_npd");
        LoadListsHiddenStorages("#dettaglio_npd_ko", "dettaglio_npd_ko");
        LoadListsHiddenStorages("#causale_ko", "causale_ko");
        LoadListsHiddenStorages("#machine_types", "machine_types");
        LoadListsHiddenStorages("#esito_gestione", "esito_gestione");
        if (regional_version == "FR01") {
            LoadListsHiddenStorages("#fujitsu_sncf_reso", "fujitsu_sncf_reso");
            LoadListsHiddenStorages("#fujitsu_sncf_factu", "fujitsu_sncf_factu")
        }
        if ((regional_version == "FR01") || (regional_version == "IT01") || (regional_version == "BN01") || (regional_version == "IB01")) {
            LoadListsHiddenStorages("#hp_product_lines", "hp_product_lines");
            LoadListsHiddenStorages("#hp_repairclass", "hp_repairclass");
            LoadListsHiddenStorages("#hp_delaycode", "hp_delaycode");
            LoadListsHiddenStorages("#hp_qacode", "hp_qacode");
            LoadListsHiddenStorages("#hp_usage_state", "hp_usage_state");
            LoadListsHiddenStorages("#hp_failure_code", "hp_failure_code");
            LoadListsHiddenStorages("#hp_rerepair_reason", "hp_rerepair_reason");
            LoadListsHiddenStorages("#hp_internal_code", "hp_internal_code");
            LoadListsHiddenStorages("#hp_internal_code2", "hp_internal_code2");
            if (regional_version == "FR01") {
                LoadListsHiddenStorages("#hp_cat_results", "hp_cat_results");
                LoadListsHiddenStorages("#hp_cat_status", "hp_cat_status")
            }
        }
        if (regional_version == "FR01") {
            LoadListsHiddenStorages("#bext_stocks", "bext_stocks");
            LoadListsHiddenStorages("#bext_suppliers", "bext_suppliers");
            LoadListsHiddenStorages("#cc_part_action", "cc_part_action");
            LoadListsHiddenStorages("#cc_part_tier1", "cc_part_tier1");
            LoadListsHiddenStorages("#cc_part_tier2", "cc_part_tier2");
            LoadListsHiddenStorages("#cc_part_tier3", "cc_part_tier3");
            LoadListsHiddenStorages("#cc_repair_justification", "cc_repair_justification");
            LoadListsHiddenStorages("#cc_cancellation_reason", "cc_cancellation_reason");
            LoadListsHiddenStorages("#cc_effortbreakdown", "cc_effortbreakdown");
            LoadListsHiddenStorages("#cc_failure_reason", "cc_failure_reason");
            LoadListsHiddenStorages("#cc_travel_justification", "cc_travel_justification");
            LoadListsHiddenStorages("#cc_worklog_types", "cc_worklog_types")
        }
        if (regional_version == "IB01" || regional_version == "FR01") {
            LoadListsHiddenStorages("#inter_entity", "inter_entity");
            LoadListsHiddenStorages("#inter_sla_class", "inter_sla_class")
        }
        LoadListsHiddenStorages("#general_qacode", "general_qacode");
        LoadListsHiddenStorages("#general_internal_code", "general_internal_code");
        LoadListsHiddenStorages("#stock_list_generiques", "stock_list_generiques");
        LoadListsHiddenStorages("#stock_list_fournisseurs", "stock_list_fournisseurs");
        HiddenStorageTimer = setTimeout("LoadALLHiddenStorages()", 200)
    } else {
        if (HiddenStorageCounter > 0) {
            HiddenStorageTimer = setTimeout("LoadALLHiddenStorages()", 200)
        } else {
            HiddenStorageIsLoaded = true;
            init_all_tabs_container_view(0, 0)
        }
    }
}

function confirmExit() {
    return brows_title
}

function load_tab(d, c) {
    var b = $("#" + d);
    b.load(c, {
        inside: "yes"
    }, function(g, e, f) {
        chkRes(b, e, g);
        tabs_delimiter_height()
    })
}

function init_all_tabs_container_view(d, b) {
    if (!HiddenStorageIsLoaded) {
        $(window).resize(function() {
            if ($("#tableTimitable_container").position()) {
                $("#tableTimitable_container").css("width", $(window).width() - 20 - $("#tableTimitable_container").position().left)
            }
        });
        $.ui.tabs.defaults.tabTemplate = '<li><a href="#{href}"><span title="#{label}\r\n------------\r\n[DOUBLE-CLIC]=' + button_close + "\r\n[CTRL+DOUBLE-CLIC]=" + button_close + ' interventions" style="display: inline-block; max-width: 200px; overflow: hidden; text-overflow: ellipsis;cursor: pointer !important">#{label}</span></a><em class="ui-tabs-close" onclick="my_close_right_tab(this);" title="' + button_close + '">&nbsp;</em></li>';
        $.ui.tabs.defaults.show = function(e, f) {
            tabs_delimiter_height();
            tab_on_show(e, f)
        };
        $.timepicker.setDefaults({
            timeFormat: "hh:mm",
            hourMin: 8,
            hourMax: 21,
            hourGrid: 1,
            stepHour: 1,
            minuteGrid: 15,
            stepMinute: 15
        });
        if (d > 0) {
            TopLeftTabs = $("#left_side_tabs").tabs()
        }
        if (b > 0) {
            TopRightTabs = $("#right_top_level_tabs").tabs()
        }
        if (TopRightTabs) {
            if ((user_is_partner >= 0)) {
                TopRightTabs.tabs("select", "#RClientsTab")
            } else {
                TopRightTabs.tabs("select", wk_mode ? "#RPlanningTab" : "#RMessagesTab")
            }
        }
        if (TopRightTabs) {
            if (user_settings_version <= 0) {
                TopRightTabs.tabs("disable", get_right_tab_idx_by_ref("#RSettingsTab"))
            }
            $("li:has('em.ui-tabs-close')", TopRightTabs).live("dblclick", function(f) {
                if (TopRightPreviousTab) {
                    TopRightTabs.tabs("select", TopRightPreviousTab)
                }
                if (f.ctrlKey) {
                    $("li:has('em.ui-tabs-close')", TopRightTabs).each(function() {
                        TopRightTabs.tabs("remove", $(this).index())
                    })
                } else {
                    TopRightTabs.tabs("remove", $(f.currentTarget).index())
                }
            });
            $("li:has('em.ui-tabs-close')", TopRightTabs).live("mouseover", function(f) {
                $(this).tooltip(ToolTipOptions)
            });
            TopRightTabs.live("tabsselect", function(e, g, f) {
                var h = (typeof f == "undefined") ? g : f;
                if (TopRightCurrentTab) {
                    if (!TopRightCurrentTab.match(/^#client_id/) && !TopRightCurrentTab.match(/^#L/)) {
                        TopRightPreviousTab = TopRightCurrentTab
                    }
                }
                TopRightCurrentTab = h.tab.hash;
                switch (g.panel.id) {
                    case "RStock":
                        break
                }
            });
            TopRightTabs.live("tabsshow", function(e, g, f) {
                var h = (typeof f == "undefined") ? g : f;
                switch (g.panel.id) {
                    case "RMonitorTab":
                        $("#RMonitorTab select.msDropDown").msDropDown({
                            visibleRows: 10,
                        });
                        break
                }
            })
        }
        $("#left_side_tabs_container").resizable({
            stop: function(g, f) {
                tabs_delimiter_height()
            },
            transparent: false,
            autoHide: false,
            helper: "proxy",
            minWidth: 210,
            maxWidth: 800,
            handles: "e"
        });
        CntAtmp = d;
        CntBtmp = b;
        window.onbeforeunload = confirmExit;
        window.onunload = CloseAdditionalWindows;
        if ((allow_multilogin != 1) && (multi_logged > 0)) {
            $.MyDLG(qustion_multilog, dlg_button_yes, dlg_button_no, function() {
                blockAllUI();
                multi_logged = 0;
                $("#dummy_container").load("main/dell_all_concurents_sessions", {
                    inside: "yes"
                }, function(g, e, f) {
                    LoadALLHiddenStorages()
                })
            }, function() {
                window.onunload = null;
                window.onbeforeunload = null;
                window.location.href = "login/logout"
            });
            return
        }
        blockAllUI();
        LoadALLHiddenStorages();
        return
    }
    UNblockAllUI();
    blockAllUI();
    $("#RPlanningTab").load("planning/planning_main", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#PlanningTab"), e, g);
        tabs_delimiter_height()
    });
    $("#RMessagesTab").load("startup_messages/msg_view", {
        inside: "yes",
        from: 0
    }, function(g, e, f) {
        chkRes($("#RMessagesTab"), e, g);
        tabs_delimiter_height()
    });
    $("#LInterventionsContainer").load("planning/planning_interventions", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#LInterventionsContainer"), e, g);
        tabs_delimiter_height()
    });
    $("#RClientsTab").load("clients/search", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#RClientsTab"), e, g);
        tabs_delimiter_height()
    });
    $("#RSettingsTab").load("user_settings/read_settings", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#RSettingsTab"), e, g);
        tabs_delimiter_height()
    });
    $("#RProfileTab").load("profile/get_profile", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#RProfileTab"), e, g);
        tabs_delimiter_height()
    });
    $("#RManagingTab").load("employees/load_manegement_main", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#RManagingTab"), e, g);
        tabs_delimiter_height()
    });
    $("#RAdminTab").load("admin/load_admin_main", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#RAdminTab"), e, g);
        tabs_delimiter_height()
    });
    $("#RPiloatgeTab").load("pilotage/load_attachments_dow_load_view", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#RPiloatgeTab"), e, g);
        tabs_delimiter_height()
    });
    $("#RConduiteActivite").load("conduite_activite/load_view", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#RConduiteActivite"), e, g);
        tabs_delimiter_height()
    });
    $("#RLogistics").load("logistics/load_view", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#RLogistics"), e, g);
        tabs_delimiter_height()
    });
    $("#RChatTab").load("chat/load_view", {
        inside: "yes"
    }, function(g, e, f) {
        chkResChat($("#RChatTab"), e, g);
        tabs_delimiter_height()
    });
    if ($().jquery.substring(0, 3) != "1.2") {
        $("#RStock").load("stock/load_stock_view", {
            inside: "yes"
        }, function(g, e, f) {
            chkRes($("#RStock"), e, g);
            tabs_delimiter_height()
        })
    } else {
        $("#RStock").html("Incompatible with JQUERY " + $().jquery)
    }
    $("#RQualification").load("qualification/load_view", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#RQualification"), e, g);
        tabs_delimiter_height()
    });
    $("#RTimeSlotsTab").load("interventions/load_timeSlot_form_view", {
        inside: "yes"
    }, function(g, e, f) {
        chkRes($("#RTimeSlotsTab"), e, g);
        tabs_delimiter_height()
    });
    var c = check_covid_config();
    if (c) {
        $("#RCovidTab").load("covid/load_view", {
            inside: "yes"
        }, function(g, e, f) {
            chkRes($("#RCovidTab"), e, g);
            tabs_delimiter_height()
        })
    } else {
        $("#RCovidTab").hide();
        $("li#covid_tab").hide()
    }
    $("#right_top_level_tabs").bind("tabsselect", function(f, g) {
        if (g.tab.hash == "#RQualification") {
            var e = $("#frameQualification").attr("src");
            if (e == "" || typeof e == "undefined") {
                $.post("stock/get_url_QT", function(h) {
                    var m = h;
                    m = m.replace("|0|", "");
                    m = m.replace("|1|", user_id);
                    m = m.replace("|2|", nonce);
                    console.log("qualificationtool_url = " + m);
                    $("#frameQualification").attr("src", m)
                })
            }
        }
    });
    $("#RHpTab").load("EDI/hp/get_supervision", {
        inside: "yes"
    }, function(g, e, f) {});
    if ($("#RCcTab").length) {
        $("#RCcTab").load("EDI/cc/get_supervision", {
            inside: "yes"
        }, function(g, e, f) {})
    }
    $("#RUnitymediaTab").load("EDI/unitymedia/get_menu", {
        inside: "yes"
    }, function(g, e, f) {});
    $("#RNotificationTab").load("notifications/load_tab", {
        inside: "yes"
    }, function(g, e, f) {});
    tabs_delimiter_height();
    window.onresize = tabs_delimiter_height;
    $(".ShowToolTipA").tooltip(ToolTipOptions);
    if (bit_set_a & 1) {
        heartbeat_timer = setTimeout("HeartBeat()", 1000)
    }
    $("body").bind("contextmenu", function(f) {
        if (f.target.className == "ClientDetailsCont_Common_Nav") {
            GoToBottomOfPage()
        }
        return false
    });
    UNblockAllUI()
}

function StMsg_View_edt_msg(b) {
    if ($("#RMessagesTab").length) {
        blockAllUI()
    }
    $("#RMessagesTab").load("startup_messages/msg_new_edit", {
        inside: "yes",
        from: StMsg_View_Current_Page,
        message_edit: 1,
        message_id: b
    }, function(e, c, d) {
        chkRes($("#RMessagesTab"), c, e);
        UNblockAllUI()
    });
    return false
}

function StMsg_View_del_msg(b) {
    $.MyDLG(qustion_del_rec, dlg_button_yes, dlg_button_no, function() {
        if ($("#RMessagesTab").length) {
            blockAllUI()
        }
        $("#RMessagesTab").load("startup_messages/msg_delete", {
            inside: "yes",
            from: StMsg_View_Current_Page,
            message_id: b
        }, function(e, c, d) {
            chkRes($("#RMessagesTab"), c, e);
            UNblockAllUI()
        });
        return false
    }, function() {})
}

function StMsg_View_new_msg() {
    if ($("#RMessagesTab").length) {
        blockAllUI()
    }
    $("#RMessagesTab").load("startup_messages/msg_new_edit", {
        inside: "yes",
        from: StMsg_View_Current_Page,
        message_edit: 0,
        message_id: ""
    }, function(d, b, c) {
        chkRes($("#RMessagesTab"), b, d);
        UNblockAllUI()
    });
    return false
}

function StMsg_View_pageselectCallback(b, c) {
    if ($("#RMessagesTab").length) {
        blockAllUI()
    }
    $("#RMessagesTab").load("startup_messages/msg_view", {
        inside: "yes",
        from: b
    }, function(f, d, e) {
        chkRes($("#RMessagesTab"), d, f);
        tabs_delimiter_height();
        UNblockAllUI()
    });
    return false
}

function init_startup_messages_view(c, b, h, g, f, e, d) {
    $("#StMsg_pagination").pagination(c, {
        current_page: b,
        items_per_page: h,
        num_edge_entries: g,
        num_display_entries: f,
        next_text: e,
        prev_text: d,
        link_to: "#",
        callback: StMsg_View_pageselectCallback
    })
}

function StMsg_OnShow() {
    if ($("#StMsgEditForm_title").length > 0) {
        $("#StMsgEditForm_title").get(0).focus()
    }
}

function StMsgNewEdit_bck() {
    if ($("#RMessagesTab").length) {
        blockAllUI()
    }
    $("#RMessagesTab").load("startup_messages/msg_view", {
        inside: "yes",
        from: StMsg_View_Current_Page
    }, function(d, b, c) {
        chkRes($("#RMessagesTab"), b, d);
        tabs_delimiter_height();
        UNblockAllUI();
        return false
    });
    return false
}

function StMsgNewEdit_save() {
    if ($("#RMessagesTab").length) {
        blockAllUI()
    }
    var c = "";
    if (StMsgEditINSTANCE != null) {
        c = StMsgEditINSTANCE.xhtml()
    } else {
        c = $("#StMsgEditForm_message").val()
    }
    var b = 0;
    if (Is_St_Msg_Editing) {
        b = StMsg_View_Current_Page
    }
    $("#RMessagesTab").load("startup_messages/msg_save", {
        inside: "yes",
        from: b,
        message_id: $("#StMsgEditForm_id").val(),
        message_title: $("#StMsgEditForm_title").val(),
        message_message: c,
        message_edit: Is_St_Msg_Editing,
        message_target_id_group: $("#message_target_id_group").val()
    }, function(f, d, e) {
        chkRes($("#RMessagesTab"), d, f);
        tabs_delimiter_height();
        UNblockAllUI();
        return false
    });
    return false
}

function init_Startup_Messages_Edit_New_View(b) {
    blockAllUI();
    Is_St_Msg_Editing = b;
    $("#StMsgEditForm_message").wymeditor({
        basePath: "var/wymeditor/",
        skinPath: "var/wymeditor/skins/default/",
        stylesheet: my_wymeditor_css,
        jQueryPath: my_wymeditor_jquery,
        wymPath: my_wymeditor_wymjs,
        lang: default_language,
        toolsItems: [{
            name: "Bold",
            title: "Strong",
            css: "wym_tools_strong"
        }, {
            name: "Italic",
            title: "Emphasis",
            css: "wym_tools_emphasis"
        }, {
            name: "Superscript",
            title: "Superscript",
            css: "wym_tools_superscript"
        }, {
            name: "Subscript",
            title: "Subscript",
            css: "wym_tools_subscript"
        }, {
            name: "InsertOrderedList",
            title: "Ordered_List",
            css: "wym_tools_ordered_list"
        }, {
            name: "InsertUnorderedList",
            title: "Unordered_List",
            css: "wym_tools_unordered_list"
        }, {
            name: "Indent",
            title: "Indent",
            css: "wym_tools_indent"
        }, {
            name: "Outdent",
            title: "Outdent",
            css: "wym_tools_outdent"
        }, {
            name: "Undo",
            title: "Undo",
            css: "wym_tools_undo"
        }, {
            name: "Redo",
            title: "Redo",
            css: "wym_tools_redo"
        }, {
            name: "Paste",
            title: "Paste_From_Word",
            css: "wym_tools_paste"
        }, {
            name: "ToggleHtml",
            title: "HTML",
            css: "wym_tools_html"
        }, {
            name: "Preview",
            title: "Preview",
            css: "wym_tools_preview"
        }],
        containersItems: [{
            name: "P",
            title: "Paragraph",
            css: "wym_containers_p"
        }, {
            name: "H1",
            title: "Heading_1",
            css: "wym_containers_h1"
        }, {
            name: "H2",
            title: "Heading_2",
            css: "wym_containers_h2"
        }, {
            name: "H3",
            title: "Heading_3",
            css: "wym_containers_h3"
        }, {
            name: "H4",
            title: "Heading_4",
            css: "wym_containers_h4"
        }, {
            name: "H5",
            title: "Heading_5",
            css: "wym_containers_h5"
        }, {
            name: "H6",
            title: "Heading_6",
            css: "wym_containers_h6"
        }, {
            name: "PRE",
            title: "Preformatted",
            css: "wym_containers_pre"
        }],
        dialogPreviewHtml: "<body class='wym_dialog wym_dialog_preview' style=\"background-color:#F2F6FA;\" onload='WYMeditor.INIT_DIALOG(" + WYMeditor.INDEX + ")'></body>",
        statusHtml: "<div class='wym_status wym_section' style=\"border:0;\"><h2>{Status}</h2></div>",
        boxHtml: "<div class='wym_box' style=\"border:0;\"><div class='wym_area_top' style=\"border:0;\">" + WYMeditor.TOOLS + "</div><div class='wym_area_left' style=\"border:0;\"></div><div class='wym_area_right' style=\"border:0;\">" + WYMeditor.CONTAINERS + WYMeditor.CLASSES + "</div><div class='wym_area_main' style=\"border:0;\">" + WYMeditor.HTML + WYMeditor.IFRAME + WYMeditor.STATUS + "</div></div>",
        postInit: function(d) {
            StMsgEditINSTANCE = d;
            var c = d.tidy({
                sUrl: "var/wymeditor/plugins/tidy/tidy.php",
                sButtonHtml: "<li class='wym_tools_tidy'><a name='CleanUp' href='#' style='background-image: url( var/wymeditor/plugins/tidy/wand.png)'>Clean up HTML</a></li>"
            });
            c.init();
            $(".wym_box").css("display", "block");
            tabs_delimiter_height()
        }
    });
    if ($("#message_target_id_group").length) {
        blockAllUI()
    }
    $("#message_target_id_group").load("lists/all_rights_group/" + default_language + "/0/0/0/0/0/0/dummy.html", function(e, c, d) {
        UNblockAllUI()
    });
    $("#RMessagesTab").attr("on_show", "StMsg_OnShow();");
    UNblockAllUI();
    StMsg_OnShow()
}

function CLient_Details_Container_On_Show(c) {
    if (user_is_partner < 0) {
        var b = $(c).attr("selected_div");
        if ((b == null) || (b.length < 1)) {
            return
        }
        var d = $(b).find("form").find("[tabindex]:visible:enabled").get(0);
        if (d != null) {
            d.focus()
        }
    }
    tabs_delimiter_height()
}

function my_LExecute2() {
    var f = my_LSteps.shift();
    var b = f[0],
        d = $(b).attr("cl_id"),
        c = $(b).attr("sub_id"),
        e = $(b).attr("arch"),
        m = f[1];
    var n = false;
    if (m != "interventions/get_intervention_basic" && m != "calls/get_call") {
        n = true
    }
    if (n) {
        $(b).load(m, {
            inside: "yes",
            client_id: d,
            sub_id: c,
            for_inter: -1,
            arch: e
        }, function(q, o, p) {
            chkRes($(b), o, q);
            if (my_LSteps.length) {
                my_LExecute2()
            } else {
                $("#client_id_" + my_LCurrentIDD).attr("selected_div", "#client_" + my_LCurrentIDD + "_details_" + my_LCurrentIDD);
                var u = $("#client_id_" + my_LCurrentIDD).find("form").find("[tabindex]:visible:enabled").get(0);
                if (u != null) {
                    u.focus()
                }
                if (my_LCurrentInterID > 0) {
                    var r = $("#client_" + my_LCurrentIDD + "_intervention_" + my_LCurrentInterID + "nav");
                    client_details_switch(r, "#client_" + my_LCurrentIDD + "_intervention_" + my_LCurrentInterID);
                    my_LCurrentInterID = -1;
                    if (my_LCurrentCallID == -2) {
                        r = $("#client_id_" + my_LCurrentIDD).find("span.client_details_buttons").get(0);
                        client_details_new_call(r);
                        my_LCurrentCallID = -1
                    }
                }
                if (my_LCurrentCallID == -2) {
                    r = $("#client_id_" + my_LCurrentIDD).find("span.client_details_buttons").get(0);
                    client_details_new_call(r);
                    my_LCurrentCallID = -1
                }
                tabs_delimiter_height();
                UNblockAllUI();
                return
            }
        })
    } else {
        $("#" + $(b).attr("id") + "nav").attr("data-id_client", d).attr("data-arch", e);
        $("#" + $(b).attr("id") + "nav").css("opacity", 0.5);
        if (my_LSteps.length) {
            my_LExecute2()
        } else {
            $("#client_id_" + my_LCurrentIDD).attr("selected_div", "#client_" + my_LCurrentIDD + "_details_" + my_LCurrentIDD);
            var h = $("#client_id_" + my_LCurrentIDD).find("form").find("[tabindex]:visible:enabled").get(0);
            if (h != null) {
                h.focus()
            }
            if (my_LCurrentInterID > 0) {
                var g = $("#client_" + my_LCurrentIDD + "_intervention_" + my_LCurrentInterID + "nav");
                client_details_switch(g, "#client_" + my_LCurrentIDD + "_intervention_" + my_LCurrentInterID);
                my_LCurrentInterID = -1;
                if (my_LCurrentCallID == -2) {
                    g = $("#client_id_" + my_LCurrentIDD).find("span.client_details_buttons").get(0);
                    client_details_new_call(g);
                    my_LCurrentCallID = -1
                }
            }
            if (my_LCurrentCallID == -2) {
                g = $("#client_id_" + my_LCurrentIDD).find("span.client_details_buttons").get(0);
                client_details_new_call(g);
                my_LCurrentCallID = -1
            }
            tabs_delimiter_height();
            UNblockAllUI();
            return
        }
    }
}

function my_LExecute() {
    if (my_LLastStepResult == 0) {
        my_LExecute_Handler = setTimeout("my_LExecute()", 500);
        return
    }
    if (my_LCurrentStep >= my_LSteps.length) {
        my_LExecute_Handler = null;
        for (i = 0; i < my_LSteps.length; i++) {
            my_LSteps[i] = []
        }
        my_LSteps = [];
        $("#client_id_" + my_LCurrentIDD).attr("selected_div", "#client_" + my_LCurrentIDD + "_details_" + my_LCurrentIDD);
        var d = $("#client_id_" + my_LCurrentIDD).find("form").find("[tabindex]:visible:enabled").get(0);
        if (d != null) {
            d.focus()
        }
        if (my_LCurrentInterID > 0) {
            var c = $("#client_" + my_LCurrentIDD + "_intervention_" + my_LCurrentInterID + "nav");
            client_details_switch(c, "#client_" + my_LCurrentIDD + "_intervention_" + my_LCurrentInterID);
            my_LCurrentInterID = -1;
            if (my_LCurrentCallID == -2) {
                c = $("#client_id_" + my_LCurrentIDD).find("span.client_details_buttons").get(0);
                client_details_new_call(c);
                my_LCurrentCallID = -1
            }
        }
        if (my_LCurrentCallID == -2) {
            c = $("#client_id_" + my_LCurrentIDD).find("span.client_details_buttons").get(0);
            client_details_new_call(c);
            my_LCurrentCallID = -1
        }
        tabs_delimiter_height();
        UNblockAllUI();
        return
    }
    my_LLastStepResult = 0;
    var b = my_LSteps[my_LCurrentStep][0];
    $(b).load(my_LSteps[my_LCurrentStep][1], {
        inside: "yes",
        client_id: $(b).attr("cl_id"),
        sub_id: $(b).attr("sub_id"),
        for_inter: -1,
        arch: $(b).attr("arch")
    }, function(g, e, f) {
        chkRes($(b), e, g);
        my_LLastStepResult = 1
    });
    my_LCurrentStep++;
    my_LExecute_Handler = setTimeout("my_LExecute()", 1000)
}

function init_CLient_Details_Container_View(c, d, f) {
    blockAllUI();
    var g = c;
    if (c < 0) {
        g = "NEW"
    }
    var b = '"#client_id_' + g + '"';
    $("#client_id_" + g).attr("on_show", "CLient_Details_Container_On_Show(" + b + ");");
    var e = "#client_id_" + g;
    var m = TopRightTabs.find('a[href="' + e + '"]');
    if ($(m).length <= 0) {
        m = TopRightTabs.find("a[href=" + base_url_no_index + e + "]")
    }
    if ($(m).length > 0) {
        var h = m.parent().find(".ui-tabs-close").get(0);
        $(h).removeAttr("onclick");
        $(h).unbind("click");
        $(h).bind("click", function() {
            client_details_close($("#client_id_" + g).find(".client_details_buttons"))
        })
    }
    if (my_LExecute_Handler != null) {
        clearTimeout(my_LExecute_Handler);
        my_LExecute_Handler = null
    }
    my_LSteps = [];
    my_LCurrentStep = 0;
    my_LCurrentIDD = g;
    my_LCurrentInterID = d;
    my_LCurrentCallID = f;
    var n = 0;
    $("#client_id_" + g).find(".ClientDetailsCont_container_details").each(function(p, o) {
        my_LSteps[n] = new Array();
        my_LSteps[n][0] = o;
        my_LSteps[n][1] = "clients/get_client";
        n++
    });
    $("#client_id_" + g).find(".ClientDetailsCont_container_inter").each(function(p, o) {
        my_LSteps[n] = new Array();
        my_LSteps[n][0] = o;
        my_LSteps[n][1] = "interventions/get_intervention_basic";
        n++
    });
    $("#client_id_" + g).find(".ClientDetailsCont_container_call").each(function(p, o) {
        my_LSteps[n] = new Array();
        my_LSteps[n][0] = o;
        my_LSteps[n][1] = "calls/get_call";
        n++
    });
    my_LLastStepResult = 99;
    my_LExecute2();
    $(".ClientDetailsCont_Common_Nav").tooltip(ToolTipOptions);
    $("#client_id_" + g).find("[add_menu_id=1]").each(function(p, o) {
        $(o).contextMenu({
            menu: "ClientLeftIntersContextMenu",
            inSpeed: 0,
            outSpeed: 0
        }, ClientLeftIntersContextMenu)
    })
}

function client_details_refresh_internal(c, d) {
    blockAllUI();
    var e = $(c).parents("div.ui-tabs-panel").attr("client_id");
    var b = e;
    if (e < 0) {
        b = "NEW"
    }
    $("#client_id_" + b).html("");
    $("#client_id_" + b).load("clients/get_client_container", {
        inside: "yes",
        client_id: e,
        intervention_id: d,
        wcall_id: -1
    }, function(h, f, g) {
        chkRes($("#client_id_" + b), f, h);
        UNblockAllUI()
    })
}

function client_details_refresh_internal2(e, c) {
    blockAllUI();
    var d = e;
    var b = d;
    if (d < 0) {
        b = "NEW"
    }
    $("#client_id_" + b).html("");
    $("#client_id_" + b).load("clients/get_client_container", {
        inside: "yes",
        client_id: d,
        intervention_id: c,
        wcall_id: -1
    }, function(h, f, g) {
        chkRes($("#client_id_" + b), f, h);
        UNblockAllUI()
    })
}

function client_details_refresh(d) {
    var f = 0;
    var b = $(d).parent().parent().find(".ClientDetailsCont_Common_Nest");
    b.children("div").each(function(h, g) {
        if ($(g).attr("my_chng") > 0) {
            f++
        }
    });
    var c = $(d).parent().next(".ClientDetailsContainer").find("div.client_interventions.selected");
    var e = "-1";
    if (c.length) {
        e = c.attr("inter_id")
    }
    if (f > 0) {
        $.MyDLG(message_question_close, dlg_button_yes, dlg_button_no, function() {
            client_details_refresh_internal(d, e)
        }, function() {})
    } else {
        client_details_refresh_internal(d, e)
    }
}

function client_details_switch(q, d) {
    var m = $(d + "nav").attr("part_id");
    if (m == 1027) {
        if (user_group_id != 8109 && user_group_id != 8110) {
            alert("Vous n'Ãªtes pas autorisÃ© Ã  acceder a cette intervention!");
            return false
        }
    }
    var e = $(q).parent().parents("div");
    var u = e.attr("selected_div");
    var n = $(q).parent().parent().find(".ClientDetailsCont_Common_Nest");
    if (u != d) {
        var r = u + "nav";
        var b = e.get(0);
        $(u).addClass("ui-tabs-hide");
        $(d).removeClass("ui-tabs-hide");
        $(r).removeClass("selected");
        $(d + "nav").addClass("selected");
        e.attr("selected_div", d);
        tabs_delimiter_height();
        if (d.indexOf("intervention") !== -1) {
            if ($(d).html() == "") {
                var f = $(d + "nav").attr("inter_id"),
                    g = $(d + "nav").attr("data-id_client"),
                    h = $(d + "nav").attr("data-arch");
                $(d + "nav").fadeTo("slow", 1);
                blockAllUI();
                $(d).load("interventions/get_intervention", {
                    inside: "yes",
                    client_id: g,
                    sub_id: f,
                    for_inter: -1,
                    arch: h
                }, function(D, v, z) {
                    var E = $("select[name=partner_id]", d).val(),
                        C = "form" + d.replace("#", ""),
                        w = "#" + C + "_logistic";
                    UNblockAllUI();
                    if (f !== undefined && E !== undefined && w !== undefined) {
                        $(w).html('<div style="font-variant: small-caps;font-weight: bold;width: 100%;white-space:pre-wrap;color: black;background-color: #FFA07A;opacity: .9;padding: 5px 5px"><img src="/var/themes/default/img/loader.gif"> - Loading logistics parts, please wait...</div>').load("logistics/get_parts_by_inter", {
                            inside: "yes",
                            sub_id: f,
                            partner_id: E,
                            form_id: C
                        }, function(I, G, H) {})
                    }
                })
            } else {
                var f = $(d + "nav").attr("inter_id"),
                    m = $("select[name=partner_id]", d).val(),
                    c = "form" + d.replace("#", ""),
                    o = "#" + c + "_logistic";
                if (f !== undefined && m !== undefined && o !== undefined) {
                    $(o).html('<div style="font-variant: small-caps;font-weight: bold;width: 100%;white-space:pre-wrap;color: black;background-color: #FFA07A;opacity: .9;padding: 5px 5px"><img src="/var/themes/default/img/loader.gif"> - Loading logistics parts, please wait...</div>').load("logistics/get_parts_by_inter", {
                        inside: "yes",
                        sub_id: f,
                        partner_id: m,
                        form_id: c
                    }, function(z, v, w) {})
                }
            }
        }
        if (d.indexOf("_call_") !== -1) {
            if ($(d).html() == "") {
                var f = $(d + "nav").attr("call_id"),
                    g = $(d + "nav").attr("data-id_client"),
                    h = $(d + "nav").attr("data-arch");
                $(d + "nav").fadeTo("slow", 1);
                blockAllUI();
                $(d).load("calls/get_call", {
                    inside: "yes",
                    client_id: g,
                    sub_id: f,
                    for_inter: -1,
                    arch: h
                }, function(z, v, w) {
                    chkRes($(p), v, z);
                    client_details_switch(n, d);
                    UNblockAllUI()
                })
            } else {}
        }
        if (user_is_partner < 0) {
            var p = $(d).find("form").find("[tabindex]:visible:enabled").get(0);
            if (p != null) {
                p.focus()
            }
        }
    }
}

function client_details_new_intervention(p) {
    var c = $(p).parents("div.ui-tabs-panel").attr("client_id");
    var g = c;
    if (c < 0) {
        g = "NEW"
    }
    var q = "client_" + g + "_intervention_NEW";
    var n = $(p).parent().parent().find(".ClientDetailsCont_Common_Nest");
    if (n.find("#" + q).length <= 0) {
        blockAllUI();
        var r = $("#client_" + g + "_details_" + g).find("form");
        var m = $($(r).find("[name=client_name]").get(0)).val();
        var f = $($(r).find("[name=cl_zip_code]").get(0)).val();
        var h = $($(r).find("[name=cl_phone]").get(0)).val() + ";" + $($(r).find("[name=cl_fax]").get(0)).val() + ";" + $($(r).find("[name=cl_phone_work]").get(0)).val() + ";" + $($(r).find("[name=cl_mobile]").get(0)).val() + ";";
        var e = $(r).find("select[name=client_partner]").get(0);
        var u = $(e).children("option:eq(" + $(e).get(0).selectedIndex + ")").attr("value");
        if ((h == ";;;;") || (u == "") || (u == -1) || (m == "") || (f == "")) {
            UNblockAllUI();
            $.MyDLG(message_you_must_fill_fields2, dlg_button_ok, "", function() {}, function() {});
            return false
        }
        var b = $(p).parent().parent().find(".client_interventions_list").parent().parent();
        var d = $(p).parent().parent().find(".client_interventions_list").attr("nbInters");
        d++;
        $(p).parent().parent().find(".client_interventions_list").attr("nbInters", d);
        b.after('<tr id="' + q + '_TR"><td><div class="client_interventions" id="' + q + 'nav" onclick="client_details_switch(this,\'#' + q + '\')" style="max-width: 240px;overflow: hidden; text-overflow: ellipsis;">' + message_loading + "</div></td></tr>");
        n.append('<div class="ClientDetailsCont_container_inter ui-tabs-hide" id="' + q + '" my_chng="1" cl_id="' + c + '" sub_id="-1" arch="0"></div>');
        var o = n.find("#" + q);
        $(o).load("interventions/get_intervention", {
            inside: "yes",
            client_id: c,
            sub_id: -1,
            arch: 0,
            partner_id: u
        }, function(z, v, w) {
            chkRes($(o), v, z);
            client_details_switch(n, "#" + q);
            UNblockAllUI()
        })
    } else {
        client_details_switch(n, "#" + q)
    }
}

function client_details_new_intervention_cancel(d) {
    var f = $(d).parents("div.ui-tabs-panel").attr("client_id");
    var c = f;
    if (f < 0) {
        c = "NEW"
    }
    var b = "#client_" + c + "_intervention_NEW";
    var e = $(b + "_TR");
    e.parent().find(".client_details").click();
    e.remove();
    $(b).remove()
}

function client_details_new_call(z) {
    var n = $(z).parents("div.ui-tabs-panel").attr("client_id");
    var e = n;
    if (n < 0) {
        e = "NEW"
    }
    var p = "client_" + e + "_call_NEW";
    var g = $(z).parent().parent().find(".ClientDetailsCont_Common_Nest");
    if (g.find("#" + p).length <= 0) {
        var u = -99;
        var c = 0;
        var b = 0;
        var d = 0;
        var m = -1;
        var v = null;
        var C = $("#client_" + e + "_details_" + e).find("form");
        blockAllUI();
        var h = $(z).parent().parent().find(".client_interventions_list").attr("nbInters");
        var q = $(z).parent().parents("div").attr("selected_div").match(/#client_([^)]*)_intervention_([^)]*)/);
        if (q) {
            if (q[2] == "NEW") {
                u = -1
            } else {
                u = q[2]
            }
        }
        if (u < -1 && h != "0") {
            $.MyDLG(select_intervention_before, dlg_button_ok, "", function() {}, function() {});
            return false
        }
        m = $(z).parent().parents("div").attr("selected_div");
        v = $(m).find("select[name=partner_id]").get(0);
        For_Inter_Ref_Partner = $(m).find("[name=partner_ref]").val();
        if (h == "0") {
            u = "null";
            v = $(C).find("select[name=client_partner]").get(0)
        }
        var w = $(v).children("option:eq(" + $(v).get(0).selectedIndex + ")");
        if ($(w).length > 0) {
            c = w.attr("call_a");
            b = w.attr("call_b");
            d = w.attr("value")
        }
        var f = $($(C).find("[name=cl_phone]").get(0)).val() + ";" + $($(C).find("[name=cl_fax]").get(0)).val() + ";" + $($(C).find("[name=cl_phone_work]").get(0)).val() + ";" + $($(C).find("[name=cl_mobile]").get(0)).val() + ";";
        if ((f == ";;;;") || (d == "") || (d == -1)) {
            UNblockAllUI();
            $.MyDLG(message_you_must_fill_fields2, dlg_button_ok, "", function() {}, function() {});
            return false
        }
        var o = $(z).parent().parent().find(".client_calls_list").parent().parent();
        o.after('<tr id="' + p + '_TR"><td><div class="client_calls" id="' + p + 'nav" onclick="client_details_switch(this,\'#' + p + "')\">" + message_loading + "</div></td></tr>");
        g.append('<div class="ClientDetailsCont_container_call ui-tabs-hide" id="' + p + '" my_chng="1" cl_id="' + n + '" sub_id="-1" arch="0"></div>');
        var r = g.find("#" + p);
        $(r).load("calls/get_call", {
            inside: "yes",
            client_id: n,
            sub_id: -1,
            for_inter: u,
            arch: 0,
            call_a: c,
            call_b: b,
            phones: f,
            partner_id: d,
            ref_Partner: For_Inter_Ref_Partner
        }, function(G, D, E) {
            chkRes($(r), D, G);
            client_details_switch(g, "#" + p);
            UNblockAllUI()
        })
    } else {
        client_details_switch(g, "#" + p)
    }
}

function client_details_new_call_cancel(d) {
    var f = $(d).parents("div.ui-tabs-panel").attr("client_id");
    var c = f;
    if (f < 0) {
        c = "NEW"
    }
    var b = "#client_" + c + "_call_NEW";
    var e = $(b + "_TR");
    e.parent().find(".client_details").click();
    e.remove();
    $(b).remove()
}

function chgd_call_result(d, e) {
    $("div #planning" + e).html("");
    var c = $(d).val();
    if (c) {
        if (c == 1) {
            var b = $("div[id$=intervention_" + e + "][name=inter_stat]").val();
            if (false) {
                $("div #planning" + e).load("calls/js_get_planning_flds", {
                    inter_id: e
                }, function() {
                    LoadSelectFromHiddenStorageDIV("#call_inter_duration" + e, "inter_duration", "#interv_duration");
                    $("input[name=date_inter]").datepicker({
                        dateFormat: "yy-mm-dd",
                        duration: 0
                    });
                    $("input[name=heure_debut]").timepicker({
                        duration: 0
                    });
                    $("#call_inter_duration [name=inter_duration]").val($("div[id$=intervention_" + e + "] [name=inter_duration]").val())
                })
            }
        }
        chk4saved_qsts(e)
    } else {
        $("#std_qsts" + e).html("")
    }
    if (regional_version == "DE01") {
        fsuff = $(d).closest("form").attr("id");
        if (c == 8) {
            fsuff = $(d).closest("form").attr("id");
            $("input[name=req_date_certain_formulario]", "#" + fsuff).parents("p").hide();
            $("input[name=req_date_any_formulario]", "#" + fsuff).parents("p").hide();
            $("textarea[name=matter_of_call]", "#" + fsuff).parents("p").hide();
            $("select[name=orange_select_hors_perimetre]", "#" + fsuff).parents("p").hide();
            $("select[name=call_duration]", "#" + fsuff).parents("p").hide();
            $("select[name=origine_appel_list]", "#" + fsuff).parents("p").show();
            $("input[name=interv_prev_date]", "#" + fsuff).parents("p").show();
            $("input[name=interv_begin_hour]", "#" + fsuff).parents("p").show();
            $("textarea[name=origine_appel_list_extra_info]", "#" + fsuff).parents("p").show()
        } else {
            if (c == 1) {
                $("textarea[name=matter_of_call]", "#" + fsuff).parents("p").hide();
                $("select[name=call_duration]", "#" + fsuff).parents("p").hide();
                $("select[name=origine_appel_list]", "#" + fsuff).parents("p").hide();
                $("select[name=orange_select_hors_perimetre]", "#" + fsuff).parents("p").hide();
                $("input[name=interv_prev_date]", "#" + fsuff).parents("p").hide();
                $("input[name=interv_begin_hour]", "#" + fsuff).parents("p").hide();
                $("textarea[name=origine_appel_list_extra_info]", "#" + fsuff).parents("p").hide();
                $("input[name=req_date_certain_formulario]", "#" + fsuff).parents("p").show();
                $("input[name=req_date_any_formulario]", "#" + fsuff).parents("p").show()
            } else {
                if (c >= 2 && c <= 6) {
                    $("input[name=req_date_certain_formulario]", "#" + fsuff).parents("p").hide();
                    $("input[name=req_date_any_formulario]", "#" + fsuff).parents("p").hide();
                    $("textarea[name=matter_of_call]", "#" + fsuff).parents("p").hide();
                    $("select[name=call_duration]", "#" + fsuff).parents("p").hide();
                    $("select[name=origine_appel_list]", "#" + fsuff).parents("p").hide();
                    $("select[name=orange_select_hors_perimetre]", "#" + fsuff).parents("p").hide();
                    $("input[name=interv_prev_date]", "#" + fsuff).parents("p").hide();
                    $("input[name=interv_begin_hour]", "#" + fsuff).parents("p").hide();
                    $("textarea[name=origine_appel_list_extra_info]", "#" + fsuff).parents("p").show()
                } else {
                    $("input[name=req_date_certain_formulario]", "#" + fsuff).parents("p").show();
                    $("input[name=req_date_any_formulario]", "#" + fsuff).parents("p").show();
                    $("textarea[name=matter_of_call]", "#" + fsuff).parents("p").show();
                    $("select[name=orange_select_hors_perimetre]", "#" + fsuff).parents("p").show();
                    $("select[name=call_duration]", "#" + fsuff).parents("p").show();
                    $("select[name=origine_appel_list]", "#" + fsuff).parents("p").show();
                    $("input[name=interv_prev_date]", "#" + fsuff).parents("p").show();
                    $("input[name=interv_begin_hour]", "#" + fsuff).parents("p").show();
                    $("textarea[name=origine_appel_list_extra_info]", "#" + fsuff).parents("p").show()
                }
            }
        }
    }
}

function click_question_new(b) {
    if (get_call_result(b)) {
        call_std_question_new(b, "")
    } else {
        $.wkDLG(lang_std_question_result_first)
    }
}

function chk4saved_qsts(c) {
    var b = get_call_result(c);
    var d = $("#partner_id" + c).val();
    $.post("calls/js_chk4saved_qsts", {
        inter_id: c,
        call_result: b,
        part_id: d
    }, function(f) {
        chk_rsp_error(f);
        var e = {};
        if (f.length > 2) {
            if (confirm(lang_std_questions_ask)) {
                e = $.parseJSON(f)
            }
        }
        $("#std_qsts" + c).load("calls/js_get_std_questions", {
            inter_id: c,
            call_result: b,
            selected: e,
            part_id: d,
            id_call: 0
        }, function(h, g) {
            chk_rsp_error(h);
            if (g == "error") {
                alert(lang_action_failed)
            }
            UNblockAllUI()
        })
    })
}

function get_std_questions(h, e, d, f) {
    var g = $("#partner_id" + h).val();
    var m = get_call_result(h);
    blockAllUI();
    var b = {};
    var n = $('[id^="sel' + f + h + C_NQ + '"] :selected, [id^="sel' + f + h + '"]:checked');
    console.log(n);
    $(n).each(function() {
        var o = (this.id == "" ? this.parentElement.id : this.id);
        b[o.split(C_NA).join(":")] = this.value
    });
    if (typeof e == "object") {}
    console.log(b);
    if (f != 0) {
        var c = $(e).parents("form:first");
        $.post("calls/update_questions_call", c.serialize(), function(o, p) {
            if (p == "error") {
                alert(lang_action_failed)
            }
            UNblockAllUI()
        })
    }
    $("#std_qsts" + h).load("calls/js_get_std_questions", {
        inter_id: h,
        call_result: m,
        selected: b,
        part_id: g,
        id_call: f
    }, function(p, o) {
        chk_rsp_error(p);
        if (o == "error") {
            alert(lang_action_failed)
        }
        UNblockAllUI()
    });
    UNblockAllUI()
}

function update_matter_of_call(c, b) {
    var d = $(c).val();
    if (b > 0 && b != "") {
        $.post("calls/update_matter_call", {
            id_call: b,
            new_matter: d
        }, function(e, f) {
            if (f == "error") {
                alert(lang_action_failed)
            }
            UNblockAllUI()
        })
    }
}

function update_call_result_call(d, c) {
    var e = $("#call_orange_motive_" + c).val();
    var b = $("#id_part_" + c).val();
    var f = $(d).val();
    if (c > 0 && c != "" && e != "" && f != "") {
        blockAllUI();
        $.post("calls/update_res_call", {
            id_call: c,
            motif_call: e,
            res_call: f
        }, function(g, h) {
            if (h == "error") {
                alert(lang_action_failed)
            }
            if (b == 100 || b == 101 || b == 102) {
                generate_hp_complement(b, c, f)
            }
            UNblockAllUI()
        })
    }
}

function get_cas_hp(f) {
    var e = ["4685", "4697", "4709", "4721", "4733", "4745", "4757", "4769", "4781", "4793", "4805", "4817", "4829", "4841", "4865", "4877", "4889", "4901", "4913", "4684", "4696", "4708", "4720", "4732", "4744", "4756", "4768", "4780", "4792", "4804", "4816", "4828", "4840", "4864", "4876", "4888", "4900", "4912"];
    var d = ["4686", "4687", "4689", "4691", "4698", "4699", "4701", "4703", "4710", "4711", "4713", "4715", "4722", "4723", "4725", "4727", "4734", "4735", "4737", "4739", "4746", "4747", "4749", "4751", "4758", "4759", "4761", "4763", "4770", "4771", "4773", "4775", "4782", "4783", "4785", "4787", "4794", "4795", "4797", "4799", "4806", "4807", "4809", "4811", "4818", "4819", "4821", "4823", "4830", "4831", "4833", "4835", "4842", "4843", "4845", "4847", "4854", "4859", "4866", "4867", "4869", "4871", "4878", "4879", "4881", "4883", "4890", "4891", "4893", "4895", "4902", "4903", "4905", "4907", "4914", "4915", "4917", "4919"];
    var c = ["4690", "4692", "4693", "4694", "4695", "4702", "4704", "4705", "4706", "4707", "4714", "4716", "4717", "4718", "4719", "4726", "4728", "4729", "4730", "4731", "4738", "4740", "4741", "4742", "4743", "4750", "4752", "4753", "4754", "4755", "4762", "4764", "4765", "4766", "4767", "4774", "4776", "4777", "4778", "4779", "4786", "4788", "4789", "4790", "4791", "4798", "4800", "4801", "4802", "4803", "4810", "4812", "4813", "4814", "4815", "4822", "4824", "4825", "4826", "4827", "4834", "4836", "4837", "4838", "4839", "4846", "4848", "4849", "4850", "4851", "4860", "4862", "4863", "4870", "4872", "4873", "4874", "4875", "4882", "4884", "4885", "4886", "4887", "4894", "4896", "4897", "4898", "4899", "4906", "4908", "4909", "4910", "4911", "4918", "4920", "4921", "4922", "4923"];
    var b = ["4688", "4700", "4712", "4724", "4736", "4748", "4760", "4772", "4784", "4796", "4808", "4820", "4832", "4844", "4868", "4880", "4892", "4904", "4916"];
    if (e.indexOf(f) > -1) {
        return "CasA"
    } else {
        if (d.indexOf(f) > -1) {
            return "CasB"
        } else {
            if (c.indexOf(f) > -1) {
                return "CasC"
            } else {
                if (b.indexOf(f) > -1) {
                    return "CasD"
                } else {
                    return ""
                }
            }
        }
    }
}

function generate_hp_complement(c, d, e) {
    $("#p_uefi_tool_" + d).hide();
    $("#p_in_new_subcase_" + d).hide();
    $("#p_part_unavailable_" + d).hide();
    $("#uefi_tool_" + d + " option:first").prop("selected", true);
    $("#in_new_subcase_" + d + " option:first").prop("selected", true);
    $("#p_part_unavailable_" + d).val("");
    var b = get_cas_hp(e);
    if (b == "CasB" || b == "CasD") {
        if (c == 100) {
            $("#p_uefi_tool_" + d).show();
            $("#p_in_new_subcase_" + d).show()
        }
        if (b == "CasD") {
            $("#p_part_unavailable_" + d).show()
        }
    } else {
        if (b == "CasC") {
            if (c == 100) {
                $("#p_uefi_tool_" + d).show()
            }
        }
    }
}

function call_std_selquestion_new(f, e, d, c) {
    var b = $("#sel" + c + f + esc_id(d + C_NQ + ("0" + e).substr(-2))).val();
    call_std_question_new(f, d + C_NQ + b)
}

function call_std_question_new(d, b) {
    var c = prompt(lang_std_question_new_title);
    if (!c) {
        return
    }
    c = c.replace(/['\\]/g, " ");
    c = c.replace(/[ ]+/g, " ");
    $.wkDLG(lang_std_multiple_dlgtext, dlg_button_yes, function() {
        std_question_dlg_duty(d, c, 1, b)
    }, dlg_button_no, function() {
        std_question_dlg_duty(d, c, 0, b)
    })
}

function std_question_dlg_duty(e, d, b, c) {
    $.wkDLG(lang_std_question_duty, dlg_button_yes, function() {
        std_question_new(e, d, b, 1, c)
    }, dlg_button_no, function() {
        std_question_new(e, d, b, 0, c)
    })
}

function std_question_new(g, f, b, e, d) {
    var h = $("#partner_id" + g).val();
    var c = get_call_result(g);
    $.post("calls/js_std_question_new", {
        question_new: f,
        multiple: b,
        is_duty: e,
        call_result: c,
        nq_nax: d,
        part_id: h
    }, function(m) {
        if (m.toLowerCase().indexOf("error") != -1) {
            if (m.indexOf("Duplicate entry") >= 0) {
                $.wkDLG(lang_duplicate_entry)
            } else {
                ajaxerror(m)
            }
        } else {
            get_std_questions(g, false, "a1", 0)
        }
    })
}

function call_std_answer_new(g, e, d, c) {
    var h = $("#partner_id" + g).val();
    var b = get_call_result(g);
    var f = prompt(lang_std_answer_new_title);
    if (!f) {
        return
    }
    f = f.replace(/['\\]/g, " ");
    f = f.replace(/[ ]+/g, " ");
    e = ("0" + e).substr(-2);
    $.post("calls/js_std_answer_new", {
        answer_new: f,
        nq: e,
        call_result: b,
        nq_nax: d,
        part_id: h
    }, function(m) {
        if (m.toLowerCase().indexOf("error") != -1) {
            if (m.indexOf("Duplicate entry") != -1) {
                $.wkDLG(lang_duplicate_entry)
            } else {
                $.wkDLG(lang_action_failed)
            }
            if (wk_mode) {
                console.log(m)
            }
        } else {
            get_std_questions(g, $("#sel" + c + g + esc_id(d + C_NQ + e))[0], m, 0)
        }
    })
}

function call_std_question_del(f, e, d, c) {
    e = ("0" + e).substr(-2);
    var g = $("#partner_id" + f).val();
    var b = get_call_result(f);
    $.post("calls/js_std_question_del", {
        nq: e,
        call_result: b,
        nq_nax: d,
        part_id: g
    }, function(h) {
        chk_rsp_error(h);
        get_std_questions(f, false, "a2", 0)
    })
}

function call_std_selanswer_del(h, e, d, c) {
    e = ("0" + parseInt(e)).substr(-2);
    var m = $("#partner_id" + h).val();
    var b = get_call_result(h);
    var g = $("#sel" + c + h + esc_id(d + C_NQ) + e + " option:selected");
    var f = g.val();
    $.post("calls/js_std_answer_del", {
        nq_na: f,
        call_result: b,
        nq_nax: d,
        part_id: m
    }, function(n) {
        chk_rsp_error(n);
        get_std_questions(h, false, "a4", 0)
    })
}

function call_std_chkanswer_del(e, d, c) {
    var f = $("#partner_id" + e).val();
    var b = get_call_result(e);
    $.post("calls/js_std_answer_del", {
        nq_na: d,
        call_result: b,
        nq_nax: c,
        part_id: f
    }, function(g) {
        chk_rsp_error(g);
        get_std_questions(e, false, "a5", 0)
    })
}

function esc_id(b) {
    return b.replace(/\./g, "\\.").replace(/@/g, "\\@")
}

function get_call_result(b) {
    if ($("#call_result" + b).val()) {
        return $("#call_result" + b).val()
    } else {
        if ($("#call_result2" + b).val()) {
            return $("#call_result2" + b).val()
        } else {
            return false
        }
    }
}

function update_appel_complement(e, c, g) {
    var d = $(e).val();
    if (c > 0 && c != "") {
        $.post("calls/update_complement_call", {
            id_call: c,
            name_fld: g,
            field: d
        }, function(h, m) {
            if (m == "error") {
                alert(lang_action_failed)
            }
            UNblockAllUI()
        })
    }
    var b = $(e).attr("id");
    var f = "tech_on_site_" + c;
    if (b == f) {
        change_tech_on_site(e, c);
        if (d != "no") {
            $.post("calls/update_complement_call", {
                id_call: c,
                name_fld: "txt_02",
                field: ""
            }, function(h, m) {
                if (m == "error") {
                    alert(lang_action_failed)
                }
                UNblockAllUI()
            })
        }
    }
}

function change_tech_on_site(d, b) {
    var c = $(d).val();
    if (c == "no") {
        $("#tech_on_site_ifno_" + b + " option:first").prop("selected", true);
        $("#p_if_no_" + b).show()
    } else {
        $("#tech_on_site_ifno_" + b + " option:first").prop("selected", true);
        $("#p_if_no_" + b).hide()
    }
}

function send_to_hp(n, f, m) {
    var g = $("#call_orange_motive_" + n).val();
    var c = $("#call_result_" + n).val();
    var w = $("#tech_on_site_" + n).val();
    var r = $("#tech_on_site_ifno_" + n).val();
    var E = true;
    var h = "";
    var e = new Date();
    var v = ("0" + e.getDate()).slice(-2);
    var C = ("0" + (e.getMonth() + 1)).slice(-2);
    var q = e.getFullYear() + "-" + (C) + "-" + (v);
    if (g == "") {
        alert("Veuillez renseigner le champ Â« Motif de l'appel Â»!!");
        E = false
    } else {
        if (c == "") {
            alert("Veuillez renseigner le champ Â« Reslutat de l'appel Â»!!");
            E = false
        } else {
            if (w == "") {
                alert("Veuillez renseigner le champ Â« Is the technician on site? Â»!!");
                E = false
            } else {
                if (w == "no" && r == "") {
                    alert("Veuillez renseigner le champ Â« Si No Â»!!");
                    E = false
                }
            }
        }
    }
    if (E) {
        h = get_cas_hp(c);
        var u = $("#uefi_tool_" + n).val();
        var o = $("#in_new_subcase_" + n).val();
        var D = $("#matex_ref_dossier_" + n).val();
        var z = $("#if_new_ticket_" + n).val();
        var p = $("#part_unavailable_" + n).val();
        var d = $("#call_orange_motive_" + n + " option:selected").text();
        var b = $("#call_result_" + n + " option:selected").text();
        if (h == "CasB" || h == "CasD") {
            if (f == 100 && u == "") {
                alert("Veuillez renseigner le champ Â« CAT Asked to use UEFI Tool Â»!!");
                E = false
            } else {
                if (f == 100 && o == "") {
                    alert("Veuillez renseigner le champ Â« In new subcase, add special instruction for tattoo MB Â»!!");
                    E = false
                } else {
                    if (D.length < 12) {
                        alert("Veuillez bien renseigner le champ Â« New Subcase Â» (au minimum 12 caractÃ¨res)!!");
                        E = false
                    } else {
                        if (z == "") {
                            alert("Veuillez renseigner le champ Â« If new ticket Â»!!");
                            E = false
                        } else {
                            if (h == "CasD") {
                                if (p.length < 9) {
                                    alert("Veuillez bien renseigner le champ Â« Part unavailable Â» (au minimum 9 caractÃ¨res)!!");
                                    E = false
                                }
                            }
                        }
                    }
                }
            }
        } else {
            if (h == "CasC") {
                if (f == 100 && u == "") {
                    alert("Veuillez renseigner le champ Â« CAT Asked to use UEFI Tool Â»!!");
                    E = false
                } else {
                    if (D.length < 12) {
                        alert("Veuillez bien renseigner le champ Â« New Subcase Â» (au minimum 12 caractÃ¨res)!!");
                        E = false
                    } else {
                        if (z == "") {
                            alert("Veuillez renseigner le champ Â« If new ticket Â»!!");
                            E = false
                        }
                    }
                }
            }
        }
    }
    if (E) {
        blockAllUI();
        $.post("calls/get_info_for_hp", {
            id_inter: m
        }, function(J, H) {
            if (H == "error") {
                alert(lang_action_failed)
            }
            var L = J.split("||");
            var I = {};
            for (var K = 0; K < L.length; K++) {
                var T = L[K];
                var G = T.split("::");
                I[G[0]] = G[1]
            }
            var P = I.contenu_appel;
            var S = "";
            if (h == "CasA") {
                S += d + "\n";
                S += "Is the technician on site? :" + w + "\n";
                S += P + "\n";
                S += "*************Solution**************\n";
                S += b + "\n"
            } else {
                if (h == "CasB") {
                    S += d + "\n";
                    S += "Is the technician on site? :" + w + "\n";
                    if (f == 100) {
                        S += "CAT Asked to use UEFI Tool: " + u + "\n"
                    }
                    S += P + "\n";
                    S += "*************Solution**************\n";
                    S += "I send the following part(s):\n";
                    S += "**** Delivery Method/Next Step*****\n";
                    S += b + "\n";
                    S += "New Subcase : " + D + "\n";
                    S += "****Special instructions for CE****\n\n";
                    if (o == "yes") {
                        S += "In case of systemboard replacement: \n";
                        S += "- Run the nbdmifit.bat to correct date and time\n";
                        S += "- Branding : Set boot mode to UEFI Hybrid + boot on UEFI External USB from F9 (Boot menu)\n";
                        S += "- If you receive the following message : Your system is not fully configured...\n";
                        S += "- Run the sssm.bat to correct the issue from Wndmifit folder\n";
                        S += "- Run the rMpmCnt.bat to reset the counter from Wndmifit folder\n";
                        S += "- Run LOCKMPM.BAT to lock system board from Wndmifit\n"
                    }
                } else {
                    if (h == "CasC") {
                        S += d + "\n";
                        S += "Is the technician on site? :" + w + "\n";
                        if (f == 100) {
                            S += "CAT Asked to use UEFI Tool: " + u + "\n"
                        }
                        S += P + "\n";
                        S += "**** Delivery Method/Next Step*****\n";
                        S += b + "\n";
                        S += "New Subcase : " + D + "\n";
                        S += "****Elevation information****\n";
                        S += "Transfer_of_Customer_Ownership: No\n";
                        S += "---- Basic Information: ----\n";
                        S += "1. Customer Name : " + I.customer_name + "\n";
                        S += "2. Customer Phone number : " + I.customer_phonenumber + "\n";
                        S += "3. Customer Email address : " + I.customer_email + "\n";
                        S += "4. Agent's Email address : " + I.agent_email + "\n";
                        var O = "malik.dupre@pc30.fr";
                        if (f == 100) {
                            O = "guillaume.claes@solutions30.com"
                        }
                        S += "5. Mentorâ€™s Email address : " + O + "\n";
                        S += "---- Product Information ----\n";
                        S += "1. Model : " + I.reference + "\n";
                        S += "2. Serial Number : " + I.numero_serie + "\n";
                        S += "3. Product Number : " + I.description + "\n";
                        if (f == 100 || f == 102) {
                            S += "---- Issue Description ----\n"
                        } else {
                            S += "4. Docking station /Port replicator Model:\n";
                            S += "5. Total Install base:\n";
                            S += "6. Bios version:\n";
                            S += "7. Operating System and Image Source: Hp Image/Custom Image\n";
                            S += "8. Number of units affected\n";
                            S += "9. Service Pack:\n";
                            S += "10. Memory specs: (If different from Factory mention size and part no)\n";
                            S += "11. AC adapter details:\n";
                            S += "12: If Ext monitor/projector related mention make and model\n";
                            S += "13. Will the customer send unit for capture if needed: Yes/No\n";
                            S += "14. If driver related pls mention driver version\n";
                            S += "15. If software related pls mention software make and version\n";
                            S += "---- Issue Description ----\n"
                        }
                    } else {
                        if (h == "CasD") {
                            S += d + "\n";
                            S += "Is the technician on site? :" + w + "\n";
                            if (f == 100) {
                                S += "CAT Asked to use UEFI Tool: " + u + "\n"
                            }
                            S += P + "\n";
                            S += "*************Solution**************\n";
                            S += "I send the following part(s):\n";
                            S += "**** Delivery Method/Next Step*****\n";
                            S += b + "\n";
                            S += "New Subcase : " + D + "\n";
                            S += "****Special instructions for CE****\n";
                            if (o == "yes") {
                                S += "In case of systemboard replacement:\n";
                                S += "- Run the nbdmifit.bat to correct date and time\n";
                                S += "- Branding : Set boot mode to UEFI Hybrid + boot on UEFI External USB from F9 (Boot menu)\n";
                                S += "- If you receive the following message : Your system is not fully configured...\n";
                                S += "- Run the sssm.bat to correct the issue from Wndmifit folder\n";
                                S += "- Run the rMpmCnt.bat to reset the counter from Wndmifit folder \n";
                                S += "- Run LOCKMPM.BAT to lock system board from Wndmifit\n\n"
                            }
                            S += "******** Matex Information **********\n";
                            S += "Missing /Inactive Part (Parts required for repair but not available) : " + p + "\n\n";
                            S += "Functional Equivalent Reference : N/A\n";
                            S += "Functional Equivalent available : N/A\n";
                            S += "Solution 30 call back queue :FRY_CR SOL30 PPS KCI\n"
                        }
                    }
                }
            }
            if (h == "CasC") {
                $("#matex_eta_" + n).val(q);
                var R = "In Progress - Customer called";
                $("#statut_matex_" + n + ' option[value="' + R + '"]').attr("selected", "selected")
            } else {
                if (h == "CasD") {
                    $("#matex_eta_" + n).val(q);
                    var R = "In Progress - Customer to call";
                    $("#statut_matex_" + n + ' option[value="' + R + '"]').attr("selected", "selected")
                }
            }
            var Q = $("#matex_eta_" + n).val();
            var N = $("#statut_matex_" + n).val();
            var M = "uefi_tool::" + u + "||in_new_subcase::" + o + "||part_unavailable::" + p;
            $.post("calls/update_send_hp", {
                id_inter: m,
                id_call: n,
                raison: P,
                template: S,
                txt_03: M,
                matex_eta: Q,
                statut_matex: N
            }, function(U, V) {
                if (V == "error") {
                    alert(lang_action_failed)
                } else {
                    $("#matter_of_call_" + n).text(P);
                    $("#to_hp_" + n).text(S);
                    alert("Success Send Log Note to HP")
                }
                UNblockAllUI()
            });
            UNblockAllUI()
        })
    }
}

function my_Execute() {
    if (my_LastStepResult == 0) {
        my_Execute_Handler = setTimeout("my_Execute()", 10);
        return
    }
    if ((my_CurrentStep >= my_Steps.length) || (my_LastStepResult < 0)) {
        my_Execute_Handler = null;
        if (my_Close_After_Save && (my_LastStepResult >= 0) && (my_Initiator_Obj != null)) {
            client_details_close(my_Initiator_Obj);
            my_Close_After_Save = false;
            my_Initiator_Obj = null
        }
        UNblockAllUI();
        return
    }
    my_LastStepResult = 0;
    $(my_Steps[my_CurrentStep]).submit();
    my_CurrentStep++;
    my_Execute_Handler = setTimeout("my_Execute()", 100)
}

function client_details_save_all(d) {
    $(d).hide();
    blockAllUI();
    var c = $(d).parent().parent().find(".ClientDetailsCont_Common_Nest");
    var b = false;
    if (my_Execute_Handler != null) {
        clearTimeout(my_Execute_Handler);
        my_Execute_Handler = null
    }
    my_Steps = [];
    my_CurrentStep = 0;
    c.children("div.ClientDetailsCont_container_details").each(function(f, e) {
        if ($(e).attr("my_chng") > 0) {
            my_Steps[my_Steps.length] = $(e).find("form")
        }
    });
    c.children("div.ClientDetailsCont_container_inter").each(function(f, e) {
        if ($(e).attr("my_chng") > 0) {
            my_Steps[my_Steps.length] = $(e).find("form")
        }
    });
    c.children("div.ClientDetailsCont_container_call").each(function(f, e) {
        if ($(e).attr("my_chng") > 0) {
            my_Steps[my_Steps.length] = $(e).find("form")
        }
    });
    my_LastStepResult = 99;
    my_Execute();
    $(d).show()
}

function client_details_new_cancel(c, d) {
    var d = $(c).parents("div.ui-tabs-panel").attr("client_id");
    var b = d;
    if (d < 0) {
        b = "NEW"
    }
    client_details_close($("#client_id_" + b).find(".client_details_buttons"))
}

function client_details_close(e) {
    var f = $(e).parents("div.ui-tabs-panel").attr("client_id");
    var d = f;
    if (f < 0) {
        d = "NEW"
    }
    var c = "#client_id_" + d;
    var h = TopRightTabs.find("a").index($('a[href="' + c + '"]'));
    if (!(h >= 0)) {
        h = TopRightTabs.find("a").index($("a[href=" + base_url_no_index + c + "]"))
    }
    if (h >= 0) {
        var g = 0;
        var b = $(e).parent().parent().find(".ClientDetailsCont_Common_Nest");
        b.children("div").each(function(o, m) {
            if ($(m).attr("my_chng") > 0) {
                g++
            }
        });
        if (g > 0 && !wk_mode) {
            $.MyDLG(message_question_close, dlg_button_yes, dlg_button_no, function() {
                if (TopRightTabs) {
                    $("#client_id_" + d).html("");
                    if (TopRightPreviousTab) {
                        TopRightTabs.tabs("select", TopRightPreviousTab)
                    }
                    TopRightTabs.tabs("remove", h)
                }
            }, function() {})
        } else {
            $("#client_id_" + d).html("");
            if (TopRightTabs) {
                if (TopRightPreviousTab) {
                    TopRightTabs.tabs("select", TopRightPreviousTab)
                }
                TopRightTabs.tabs("remove", h)
            }
        }
        if (regional_version == "DE01" && d > 0) {
            $.post("clients/clearLock", {
                inside: "yes",
                client_id: d
            }, function(o, m, n) {})
        }
    }
}

function client_details_save_all_and_close(b) {
    my_Close_After_Save = true;
    my_Initiator_Obj = b;
    client_details_save_all(b)
}

function init_User_Settings_View(h, g, f, c, b) {
    blockAllUI();
    var e = $("#form_user_settings").find("[name=user_lang]");
    e.load("lists/user_settings_lang/" + default_language + "/0/0/0/0/0/0/dummy.html", function(p, m, o) {
        chkRes(e, m, p);
        if ($(e).attr("my_sel") != "") {
            var n = $(e).attr("my_sel");
            get_option_from_value(e, n).attr("selected", "selected")
        }
        UNblockAllUI()
    });
    blockAllUI();
    var d = $("#form_user_settings").find("[name=user_theme]");
    d.load("lists/user_settings_theme/" + default_language + "/0/0/0/0/0/0/dummy.html", function(p, m, o) {
        chkRes(d, m, p);
        if ($(d).attr("my_sel") != "") {
            var n = $(d).attr("my_sel");
            get_option_from_value(d, n).attr("selected", "selected")
        }
        UNblockAllUI()
    });
    $("#form_user_settings").submit(function(n) {
        n.stopImmediatePropagation();
        var m = {
            target: "#dummy_container",
            url: "user_settings/save_settings",
            type: "post",
            beforeSubmit: function(q, p, o) {
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(p, o) {
                UNblockAllUI()
            }
        };
        $("#form_user_settings").ajaxSubmit(m);
        return false
    })
}

function ClientDetails_Common_Change(b) {
    $(b).parents("div[my_chng]").attr("my_chng", 1);
    if (myDEBUG) {
        $(b).parents("div[my_chng]").find(".error_msg_area").html("debug:" + $(b).attr("name") + " was changed")
    }
}

function ClientDetails_Common_OnFocus(b) {
    $(b).attr("my_before", $(b).val())
}

function ClientDetails_Common_OnBlur(b) {
    if ($(b).val() != $(b).attr("my_before")) {
        ClientDetails_Common_Change(b)
    }
}

function ClientDetails_Common_set_On_Change(b) {
    b.find("input").each(function(d, c) {
        $(c).bind("change", function() {
            ClientDetails_Common_Change(this)
        });
        $(c).bind("focus", function() {
            ClientDetails_Common_OnFocus(this)
        });
        $(c).bind("blur", function() {
            ClientDetails_Common_OnBlur(this)
        })
    });
    b.find("select").each(function(d, c) {
        $(c).bind("change", function() {
            ClientDetails_Common_Change(this)
        });
        $(c).bind("focus", function() {
            ClientDetails_Common_OnFocus(this)
        });
        $(c).bind("blur", function() {
            ClientDetails_Common_OnBlur(this)
        })
    });
    b.find("textarea").each(function(d, c) {
        $(c).bind("change", function() {
            ClientDetails_Common_Change(this)
        });
        $(c).bind("focus", function() {
            ClientDetails_Common_OnFocus(this)
        });
        $(c).bind("blur", function() {
            ClientDetails_Common_OnBlur(this)
        })
    })
}

function ClientDetails_Enterprise_Change_Switch(c) {
    var b = $(c).attr("checked");
    $(c).parents("form").children(".enterprise").each(function(e, d) {
        if (b) {
            $(d).show()
        } else {
            $(d).hide()
        }
    })
}

function ClientDetails_Enterprise_Change(b) {
    ClientDetails_Common_Change(b);
    ClientDetails_Enterprise_Change_Switch(b)
}

function ClientDetails_Partners_Change_Switch(c) {
    var b = $(c).children("option:eq(" + $(c).get(0).selectedIndex + ")").attr("cli_add");
    $(c).parents("form").children(".client_add_a").each(function(e, d) {
        if (b == 1) {
            $(d).show()
        } else {
            $(d).hide()
        }
    });
    $(c).parents("form").children(".client_add_b").each(function(e, d) {
        if (b == 2) {
            $(d).show()
        } else {
            $(d).hide()
        }
    });
    $(c).parents("form").children(".client_add_c").each(function(e, d) {
        if (b == 3) {
            $(d).show()
        } else {
            $(d).hide()
        }
    });
    $(c).parents("form").children(".client_add_d").each(function(e, d) {
        if (b == 4) {
            $(d).show()
        } else {
            $(d).hide()
        }
    })
}

function ClientDetails_Parthers_Change(b) {
    ClientDetails_Common_Change(b);
    ClientDetails_Partners_Change_Switch(b)
}

function ClientDetailsReportFormError(c, b) {
    client_details_switch(c.parents(".ClientDetailsCont_Common_Nest"), b);
    $(b).find(".error_msg_area").html();
    $.MyDLG(message_you_must_fill_fields, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function ClientDetailsReportFormError_BadOrder(c, b) {
    $(b).find(".error_msg_area").html(message_you_must_save_in_good_order);
    $.MyDLG(message_you_must_save_in_good_order, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function ClientDetails_ReSet_IDs(f, g, d, e, m, c, h) {
    if ($(f).length > 0) {
        $(f).html(g);
        $(f).attr("title", g)
    } else {
        var b = $("#form" + d).find("input[name=old_suff]").val();
        if ((b != null) && (b != "")) {
            $("#" + b + "_TR").html('<td><div class="' + e + '" id="' + d + 'nav" onclick="client_details_switch(this,\'#' + d + '\')" style="max-width: 240px;overflow: hidden; text-overflow: ellipsis;">' + g + "</div></td>");
            $("#" + b + "_TR").attr("id", d + "_TR");
            if ($("#" + b).parents("div.ui-tabs-panel").attr("selected_div") == ("#" + b)) {
                $("#" + b).parents("div.ui-tabs-panel").attr("selected_div", "#" + d)
            }
            $("#" + b).attr("sub_id", c);
            $("#" + b).attr("cl_id", m);
            $("#" + b).attr("my_chng", 0);
            $("#" + b).attr("id", d);
            switch (h) {
                case 1:
                    $("#" + d + "nav").contextMenu({
                        menu: "ClientLeftIntersContextMenu",
                        inSpeed: 0,
                        outSpeed: 0
                    }, ClientLeftIntersContextMenu);
                    $("#" + d + "nav").attr("inter_id", c);
                    break;
                default:
                    break
            }
        }
    }
    $("#form" + d).find("input[name=old_suff]").val(d)
}

function GoToAgency(b) {
    blockAllUI();
    $("#dummy_container").load("interventions/get_some_data_intervention", {
        inside: "yes",
        inter_id: b
    }, function(c, f, d) {
        chkRes($("#dummy_container"), f, c);
        var m = $("#x_some_data_inter");
        var p = $(m).attr("i_state");
        if (p == 0) {
            Get_And_Select_Recommended_Agency($(m).attr("c_zip"), $(m).attr("c_id"), $(m).attr("i_id"))
        } else {
            Planning_date = $(m).attr("i_date");
            $(".temp_text_messageC").html(Planning_date);
            $("#PlanningCalendar").datepicker("setDate", new Date($(m).attr("Y"), $(m).attr("M"), $(m).attr("D"), 8, 0, 0, 0));
            var o = $(m).attr("s_id");
            var g = $(m).attr("a_id");
            var e = false;
            var h = null;
            var n = null;
            if ((o >= 0) && (g >= 0)) {
                h = $("#LAgenciesTabTree").find('span[ag_id="' + o + '"]');
                n = $("#LAgenciesTabTree").find('a[a_id="' + g + '"]');
                if (($(h).length > 0) && ($(n).length > 0)) {
                    e = true
                }
            }
            if (e) {
                $(h).click();
                $(n).attr("selected", "selected");
                SCA(n, b)
            } else {
                $("#LAgenciesTabTree").find(".collapsable-hitarea").click();
                Planning_age_id = -1;
                Planning_age_name = "";
                $(".temp_text_messageA").html("&nbsp;");
                $(".temp_text_messageB").html("&nbsp;");
                LoadTimeTables(1, b);
                if (TopRightTabs) {
                    TopRightTabs.tabs("select", "#RPlanningTab")
                }
            }
        }
        UNblockAllUI()
    })
}

function GoToAgencyByTech() {
    var b = $("#right_top_level_tabs").find("input[name=Time_table_tech_name]").val();
    blockAllUI();
    $("#dummy_container").load("planning/get_data_by_tech", {
        inside: "yes",
        techName: b
    }, function(d, h, e) {
        chkRes($("#dummy_container"), h, d);
        var q = $("#x_some_data_inter");
        var m = $(q).attr("e_id");
        var n = $(q).attr("a_id");
        var u = $(q).attr("s_id");
        var f = $(q).attr("Y");
        var o = $(q).attr("M");
        var c = $(q).attr("D");
        inter_id = "";
        $(".temp_text_messageC").html(Planning_date);
        var g = false;
        var p = null;
        var r = null;
        if ((u >= 0) && (n >= 0)) {
            p = $("#LAgenciesTabTree").find('span[ag_id="' + u + '"]');
            r = $("#LAgenciesTabTree").find('a[a_id="' + n + '"]');
            if (($(p).length > 0) && ($(r).length > 0)) {
                g = true
            }
        }
        if (g) {
            $(p).click();
            $(r).attr("selected", "selected");
            SCA(r, inter_id)
        } else {
            $("#LAgenciesTabTree").find(".collapsable-hitarea").click();
            Planning_age_id = -1;
            Planning_age_name = "";
            $(".temp_text_messageA").html("&nbsp;");
            $(".temp_text_messageB").html("&nbsp;");
            LoadTimeTables(1, inter_id);
            if (TopRightTabs) {
                TopRightTabs.tabs("select", "#RPlanningTab")
            }
        }
        UNblockAllUI();
        $("#right_top_level_tabs").find("input[name=Time_table_tech_name]").val("")
    })
}

function ClientLeftIntersContextMenu(b, c, d) {
    if (b == "print") {
        if ($(c).attr("inter_id") > 0) {
            OpenNewPrintWindow("printing/ints/2000-01-01/1/2/" + $(c).attr("inter_id") + "/intervention_2000-01-01_a1_i" + $(c).attr("inter_id") + ".pdf")
        }
        return
    }
    if (b == "open_agency") {
        if ($(c).attr("inter_id") > 0) {
            GoToAgency($(c).attr("inter_id"))
        }
        return
    }
    if (b == "close") {
        return
    }
}

function Call_Verification_Change_Switch(d) {
    var c = $(d).attr("checked");
    var b = $(d).parents("form");
    if (c) {
        $(b).find("input[name=call_line_activ]").removeAttr("disabled");
        $(b).find("input[name=call_equipment_rec]").removeAttr("disabled");
        $(b).find("input[name=call_equipment_ident]").removeAttr("disabled")
    } else {
        $(b).find("input[name=call_line_activ]").attr("disabled", "disabled");
        $(b).find("input[name=call_equipment_rec]").attr("disabled", "disabled");
        $(b).find("input[name=call_equipment_ident]").attr("disabled", "disabled")
    }
}

function Call_Verification_Change(b) {
    ClientDetails_Common_Change(b);
    Call_Verification_Change_Switch(b)
}

function CALL_LoadCommonResultOfCall(d, g, e, h, f, b) {
    var c = $(d).parents("form").find("select[name=call_res_combobox]");
    if ((c == null) || ($(c).length < 1)) {
        return
    }
    blockAllUI();
    $(c).load("lists/call_common_result_of_call/" + default_language + "/" + f + "/" + h + "/" + b + "/" + g + "/" + e + "/0/dummy.html", function(p, m, o) {
        chkRes($(c), m, p);
        if ($(c).attr("my_sel") != "") {
            var n = $(c).attr("my_sel");
            get_option_from_value(c, n).attr("selected", "selected")
        }
        if (h != null) {
            UNblockAllUI()
        }
    })
}

function CALL_LoadCommonResultOfCall2(h, n, m, e, c, g, b, f) {
    var d = $("#call_result_" + b);
    $(d).load("lists/call_common_result_of_call/" + default_language + "/" + c + "/" + e + "/" + g + "/" + n + "/" + m + "/0/dummy.html", function(r, o, q) {
        chkRes($(d), o, r);
        if ($(d).attr("my_sel") != "") {
            var p = $(d).attr("my_sel");
            get_option_from_value(d, p).attr("selected", "selected")
        }
        if (e != null) {
            UNblockAllUI()
        }
    })
}

function CALL_LoadOrangeResult2(m, o, n, g, c, h, e, b, f) {
    var d = $("#call_result_" + b);
    if ((d == null) || ($(d).length < 1)) {
        return
    }
    blockAllUI();
    $(d).load("lists/call_orange_result/" + default_language + "/" + c + "/" + g + "/" + h + "/" + e + "/" + o + "/" + n + "/dummy.html", function(u, p, r) {
        chkRes($(d), p, u);
        if ($(d).attr("my_sel") != "") {
            var q = $(d).attr("my_sel");
            get_option_from_value(d, q).attr("selected", "selected")
        }
        UNblockAllUI()
    })
}

function CALL_LoadOrangeMotive(d, g, e, h, f, b) {
    var c = $(d).parents("form").find("select[name=call_orange_motive]");
    if ((c == null) || ($(c).length < 1)) {
        return
    }
    blockAllUI();
    $(d).parents("form").find("select[name=call_orange_result]").html("");
    $(c).load("lists/call_orange_motive/" + default_language + "/" + f + "/" + h + "/" + b + "/" + g + "/" + e + "/0/dummy.html", function(p, m, o) {
        chkRes($(c), m, p);
        if ($(c).attr("my_sel") != "") {
            var n = $(c).attr("my_sel");
            get_option_from_value(c, n).attr("selected", "selected")
        }
        UNblockAllUI()
    })
}

function CALL_LoadOrangeMotive2(e, h, f, m, g, c, b) {
    var d = $("#call_orange_motive_" + b);
    if ((d == null) || ($(d).length < 1)) {
        return
    }
    blockAllUI();
    $("#call_result_" + b).html("");
    $(d).load("lists/call_orange_motive/" + default_language + "/" + g + "/" + m + "/" + c + "/" + h + "/" + f + "/0/dummy.html", function(q, n, p) {
        chkRes($(d), n, q);
        $("#call_orange_motive_" + b).attr("my_sel", c);
        if ($(d).attr("my_sel") != "") {
            var o = $(d).attr("my_sel");
            get_option_from_value(d, o).attr("selected", "selected")
        }
        UNblockAllUI()
    })
}

function CALL_LoadOrangeResult(e, h, f, m, g, c, b) {
    var d = $(e).parents("form").find("select[name=call_orange_result]");
    if ((d == null) || ($(d).length < 1)) {
        return
    }
    blockAllUI();
    $(d).load("lists/call_orange_result/" + default_language + "/" + g + "/" + m + "/" + c + "/" + b + "/" + h + "/" + f + "/dummy.html", function(q, n, p) {
        chkRes($(d), n, q);
        if ($(d).attr("my_sel") != "") {
            var o = $(d).attr("my_sel");
            get_option_from_value(d, o).attr("selected", "selected")
        }
        UNblockAllUI()
    })
}

function Call_Orange_Motive_Change_Switch(m) {
    blockAllUI();
    var b = $(m).children("option:eq(" + $(m).get(0).selectedIndex + ")");
    if ($(b).length > 0) {
        var f = b.attr("value");
        if ((f == "") || (f == -1)) {
            $(m).parents("form").find("select[name=call_orange_result]").html("")
        } else {
            var c = $(m).parents("form");
            var o = $(c).find("input[name=call_a]").val();
            var n = $(c).find("input[name=call_b]").val();
            var h = $(c).find("input[name=partner_id]").val();
            var e = $(c).find("select[name=type_of_call]");
            var d = $(e).children("option:eq(" + $(e).get(0).selectedIndex + ")").attr("value");
            var e = $(c).find("select[name=motive]");
            var g = $(e).children("option:eq(" + $(e).get(0).selectedIndex + ")").attr("value");
            if ((f != "") && (f != -1)) {
                g = 0
            }
            CALL_LoadOrangeResult(m, o, n, h, d, g, f)
        }
    }
    UNblockAllUI()
}

function Call_Orange_Motive_Change(b) {
    ClientDetails_Common_Change(b);
    Call_Orange_Motive_Change_Switch(b)
}

function Call_Orange_Result_Change(d) {
    var b = $(d).children("option:eq(" + $(d).get(0).selectedIndex + ")");
    var e = $(b).attr("annulation");
    var c = $(d).parents("form").find('input[name="orange_appel_annulation"]');
    $(c).val(e)
}

function Call_Motive_Change_Switch(m) {
    blockAllUI();
    var b = $(m).children("option:eq(" + $(m).get(0).selectedIndex + ")");
    if ($(b).length > 0) {
        var g = b.attr("value");
        var c = $(m).parents("form");
        var o = $(c).find("input[name=call_a]").val();
        var n = $(c).find("input[name=call_b]").val();
        var h = $(c).find("input[name=partner_id]").val();
        var e = $(c).find("input[name=quick_call]").val();
        var f = $(c).find("select[name=type_of_call]");
        var d = $(f).children("option:eq(" + $(f).get(0).selectedIndex + ")").attr("value");
        if (e != null) {
            CALL_LoadCommonResultOfCall(m, o, n, h, d, g)
        }
        if (h >= 0) {
            CALL_LoadCommonResultOfCall(m, o, n, h, d, g)
        }
        if (n == 1) {
            CALL_LoadOrangeMotive(m, o, n, h, d, g)
        }
    }
    UNblockAllUI()
}

function Call_Motive_Change(b) {
    ClientDetails_Common_Change(b);
    Call_Motive_Change_Switch(b)
}

function Call_Type_Change_Switch(m) {
    blockAllUI();
    var b = $(m).children("option:eq(" + $(m).get(0).selectedIndex + ")");
    if ($(b).length > 0) {
        var d = b.attr("value");
        var c = $(m).parents("form");
        var o = $(c).find("input[name=call_a]").val();
        var n = $(c).find("input[name=call_b]").val();
        var h = $(c).find("input[name=partner_id]").val();
        var e = $(c).find("input[name=quick_call]").val();
        var f = $(c).find("select[name=motive]");
        var g = $(f).children("option:eq(" + $(f).get(0).selectedIndex + ")").attr("value");
        if (e != null) {
            var o = b.attr("call_a");
            var n = b.attr("call_b");
            var h = d;
            if (n == 0) {
                Set_Disabled($(c).find("select[name=call_orange_motive]"));
                Set_Disabled($(c).find("select[name=call_orange_result]"));
                $(c).find("select[name=call_orange_motive]").get(0).selectedIndex = -1;
                $(c).find("select[name=call_orange_result]").get(0).selectedIndex = -1;
                SetSelectedByOptionAndEnable($(c).find("select[name=motive]"), "", true);
                SetSelectedByOptionAndEnable($(c).find("select[name=call_res_combobox]"), "", true)
            } else {
                SetSelectedByOptionAndEnable($(c).find("select[name=call_orange_motive]"), "", true);
                SetSelectedByOptionAndEnable($(c).find("select[name=call_orange_result]"), "", true);
                Set_Disabled($(c).find("select[name=motive]"));
                Set_Disabled($(c).find("select[name=call_res_combobox]"));
                $(c).find("select[name=motive]").get(0).selectedIndex = -1;
                $(c).find("select[name=call_res_combobox]").get(0).selectedIndex = -1
            }
        }
        if (h >= 0) {
            CALL_LoadCommonResultOfCall(m, o, n, h, d, g)
        }
        if (n == 1) {
            CALL_LoadOrangeMotive(m, o, n, h, d, g)
        }
    }
    UNblockAllUI()
}

function Call_Type_Change_Switch2(h, b) {
    blockAllUI();
    var n = $("#call_a_" + b).val();
    var m = $("#call_b_" + b).val();
    var c = $("#type_of_call_" + b).val();
    var e = $("#id_part_" + b).val();
    var f = $("#call_orange_motive_" + b).val();
    var g = $("#id_result_appel_" + b).val();
    if (m == 1) {
        CALL_LoadOrangeMotive2(h, n, m, e, c, f, b)
    }
    if (e >= 0) {
        if (m == 0) {
            CALL_LoadCommonResultOfCall2(h, n, m, e, c, f, b, g)
        } else {
            CALL_LoadOrangeResult2(h, n, m, e, c, 0, f, b, g)
        }
    } else {
        var d = $("#call_orange_motive_" + b);
        get_option_from_value(d, f).attr("selected", "selected")
    }
    UNblockAllUI()
}

function Call_Type_Change(b) {
    ClientDetails_Common_Change(b);
    Call_Type_Change_Switch(b)
}

function Call_Activate_Select_Perimetre(c) {
    var b = $(c).parents("form");
    if (($(b).find("select[name=call_orange_result]").val() != 830) && ($(b).find("select[name=call_orange_result]").val() != 1753)) {
        Set_Disabled($(b).find("select[name=orange_select_hors_perimetre]"))
    } else {
        $(b).find("select[name=orange_select_hors_perimetre]").removeAttr("disabled");
        $(b).find("select[name=orange_select_hors_perimetre]").removeClass("disabled")
    }
}

function init_Call_View(C, c, b, D, u, o) {
    var w = "#" + o;
    var q = "#" + o + "nav";
    var r = "#formclient_" + C + "_intervention_" + b;
    var p = $(r).find('input[name="etat_inter"]').val();
    var v = new Date(SRVtime * 1000);
    if (c == -1) {
        LoadSelectFromHiddenStorage(o, "call_duration", "#common_call_duration");
        LoadSelectFromHiddenStorage(o, "origine_appel_list", "#origine_appel_list");
        LoadSelectFromHiddenStorage(o, "orange_select_hors_perimetre", "#orange_hors_perimetre");
        LoadSelectFromHiddenStorage(o, "call_vru_formazione_addizionale_argo_princ_call", "#vru_formazione_addizionale_argo_princ");
        LoadSelectFromHiddenStorage(o, "call_vru_formazione_addizionale_argo_secon_call", "#vru_formazione_addizionale_argo_secon");
        $("#form" + o).find("select[name=call_orange_result]").bind("change", function() {
            Call_Activate_Select_Perimetre(this)
        });
        Set_Disabled($("#form" + o).find("select[name=orange_select_hors_perimetre]"));
        $("#form" + o).find("select[name=call_orange_result]").bind("change", function() {
            Call_Orange_Result_Change(this)
        });
        ClientDetails_Common_set_On_Change($("#form" + o));
        $("#form" + o).find("select[name=type_of_call]").bind("change", function() {
            Call_Type_Change(this)
        });
        Call_Type_Change_Switch($("#form" + o).find("select[name=type_of_call]").get(0));
        $("#form" + o).find("select[name=motive]").bind("change", function() {
            Call_Motive_Change(this)
        });
        $("#form" + o).find("select[name=call_orange_motive]").bind("change", function() {
            Call_Orange_Motive_Change(this)
        });
        Call_Orange_Motive_Change_Switch($("#form" + o).find("select[name=call_orange_motive]").get(0));
        $("#form" + o).find("input[name=call_verification]").bind("change", function() {
            Call_Verification_Change(this)
        });
        Call_Verification_Change_Switch($("#form" + o).find("input[name=call_verification]").get(0));
        $("#form" + o).find("[name=interv_prev_date]").datepicker({
            firstDay: 1,
            changeFirstDay: false,
            changeYear: false,
            yearRange: "-1:+1",
            minDate: new Date(v.getTime() - CalendarDeltaMin),
            maxDate: new Date(v.getTime() + CalendarDeltaMax),
            dateFormat: "yy-mm-dd",
            duration: ""
        });
        $("#form" + o).find("[name=interv_begin_hour]").timepicker({});
        $("#form" + o).submit(function(G) {
            G.stopImmediatePropagation();
            var E = {
                target: w,
                url: "calls/save_call",
                type: "post",
                beforeSubmit: function(Y, I, N) {
                    if (!wk_mode) {
                        blockAllUI()
                    }
                    var ag = I[0];
                    var S = "#submit" + o;
                    $(S).attr("disabled", "true");
                    var J = $(ag).find("input[name=call_a]").val();
                    var H = $(ag).find("input[name=call_b]").val();
                    if (J == 2) {
                        if (ag.call_vru_formazione_addizionale_argo_princ.value == "") {
                            ClientDetailsReportFormError(I, w);
                            return false
                        }
                        if (ag.call_vru_formazione_addizionale_argo_secon.value == "") {
                            ClientDetailsReportFormError(I, w);
                            return false
                        }
                    }
                    if (H == 1) {
                        $(ag).find("select[name=motive]").get(0).selectedIndex = -1;
                        $(ag).find("select[name=call_res_combobox]").get(0).selectedIndex = -1;
                        if (ag.call_orange_motive.selectedIndex == 0) {
                            ClientDetailsReportFormError(I, w);
                            $(S).removeAttr("disabled");
                            UNblockAllUI();
                            return false
                        }
                        if (ag.call_orange_result.selectedIndex == 0) {
                            ClientDetailsReportFormError(I, w);
                            $(S).removeAttr("disabled");
                            UNblockAllUI();
                            return false
                        }
                    } else {
                        if (H == 0) {
                            var Q = ["1002", "1003", "1004", "1005", "1006", "1007", "1008"];
                            var R = Q.indexOf(ag.partner_id.value);
                            if (R != -1 && ag.motive.value == 4) {
                                var T = $.ajax({
                                    url: "interventions/get_nb_inter_loged_event_bytel",
                                    type: "post",
                                    data: "id_inter=" + b,
                                    dataType: "text",
                                    async: false
                                });
                                var ad = T.responseText;
                                if (ad > 0) {
                                    var V = "Annulation impossible, merci de clÃ´turer l'intervention avec un code dÃ©diÃ©";
                                    $.MyDLG(V, dlg_button_ok, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    $(S).removeAttr("disabled");
                                    return false
                                }
                            }
                            if (ag.call_res_combobox.value == "") {
                                ClientDetailsReportFormError(I, w);
                                $(S).removeAttr("disabled");
                                return false
                            }
                        }
                    }
                    var ae = false;
                    $(ag).find("select[is_duty] :selected").each(function(ah, ai) {
                        if ($(ai).text() == "") {
                            ae = true
                        }
                    });
                    var P = new Array();
                    $(ag).find('input[readonly][name^="checkboxen"][is_duty]').each(function() {
                        var ah = this.name.substring(11, this.name.length - 1);
                        ae |= $("[type='checkbox'][name^='question[" + ah + "]']:checked").length == 0
                    });
                    if (ae) {
                        ClientDetailsReportFormError(I, w);
                        $(S).removeAttr("disabled");
                        return false
                    }
                    var ab = 0;
                    var U = 0;
                    var X = $(ag).find('select[name="call_orange_result"]');
                    var M = $(X).get(0).selectedIndex;
                    var ac = $(X).children("option:eq(" + M + ")");
                    ab = ac.attr("confirmation");
                    var aa = $(ag).find('select[name="call_res_combobox"]');
                    var L = $(aa).get(0).selectedIndex;
                    var af = $(aa).children("option:eq(" + L + ")");
                    U = af.attr("attr4");
                    var O = $(ag).find('textarea[name="origine_appel_list_extra_info"]').val().trim();
                    if (regional_version != "DE01") {
                        if (((ab == 1) || (U == 1)) && ((ag.interv_prev_date.value == "") || (ag.interv_begin_hour.value == ""))) {
                            RDVMissingDate(I, w);
                            $(S).removeAttr("disabled");
                            return false
                        }
                    } else {
                        if (((ab == 1) || (U == 1)) && ((ag.interv_prev_date.value == "") || (ag.interv_begin_hour.value == "") || (ag.origine_appel_list.value == ""))) {
                            RDVMissingDate(I, w);
                            $(S).removeAttr("disabled");
                            return false
                        } else {
                            if ((ag.origine_appel_list.value == "Sonstiges") && O == "") {
                                UMMissingExtraInfo(I, w);
                                $(S).removeAttr("disabled");
                                return false
                            } else {
                                if (($(ag).find('select[name="call_res_combobox"]').val().trim() == "6") && O == "") {
                                    UMMissingExtraInfo(I, w);
                                    $(S).removeAttr("disabled");
                                    return false
                                }
                            }
                        }
                    }
                    var Z = $("#form" + o).find("input[name=client_id]").val();
                    var K = $("#form" + o).find("input[name=for_inter]").val();
                    if ((Z == null) || (Z < 0) || (K == null) || (K < 0)) {
                        ClientDetailsReportFormError_BadOrder(I, w);
                        $(S).removeAttr("disabled");
                        return false
                    }
                    if ((ag.call_orange_result.value == 830) || (ag.call_orange_result.value == 1753)) {
                        if (ag.orange_select_hors_perimetre.value == 0) {
                            ClientDetailsReportFormError(I, w);
                            return false
                        }
                    }
                    return true
                },
                error: function() {
                    chkRes($(w), "", "");
                    tabs_delimiter_height();
                    my_LastStepResult = -2;
                    $(submitName).removeAttr("disabled");
                    UNblockAllUI()
                },
                success: function(I, H) {
                    chk_rsp_error(I, true, lang_std_qsts_sav_error, "error saving std_qsts");
                    if (chkRes($(w), H, I)) {
                        $("#form" + o).parents("div[my_chng]").attr("my_chng", 0);
                        my_LastStepResult = 1
                    } else {
                        my_LastStepResult = -2
                    }
                    var L = $(this).find("input[name=client_id]").val();
                    var K = $(this).find("input[name=for_inter]").val();
                    var J = $("#client_" + L + "_intervention_" + K);
                    var M = $("#client_" + L + "_intervention_" + K + "nav");
                    var N = $(J).find("input[name=arch]").val();
                    if (K <= 0) {
                        client_details_switch(this, "#client_" + L + "_details_" + L);
                        UNblockAllUI()
                    } else {
                        if (!wk_mode) {
                            blockAllUI()
                        }
                        $(M).html(message_loading);
                        $(J).load("interventions/get_intervention", {
                            inside: "yes",
                            client_id: L,
                            sub_id: K,
                            arch: N
                        }, function(Q, O, P) {
                            chkRes($(J), O, Q);
                            client_details_switch(this, "#client_" + L + "_intervention_" + K);
                            UNblockAllUI()
                        });
                        tabs_delimiter_height();
                        UNblockAllUI()
                    }
                    if (typeof clicked != "undefined" && clicked == "submit_close") {
                        client_details_close(this)
                    }
                }
            };
            $("#form" + o).ajaxSubmit(E);
            return false
        })
    } else {
        if (c > 0) {
            var z = $("#call_orange_motive_" + c).val();
            Call_Type_Change_Switch2($("#type_of_call_" + c), c);
            $("#call_orange_motive_" + c).bind("change", function() {
                Call_Type_Change_Switch2(this, c)
            });
            var m = $("#form" + o).find('select[name="statut_matex"]');
            var h = $("#form" + o).find('select[name="if_new_ticket"]');
            var g = $("#form" + o).find('select[name="tech_on_site"]');
            var f = $("#form" + o).find('select[name="tech_on_site_ifno"]');
            var e = $("#form" + o).find('select[name="uefi_tool"]');
            var d = $("#form" + o).find('select[name="in_new_subcase"]');
            if (m.attr("my_sel") != "") {
                var n = $(m).attr("my_sel");
                get_option_from_value(m, n).attr("selected", "selected")
            }
            if (h.attr("my_sel") != "") {
                var n = $(h).attr("my_sel");
                get_option_from_value(h, n).attr("selected", "selected")
            }
            if (g.attr("my_sel") != "") {
                var n = $(g).attr("my_sel");
                get_option_from_value(g, n).attr("selected", "selected")
            }
            if (f.attr("my_sel") != "") {
                var n = $(f).attr("my_sel");
                get_option_from_value(f, n).attr("selected", "selected")
            }
            if (e.attr("my_sel") != "") {
                var n = $(e).attr("my_sel");
                get_option_from_value(e, n).attr("selected", "selected")
            }
            if (d.attr("my_sel") != "") {
                var n = $(d).attr("my_sel");
                get_option_from_value(d, n).attr("selected", "selected")
            }
        }
    }
    $("#form" + o).find("[name=matex_eta]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        minDate: new Date(v.getTime() - CalendarDeltaMin),
        maxDate: new Date(v.getTime() + CalendarDeltaMax),
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    ClientDetails_ReSet_IDs(q, u, o, "client_calls", C, c, 0)
}

function LoadSelectFromHiddenStorageDIV(f, c, b) {
    console.log(f);
    var e = $(f).find('select[name="' + c + '"]');
    console.log(e);
    $(e).append($(b).html());
    if ($(e).attr("my_sel") != "") {
        var d = $(e).attr("my_sel");
        get_option_from_value(e, d).attr("selected", "selected")
    }
}

function LoadSelectFromHiddenStorage(e, c, b) {
    var f = $('select[name="' + c + '"]', $("#form" + e));
    if (!f.length) {
        return
    }
    $(f).html($(b).html());
    if ($(f).attr("my_sel") != "") {
        var d = $(f).attr("my_sel");
        get_option_from_value(f, d).attr("selected", "selected")
    }
}

function ClientDetails_Change_sel_with_other(d) {
    ClientDetails_Common_Change(d);
    var e = $(d).attr("oname");
    var b = $(d).children("option:eq(" + $(d).get(0).selectedIndex + ")").attr("my_other");
    var c = $(d).parents("form").find('input[name="' + e + '"]');
    if (e != "") {
        if (b == 1) {
            $(c).removeAttr("disabled");
            $(c).removeClass("disabled")
        } else {
            $(c).val("");
            $(c).addClass("disabled");
            $(c).attr("disabled", "disabled")
        }
    }
}

function LoadSelectFromHiddenStorage_other(g, b, m) {
    var f = $("#form" + g).find('select[name="' + b + '"]');
    $(f).append($(m).html());
    if ($(f).attr("my_sel") != "") {
        var d = $(f).attr("oname");
        var c = -1;
        var h = $(f).attr("my_sel");
        var e = 0;
        $(f).children("option").each(function(p, o) {
            if ($(o).val() == h) {
                c = p
            }
            if ($(o).attr("my_other") == 1) {
                e = p
            }
        });
        var n = $("#form" + g).find('input[name="' + d + '"]');
        if (c >= 0) {
            $(f).get(0).selectedIndex = c;
            $(n).addClass("disabled");
            $(n).attr("disabled", "disabled")
        } else {
            $(f).get(0).selectedIndex = e;
            $(n).removeAttr("disabled");
            $(n).removeClass("disabled");
            $(n).val(h)
        }
    }
}

function init_Client_Details_View(e, c, g, w, h, p) {
    var u = "#" + h;
    var f = "#" + h + "nav";
    LoadSelectFromHiddenStorage(h, "client_partner", "#partners_list");
    LoadSelectFromHiddenStorage(h, "cl_title", "#clients_titles");
    LoadSelectFromHiddenStorage(h, "cl_code_pays", "#clients_code_pays");
    LoadSelectFromHiddenStorage(h, "cl_birthday_d", "#common_days");
    LoadSelectFromHiddenStorage(h, "cl_birthday_m", "#common_months");
    LoadSelectFromHiddenStorage(h, "cl_birthday_y", "#common_years");
    LoadSelectFromHiddenStorage_other(h, "cl_sav_os_type", "#common_oses");
    LoadSelectFromHiddenStorage_other(h, "cl_sav_internet_prov", "#common_providers");
    LoadSelectFromHiddenStorage(h, "cl_det_club_type", "#common_adsls");
    LoadSelectFromHiddenStorage(h, "cl_det_club_sub_offer_d", "#common_days");
    LoadSelectFromHiddenStorage(h, "cl_det_club_sub_offer_m", "#common_months");
    LoadSelectFromHiddenStorage(h, "cl_det_club_sub_offer_y", "#common_short_years");
    LoadSelectFromHiddenStorage(h, "cl_det_club_sub_opt_d", "#common_days");
    LoadSelectFromHiddenStorage(h, "cl_det_club_sub_opt_m", "#common_months");
    LoadSelectFromHiddenStorage(h, "cl_det_club_sub_opt_y", "#common_short_years");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_lun_mat_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_lun_mat_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_lun_mat_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_lun_mat_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_lun_apm_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_lun_apm_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_lun_apm_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_lun_apm_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_mar_mat_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_mar_mat_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_mar_mat_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_mar_mat_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_mar_apm_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_mar_apm_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_mar_apm_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_mar_apm_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_mer_mat_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_mer_mat_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_mer_mat_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_mer_mat_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_mer_apm_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_mer_apm_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_mer_apm_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_mer_apm_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_jeu_mat_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_jeu_mat_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_jeu_mat_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_jeu_mat_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_jeu_apm_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_jeu_apm_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_jeu_apm_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_jeu_apm_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_ven_mat_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_ven_mat_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_ven_mat_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_ven_mat_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_ven_apm_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_open_ven_apm_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_ven_apm_hh", "#common_hours");
    LoadSelectFromHiddenStorage(h, "cli_stime_close_ven_apm_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(h, "cl_stime_nb_caisse", "#common_number");
    LoadSelectFromHiddenStorage(h, "cl_stime_nb_station", "#common_number");
    ClientDetails_Common_set_On_Change($("#form" + h));
    $("#form" + h).find("input[name=client_enterprise]").bind("change", function() {
        ClientDetails_Enterprise_Change(this)
    });
    $("#form" + h).find("select[name=client_partner]").bind("change", function() {
        ClientDetails_Parthers_Change(this)
    });
    $("#form" + h).find("select[name=cl_sav_os_type]").bind("change", function() {
        ClientDetails_Change_sel_with_other(this)
    });
    $("#form" + h).find("select[name=cl_sav_internet_prov]").bind("change", function() {
        ClientDetails_Change_sel_with_other(this)
    });
    $("#form" + h).submit(function(C) {
        C.stopImmediatePropagation();
        var z = {
            target: u,
            url: "clients/save_client",
            type: "post",
            beforeSubmit: function(H, G, D) {
                blockAllUI();
                var E = G[0];
                if (E.client_partner.value == "") {
                    ClientDetailsReportFormError(G, u);
                    return false
                }
                if (E.parntner_ref.value == "") {
                    ClientDetailsReportFormError(G, u);
                    return false
                }
                if (E.client_name.value == "") {
                    ClientDetailsReportFormError(G, u);
                    return false
                }
                if (E.cl_adress.value == "") {
                    ClientDetailsReportFormError(G, u);
                    return false
                }
                if (E.cl_zip_code.value == "") {
                    ClientDetailsReportFormError(G, u);
                    return false
                }
                if (E.cl_city.value == "") {
                    ClientDetailsReportFormError(G, u);
                    return false
                }
                if (E.cl_phone.value == "") {
                    ClientDetailsReportFormError(G, u);
                    return false
                }
                return true
            },
            error: function() {
                chkRes($(u), "", "");
                tabs_delimiter_height();
                my_LastStepResult = -2;
                UNblockAllUI()
            },
            success: function(E, D) {
                if (chkRes($(u), D, E)) {
                    var G = $(this).find("input[name=client_id]").val();
                    if (G > 0) {
                        $(this).parent().find("input[name=client_id]").each(function(I, H) {
                            if ($(H).val() < 0) {
                                $(H).val(G)
                            }
                        })
                    }
                    $("#form" + h).parents("div[my_chng]").attr("my_chng", 0);
                    my_LastStepResult = 1
                } else {
                    my_LastStepResult = -2
                }
                tabs_delimiter_height();
                UNblockAllUI()
            }
        };
        $("#form" + h).ajaxSubmit(z);
        return false
    });
    if (e >= 0) {
        var o = false;
        var v = "#client_id_" + e;
        var r = TopRightTabs.find('a[href="' + v + '"]');
        if ($(r).length <= 0) {
            r = TopRightTabs.find('a[href="' + base_url_no_index + v + '"]')
        }
        if ($(r).length <= 0) {
            o = true;
            var q = "#client_id_NEW";
            r = TopRightTabs.find('a[href="' + q + '"]');
            if ($(r).length <= 0) {
                r = TopRightTabs.find('a[href="' + base_url_no_index + q + '"]')
            }
        }
        if ($(r).length > 0) {
            if (o) {
                var m = r.parent().find(".ui-tabs-close").get(0);
                $(m).removeAttr("onclick");
                $(m).unbind("click");
                $(m).bind("click", function() {
                    client_details_close($("#client_id_" + e).find(".client_details_buttons"))
                });
                $(r).attr("href", v);
                var d = $("#client_id_NEW");
                if ($(d).length > 0) {
                    if (o) {
                        $(d).attr("client_id", e);
                        $(d).attr("client_name", p);
                        var b = '"#client_id_' + e + '"';
                        $(d).attr("on_show", "CLient_Details_Container_On_Show(" + b + ");");
                        $(d).attr("id", "client_id_" + e)
                    }
                }
            }
            $(r).children("span").text(p);
            var n = $("#client_id_" + e);
            if ($(n).length > 0) {
                $(n).find("span.ClientNameInsideTab").text(p);
                $(n).find("span.ClientIDInsideTab").text(e)
            }
        }
    }
    ClientDetails_ReSet_IDs(f, w, h, "client_details", e, c, 0);
    ClientDetails_Partners_Change_Switch($("#form" + h).find("select[name=client_partner]").get(0));
    ClientDetails_Enterprise_Change_Switch($("#form" + h).find("input[name=client_enterprise]").get(0));
    DisableAllForParthers($("#form" + h))
}

function LoadIntervTODOLists(m, e, f, h, d, c, n) {
    var g = null;
    var o = null;
    if (d != "") {
        g = $(m).parents("form").find('select[name="' + d + '"]')
    }
    if (c != "") {
        o = $(m).parents("form").find('select[name="' + c + '"]')
    }
    if ((g == null) || ($(g).length < 1)) {
        return
    }
    blockAllUI();
    var b = "lists/" + h + "/" + default_language + "/" + e + "/" + f + "/0/0/0/0/dummy.html";
    $(g).load(b, {
        etat_inter: n
    }, function(u, p, r) {
        chkRes($(g), p, u);
        if ($(g).attr("my_sel") != "") {
            var q = $(g).attr("my_sel");
            get_option_from_value(g, q).attr("selected", "selected")
        }
        if ((o != null) && ($(o).length > 0)) {
            $(o).html($(g).html());
            if ($(o).attr("my_sel") != "") {
                var q = $(o).attr("my_sel");
                get_option_from_value(o, q).attr("selected", "selected")
            }
        }
        UNblockAllUI()
    })
}

function Intervention_Partner_Change_Switch(G, b) {
    blockAllUI();
    var D = $(G).children("option:eq(" + $(G).get(0).selectedIndex + ")");
    if ($(D).length > 0) {
        blockAllUI();
        var v = D.attr("m_min");
        var c = D.attr("m_max");
        var f = D.attr("r_min");
        var u = D.attr("r_max");
        var w = D.attr("int_add");
        var z = D.attr("value");
        var h = $(G).parents("form");
        var e = $(h).attr("id");
        var r = $(h).find("input[name=additional_id_cr]").val();
        if (r != 0) {
            w = r
        } else {
            if (w == 127) {
                w = 61
            }
        }
        var H = "#" + e + "_add";
        var J = "#" + e + "_offer";
        var n = $(h).children(H);
        var m = $(h).children(J);
        var C = $(h).find("input[name=client_id]").val();
        var b = $(h).find("input[name=sub_id]").val();
        var I = $(h).find("input[name=arch]").val();
        var q = $(h).find("input[name=old_suff]").val();
        var E = $(h).find("input[name=tabindex_cnt]").val();
        var d = $(h).find("input[name=IDs_suff]").val();
        var g = $(h).find("input[name=etat_inter]").val();
        $(h).find("input[name=additional_id]").val(w);
        LoadIntervTODOLists(G, v, c, "interv_todo_list", "type_inter_todo_id", "type_inter_done_id");
        LoadIntervTODOLists(G, f, u, "interv_results_list", "report_result_id", "", g);
        if (w == 61) {
            $("#inter_stat option[value='6']").remove();
            LoadIntervTODOLists(G, 1552, 1575, "interv_results_list_spe", "code_annulation", "", g)
        }
        $(n).load("interventions/get_additions", {
            inside: "yes",
            additional_id: w,
            partner_id: z,
            client_id: C,
            sub_id: b,
            arch: I,
            old_suff: q,
            tabindex_cnt: E,
            form_id: e,
            addon_container_id: H,
            IDs_suff: d,
            etat_inter: g,
            modele_inter: $(h).find("select[name=type_inter_todo_id]").attr("my_sel")
        }, function(M, K, L) {
            chkRes($(n), K, M);
            UNblockAllUI()
        });
        $(m).load("interventions/get_offer", {
            inside: "yes",
            additional_id: w,
            partner_id: z,
            client_id: C,
            sub_id: b,
            arch: I,
            old_suff: q,
            tabindex_cnt: E,
            form_id: e,
            addon_container_id: H,
            IDs_suff: d,
            etat_inter: g,
            modele_inter: $(h).find("select[name=type_inter_todo_id]").attr("my_sel")
        }, function(M, K, L) {
            chkRes($(m), K, M);
            UNblockAllUI()
        });
        if (regional_version == "NL01" && (parseInt(z) == 89 || parseInt(z) == 230 || parseInt(z) == 241 || parseInt(z) == 221 || parseInt(z) == 125 || parseInt(z) == 134 || parseInt(z) == 146 || parseInt(z) == 75 || parseInt(z) == 131)) {
            var p = "#" + e + "_signature";
            var o = $(h).children(p);
            $(o).load("signature/get_signature/moodmedia", {
                inside: "yes",
                additional_id: w,
                partner_id: z,
                client_id: C,
                sub_id: b,
                arch: I,
                old_suff: q,
                tabindex_cnt: E,
                form_id: e,
                addon_container_id: H,
                IDs_suff: d,
                etat_inter: g
            }, function(M, K, L) {
                chkRes($(o), K, M);
                $(h).find("p.buttons_top_centered").append("<input type=button class=button value=Signatures onclick=\"document.getElementById('sig_anchor_" + b + "').scrollIntoView();\" />");
                UNblockAllUI()
            })
        } else {
            if (regional_version == "NL01" && (parseInt(z) == 250)) {
                var p = "#" + e + "_signature";
                var o = $(h).children(p);
                $(o).load("signature/get_signature/ict", {
                    inside: "yes",
                    additional_id: w,
                    partner_id: z,
                    client_id: C,
                    sub_id: b,
                    arch: I,
                    old_suff: q,
                    tabindex_cnt: E,
                    form_id: e,
                    addon_container_id: H,
                    IDs_suff: d,
                    etat_inter: g
                }, function(M, K, L) {
                    chkRes($(o), K, M);
                    $(h).find("p.buttons_top_centered").append("<input type=button class=button value=Signatures onclick=\"document.getElementById('sig_anchor_" + b + "').scrollIntoView();\" />");
                    UNblockAllUI()
                })
            } else {
                if (regional_version == "DE01") {
                    var p = "#" + e + "_signature";
                    var o = $(h).children(p);
                    $.post("clients/getLock", {
                        inside: "yes",
                        additional_id: w,
                        partner_id: z,
                        client_id: C,
                        sub_id: b,
                        arch: I,
                        old_suff: q,
                        tabindex_cnt: E,
                        form_id: e,
                        addon_container_id: H,
                        IDs_suff: d,
                        etat_inter: g
                    }, function(M, K, L) {
                        if (M != "") {
                            if (confirm(M)) {
                                $.post("clients/setLock", {
                                    inside: "yes",
                                    additional_id: w,
                                    partner_id: z,
                                    client_id: C,
                                    sub_id: b,
                                    arch: I,
                                    old_suff: q,
                                    tabindex_cnt: E,
                                    form_id: e,
                                    addon_container_id: H,
                                    IDs_suff: d,
                                    etat_inter: g
                                }, function(P, N, O) {})
                            } else {
                                client_details_close(G)
                            }
                        } else {
                            $.post("clients/setLock", {
                                inside: "yes",
                                additional_id: w,
                                partner_id: z,
                                client_id: C,
                                sub_id: b,
                                arch: I,
                                old_suff: q,
                                tabindex_cnt: E,
                                form_id: e,
                                addon_container_id: H,
                                IDs_suff: d,
                                etat_inter: g
                            }, function(P, N, O) {})
                        }
                        UNblockAllUI()
                    })
                }
            }
        }
    }
    UNblockAllUI()
}

function Intervention_Partner_Change(b) {
    ClientDetails_Common_Change(b);
    Intervention_Partner_Change_Switch(b)
}

function Set_Disabled(b) {
    $(b).attr("disabled", "disabled");
    $(b).addClass("disabled")
}

function SetSelectedByOptionAndEnable(d, b, c) {
    if (!c) {
        get_option_from_value(d, b).attr("selected", "selected")
    }
    $(d).removeAttr("disabled");
    $(d).removeClass("disabled")
}

function Intervention_Cancel_Change_Switch(g, o) {
    var b = $(g).attr("checked");
    var e = $(g).parents("form");
    if (e) {
        if (b) {
            var c = new Date();
            var f = c.getMonth() + 1;
            var m = c.getDate();
            var h = c.getFullYear();
            var n = c.getHours();
            var d = c.getMinutes();
            SetSelectedByOptionAndEnable($(e).find("select[name=cancel_d]").get(0), m, o);
            SetSelectedByOptionAndEnable($(e).find("select[name=cancel_m]").get(0), f, o);
            SetSelectedByOptionAndEnable($(e).find("select[name=cancel_y]").get(0), h, o);
            SetSelectedByOptionAndEnable($(e).find("select[name=cancel_hh]").get(0), n, o);
            SetSelectedByOptionAndEnable($(e).find("select[name=cancel_mm]").get(0), d, o);
            SetSelectedByOptionAndEnable($(e).find("textarea[name=canceled_reason]"), 0, true)
        } else {
            Set_Disabled($(e).find("select[name=cancel_d]"));
            Set_Disabled($(e).find("select[name=cancel_m]"));
            Set_Disabled($(e).find("select[name=cancel_y]"));
            Set_Disabled($(e).find("select[name=cancel_hh]"));
            Set_Disabled($(e).find("select[name=cancel_mm]"));
            Set_Disabled($(e).find("textarea[name=canceled_reason]"))
        }
    }
}

function Intervention_Cancel_Change(b) {
    ClientDetails_Common_Change(b);
    Intervention_Cancel_Change_Switch(b, false)
}

function Intervention_Archiving_Change_Switch(g, o) {
    var b = $(g).attr("checked");
    var e = $(g).parents("form");
    if (e) {
        if (b) {
            var c = new Date();
            var f = c.getMonth() + 1;
            var m = c.getDate();
            var h = c.getFullYear();
            var n = c.getHours();
            var d = c.getMinutes();
            SetSelectedByOptionAndEnable($(e).find("select[name=arch_d]").get(0), m, o);
            SetSelectedByOptionAndEnable($(e).find("select[name=arch_m]").get(0), f, o);
            SetSelectedByOptionAndEnable($(e).find("select[name=arch_y]").get(0), h, o)
        } else {
            Set_Disabled($(e).find("select[name=arch_d]"));
            Set_Disabled($(e).find("select[name=arch_m]"));
            Set_Disabled($(e).find("select[name=arch_y]"))
        }
    }
}

function Intervention_Archiving_Change(b) {
    ClientDetails_Common_Change(b);
    Intervention_Archiving_Change_Switch(b, false)
}

function Intervention_Additional_Change_Switch(d) {
    var c = $(d).attr("checked");
    var b = $(d).parents("form");
    if (b) {
        if (c) {
            SetSelectedByOptionAndEnable($(b).find("textarea[name=report_additional_text]").get(0), 0, false)
        } else {
            Set_Disabled($(b).find("textarea[name=report_additional_text]"))
        }
    }
}

function Intervention_Additional_Change(b) {
    ClientDetails_Common_Change(b);
    Intervention_Additional_Change_Switch(b)
}

function Intervention_RequridDate_Change_Switch(e) {
    var d = $(e).attr("checked");
    var c = $(e).parents("form");
    var b = $(e).attr("name");
    if (c && d) {
        if (b == "req_date_certain") {
            $(c).find("input[name=req_date_any]").removeAttr("checked")
        } else {
            $(c).find("input[name=req_date_certain]").removeAttr("checked")
        }
    }
}

function Intervention_RequridDate_Change(b) {
    ClientDetails_Common_Change(b);
    Intervention_RequridDate_Change_Switch(b)
}

function Intervention_PaidNotPaid_Change_Switch(e) {
    var d = $(e).attr("checked");
    var c = $(e).parents("form");
    var b = $(e).attr("name");
    if (c) {
        if (b == "paid") {
            if (d) {
                $(c).find("input[name=not_paid]").removeAttr("checked");
                Set_Disabled($(c).find("select[name=not_paid_reason]"));
                SetSelectedByOptionAndEnable($(c).find("select[name=paid_by]").get(0), 0, true);
                SetSelectedByOptionAndEnable($(c).find("input[name=paid_ammount]").get(0), 0, true);
                SetSelectedByOptionAndEnable($(c).find("input[name=paiment_notes]").get(0), 0, true)
            } else {
                Set_Disabled($(c).find("input[name=paiment_notes]"));
                Set_Disabled($(c).find("select[name=paid_by]"));
                Set_Disabled($(c).find("input[name=paid_ammount]"))
            }
        } else {
            if (d) {
                $(c).find("input[name=paid]").removeAttr("checked");
                Set_Disabled($(c).find("select[name=paid_by]"));
                Set_Disabled($(c).find("input[name=paid_ammount]"));
                SetSelectedByOptionAndEnable($(c).find("select[name=not_paid_reason]").get(0), 0, true);
                SetSelectedByOptionAndEnable($(c).find("input[name=paiment_notes]").get(0), 0, true)
            } else {
                Set_Disabled($(c).find("input[name=paiment_notes]"));
                Set_Disabled($(c).find("select[name=not_paid_reason]"))
            }
        }
    }
}

function Intervention_PaidNotPaid_Change(b) {
    ClientDetails_Common_Change(b);
    Intervention_PaidNotPaid_Change_Switch(b)
}

function Intervention_PaidNotPaid_Change_Switch1(e) {
    var d = $(e).attr("checked");
    var c = $(e).parents("form");
    var b = $(e).attr("name");
    if (c) {
        if (b == "paid1") {
            if (d) {
                $(c).find("input[name=paid2]").removeAttr("checked");
                Set_Disabled($(c).find("input[name=ticket_id]"));
                Set_Disabled($(c).find("input[name=ticket_partner_ref]"));
                Set_Disabled($(c).find("input[name=ticket_open_date]"));
                Set_Disabled($(c).find("input[name=ticket_close_date]"));
                SetSelectedByOptionAndEnable($(c).find("select[name=ticket_partner_id]").get(0), 0, true);
                Set_Disabled($(c).find("select[name=ticket_state]"));
                Set_Disabled($(c).find("input[name=ticket_closed]"));
                SetSelectedByOptionAndEnable($(c).find("textarea[name=ticket_comment]").get(0), 0, true)
            } else {
                Set_Disabled($(c).find("input[name=ticket_id]"));
                Set_Disabled($(c).find("input[name=ticket_partner_ref]"));
                Set_Disabled($(c).find("input[name=ticket_open_date]"));
                Set_Disabled($(c).find("input[name=ticket_close_date]"));
                Set_Disabled($(c).find("select[name=ticket_partner_id]"));
                Set_Disabled($(c).find("select[name=ticket_state]"));
                Set_Disabled($(c).find("input[name=ticket_closed]"));
                Set_Disabled($(c).find("textarea[name=ticket_comment]"))
            }
        } else {
            if (d) {
                $(c).find("input[name=paid1]").removeAttr("checked");
                SetSelectedByOptionAndEnable($(c).find("input[name=ticket_id]").get(0), 0, true);
                Set_Disabled($(c).find("input[name=ticket_partner_ref]"));
                Set_Disabled($(c).find("input[name=ticket_open_date]"));
                Set_Disabled($(c).find("input[name=ticket_close_date]"));
                Set_Disabled($(c).find("select[name=ticket_partner_id]"));
                Set_Disabled($(c).find("select[name=ticket_state]"));
                Set_Disabled($(c).find("input[name=ticket_closed]"));
                Set_Disabled($(c).find("textarea[name=ticket_comment]"))
            } else {
                Set_Disabled($(c).find("input[name=ticket_id]"));
                Set_Disabled($(c).find("input[name=ticket_partner_ref]"));
                Set_Disabled($(c).find("input[name=ticket_open_date]"));
                Set_Disabled($(c).find("input[name=ticket_close_date]"));
                Set_Disabled($(c).find("select[name=ticket_partner_id]"));
                Set_Disabled($(c).find("select[name=ticket_state]"));
                Set_Disabled($(c).find("input[name=ticket_closed]"));
                Set_Disabled($(c).find("textarea[name=ticket_comment]"))
            }
        }
    }
}

function Intervention_PaidNotPaid_Change1(b) {
    ClientDetails_Common_Change(b);
    Intervention_PaidNotPaid_Change_Switch1(b)
}

function Interv_addons1_process_a(f, c, b) {
    var g = 0;
    var e = "";
    var d = $(c).children("option:eq(" + c.selectedIndex + ")");
    if ($(d).length > 0) {
        g = d.attr("res");
        e = d.attr("resp")
    }
    $(f).find("input[name=" + b + "_int]").val(g);
    $(f).find("input[name=" + b + "_resp]").val(e)
}

function GetSelectValueThisForm(e, b) {
    var d = $(e).parents("form").find('select[name="' + b + '"]');
    if ((d != null) && (d.length > 0)) {
        var c = $(d).children("option:eq(" + $(d).get(0).selectedIndex + ")").attr("value");
        if ((c != null) && (c != "") && (parseInt(c) >= 0)) {
            return parseInt(c)
        }
    }
    return -1
}

function SetSelectedByOption(d, b, e) {
    var c = $(d).parents("form").find('select[name="' + b + '"]');
    if ((c != null) && (c.length > 0)) {
        get_option_from_value(c, e).attr("selected", "selected")
    }
}

function Intervention_Inter_Duration_Change(o) {
    ClientDetails_Common_Change(o);
    var d = $(o).children("option:eq(" + $(o).get(0).selectedIndex + ")");
    if ($(d).length > 0) {
        var q = d.attr("value");
        if (q > 0) {
            var b = GetSelectValueThisForm(o, "inter_date_d");
            var n = GetSelectValueThisForm(o, "inter_date_m");
            var c = GetSelectValueThisForm(o, "inter_date_y");
            var h = GetSelectValueThisForm(o, "inter_beginning_hh");
            var m = GetSelectValueThisForm(o, "inter_beginning_mm");
            if ((b > 0) && (n > 0) && (c > 1900) && (h > 7) && (h < 22) && (m >= 0) && (m < 60)) {
                var f = new Date(c, n, b, h, m, 0, 0);
                var p = new Date(f.getTime() + (q * 60000));
                var e = p.getHours();
                var g = p.getMinutes();
                $(o).parents("form").find("select[name=inter_finish_hh]").unbind("change");
                $(o).parents("form").find("select[name=inter_finish_mm]").unbind("change");
                SetSelectedByOption(o, "inter_finish_hh", e);
                SetSelectedByOption(o, "inter_finish_mm", g);
                $(o).parents("form").find("select[name=inter_finish_hh]").bind("change", function() {
                    Intervention_End_Change(this)
                });
                $(o).parents("form").find("select[name=inter_finish_mm]").bind("change", function() {
                    Intervention_End_Change(this)
                })
            }
        }
    }
}

function Intervention_Begin_Change(n) {
    var p = GetSelectValueThisForm(n, "inter_duration");
    var b = GetSelectValueThisForm(n, "inter_date_d");
    var m = GetSelectValueThisForm(n, "inter_date_m");
    var c = GetSelectValueThisForm(n, "inter_date_y");
    var g = GetSelectValueThisForm(n, "inter_beginning_hh");
    var h = GetSelectValueThisForm(n, "inter_beginning_mm");
    if ((p > 0) && (b > 0) && (m > 0) && (c > 1900) && (g > 7) && (g < 22) && (h >= 0) && (h < 60)) {
        var e = new Date(c, m, b, g, h, 0, 0);
        var o = new Date(e.getTime() + (p * 60000));
        var d = o.getHours();
        var f = o.getMinutes();
        $(n).parents("form").find("select[name=inter_finish_hh]").unbind("change");
        $(n).parents("form").find("select[name=inter_finish_mm]").unbind("change");
        SetSelectedByOption(n, "inter_finish_hh", d);
        SetSelectedByOption(n, "inter_finish_mm", f);
        $(n).parents("form").find("select[name=inter_finish_hh]").bind("change", function() {
            Intervention_End_Change(this)
        });
        $(n).parents("form").find("select[name=inter_finish_mm]").bind("change", function() {
            Intervention_End_Change(this)
        })
    }
}

function Intervention_End_Change(n) {
    var b = GetSelectValueThisForm(n, "inter_date_d");
    var m = GetSelectValueThisForm(n, "inter_date_m");
    var c = GetSelectValueThisForm(n, "inter_date_y");
    var f = GetSelectValueThisForm(n, "inter_beginning_hh");
    var h = GetSelectValueThisForm(n, "inter_beginning_mm");
    var e = GetSelectValueThisForm(n, "inter_finish_hh");
    var g = GetSelectValueThisForm(n, "inter_finish_mm");
    if ((b > 0) && (m > 0) && (c > 1900) && (f > 7) && (f < 22) && (h >= 0) && (h < 60) && (e > 7) && (e < 22) && (g >= 0) && (g < 60)) {
        var d = new Date(c, m, b, f, h, 0, 0);
        var o = new Date(c, m, b, e, g, 0, 0);
        var p = Math.ceil((o.getTime() - d.getTime()) / 60000);
        if (p > 0) {
            p = Math.ceil(p / 30);
            if (p < 1) {
                p = 1
            }
            p = p * 30;
            $(n).parents("form").find("select[name=inter_duration]").unbind("change");
            SetSelectedByOption(n, "inter_duration", p);
            $(n).parents("form").find("select[name=inter_duration]").bind("change", function() {
                Intervention_Inter_Duration_Change(this)
            })
        }
    }
}

function SfrValidationFieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sfr_nat_valide_size);
    $.MyDLG(message_sfr_nat_valide_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function SfrCPLFieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sfr_nat_cpl_size);
    $.MyDLG(message_sfr_nat_cpl_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function SfrSFPFieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sfr_nat_sfp_size);
    $.MyDLG(message_sfr_nat_sfp_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function SfrDecoHDDFieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sfr_nat_decohdd_size);
    $.MyDLG(message_sfr_nat_decohdd_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function SfrDecoTVFieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sfr_nat_decotv_size);
    $.MyDLG(message_sfr_nat_decotv_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function SfrNeufBoxFieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sfr_nat_neufbox_size);
    $.MyDLG(message_sfr_nat_neufbox_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function SfrONTFieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sfr_nat_ont_size);
    $.MyDLG(message_sfr_nat_ont_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function ONTFieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_ont_size);
    $.MyDLG(message_sogetrel_ont_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function STBFieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_stb_size);
    $.MyDLG(message_sogetrel_stb_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function DECOFieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_deco_size);
    $.MyDLG(message_sogetrel_deco_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function DECO2FieldWrongSize(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_deco2_size);
    $.MyDLG(message_sogetrel_deco2_size, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function CableFOFieldWrongFormat(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_cable_format);
    $.MyDLG(message_sogetrel_cable_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function CableEthernetFieldWrongFormat(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_cable_thernet_format);
    $.MyDLG(message_sogetrel_cable_thernet_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function PriseEthernetFieldWrongFormat(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_nb_prise_format);
    $.MyDLG(message_sogetrel_nb_prise_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function TicketSFRFieldWrongFormat(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_ticket_sfr_format);
    $.MyDLG(message_sogetrel_ticket_sfr_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function BadSumServicesExpected(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_bad_sum_expected);
    $.MyDLG(message_sogetrel_bad_sum_expected, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function PuissancePriseFieldWrongFormat(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_puissance_prise_format);
    $.MyDLG(message_sogetrel_puissance_prise_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function InterDetailsEmpty(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_inter_report_details_empty);
    $.MyDLG(message_sogetrel_inter_report_details_empty, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function SCCErrorNumber(c, b) {
    $(b).find(".error_msg_area").html(message_scc_error_number);
    $.MyDLG(message_scc_error_number, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function CodeEchecNeeded(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_code_echec_needed);
    $.MyDLG(message_sogetrel_code_echec_needed, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function CompulsoryPrestation(c, b) {
    $(b).find(".error_msg_area").html(message_sogetrel_compulsory_prestation);
    $.MyDLG(message_sogetrel_compulsory_prestation, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function TicketMaintenanceFormat(c, b) {
    $(b).find(".error_msg_area").html(message_sfr_nat_ticket_maintenance_format);
    $.MyDLG(message_sfr_nat_ticket_maintenance_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function EasydenticTelPtiFormat(c, b) {
    $(b).find(".error_msg_area").html(message_easydentic_tel_pti_format);
    $.MyDLG(message_easydentic_tel_pti_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function EasydenticPtiIdFormat(c, b) {
    $(b).find(".error_msg_area").html(message_easydentic_pti_id_format);
    $.MyDLG(message_easydentic_pti_id_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function HpgeFactuSUFormat(c, b) {
    $(b).find(".error_msg_area").html(message_hpge_factu_su_format);
    $.MyDLG(message_hpge_factu_su_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function RDVMissingDate(c, b) {
    $(b).find(".error_msg_area").html(message_rdv_missing_date);
    $.MyDLG(message_rdv_missing_date, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function OrangeAIIndiceEmpty(c, b) {
    $(b).find(".error_msg_area").html(message_orange_ai_indice_empty);
    $.MyDLG(message_orange_ai_indice_empty, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function OrangeAIInvestigationEmpty(c, b) {
    $(b).find(".error_msg_area").html(message_orange_ai_investigation_empty);
    $.MyDLG(message_orange_ai_investigation_empty, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function OrangeAIInformationEmpty(c, b) {
    $(b).find(".error_msg_area").html(message_orange_ai_information_empty);
    $.MyDLG(message_orange_ai_information_empty, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function BP2ISLAFormat(c, b) {
    $(b).find(".error_msg_area").html(message_sla_format);
    $.MyDLG(message_sla_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function OrangeAIInfoEmpty(c, b) {
    $(b).find(".error_msg_area").html(message_orange_ai_info_empty);
    $.MyDLG(message_orange_ai_info_empty, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function UMMissingExtraInfo(c, b) {
    $(b).find(".error_msg_area").html(message_you_must_fill_fields);
    $.MyDLG(message_you_must_fill_fields, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function init_second_employe(b) {
    $("#relog_btn_" + b).click(function() {
        blockAllUI();
        var e = $("#relog_new_employe_" + b + " option:selected").val();
        if (e != "") {
            var f = $("#relog_new_employe_" + b + " option:selected").text();
            var c = $("#relog_old_employe_name_" + b).val();
            var m = $("#relog_partner_id_" + b).val();
            var p = $("#relog_date_" + b).val();
            var d = $("#relog_partner_ref_" + b).val();
            var n = $("#relog_inter_beginning_hh_" + b + " option:selected").val();
            var o = $("#relog_inter_beginning_mm_" + b + " option:selected").val();
            var g = $("#relog_inter_finish_hh_" + b + " option:selected").val();
            var h = $("#relog_inter_finish_mm_" + b + " option:selected").val();
            $.post("interventions/create_intervention_relog_second_employe", {
                relog_id_inter: b,
                relog_partner_id: m,
                relog_partner_ref: d,
                relog_date: p,
                relog_new_employe_id: e,
                relog_new_employe_name: f,
                relog_old_employe_name: c,
                relog_inter_beginning_hh: n,
                relog_inter_beginning_mm: o,
                relog_inter_finish_hh: g,
                relog_inter_finish_mm: h,
            }, function(q) {
                $("#relog_valid_" + b).val(q);
                UNblockAllUI();
                $.modal.close()
            })
        } else {
            alert("Bitte einen Techniker auswÃ¤hlen!");
            UNblockAllUI()
        }
    })
}

function init_relog(b) {
    $("#relog_date_" + b).datepicker({
        firstDay: 1,
        changeFirstDay: true,
        changeYear: true,
        yearRange: "-3:+3",
        changeMonth: true,
        numberOfMonths: 2,
        dateFormat: "yy-mm-dd",
        defaultDate: +1,
        minDate: 1,
        onSelect: function(c) {}
    });
    $("#relog_state_" + b).html($("#intervention_states_list").html()).find("option").each(function() {
        var c = $(this);
        switch (parseInt(c.val())) {
            case 0:
            case 1:
            case 2:
            case 21:
                break;
            case 29:
                if (regional_version != "IT01" && regional_version != "BN01") {
                    c.remove()
                }
                break;
            default:
                c.remove()
        }
    });
    $("#relog_state_" + b).change(function() {
        if ($(this).val() == 1 && $("#relog_tech_" + b).val() == 0) {
            alert(lang_relog_tech_error);
            $("#relog_tech_" + b).val(1)
        }
    });
    $("#relog_tech_" + b).change(function() {
        if ($(this).val() == 0 && $("#relog_state_" + b).val() == 1) {
            alert(lang_relog_tech_error);
            $(this).val(1)
        }
    });
    $("#relog_btn_" + b).click(function() {
        var g = $("#relog_state_" + b + " option:selected").val();
        var e = $("#relog_tech_" + b + " option:selected").val();
        var f = $("#relog_date_" + b).val();
        var d = $("#relog_partner_ref_" + b).val();
        var c = parseInt($("input[type=checkbox]:checked", "#tabparts_relog_" + b).length);
        blockAllUI();
        $.post("interventions/create_intervention_relog", {
            id_inter: b,
            etat: g,
            date1: f,
            id_tech: e,
            partner_ref: d
        }, function(h) {
            $("#relog_valid_" + b).val(h);
            if (c > 0) {
                $("input[type=checkbox]:checked", "#tabparts_relog_" + b).each(function() {
                    var n = $(this).parents("#row-part");
                    var m = n.attr("data-id_piece_inter");
                    $.post("interventions/move_part_inter_relog", {
                        id_inter: h,
                        id_piece_inter: m
                    })
                })
            }
            UNblockAllUI();
            $.modal.close()
        })
    });
    $("#relog_ck_" + b).change(function() {
        var d = $(this).is(":checked");
        var c = $(this);
        if (!d) {
            $("input[type=checkbox]", "#tabparts_relog_" + b).each(function() {
                $(this).removeAttr("checked")
            });
            c.removeAttr("checked")
        } else {
            $("input[type=checkbox]", "#tabparts_relog_" + b).each(function() {
                $(this).attr("checked", "checked")
            });
            c.attr("checked", "checked")
        }
    })
}

function init_Intervention_View(J, d, K, v, n) {
    var D = "";
    var C = "";
    var z = "#" + n;
    var r = "#" + n + "nav";
    var e = J;
    if (e < 0) {
        e = "NEW"
    }
    LoadSelectFromHiddenStorage(n, "inter_stat", "#intervention_states_list");
    LoadSelectFromHiddenStorage(n, "report_result_line_id", "#esito_linea_tim");
    LoadSelectFromHiddenStorage(n, "ticket_state", "#ticket_states_all");
    var H = $("#form" + n).find("select[name=inter_stat]");
    if ($(H).attr("my_sel") != "") {
        var h = Math.round($(H).attr("my_sel"));
        $(H).children("option[value=-1]").remove();
        if (regional_version == "DE01") {
            if ((user_group_id == 5) || (user_group_id == 15) || (user_group_id == 16)) {
                switch (h) {
                    case 0:
                        $(H).children("option[value=1]").remove();
                        $(H).children("option[value=5]").remove();
                        $(H).children("option[value=6]").remove();
                        $(H).children("option[value=7]").remove();
                        $(H).children("option[value=8]").remove();
                        $(H).children("option[value=9]").remove();
                        break;
                    case 1:
                        $(H).children("option[value=0]").remove();
                        $(H).children("option[value=5]").remove();
                        $(H).children("option[value=6]").remove();
                        $(H).children("option[value=7]").remove();
                        $(H).children("option[value=8]").remove();
                        $(H).children("option[value=9]").remove();
                        $(H).children("option[value=10]").remove();
                        $(H).children("option[value=3]").remove();
                        $(H).children("option[value=4]").remove();
                        break;
                    default:
                        $(H).children("option[value=0]").remove();
                        $(H).children("option[value=1]").remove();
                        $(H).children("option[value=5]").remove();
                        $(H).children("option[value=6]").remove();
                        $(H).children("option[value=7]").remove();
                        $(H).children("option[value=8]").remove();
                        $(H).children("option[value=9]").remove();
                        $(H).children("option[value=10]").remove();
                        $(H).children("option[value=3]").remove();
                        $(H).children("option[value=4]").remove();
                        break
                }
            }
        } else {
            switch (h) {
                case 0:
                    for (i = 1; i < 32; i++) {
                        if ((regional_version == "IT01") && (i != 7) && (i != 25)) {
                            get_option_from_value(H, i).remove()
                        }
                    }
                    break;
                case 1:
                    if (employe_society_id > 0) {
                        $(H).children("option[value=0]").remove()
                    }
                    break;
                default:
                    if (employe_society_id > 0) {
                        $(H).children("option[value=0]").remove();
                        $(H).children("option[value=1]").remove()
                    }
                    break
            }
            if ((user_group_id == 5) || (user_group_id == 15) || (user_group_id == 16)) {
                for (i = 0; i < 32; i++) {
                    if ((i != 3) && (i != 4) && (i != 6) && (i != h)) {
                        get_option_from_value(H, i).remove()
                    }
                }
            }
        }
    }
    var m = $("#form" + n).find("input[name=canceled]").attr("checked");
    var G = $(H).children("option:eq(" + $(H).get(0).selectedIndex + ")");
    etat_val = $(G).val();
    if (m == false && (etat_val == 4 || etat_val == 3)) {
        $("#form" + n).find("input[name=canceled]").attr("disabled", true)
    }
    var H = $("#form" + n).find("select[name=ticket_state]");
    $(H).children().each(function() {
        if ($(this).attr("country") != language_s) {
            $(this).remove()
        }
    });
    LoadSelectFromHiddenStorage(n, "cancel_d", "#common_days");
    LoadSelectFromHiddenStorage(n, "cancel_m", "#common_months");
    LoadSelectFromHiddenStorage(n, "cancel_y", "#common_short_years");
    LoadSelectFromHiddenStorage(n, "cancel_hh", "#common_hours");
    LoadSelectFromHiddenStorage(n, "cancel_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(n, "arch_d", "#common_days");
    LoadSelectFromHiddenStorage(n, "arch_m", "#common_months");
    LoadSelectFromHiddenStorage(n, "arch_y", "#common_short_years");
    LoadSelectFromHiddenStorage(n, "inter_prevision_date_d", "#common_days");
    LoadSelectFromHiddenStorage(n, "inter_prevision_date_m", "#common_months");
    LoadSelectFromHiddenStorage(n, "inter_prevision_date_y", "#common_short_years");
    LoadSelectFromHiddenStorage(n, "inter_prevision_beginning_hh", "#common_hours");
    LoadSelectFromHiddenStorage(n, "inter_prevision_beginning_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(n, "inter_date_d", "#common_days");
    LoadSelectFromHiddenStorage(n, "inter_date_m", "#common_months");
    LoadSelectFromHiddenStorage(n, "inter_date_y", "#common_short_years");
    LoadSelectFromHiddenStorage(n, "inter_beginning_hh", "#common_hours");
    LoadSelectFromHiddenStorage(n, "inter_beginning_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(n, "inter_finish_hh", "#common_hours");
    LoadSelectFromHiddenStorage(n, "inter_finish_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(n, "not_paid_reason", "#common_intervention_not_paids");
    LoadSelectFromHiddenStorage(n, "paid_by", "#common_intervention_paids");
    LoadSelectFromHiddenStorage(n, "partner_id", "#partners_list");
    LoadSelectFromHiddenStorage(n, "ticket_partner_id", "#partners_list");
    LoadSelectFromHiddenStorage(n, "inter_duration", "#interv_duration");
    LoadSelectFromHiddenStorage(n, "machine_types", "#machine_types_list");
    if (regional_version == "IB01" || regional_version == "FR01") {
        LoadSelectFromHiddenStorage(n, "inter_entity_contract", "#inter_entity");
        LoadSelectFromHiddenStorage(n, "inter_sla", "#inter_sla_class")
    }
    var H = $("#form" + n).find("select[name=partner_id]");
    if ($(H).attr("my_sel") == "-1") {
        var q = $("#client_" + e + "_details_" + e);
        var h = $(q.find("select[name=client_partner]").get(0)).val();
        get_option_from_value(H, h).attr("selected", "selected");
        var o = $(q.find("input[name=client_name]").get(0)).val();
        var u = $(q.find("input[name=cl_zip_code]").get(0)).val();
        $("#form" + n).find("input[name=inter_name]").val(o + " (" + u + ")");
        H = $("#form" + n).find("select[name=ticket_partner_id]");
        get_option_from_value(H, h).attr("selected", "selected")
    }
    ClientDetails_Common_set_On_Change($("#form" + n));
    $("#form" + n).find("select[name=partner_id]").bind("change", function() {
        Intervention_Partner_Change(this)
    });
    Intervention_Partner_Change_Switch($("#form" + n).find("select[name=partner_id]").get(0), d);
    $("#form" + n).find("input[name=canceled]").bind("change", function() {
        Intervention_Cancel_Change(this)
    });
    Intervention_Cancel_Change_Switch($("#form" + n).find("input[name=canceled]").get(0), true);
    $("#form" + n).find("input[name=arch]").bind("change", function() {
        Intervention_Archiving_Change(this)
    });
    Intervention_Archiving_Change_Switch($("#form" + n).find("input[name=arch]").get(0), true);
    $("#form" + n).find("input[name=report_additional_req]").bind("change", function() {
        Intervention_Additional_Change(this)
    });
    Intervention_Additional_Change_Switch($("#form" + n).find("input[name=report_additional_req]").get(0));
    $("#form" + n).find("input[name=req_date_certain]").bind("change", function() {
        Intervention_RequridDate_Change(this)
    });
    Intervention_RequridDate_Change_Switch($("#form" + n).find("input[name=req_date_certain]").get(0));
    $("#form" + n).find("input[name=req_date_any]").bind("change", function() {
        Intervention_RequridDate_Change(this)
    });
    Intervention_RequridDate_Change_Switch($("#form" + n).find("input[name=req_date_any]").get(0));
    $("#form" + n).find("input[name=not_paid]").bind("change", function() {
        Intervention_PaidNotPaid_Change(this)
    });
    Intervention_PaidNotPaid_Change_Switch($("#form" + n).find("input[name=not_paid]").get(0));
    $("#form" + n).find("input[name=paid]").bind("change", function() {
        Intervention_PaidNotPaid_Change(this)
    });
    Intervention_PaidNotPaid_Change_Switch($("#form" + n).find("input[name=paid]").get(0));
    $("#form" + n).find("input[name=paid1]").bind("change", function() {
        Intervention_PaidNotPaid_Change1(this)
    });
    Intervention_PaidNotPaid_Change_Switch($("#form" + n).find("input[name=paid1]").get(0));
    $("#form" + n).find("input[name=paid2]").bind("change", function() {
        Intervention_PaidNotPaid_Change1(this)
    });
    Intervention_PaidNotPaid_Change_Switch1($("#form" + n).find("input[name=paid2]").get(0));
    $("#form" + n).find("select[name=inter_duration]").bind("change", function() {
        Intervention_Inter_Duration_Change(this)
    });
    $("#form" + n).find("select[name=inter_beginning_hh]").bind("change", function() {
        Intervention_Begin_Change(this)
    });
    $("#form" + n).find("select[name=inter_beginning_mm]").bind("change", function() {
        Intervention_Begin_Change(this)
    });
    $("#form" + n).find("select[name=inter_finish_hh]").bind("change", function() {
        Intervention_End_Change(this)
    });
    $("#form" + n).find("select[name=inter_finish_mm]").bind("change", function() {
        Intervention_End_Change(this)
    });
    $("#form" + n).find("select[name=report_result_id]").bind("change", function() {
        var L = $(this).get(0).selectedIndex;
        var M = $(this).children("option:eq(" + L + ")");
        block_val = $(M).attr("block_val");
        if ((user_group_id == 5) || (user_group_id == 15) || (user_group_id == 16)) {
            if (block_val == -1) {
                $.MyDLG("Vous n'avez pas les droits pour cloturer cette intervention en NOK : merci de contacter la Cellule NOK au 09 70 57 01 10 (Choix2) pour cloturer l'intervention", dlg_button_ok, "", function() {}, function() {});
                $(this).get(0).selectedIndex = 0
            } else {
                if (block_val == -2) {
                    $.MyDLG("Vous n'avez pas les droits pour cloturer cette intervention en NOK : merci de contacter la HL2 au 09 70 57 01 10 (Choix1), puis la Cellule NOK au 01 74 901 081 (Choix2) pour cloturer l'intervention.", dlg_button_ok, "", function() {}, function() {});
                    $(this).get(0).selectedIndex = 0
                }
            }
        }
    });
    $(".btn_relog", "#form" + n).click(function() {
        var L = $("#client_" + J + "_intervention_" + d);
        $("#relog_wrapper_" + d).modal({
            autoResize: true,
            minWidth: 700,
            minHeight: 300,
            containerCss: {
                height: 400,
                width: 700,
                "border-radius": "20px 3px"
            },
            overlayClose: true,
            onClose: function(M) {
                M.data.fadeOut("fast", function() {
                    M.container.slideUp("fast", function() {
                        M.overlay.fadeOut("fast", function() {
                            $.modal.close();
                            var N = parseInt($("input[type=hidden]", M.data).val());
                            if (N > 0) {
                                client_details_refresh_internal2(J, N)
                            }
                        })
                    })
                })
            },
            onOpen: function(M) {
                M.overlay.fadeIn("fast", function() {
                    M.container.slideDown("fast", function() {
                        M.data.fadeIn("fast");
                        M.data.load("interventions/intervention_relog", {
                            client_id: J,
                            sub_id: d,
                            old_suff: n,
                            arch: K,
                            tech_id: $("input[name=tech_id]", "#form" + n).val(),
                            tech_name: $("input[name=tech_name]", "#form" + n).val(),
                            partner_ref: $("input[name=partner_ref]", "#form" + n).val()
                        })
                    })
                })
            },
            onShow: function(M) {
                $("a", M.data).click(function() {
                    return false
                })
            }
        })
    });
    var w = $("#form" + n + "_add");
    var c = "#form" + n + "_skills_assign_slide";
    var g = "#form" + n + "_skills_assign_tech_slide";
    var p = $("#form" + n + "_add_skills_assign_table");
    var E = $("#form" + n + "_add_skills_assign_tech_table");
    $(c).bind("click", function() {
        $(w.val() + " div.divopen_skills_assign_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + 'divopen_skills_assign_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(p).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_skills_assign_add", {
                    suff: n,
                    sub_id: d
                }, function(L) {
                    $(p).hide().html(L).fadeIn("fast")
                })
            }
            $(c).next("div").slideToggle("fast")
        })
    });
    $(g).bind("click", function() {
        $(w.val() + " div.divopen_skills_assign_tech_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + 'divopen_skills_assign_tech_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(E).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_skills_assign_tech_add", {
                    suff: n,
                    sub_id: d,
                    client_id: $("input[name=client_id]", "#" + n).val()
                }, function(L) {
                    $(E).hide().html(L).fadeIn("fast")
                })
            }
            $(g).next("div").slideToggle("fast")
        })
    });
    var I = "#form" + n + "_skills_search_slide";
    var f = $("#form" + n + "_add_skills_search_table");
    $(I).bind("click", function() {
        $(w.val() + " div.divopen_skills_search_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + 'divopen_skills_search_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(f).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_skills_search_add", {
                    suff: n,
                    sub_id: d
                }, function(L) {
                    $(f).hide().html(L).fadeIn("fast")
                })
            }
            $(I).next("div").slideToggle("fast")
        })
    });
    $("#submit" + n).bind("click", function(N) {
        N.stopPropagation();
        var O = $("#form" + n).find("input[name=partner_id_hidden]").val();
        var L = $("#form" + n).find("select[name=inter_stat]").val();
        var M = ["1002", "1003", "1004", "1005", "1006", "1007", "1008"];
        if (M.indexOf(O) != -1) {
            if (L != 3 && L != 4) {
                $("#form" + n + "_add input").each(function(Q, P) {
                    $(this).removeAttr("required")
                });
                $("#form" + n + "_add textarea").each(function(Q, P) {
                    $(this).removeAttr("required")
                });
                $("#form" + n + "_add select").each(function(Q, P) {
                    $(this).removeAttr("required")
                })
            } else {
                $("#form" + n).attr("novalidate")
            }
        }
    });
    $(".btn_second_employe", "#form" + n).click(function() {
        var L = $("#client_" + J + "_intervention_" + d);
        $("#relog_wrapper_" + d).modal({
            autoResize: true,
            minWidth: 700,
            minHeight: 300,
            containerCss: {
                height: 400,
                width: 700,
                "border-radius": "20px 3px"
            },
            overlayClose: true,
            onClose: function(M) {
                M.data.fadeOut("fast", function() {
                    M.container.slideUp("fast", function() {
                        M.overlay.fadeOut("fast", function() {
                            $.modal.close();
                            var N = parseInt($("input[type=hidden]", M.data).val());
                            if (N > 0) {
                                client_details_refresh_internal2(J, N)
                            }
                        })
                    })
                })
            },
            onOpen: function(M) {
                M.overlay.fadeIn("fast", function() {
                    M.container.slideDown("fast", function() {
                        M.data.fadeIn("fast");
                        var O = $("#form" + n).find("select[name=inter_date_d]").val();
                        var Q = $("#form" + n).find("select[name=inter_date_m]").val();
                        var P = $("#form" + n).find("select[name=inter_date_y]").val();
                        var S = $("#form" + n).find("select[name=inter_beginning_hh]").val();
                        var N = $("#form" + n).find("select[name=inter_beginning_mm]").val();
                        var R = $("#form" + n).find("select[name=inter_finish_hh]").val();
                        var T = $("#form" + n).find("select[name=inter_finish_mm]").val();
                        M.data.load("interventions/intervention_second_employe", {
                            client_id: J,
                            sub_id: d,
                            old_suff: n,
                            arch: K,
                            tech_id: $("input[name=tech_id]", "#form" + n).val(),
                            tech_name: $("input[name=tech_name]", "#form" + n).val(),
                            partner_ref: $("input[name=partner_ref]", "#form" + n).val(),
                            partner_id: $("input[name=partner_id_hidden]", "#form" + n).val(),
                            agence_id: $("input[name=agence_id]", "#form" + n).val(),
                            inter_date_y: P,
                            inter_date_m: Q,
                            inter_date_d: O,
                            inter_beginning_mm: N,
                            inter_beginning_hh: S,
                            inter_finish_mm: T,
                            inter_finish_hh: R
                        })
                    })
                })
            },
            onShow: function(M) {
                $("a", M.data).click(function() {
                    return false
                })
            }
        })
    });
    $(".btn_create_internal_for_sub_tech_payment", "#form" + n).click(function() {
        var L = $("#client_" + J + "_intervention_" + d);
        $.ajax({
            type: "POST",
            url: "interventions/create_internal_reintervention",
            data: {
                sub_id: d
            },
            success: function(M) {
                client_details_refresh_internal2(J, M)
            }
        })
    });
    $(".btn_check_agency_stock", "#form" + n).live("click", function() {
        var L = $("#client_" + J + "_intervention_" + d);
        $("#check_agency_stock_wrapper_" + d).modal({
            autoResize: true,
            minWidth: 700,
            minHeight: 300,
            containerCss: {
                height: 400,
                width: 700,
                "border-radius": "20px 3px"
            },
            overlayClose: true,
            onClose: function(M) {
                M.data.fadeOut("fast", function() {
                    M.container.slideUp("fast", function() {
                        M.overlay.fadeOut("fast", function() {
                            $.modal.close();
                            var N = parseInt($("input[type=hidden]", M.data).val());
                            if (N > 0) {
                                client_details_refresh_internal2(J, N)
                            }
                        })
                    })
                })
            },
            onOpen: function(M) {
                M.overlay.fadeIn("fast", function() {
                    M.container.slideDown("fast", function() {
                        M.data.fadeIn("fast");
                        M.data.load("stock/intervention_check_agency_stock", {
                            client_id: J,
                            sub_id: d,
                            old_suff: n,
                            arch: K,
                            tech_id: $("input[name=tech_id]", "#form" + n).val(),
                            tech_name: $("input[name=tech_name]", "#form" + n).val()
                        })
                    })
                })
            },
            onShow: function(M) {
                $("a", M.data).click(function() {
                    return false
                })
            }
        })
    });
    $(".btn_check_other_tech_stock", "#form" + n).live("click", function() {
        var L = $("#client_" + J + "_intervention_" + d);
        $("#check_other_tech_stock_wrapper_" + d).modal({
            autoResize: true,
            minWidth: 700,
            minHeight: 300,
            containerCss: {
                height: 400,
                width: 700,
                "border-radius": "20px 3px"
            },
            overlayClose: true,
            onClose: function(M) {
                M.data.fadeOut("fast", function() {
                    M.container.slideUp("fast", function() {
                        M.overlay.fadeOut("fast", function() {
                            $.modal.close();
                            var N = parseInt($("input[type=hidden]", M.data).val());
                            if (N > 0) {
                                client_details_refresh_internal2(J, N)
                            }
                        })
                    })
                })
            },
            onOpen: function(M) {
                M.overlay.fadeIn("fast", function() {
                    M.container.slideDown("fast", function() {
                        M.data.fadeIn("fast");
                        M.data.load("stock/intervention_check_other_tech_stock", {
                            client_id: J,
                            sub_id: d,
                            old_suff: n,
                            arch: K,
                            tech_id: $("input[name=tech_id]", "#form" + n).val(),
                            tech_name: $("input[name=tech_name]", "#form" + n).val()
                        })
                    })
                })
            },
            onShow: function(M) {
                $("a", M.data).click(function() {
                    return false
                })
            }
        })
    });
    $(".btn_tech_unassign", "#form" + n).live("click", function() {
        var L = $("#client_" + J + "_intervention_" + d);
        $("#unassign_wrapper_" + d).modal({
            autoResize: true,
            minWidth: 700,
            minHeight: 300,
            containerCss: {
                height: 400,
                width: 700,
                "border-radius": "20px 3px"
            },
            overlayClose: true,
            onClose: function(M) {
                M.data.fadeOut("fast", function() {
                    M.container.slideUp("fast", function() {
                        M.overlay.fadeOut("fast", function() {
                            $.modal.close();
                            var N = parseInt($("input[type=hidden]", M.data).val());
                            if (N > 0) {
                                client_details_refresh_internal2(J, N)
                            }
                        })
                    })
                })
            },
            onOpen: function(M) {
                M.overlay.fadeIn("fast", function() {
                    M.container.slideDown("fast", function() {
                        M.data.fadeIn("fast");
                        M.data.load("stock/intervention_unassign", {
                            client_id: J,
                            sub_id: d,
                            old_suff: n,
                            arch: K,
                            tech_id: $("input[name=tech_id]", "#form" + n).val(),
                            tech_name: $("input[name=tech_name]", "#form" + n).val()
                        })
                    })
                })
            },
            onShow: function(M) {
                $("a", M.data).click(function() {
                    return false
                })
            }
        })
    });

    function b(Q, M, T, U, N, P) {
        var Y = new Date();
        var O = Y.getUTCMonth() + 1;
        var S = Y.getUTCDate();
        var R = Y.getUTCFullYear();
        var L = R * 10000 + O * 1000 + S * 100;
        var X = T * 10000 + M * 1000 + Q * 100;
        var V = P * 10000 + N * 1000 + U * 100;
        if (L >= X) {
            if (X < V) {
                if (V > L) {
                    return 1
                } else {
                    return -1
                }
            } else {
                return -1
            }
        } else {
            return -1
        }
    }
    $("#form" + n).submit(function(ad) {
        ad.stopImmediatePropagation();
        var ab = $("#form_id").val();
        var Q = $("#" + ab + " input[name='inter_id']").val();
        var aa = $("#" + ab + " select[name='inter_stat']").val();
        var ae = $("#" + ab + " select[name='partner_id']").attr("my_sel");
        var V = $("#" + ab + " select[name='inter_date_y']").val();
        var ac = $("#" + ab + " select[name='inter_date_m']").val();
        var ah = $("#" + ab + " select[name='inter_date_d']").val();
        var Z = ["0", "3", "4", "9", "35", "36"];
        var ak = ["1", "33", "35", "36"];
        var af = formatDate_js(V + "-" + ac + "-" + ah);
        var L = formatDate_js(new Date());
        if (regional_version == "FR01" && ak.indexOf(aa) != -1) {
            var P = $("#" + ab + " select[name='inter_beginning_hh']").val();
            var aj = $("#" + ab + " select[name='inter_beginning_mm']").val();
            var O = $("#" + ab + " select[name='inter_finish_hh']").val();
            var ai = $("#" + ab + " select[name='inter_finish_mm']").val();
            var U = 0;
            if (ah == "" || ac == "" || V == "") {
                alert("Il faut spÃ©cifier la date de l'intervention");
                U = 1
            }
            if (P == "" || aj == "") {
                alert("Il faut spÃ©cifier l'heure de dÃ©but de l'intervention");
                U = 1
            }
            if (O == "" || ai == "") {
                alert("Il faut spÃ©cifier l'heure de fin de l'intervention");
                U = 1
            }
            if (P != "" && aj != "" && O != "" && ai != "") {
                if (parseInt(O) < parseInt(P)) {
                    alert("L'horaire de l'intervention est erronÃ©e, merci de corrigÃ©");
                    U = 1
                }
            }
            if (U == 1) {
                UNblockAllUI();
                return false
            }
        }
        if (regional_version == "FR01" && Z.indexOf(aa) == -1 && af < L) {
            alert("Planification impossible date d'inter dans le passÃ©");
            return false
        }
        if (ae == "393" && (aa == "1" || aa == "33")) {
            var T = $("#" + ab + " select[name='inter_date_y']").attr("my_sel");
            var X = $("#" + ab + " select[name='inter_date_m']").attr("my_sel");
            var ag = $("#" + ab + " select[name='inter_date_d']").attr("my_sel");
            var V = $("#" + ab + " select[name='inter_date_y']").val();
            var ac = $("#" + ab + " select[name='inter_date_m']").val();
            var ah = $("#" + ab + " select[name='inter_date_d']").val();
            if (b(ag, X, T, ah, ac, V) > 0) {
                $("#form" + n + ' input[name="req_garantie"]').prop("checked", true);
                $.ajax({
                    url: "interventions/updategarantie",
                    type: "POST",
                    data: {
                        idIntervention: Q
                    },
                    dataType: "JSON",
                    success: function(am) {
                        console.log(am);
                        if (am.result == 1) {
                            var al = confirm("le  RDV  n'Ã©tait pas honorÃ©?");
                            if (al == true) {
                                $.ajax({
                                    url: "anomalies/replanification_anomalie",
                                    type: "POST",
                                    data: {
                                        inter_id: Q,
                                        anomalie_code: "715",
                                        anomalie_statut: "1"
                                    },
                                    dataType: "JSON",
                                    success: function(an) {
                                        console.log(an);
                                        $("#client_id_" + J).html("");
                                        $("#client_id_" + J).load("clients/get_client_container", {
                                            inside: "yes",
                                            client_id: J,
                                            intervention_id: Q,
                                            wcall_id: -1
                                        }, function(aq, ao, ap) {
                                            chkRes($("#client_id_" + J), ao, aq);
                                            UNblockAllUI()
                                        });
                                        if (an.result == 1) {
                                            return true
                                        } else {
                                            return false
                                        }
                                    },
                                    error: function(ap, an, ao) {
                                        console.log(ap);
                                        console.log(an);
                                        console.log(ao)
                                    }
                                })
                            } else {
                                return false
                            }
                        } else {
                            return false
                        }
                    },
                    error: function(an, al, am) {
                        console.log(an);
                        console.log(al);
                        console.log(am)
                    }
                })
            }
        }
        var N = {
            target: z,
            url: "interventions/save_intervention",
            type: "post",
            beforeSubmit: function(aX, bj, bx) {
                blockAllUI();
                var am = {};
                am = intervention_add_main_control(ae, ab);
                if (am.result == false) {
                    UNblockAllUI();
                    alert(am.msg);
                    return false
                }
                var bB = bj[0];
                if ((regional_version == "FR01") || (regional_version == "IT01") || (regional_version == "BN01")) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.report_details.value == "") {
                            InterDetailsEmpty(bj, z);
                            return false
                        }
                    }
                }
                if ((user_group_id == 5) || (user_group_id == 15) || (user_group_id == 16)) {
                    if ((bB.partner_id.value == 379) && (regional_version == "FR01") && (bB.inter_stat.value == 4)) {
                        $.MyDLG("Vous n'avez pas les droits pour cloturer cette intervention Securitas en NOK : merci de contacter le 01 74 90 10 81", dlg_button_ok, "", function() {}, function() {});
                        $(this).get(0).selectedIndex = 0;
                        return false
                    }
                }
                if ((bB.additional_id.value == 1) || (bB.additional_id.value == 3) || (bB.additional_id.value == 6) || (bB.additional_id.value == 8)) {
                    Interv_addons1_process_a(bB, bB.add_res_adsl_txt, "add_res_adsl");
                    Interv_addons1_process_a(bB, bB.add_res_voip_txt, "add_res_voip");
                    Interv_addons1_process_a(bB, bB.add_res_tv_txt, "add_res_tv");
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if ((bB.partner_id.value == 227) || (bB.partner_id.value == 228)) {
                            if ((bB.type_inter_todo_id.value == 3) || (bB.type_inter_todo_id.value == 4)) {
                                if (bB.add_failure_resp_txt.value == 0) {
                                    ClientDetailsReportFormError(bj, z);
                                    return false
                                }
                            }
                            if ((bB.add_inter_done_id.value == 5) || (bB.add_inter_done_id.value == 6) || (bB.add_inter_done_id.value == 7)) {
                                motifPower1 = "[0-9]{1,2}[.]{1}[0-9]{0,2}";
                                Expression1 = new RegExp(motifPower1);
                                if (isNaN(bB.byt_fiac_debit_down_t.value)) {
                                    $.MyDLG(byt_fiac_debit_down_t_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (isNaN(bB.byt_fiac_debit_up_t.value)) {
                                    $.MyDLG(byt_fiac_debit_up_t_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!Expression1.test(bB.byt_fiac_att_t.value)) {
                                    $.MyDLG(byt_fiac_debit_att_t_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (isNaN(bB.byt_fiac_debit_down_sr.value)) {
                                    $.MyDLG(byt_fiac_debit_down_sr_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (isNaN(bB.byt_fiac_debit_up_sr.value)) {
                                    $.MyDLG(byt_fiac_debit_up_sr_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!Expression1.test(bB.byt_fiac_att_sr.value)) {
                                    $.MyDLG(byt_fiac_debit_att_sr_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if ((bB.byt_fiac_debit_down_sr2.value != "") && (isNaN(bB.byt_fiac_debit_down_sr2.value))) {
                                    $.MyDLG(byt_fiac_debit_down_sr2_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if ((bB.byt_fiac_debit_up_sr2.value != "") && (isNaN(bB.byt_fiac_debit_up_sr2.value))) {
                                    $.MyDLG(byt_fiac_debit_up_sr2_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if ((bB.byt_fiac_att_sr2.value != "") && (!Expression1.test(bB.byt_fiac_att_sr2.value))) {
                                    $.MyDLG(byt_fiac_debit_att_sr2_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if ((bB.byt_fiac_debit_down_sr3.value != "") && (isNaN(bB.byt_fiac_debit_down_sr3.value))) {
                                    $.MyDLG(byt_fiac_debit_down_sr3_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if ((bB.byt_fiac_debit_up_sr3.value != "") && (isNaN(bB.byt_fiac_debit_up_sr3.value))) {
                                    $.MyDLG(byt_fiac_debit_up_sr3_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if ((bB.byt_fiac_att_sr3.value != "") && (!Expression1.test(bB.byt_fiac_att_sr3.value))) {
                                    $.MyDLG(byt_fiac_debit_att_sr3_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if ((bB.byt_fiac_debit_down_sr4.value != "") && (isNaN(bB.byt_fiac_debit_down_sr4.value))) {
                                    $.MyDLG(byt_fiac_debit_down_sr4_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if ((bB.byt_fiac_debit_up_sr4.value != "") && (isNaN(bB.byt_fiac_debit_up_sr4.value))) {
                                    $.MyDLG(byt_fiac_debit_up_sr4_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if ((bB.byt_fiac_att_sr4.value != "") && (!Expression1.test(bB.byt_fiac_att_sr4.value))) {
                                    $.MyDLG(byt_fiac_debit_att_sr4_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (isNaN(bB.byt_fiac_debit_down_pc.value)) {
                                    $.MyDLG(byt_fiac_debit_down_pc_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (isNaN(bB.byt_fiac_debit_up_pc.value)) {
                                    $.MyDLG(byt_fiac_debit_up_pc_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!Expression1.test(bB.byt_fiac_att_pc.value)) {
                                    $.MyDLG(byt_fiac_debit_att_pc_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (isNaN(bB.byt_fiac_debit_down_clt.value)) {
                                    $.MyDLG(byt_fiac_debit_down_clt_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (isNaN(bB.byt_fiac_debit_up_clt.value)) {
                                    $.MyDLG(byt_fiac_debit_up_clt_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!Expression1.test(bB.byt_fiac_att_clt.value)) {
                                    $.MyDLG(byt_fiac_debit_att_clt_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.byt_fiac_arr_ft_loc.value == -1) {
                                    ClientDetailsReportFormError(bj, z);
                                    return false
                                }
                                if (bB.byt_fiac_mod_rc.value == -1) {
                                    ClientDetailsReportFormError(bj, z);
                                    return false
                                }
                                if (bB.byt_fiac_rallonge.value == -1) {
                                    ClientDetailsReportFormError(bj, z);
                                    return false
                                }
                                if (bB.byt_fiac_desserte_int.value == -1) {
                                    ClientDetailsReportFormError(bj, z);
                                    return false
                                }
                            }
                            if (bB.byt_appel_hl.value == -1) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                    if ((bB.inter_stat.value == 3)) {
                        bA = "Code_prestation" + n;
                        C = $("#form" + bA).find("input[name=somme]").val();
                        if ((C == 0 || C == "Unknown")) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.additional_id.value == 8) {
                            var ap = $(bB).find('select[name="orange_select_diag_assistance[]"]');
                            var a5 = $(bB).find('select[name="inter_stat"]');
                            var b6 = $(a5).get(0).selectedIndex;
                            var bG = $(a5).children("option:eq(" + b6 + ")");
                            if ((bG.attr("value") == 3) && (bB.report_result_id.value == 300 || bB.report_result_id.value == 301)) {
                                if ($(ap).get(0).selectedIndex == -1) {
                                    message = message_you_must_fill_fields2 + " diagnostique assistance";
                                    $.MyDLG(message, dlg_button_ok, "", function() {}, function() {});
                                    return false
                                }
                            }
                            if (bB.report_result_id.value == 300) {
                                if ((bB.ai_indice_details.value == "") || (bB.ai_indice_details.value == message_orange_ai_indice_default)) {
                                    OrangeAIIndiceEmpty(bj, z);
                                    return false
                                }
                                if ((bB.ai_investigation_details.value == "") || (bB.ai_investigation_details.value == message_orange_ai_investigation_default)) {
                                    OrangeAIInvestigationEmpty(bj, z);
                                    return false
                                }
                                if ((bB.ai_information_details.value == "") || (bB.ai_information_details.value == message_orange_ai_information_default)) {
                                    OrangeAIInformationEmpty(bj, z);
                                    return false
                                }
                            }
                            if (bB.report_result_id.value == 301) {
                                if ((bB.ai_indice_details.value == "") || (bB.ai_indice_details.value == message_orange_ai_indice_default)) {
                                    OrangeAIIndiceEmpty(bj, z);
                                    return false
                                }
                                if ((bB.ai_investigation_details.value == "") || (bB.ai_investigation_details.value == message_orange_ai_investigation_default)) {
                                    OrangeAIInvestigationEmpty(bj, z);
                                    return false
                                }
                                if ((bB.ai_information_details.value == "") || (bB.ai_information_details.value == message_orange_ai_information_default)) {
                                    OrangeAIInformationEmpty(bj, z);
                                    return false
                                }
                            }
                            if (bB.report_result_id.value == 305) {
                                if ((bB.ai_indice_details.value == "") || (bB.ai_indice_details.value == message_orange_ai_indice_default)) {
                                    OrangeAIIndiceEmpty(bj, z);
                                    return false
                                }
                                if ((bB.ai_investigation_details.value == "") || (bB.ai_investigation_details.value == message_orange_ai_investigation_default)) {
                                    OrangeAIInvestigationEmpty(bj, z);
                                    return false
                                }
                                if ((bB.ai_information_details.value == "") || (bB.ai_information_details.value == message_orange_ai_information_default)) {
                                    OrangeAIInformationEmpty(bj, z);
                                    return false
                                }
                            }
                            if (bB.report_result_id.value == 306) {
                                if ((bB.ai_indice_details.value == "") || (bB.ai_indice_details.value == message_orange_ai_indice_default)) {
                                    OrangeAIIndiceEmpty(bj, z);
                                    return false
                                }
                                if ((bB.ai_investigation_details.value == "") || (bB.ai_investigation_details.value == message_orange_ai_investigation_default)) {
                                    OrangeAIInvestigationEmpty(bj, z);
                                    return false
                                }
                                if ((bB.ai_information_details.value == "") || (bB.ai_information_details.value == message_orange_ai_information_default)) {
                                    OrangeAIInformationEmpty(bj, z);
                                    return false
                                }
                            }
                            if (bB.report_result_id.value != 304) {
                                if ((bB.ai_info_details.value == "") || (bB.ai_info_details.value == message_orange_ai_info_default)) {
                                    OrangeAIInfoEmpty(bj, z);
                                    return false
                                }
                            }
                        }
                    }
                }
                if ((bB.additional_id.value == 9 || bB.additional_id.value == 22) && (bB.inter_stat.value != 0) && (bB.inter_stat.value != 1) && (bB.inter_stat.value != 7)) {
                    if (bB.partner_id.value != 56) {
                        if (bB.add_vodafone_type.value == "Unknown") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_ribaltamento_borchie.value == "Unknown") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_borchia.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_portante.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_problemi.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_vs.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_irreperibile.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_rifiuta.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_mdc_txt.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_operator.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_commenti.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_vik_non_presente.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_mancanza_vik.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_sim_errata.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_sim_non_attiva.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_vik_guasta.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_guasto_sim.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_home_zone_errata.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_sim_non_associata.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_copertura_radiomobile.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_vik_non_rilevata.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_tgu_errata.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_no_dac.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_autenticazione_dati.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_autenticazione_voce.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_autenticazione_servizi.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_lavori_extra.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_apparecchi_non_comptabiliti.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_infrastruttura_ko.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_disdetta.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_chiarimenti_commerciali.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_vodafone_contatto_call.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.esito_gestione.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 10) {
                    if ((bB.partner_id.value == 303) || (bB.partner_id.value == 305) || (bB.partner_id.value == 306) || (bB.partner_id.value == 336)) {
                        if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                            var aq = $("#form" + n).find("input[name=nb_presta]").val();
                            if (aq <= 0) {
                                CompulsoryPrestation(bj, z);
                                return false
                            }
                            var bA = "Sogetrel_code_prestation" + n;
                            var aP = $("#form" + n).find("textarea[name=add_sogetrel_etat_lieux]").val();
                            var aM = $("#form" + n).find("input[name=add_sogetrel_ug_inspecte]").val();
                            var b1 = $("#form" + n).find("input[name=add_sogetrel_be_concerne]").val();
                            var bD = $("#form" + n).find("select[name=add_sogetrel_colonne_montante]").val();
                            var bw = $("#form" + n).find("select[name=add_sogetrel_bpi]").val();
                            if (aP == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (aM == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (b1 == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bD == "-1") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bw == "-1") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                    if ((bB.partner_id.value == 300) || (bB.partner_id.value == 287) || (bB.partner_id.value == 62) || (bB.partner_id.value == 305) || (bB.partner_id.value == 306)) {
                        if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                            var ax;
                            var al;
                            var bX;
                            var b0;
                            if ((bB.add_sogetrel_ont_txt.value == "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sogetrel_ont_txt.value != "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                if (bB.add_sogetrel_ont_txt.value.length != 12) {
                                    ONTFieldWrongSize(bj, z);
                                    return false
                                }
                                ax = "^[A-Z0-9]{12}$";
                                al = "s";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sogetrel_ont_txt.value)) || (b0.test(bB.add_sogetrel_ont_txt.value))) {
                                    ONTFieldWrongSize(bj, z);
                                    return false
                                }
                            }
                            if ((bB.add_sogetrel_stb_txt.value == "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sogetrel_stb_txt.value != "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                if (bB.add_sogetrel_stb_txt.value.length != 18) {
                                    STBFieldWrongSize(bj, z);
                                    return false
                                }
                                ax = "^[A-Z0-9]{18}$";
                                al = "s";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sogetrel_stb_txt.value)) || (b0.test(bB.add_sogetrel_stb_txt.value))) {
                                    STBFieldWrongSize(bj, z);
                                    return false
                                }
                            }
                            if ((bB.add_sogetrel_deco_txt.value == "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sogetrel_deco_txt.value != "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                if (bB.add_sogetrel_deco_txt.value.length != 18) {
                                    STBFieldWrongSize(bj, z);
                                    return false
                                }
                                ax = "^[A-Z0-9]{18}$";
                                al = "s";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sogetrel_deco_txt.value)) || (b0.test(bB.add_sogetrel_deco_txt.value))) {
                                    DECOFieldWrongSize(bj, z);
                                    return false
                                }
                            }
                            if (bB.add_sogetrel_deco2_txt.value != "") {
                                if (bB.add_sogetrel_deco2_txt.value.length != 18) {
                                    STBFieldWrongSize(bj, z);
                                    return false
                                }
                                ax = "^[A-Z0-9]{18}$";
                                al = "s";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sogetrel_deco2_txt.value)) || (b0.test(bB.add_sogetrel_deco2_txt.value))) {
                                    DECO2FieldWrongSize(bj, z);
                                    return false
                                }
                            }
                            if ((bB.add_sogetrel_puissance_prise_txt.value == "") && (bB.report_result_id.value != 524)) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sogetrel_puissance_prise_txt.value != "") && (bB.report_result_id.value != 524)) {
                                ax = "^-[0-9]{1,2}$";
                                al = "^-[0-9]{1,2},[0-9]{1,2}$";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sogetrel_puissance_prise_txt.value)) && (!b0.test(bB.add_sogetrel_puissance_prise_txt.value))) {
                                    PuissancePriseFieldWrongFormat(bj, z);
                                    return false
                                }
                            }
                            if (bB.add_sogetrel_cable_txt.value != "") {
                                ax = "^[0-9]{1,2}$";
                                bX = new RegExp(ax);
                                if (!bX.test(bB.add_sogetrel_cable_txt.value)) {
                                    CableFOFieldWrongFormat(bj, z);
                                    return false
                                }
                            }
                            if (bB.add_sogetrel_pose_cable.value != "") {
                                ax = "^[0-9]{1,2}$";
                                bX = new RegExp(ax);
                                if (!bX.test(bB.add_sogetrel_pose_cable.value)) {
                                    CableEthernetFieldWrongFormat(bj, z);
                                    return false
                                }
                            }
                            if (bB.add_sogetrel_nb_prise_ethernet.value != "") {
                                ax = "^[0-9]{1}$";
                                bX = new RegExp(ax);
                                if (!bX.test(bB.add_sogetrel_nb_prise_ethernet.value)) {
                                    PriseEthernetFieldWrongFormat(bj, z);
                                    return false
                                }
                            }
                            if ((bB.add_sogetrel_ticket_sfr.value == "") && ((bB.report_result_id.value == 521) || (bB.report_result_id.value == 527))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.add_sogetrel_ticket_sfr.value != "") {
                                ax = "^[A-Za-z0-9]{1,10}$";
                                bX = new RegExp(ax);
                                if (!bX.test(bB.add_sogetrel_ticket_sfr.value)) {
                                    TicketSFRFieldWrongFormat(bj, z);
                                    return false
                                }
                            }
                            var be = parseInt(bB.add_sogetrel_service_tel.value);
                            if (be < 0) {
                                be = 0
                            }
                            var a3 = parseInt(bB.add_sogetrel_service_web.value);
                            if (a3 < 0) {
                                a3 = 0
                            }
                            var aN = parseInt(bB.add_sogetrel_service_tv.value);
                            if (aN < 0) {
                                aN = 0
                            }
                            var bv = be + a3 + aN;
                            if ((bv < 3) && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                BadSumServicesExpected(bj, z);
                                return false
                            }
                            if ((bv > 2) && ((bB.report_result_id.value == 521) || (bB.report_result_id.value == 527))) {
                                BadSumServicesExpected(bj, z);
                                return false
                            }
                            if ((bv > 0) && ((bB.report_result_id.value == 523) || (bB.report_result_id.value == 524) || (bB.report_result_id.value == 525) || (bB.report_result_id.value == 526))) {
                                BadSumServicesExpected(bj, z);
                                return false
                            }
                            if (bB.report_details.value == "") {
                                InterDetailsEmpty(bj, z);
                                return false
                            }
                            var aS = $(bB).find('select[name="report_result_id"]');
                            var b6 = $(aS).get(0).selectedIndex;
                            var a1 = $(aS).children("option:eq(" + b6 + ")");
                            var b9 = a1.attr("block_val");
                            if ((b9 == 0) && (bB.add_sogetrel_code_echec.value == -1)) {
                                CodeEchecNeeded(bj, z);
                                return false
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 11) {
                    if (bB.add_sfr_gel_reac.value == "GEL") {
                        MessageInterventionLocked(bj, z);
                        return false
                    }
                    var aE = $(bB).find("[name=canceled]").attr("checked");
                    if (aE) {
                        MessageCantCancelIntervention(bj, z);
                        return false
                    }
                    if (((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) && ((bB.add_sfr_appel_support_9c.value < 0) || (bB.add_sfr_inter_nra.value < 0) || (bB.add_sfr_inter_client.value < 0) || (bB.add_sfr_inter_st.value < 0) || (bB.add_sfr_prise_charge_9c.value < 0))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.add_sfr_choix_origine.value <= 0) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        } else {
                            if (bB.add_sfr_resultat_inter.value <= 0) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            } else {
                                if (bB.add_sfr_origine_panne_list.value <= 0) {
                                    ClientDetailsReportFormError(bj, z);
                                    return false
                                } else {
                                    if (bB.add_sfr_origine_panne_detail_list.value <= 0) {
                                        ClientDetailsReportFormError(bj, z);
                                        return false
                                    }
                                }
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 12) {
                    if ((bB.add_scc_uc_prevue.value > 0) && ((bB.add_scc_uc_final.value <= 0) || (bB.add_scc_uc_final.value == ""))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if ((bB.add_scc_uc_prevue.value > 0) && ((bB.add_scc_uc_final.value > 0) && (bB.add_scc_uc_prevue.value < bB.add_scc_uc_final.value))) {
                        SCCErrorNumber(bj, z);
                        return false
                    }
                    if ((bB.add_scc_uc_final.value != "") && (isNaN(bB.add_scc_uc_final.value))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if ((bB.add_scc_ecran_prevue.value > 0) && ((bB.add_scc_ecran_final.value <= 0) || (bB.add_scc_ecran_final.value == ""))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if ((bB.add_scc_ecran_prevue.value > 0) && ((bB.add_scc_ecran_final.value > 0) && (bB.add_scc_ecran_prevue.value < bB.add_scc_ecran_final.value))) {
                        SCCErrorNumber(bj, z);
                        return false
                    }
                    if ((bB.add_scc_ecran_final.value != "") && (isNaN(bB.add_scc_ecran_final.value))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if ((bB.add_scc_imprimante_prevue.value > 0) && ((bB.add_scc_imprimante_final.value <= 0) || (bB.add_scc_imprimante_final.value == ""))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if ((bB.add_scc_imprimante_prevue.value > 0) && ((bB.add_scc_imprimante_final.value > 0) && (bB.add_scc_imprimante_prevue.value < bB.add_scc_imprimante_final.value))) {
                        SCCErrorNumber(bj, z);
                        return false
                    }
                    if ((bB.add_scc_imprimante_final.value != "") && (isNaN(bB.add_scc_imprimante_final.value))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if ((bB.add_scc_serveur_prevue.value > 0) && ((bB.add_scc_serveur_final.value <= 0) || (bB.add_scc_serveur_final.value == ""))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if ((bB.add_scc_serveur_prevue.value > 0) && ((bB.add_scc_serveur_final.value > 0) && (bB.add_scc_serveur_prevue.value < bB.add_scc_serveur_final.value))) {
                        SCCErrorNumber(bj, z);
                        return false
                    }
                    if ((bB.add_scc_serveur_final.value != "") && (isNaN(bB.add_scc_serveur_final.value))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if ((bB.add_scc_os_prevue.value > 0) && ((bB.add_scc_os_final.value <= 0) || (bB.add_scc_os_final.value == ""))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if ((bB.add_scc_os_prevue.value > 0) && ((bB.add_scc_os_final.value > 0) && (bB.add_scc_os_prevue.value < bB.add_scc_os_final.value))) {
                        SCCErrorNumber(bj, z);
                        return false
                    }
                    if ((bB.add_scc_os_final.value != "") && (isNaN(bB.add_scc_os_final.value))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                }
                if ((bB.additional_id.value == 13) && (bB.inter_stat.value != 0) && (bB.inter_stat.value != 1) && (bB.inter_stat.value != 7)) {
                    if (bB.add_vodafone_type.value == "Unknown") {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_ribaltamento_borchie.value == "Unknown") {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_vs.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_irreperibile.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_rifiuta.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_mdc_txt.value == "") {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_operator.value == "") {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_commenti.value == "") {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_vik_non_presente.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_mancanza_vik.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_sim_errata.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_sim_non_attiva.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_vik_guasta.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_guasto_sim.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_home_zone_errata.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_sim_non_associata.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_copertura_radiomobile.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_vik_non_rilevata.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_lavori_extra.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_apparecchi_non_comptabiliti.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_infrastruttura_ko.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_disdetta.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_chiarimenti_commerciali.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_contatto_call.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_tipo_primaria.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_tipo_impianto.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_numero_secondarie.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                    if (bB.add_vodafone_posizionamento.value == -1) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                }
                if (bB.additional_id.value == 14) {
                    if (bB.partner_id.value != 334) {
                        if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                            var aq = $("#form" + n).find("input[name=nb_presta]").val();
                            if (aq <= 0) {
                                CompulsoryPrestation(bj, z);
                                return false
                            }
                            if ((bB.add_sfr_nat_puissance_prise_txt.value == "") && (bB.report_result_id.value != 524)) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sfr_nat_puissance_prise_txt.value != "") && (bB.report_result_id.value != 524)) {
                                ax = "^-[0-9]{1,2}$";
                                al = "^-[0-9]{1,2},[0-9]{1,2}$";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sfr_nat_puissance_prise_txt.value)) && (!b0.test(bB.add_sfr_nat_puissance_prise_txt.value))) {
                                    PuissancePriseFieldWrongFormat(bj, z);
                                    return false
                                }
                            }
                            if ((bB.add_sfr_nat_service_tel.value == -1) || (bB.add_sfr_nat_service_web.value == -1) || (bB.add_sfr_nat_service_tv.value == -1)) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sfr_nat_ont_txt.value == "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sfr_nat_ont_txt.value != "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                if (bB.add_sfr_nat_ont_txt.value.length != 12) {
                                    SfrONTFieldWrongSize(bj, z);
                                    return false
                                }
                                ax = "^[A-Z0-9]{12}$";
                                al = "s";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sfr_nat_ont_txt.value)) || (b0.test(bB.add_sfr_nat_ont_txt.value))) {
                                    SfrONTFieldWrongSize(bj, z);
                                    return false
                                }
                            }
                            if ((bB.add_sfr_nat_neufbox_txt.value == "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sfr_nat_neufbox_txt.value != "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                if (bB.add_sfr_nat_neufbox_txt.value.length != 18) {
                                    SfrNeufBoxFieldWrongSize(bj, z);
                                    return false
                                }
                                ax = "^[A-Z0-9]{18}$";
                                al = "s";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sfr_nat_neufbox_txt.value)) || (b0.test(bB.add_sfr_nat_neufbox_txt.value))) {
                                    SfrNeufBoxFieldWrongSize(bj, z);
                                    return false
                                }
                            }
                            if ((bB.add_sfr_nat_decotv_txt.value == "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sfr_nat_decotv_txt.value != "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                if (bB.add_sfr_nat_decotv_txt.value.length != 18) {
                                    SfrDecoTVFieldWrongSize(bj, z);
                                    return false
                                }
                                ax = "^[A-Z0-9]{18}$";
                                al = "s";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sfr_nat_decotv_txt.value)) || (b0.test(bB.add_sfr_nat_decotv_txt.value))) {
                                    SfrDecoTVFieldWrongSize(bj, z);
                                    return false
                                }
                            }
                            if ((bB.add_sfr_nat_decohdd_txt.value == "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sfr_nat_decohdd_txt.value != "") && ((bB.report_result_id.value == 520) || (bB.report_result_id.value == 521) || (bB.report_result_id.value == 527) || (bB.report_result_id.value == 528) || (bB.report_result_id.value == 529))) {
                                if (bB.add_sfr_nat_decohdd_txt.value.length != 18) {
                                    SfrDecoHDDFieldWrongSize(bj, z);
                                    return false
                                }
                                ax = "^[A-Z0-9]{18}$";
                                al = "s";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sfr_nat_decohdd_txt.value)) || (b0.test(bB.add_sfr_nat_decohdd_txt.value))) {
                                    SfrDecoHDDFieldWrongSize(bj, z);
                                    return false
                                }
                            }
                            if ((bB.add_sfr_nat_bpi.value != "") && (bB.add_sfr_nat_bpi.value.length != 11)) {
                                SfrCPLFieldWrongSize(bj, z);
                                return false
                            }
                            if ((bB.add_sfr_nat_be.value != "") && (bB.add_sfr_nat_be.value.length != 10)) {
                                SfrSFPFieldWrongSize(bj, z);
                                return false
                            }
                            if (bB.add_sfr_nat_multi_tv.value == 1) {
                                if (bB.add_sfr_deco2.value == "") {
                                    ClientDetailsReportFormError(bj, z);
                                    return false
                                }
                            }
                            if (bB.add_sfr_be_non_conforme.value == -1) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((bB.add_sfr_be_non_conforme.value == 1) && (bB.add_sfr_ticket_maintenance.value == "")) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.report_details.value == "") {
                                InterDetailsEmpty(bj, z);
                                return false
                            }
                            var aS = $(bB).find('select[name="report_result_id"]');
                            var b6 = $(aS).get(0).selectedIndex;
                            var a1 = $(aS).children("option:eq(" + b6 + ")");
                            var b9 = a1.attr("block_val");
                            if ((b9 == 1) && (bB.add_sfr_nat_validation.value == "")) {
                                SfrValidationFieldWrongSize(bj, z);
                                return false
                            }
                            if ((b9 == 0) && (bB.add_sfr_nat_type_echec.value == "")) {
                                CodeEchecNeeded(bj, z);
                                return false
                            }
                            if ((b9 == 0) && (bB.add_sfr_nat_code_echec.value == -1)) {
                                CodeEchecNeeded(bj, z);
                                return false
                            }
                        }
                    }
                    if (bB.partner_id.value == 334) {
                        if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                            if (bB.add_sfr_nat_neufbox_txt.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.add_sfr_nat_neufbox_txt.value != "") {
                                if (bB.add_sfr_nat_neufbox_txt.value.length != 18) {
                                    SfrNeufBoxFieldWrongSize(bj, z);
                                    return false
                                }
                                ax = "^[A-Z0-9]{18}$";
                                al = "s";
                                bX = new RegExp(ax);
                                b0 = new RegExp(al);
                                if ((!bX.test(bB.add_sfr_nat_neufbox_txt.value)) || (b0.test(bB.add_sfr_nat_neufbox_txt.value))) {
                                    SfrNeufBoxFieldWrongSize(bj, z);
                                    return false
                                }
                            }
                            if (bB.add_sfr_nat_decotv_txt.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 16) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.add_easydentic_tel_pti.value != "") {
                            if (bB.add_easydentic_tel_pti.value.length != 10) {
                                EasydenticTelPtiFormat(bj, z);
                                return false
                            }
                            ax = "^[0-9]{10}$";
                            al = "s";
                            bX = new RegExp(ax);
                            b0 = new RegExp(al);
                            if ((!bX.test(bB.add_easydentic_tel_pti.value)) || (b0.test(bB.add_easydentic_tel_pti.value))) {
                                EasydenticTelPtiFormat(bj, z);
                                return false
                            }
                        }
                        if (bB.add_easydentic_pti_id.value != "") {
                            if (bB.add_easydentic_pti_id.value.length != 6) {
                                EasydenticPtiIdFormat(bj, z);
                                return false
                            }
                            ax = "^[0-9]{6}$";
                            al = "s";
                            bX = new RegExp(ax);
                            b0 = new RegExp(al);
                            if ((!bX.test(bB.add_easydentic_pti_id.value)) || (b0.test(bB.add_easydentic_pti_id.value))) {
                                EasydenticPtiIdFormat(bj, z);
                                return false
                            }
                        }
                        if (bB.add_easydentic_serie_eden.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_easydentic_date_doc.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_easydentic_date_elec.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_easydentic_couv_gprs.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_easydentic_alarm_gprs.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_easydentic_defibrilateur.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_easydentic_defaut_tech.value == -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_easydentic_tracking_ups.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 17) {
                    if (user_group_id == 5 || user_group_id == 15 || user_group_id == 16) {} else {
                        if (bB.add_hpge_facturation_su.value != "") {
                            ax = "^[0-9].[0-9]$";
                            bX = new RegExp(ax);
                            if (!bX.test(bB.add_hpge_facturation_su.value)) {
                                HpgeFactuSUFormat(bj, z);
                                return false
                            }
                        }
                    }
                }
                if ((user_group_id == 5) || (user_group_id == 15) || (user_group_id == 16)) {
                    var aS = $(bB).find('select[name="report_result_id"]');
                    var b6 = $(aS).get(0).selectedIndex;
                    var a1 = $(aS).children("option:eq(" + b6 + ")");
                    var b9 = a1.attr("block_val");
                    if (b9 != "") {
                        if ((bB.inter_stat.value == 3) && (b9 == 0) && (b9 > -1) && (b9 != 2)) {
                            $.MyDLG("Incoherence entre le code resultat et l'etat de l'intervention.", dlg_button_ok, "", function() {}, function() {});
                            return false
                        }
                        if ((bB.inter_stat.value == 4) && (b9 == 1) && (b9 > -1) && (b9 != 2)) {
                            $.MyDLG("Incoherence entre le code resultat et l'etat de l'intervention.", dlg_button_ok, "", function() {}, function() {});
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 20) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        var bu = "#table_releve_erdf";
                        var bt = $(bu).find('[name="nbEmptyReleve"]').val();
                        if ((bt != "") && (bt > 0)) {
                            $.MyDLG("Merci d'indiquer le nombre de compteurs ainsi que le temps pour chaque circuit.", dlg_button_ok, "", function() {}, function() {});
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 21) {
                    if ((bB.inter_stat.value == 3) || (bB.report_result_id.value == 1270)) {
                        if (bB.nbMod.value <= 0) {
                            $.MyDLG(message_voltalis_1_mod_at_least, dlg_button_ok, "", function() {}, function() {});
                            return false
                        } else {
                            if (bB.add_voltalis_pdl_num.value == "") {
                                $.MyDLG(message_voltalis_compulsory_pdl, dlg_button_ok, "", function() {}, function() {});
                                return false
                            } else {
                                ax = "[0-9]{14}";
                                bX = new RegExp(ax);
                                if (!bX.test(bB.add_voltalis_pdl_num.value)) {
                                    $.MyDLG(message_voltalis_compulsory_pdl_format, dlg_button_ok, "", function() {}, function() {});
                                    return false
                                }
                            }
                            if (bB.add_voltalis_pilote_installe.value == "") {
                                $.MyDLG(message_voltalis_compulsory_pil_inst, dlg_button_ok, "", function() {}, function() {});
                                return false
                            }
                            if (bB.add_voltalis_pil_loc.value == "") {
                                $.MyDLG(message_voltalis_compulsory_pil_location, dlg_button_ok, "", function() {}, function() {});
                                return false
                            }
                            if (bB.add_voltalis_pilote_installe.value == 1) {
                                if (bB.add_voltalis_test_gprs.value == "") {
                                    $.MyDLG(message_voltalis_test_gprs, dlg_button_ok, "", function() {}, function() {});
                                    return false
                                }
                                if (bB.add_voltalis_test_cpl.value == "") {
                                    $.MyDLG(message_voltalis_test_cpl, dlg_button_ok, "", function() {}, function() {});
                                    return false
                                }
                                if (bB.add_voltalis_ns.value == "") {
                                    $.MyDLG(message_voltalis_compulsory_pil_ns, dlg_button_ok, "", function() {}, function() {});
                                    return false
                                } else {
                                    if (bB.add_voltalis_ns.value != "") {
                                        ax = "[A-Za-z0-9]{3}-[A-Za-z0-9]{4}-[A-Za-z0-9]{6}";
                                        bX = new RegExp(ax);
                                        if (!bX.test(bB.add_voltalis_ns.value)) {
                                            $.MyDLG(message_voltalis_compulsory_pil_ns_format, dlg_button_ok, "", function() {}, function() {});
                                            return false
                                        }
                                    }
                                }
                            }
                            if (bB.add_voltalis_facture_edf.value == 0) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.add_voltalis_puiss_sct.value == 0) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.add_voltalis_annee_tableau.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 23) {
                    if ((bB.inter_stat.value == 3) || (bB.report_result_id.value == 1270)) {
                        if (isNaN(bB.nb_cpt_tech.value)) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.temps_tech.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (isNaN(bB.nb_cpt_acces.value)) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (isNaN(bB.nb_cli_abs.value)) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (isNaN(bB.nb_cli_repass.value)) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 24) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if ((bB.begin_hh.value == "") || (bB.begin_mm.value == "")) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if ((bB.end_hh.value == "") || (bB.end_mm.value == "")) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                    var a0 = $("#form" + n).find("[name=main_product_id]").val();
                    var bh = $("#form" + n).find("[name=main_product_duration]").val();
                    var aF = $("#form" + n).find("[name=main_product_done_notdone]").val();
                    var bV = $("#form" + n).find("[name=main_product_price]").val();
                    if ((bB.nbMainProduct.value > 0) || (bB.nbAddProduct.value > 0)) {
                        if (bB.main_product_done_notdone.value == -1) {
                            if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        } else {
                            if ((bB.nbMainProduct.value != "") && (bB.nbMainProduct.value > 0)) {
                                var bZ = 0;
                                var bK = "";
                                var bF = 1;
                                var aW = 0;
                                var aH = "";
                                var bQ = "";
                                var ce = "";
                                ce = aF * bh;
                                bQ = Math.round(bV * aF * 100) / 100;
                                bK = bK + "UPDATE product SET ";
                                bK = bK + 'qty_install = "' + bF + '", ';
                                bK = bK + 'qty_installed = "' + aF + '", ';
                                bK = bK + 'qty_returned = "' + aW + '", ';
                                bK = bK + 'serial_number = "' + aH + '", ';
                                bK = bK + 'total_duration = "' + ce + '", ';
                                bK = bK + 'total_price = "' + bQ + '" ';
                                bK = bK + 'WHERE ID = "' + a0 + '"; ';
                                $("#dummy_container").load("interventions/save_mood_media_add_products", {
                                    inside: "yes",
                                    mysql: bK
                                }, function(ci, cg, ch) {
                                    if (chkRes($("#dummy_container"), cg, ci)) {}
                                    UNblockAllUI()
                                })
                            }
                            if ((bB.nbAddProduct.value != "") && (bB.nbAddProduct.value > 0)) {
                                for (i = 1; i <= bB.nbAddProduct.value; i++) {
                                    bH = "";
                                    var bO = $("#form" + n).find("[name=add_product_id" + i + "]").val();
                                    var bI = $("#form" + n).find("[name=add_product_qty_install" + i + "]").val();
                                    var b4 = $("#form" + n).find("[name=add_product_qty_installed" + i + "]").val();
                                    var aC = $("#form" + n).find("[name=add_product_qty_returned" + i + "]").val();
                                    var aQ = $("#form" + n).find("[name=add_product_serial" + i + "]").val();
                                    var bf = $("#form" + n).find("[name=product_total_duration" + i + "]").val();
                                    var a7 = $("#form" + n).find("[name=add_product_price" + i + "]").val();
                                    var bJ = "";
                                    bJ = Math.round(a7 * b4 * 100) / 100;
                                    bZ = bZ + aC;
                                    var bH = bH + "UPDATE product SET ";
                                    bH = bH + 'qty_install = "' + bI + '", ';
                                    bH = bH + 'qty_installed = "' + b4 + '", ';
                                    bH = bH + 'qty_returned = "' + aC + '", ';
                                    bH = bH + 'serial_number = "' + aQ + '", ';
                                    bH = bH + 'total_duration = "' + bf + '", ';
                                    bH = bH + 'total_price = "' + bJ + '" ';
                                    bH = bH + 'WHERE ID = "' + bO + '"; ';
                                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                                        if ((bZ != "") && (bZ > 0)) {
                                            if (bB.return_number.value == "") {
                                                confirm("Return number must be filled");
                                                return false
                                            }
                                        }
                                        if ((aC != "") && (aC > 0)) {
                                            if (aQ == "") {
                                                confirm("Serial number must be filled");
                                                return false
                                            }
                                        }
                                    }
                                    $("#dummy_container").load("interventions/save_mood_media_add_products", {
                                        inside: "yes",
                                        mysql: bH
                                    }, function(ci, cg, ch) {
                                        if (chkRes($("#dummy_container"), cg, ci)) {}
                                        UNblockAllUI()
                                    })
                                }
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 25) {
                    var bc = $(bB).find('select[name="bouygues_ai_select_diag_assistance[]"]');
                    var a5 = $(bB).find('select[name="inter_stat"]');
                    var b6 = $(a5).get(0).selectedIndex;
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if ($(bc).get(0).selectedIndex == -1) {
                            message = message_you_must_fill_fields2 + " diagnostique assistance";
                            $.MyDLG(message, dlg_button_ok, "", function() {}, function() {});
                            return false
                        }
                        bA = "Code_prestation" + n;
                        C = $("#form" + bA).find("input[name=somme]").val();
                        if ((C == 0 || C == "Unknown")) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 26) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.add_fuji_cause.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.add_fuji_reso_dsc.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.partner_id.value == 426) {
                            if (bB.add_fuji_reso_client_fsc_condition.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.add_fuji_reso_client_fsc_general.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.add_fuji_reso_client_fsc_secondaire.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.add_fuji_reso_client_fsc_action.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        } else {
                            if (bB.add_fuji_reso_client.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                    if (bB.inter_stat.value == 3) {
                        var bL = $(bB).find("[name=add_fuji_facturable]").attr("checked");
                        if (bL) {
                            if (bB.add_fuji_facturable_ref.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 28) {
                    if ((bB.inter_stat.value == 3)) {
                        if (bB.partner_id.value == 35) {
                            if (bB.vru_tipo_dispositivo.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.vru_ipphone_num.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.vru_switch_num.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.vru_ata_num.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.vru_punti_lan_num.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.vru_trunk_num.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                        if (bB.partner_id.value == 36) {
                            if (bB.vru_numero_kit.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.vru_numero_contatori.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.vru_numero_serbatoi.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 29) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.stime_device_problem.checked == true) {
                            var bU = 0;
                            if (bB.stime_baie_manquante.checked == true) {
                                bU++
                            }
                            if (bB.stime_baie_inutilisable.checked == true) {
                                bU++
                            }
                            if (bB.stime_porte_cassee.checked == true) {
                                bU++
                            }
                            if (bB.stime_gonds_manquants.checked == true) {
                                bU++
                            }
                            if (bB.stime_serrure_cle.checked == true) {
                                bU++
                            }
                            if (bB.stime_manque_visserie.checked == true) {
                                bU++
                            }
                            if (bB.stime_passe_cable.checked == true) {
                                bU++
                            }
                            if (bB.stime_device_autres.checked == true) {
                                bU++
                            }
                            if (bU == 0) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 30) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.vru_formazione_argo_princ_call.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.vru_formazione_argo_secon_call.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.vru_formazione_argo_princ_inter.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.vru_formazione_argo_secon_inter.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 33) {
                    var aI = $(bB).find("[name=canceled]").attr("checked");
                    if ((bB.inter_stat.value == 1) && (aI == 0)) {
                        var aw = "";
                        for (j = 1; j <= bB.toshiba_part_index.value; j++) {
                            var a6 = $("#form" + n).find("[name=toshiba_id_inter]").val();
                            var b3 = $("#form" + n).find("[name=toshiba_sympt_id_" + j + "]").val();
                            var by = $("#form" + n).find("[name=toshiba_piece_id_" + j + "]").val();
                            var aO = $("#form" + n).find("[name=toshiba_area_" + j + "]").val();
                            var ca = $("#form" + n).find("[name=toshiba_subarea1_" + j + "]").val();
                            var av = $("#form" + n).find("[name=toshiba_subarea2_" + j + "]").val();
                            var aG = $("#form" + n).find("[name=toshiba_symptom_" + j + "]").val();
                            var bE = $("#form" + n).find("[name=toshiba_occurence_" + j + "]").val();
                            if ((aO == "") || (ca == "") || (av == "") || (aG == "") || (bE == "")) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            } else {
                                if ((b3 == "") && (b3 == 0)) {
                                    aw = "INSERT INTO toshiba_infos_actions VALUES (''," + a6 + "," + by + ",'non rempli',NULL,NULL,NULL,NULL,'non rempli','non rempli',NULL,\"" + aO + '","' + ca + '","' + av + '","' + aG + '","' + bE + "\",''); ";
                                    $("#dummy_container").load("interventions/execute_query", {
                                        inside: "yes",
                                        mysql: aw
                                    }, function(ci, cg, ch) {
                                        if (chkRes($("#dummy_container"), cg, ci)) {}
                                        UNblockAllUI()
                                    })
                                }
                            }
                        }
                        var aw = "";
                        for (j = 1; j <= bB.toshiba_sympt_index.value; j++) {
                            var a6 = $("#form" + n).find("[name=toshiba_id_inter]").val();
                            var b3 = $("#form" + n).find("[name=new_toshiba_sympt_id_" + j + "]").val();
                            var aO = $("#form" + n).find("[name=new_toshiba_area_" + j + "]").val();
                            var ca = $("#form" + n).find("[name=new_toshiba_subarea1_" + j + "]").val();
                            var av = $("#form" + n).find("[name=new_toshiba_subarea2_" + j + "]").val();
                            var aG = $("#form" + n).find("[name=new_toshiba_symptom_" + j + "]").val();
                            var bE = $("#form" + n).find("[name=new_toshiba_occurence_" + j + "]").val();
                            if ((aO == "") || (ca == "") || (av == "") || (aG == "") || (bE == "")) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            } else {
                                if ((b3 != "") && (b3 > 0)) {
                                    aw = 'UPDATE toshiba_infos_actions SET AREA = "' + aO + '", SUB_AREA1 = "' + ca + '", SUB_AREA2 = "' + av + '", SYMPTOM = "' + aG + '", OCCURENCE = "' + bE + "\" WHERE ID = '" + b3 + "';";
                                    $("#dummy_container").load("interventions/execute_query", {
                                        inside: "yes",
                                        mysql: aw
                                    }, function(ci, cg, ch) {
                                        if (chkRes($("#dummy_container"), cg, ci)) {}
                                        UNblockAllUI()
                                    })
                                }
                            }
                        }
                    }
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        var aw = "";
                        for (j = 1; j <= bB.toshiba_part_index.value; j++) {
                            var a6 = $("#form" + n).find("[name=toshiba_id_inter]").val();
                            var b3 = $("#form" + n).find("[name=toshiba_sympt_id_" + j + "]").val();
                            var by = $("#form" + n).find("[name=toshiba_piece_id_" + j + "]").val();
                            var b2 = $("#form" + n).find("[name=toshiba_main_defect_" + j + "]").val();
                            var aB = $("#form" + n).find("[name=toshiba_repair_action_" + j + "]").val();
                            var aO = $("#form" + n).find("[name=toshiba_area_" + j + "]").val();
                            var ca = $("#form" + n).find("[name=toshiba_subarea1_" + j + "]").val();
                            var av = $("#form" + n).find("[name=toshiba_subarea2_" + j + "]").val();
                            var aG = $("#form" + n).find("[name=toshiba_symptom_" + j + "]").val();
                            var bE = $("#form" + n).find("[name=toshiba_occurence_" + j + "]").val();
                            if ((b2 == "") || (aB == "")) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            } else {
                                if ((b3 != "") && (b3 > 0)) {
                                    aw = 'UPDATE toshiba_infos_actions SET MAIN_DEFECT = "' + b2 + '", REPAIR_ACTION = "' + aB + "\" WHERE ID = '" + b3 + "';";
                                    $("#dummy_container").load("interventions/execute_query", {
                                        inside: "yes",
                                        mysql: aw
                                    }, function(ci, cg, ch) {
                                        if (chkRes($("#dummy_container"), cg, ci)) {}
                                        UNblockAllUI()
                                    })
                                } else {
                                    aw = "INSERT INTO toshiba_infos_actions VALUES (''," + a6 + "," + by + ',"' + b2 + "\",NULL,NULL,NULL,NULL,'non rempli','non rempli',NULL,\"" + aO + '","' + ca + '","' + av + '","' + aG + '","' + bE + '","' + aB + '"); ';
                                    $("#dummy_container").load("interventions/execute_query", {
                                        inside: "yes",
                                        mysql: aw
                                    }, function(ci, cg, ch) {
                                        if (chkRes($("#dummy_container"), cg, ci)) {}
                                        UNblockAllUI()
                                    })
                                }
                            }
                        }
                        var aw = "";
                        for (j = 1; j <= bB.toshiba_sympt_index.value; j++) {
                            var a6 = $("#form" + n).find("[name=toshiba_id_inter]").val();
                            var b3 = $("#form" + n).find("[name=new_toshiba_sympt_id_" + j + "]").val();
                            var b2 = $("#form" + n).find("[name=new_toshiba_main_defect_" + j + "]").val();
                            var aB = $("#form" + n).find("[name=new_toshiba_repair_action_" + j + "]").val();
                            var aO = $("#form" + n).find("[name=new_toshiba_area_" + j + "]").val();
                            var ca = $("#form" + n).find("[name=new_toshiba_subarea1_" + j + "]").val();
                            var av = $("#form" + n).find("[name=new_toshiba_subarea2_" + j + "]").val();
                            var aG = $("#form" + n).find("[name=new_toshiba_symptom_" + j + "]").val();
                            var bE = $("#form" + n).find("[name=new_toshiba_occurence_" + j + "]").val();
                            if ((b2 == "") || (aB == "")) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            } else {
                                if ((b3 != "") && (b3 > 0)) {
                                    aw = 'UPDATE toshiba_infos_actions SET MAIN_DEFECT = "' + b2 + '", REPAIR_ACTION = "' + aB + "\" WHERE ID = '" + b3 + "';";
                                    $("#dummy_container").load("interventions/execute_query", {
                                        inside: "yes",
                                        mysql: aw
                                    }, function(ci, cg, ch) {
                                        if (chkRes($("#dummy_container"), cg, ci)) {}
                                        UNblockAllUI()
                                    })
                                } else {
                                    aw = "INSERT INTO toshiba_infos_actions VALUES (''," + a6 + ",'',\"" + b2 + "\",NULL,NULL,NULL,NULL,'non rempli','non rempli',NULL,\"" + aO + '","' + ca + '","' + av + '","' + aG + '","' + bE + '","' + aB + '"); ';
                                    $("#dummy_container").load("interventions/execute_query", {
                                        inside: "yes",
                                        mysql: aw
                                    }, function(ci, cg, ch) {
                                        if (chkRes($("#dummy_container"), cg, ci)) {}
                                        UNblockAllUI()
                                    })
                                }
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 31) {
                    if ((bB.report_result_id.value == 44) && (bB.belga_splc_numero_dn.value == "")) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                }
                if (bB.additional_id.value == 32) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        var b7 = $(bB).find("[name=belga_vd_biq]").attr("checked");
                        if (b7) {
                            if (bB.belga_vd_biq_ref.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 107) {
                    var bY = 0;
                    var ba = bB.type_inter_todo_id.value;
                    var aA = bB.partner_id.value;
                    var bG = bB.inter_stat.value;
                    var a2 = bB.report_result_id.value;
                    if ((aA == 2 && (ba == 20 || ba == 23 || ba == 28 || ba == 29 || ba == 30 || ba == 31 || ba == 32 || ba == 33)) || (aA == 9 && (ba == 6 || ba == 7))) {} else {
                        if (bB.inter_stat.value == 3 || bB.inter_stat.value == 4) {
                            var bT = $(bB).find("[name=vf_tipo_inter_sola]").attr("checked");
                            var bS = $(bB).find("[name=vf_tipo_inter_instal]").attr("checked");
                            var bR = $(bB).find("[name=vf_tipo_inter_assu]").attr("checked");
                            if (bT) {
                                bY++
                            }
                            if (bS) {
                                bY++
                            }
                            if (bR) {
                                bY++
                            }
                            if (bY == 0) {
                                $.MyDLG("E necessario selezionare almeno un'opzione fra i 3 scelte!", dlg_button_ok, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 34) {
                    motifPower1 = "^-[0-9]{2}[.]{1}[0-9]{0,2}$";
                    motifPower2 = "^-[0-9]{2}$";
                    motifPower3 = "^-[0-9]{1}[.]{1}[0-9]{0,2}$";
                    motifPower4 = "^-[0-9]{1}$";
                    motifPower5 = "^[0-9]{1}[.]{1}[0-9]{0,2}$";
                    motifPower6 = "^[0-9]{1}$";
                    motifPower7 = "^[0-9]{4}[-]{1}[0-9]{4}$";
                    motifOrange = "^[FI|FT]{2}[-]{1}[0-9]{4}[-]{1}[0-9]{4}$";
                    motifSFR = "^[CTP|UG]{2,3}[-]{1}[0-9]{3,7}[-]{1}[0-9]{1}$";
                    motifSFR2 = "^CT-[0-9]{4}[-]{1}[0-9]{4}$";
                    motifFree = "^[A]{1}[A-Z0-9]{9}$";
                    motifPto8 = "^[TN|TC|TS|AS|SI|BF|CO|DB|GA|MF|NA|NP|ZM|DE]{2}[-]{1}[a-zA-Z0-9]{4,5}[-]{1}[a-zA-Z0-9]{3,5}$";
                    motifPto9 = "^[0-9]{8}[-]{1}[0-9]{2}[-]{1}[0-9]{2}$";
                    motifPto10 = "^[AI|VN|AL]{2}-[a-zA-Z0-9]{4}[-]{1}[a-zA-Z0-9]{4}$";
                    motifPto11 = "^\42-[a-zA-Z0-9]{4}[-]{1}[a-zA-Z0-9]{4,6}$";
                    motifPto12 = "^\42[a-zA-Z0-9]{8}$";
                    motifPto13 = "^SF-[a-zA-Z0-9]{4}[-]{1}[a-zA-Z0-9]{4}$";
                    motifPto14 = "^[MB|VA|VF|YF]{2}-[a-zA-Z0-9]{4}[-]{1}[a-zA-Z0-9]{4}$";
                    motifPto15 = "^[a-zA-Z0-9]{2}-[a-zA-Z0-9]{5}[_]{1}[a-zA-Z0-9]{2}[-]{1}[a-zA-Z0-9]{4}[-]{1}[a-zA-Z0-9]{4}$";
                    motifSequalum = "^[a-zA-Z0-9]{8}[-]{1}[a-zA-Z0-9]{2}[-]{1}[a-zA-Z0-9]{2}$";
                    motifVauc = "^[0-9A-Za-z]{2}[-]{1}[0-9A-Za-z]{4}[-]{1}[0-9A-Za-z]{4}$";
                    motifSiel = "^[0-9]{2}[-]{1}[0-9A-Z]{4}[-]{1}[0-9]{4,5}$";
                    motifPto1 = "^[0-9]{2}[-]{1}[0-9A-Z]{4}[-]{1}[0-9]{6}$";
                    motifPto2 = "^[A-Z]{2}[-]{1}[0-9]{2}[-]{1}[0-9]{1}$";
                    motifPto3 = "^\9[2][0-9A-Za-z]{6}-[0-9A-Za-z]{2}-[0-9A-Za-z]{2}$";
                    motifPto4 = "^\9[2]-[0-9A-Za-z]{4}-[0-9A-Za-z]{4}$";
                    motifPto5 = "^SPTH-[0-9a-zA-Z]{4,5}[-]{1}[0-9a-zA-Z]{4}$";
                    Expression1 = new RegExp(motifPower1);
                    b0 = new RegExp(motifPower2);
                    Expression3 = new RegExp(motifPower3);
                    Expression4 = new RegExp(motifPower4);
                    Expression5 = new RegExp(motifPower5);
                    Expression6 = new RegExp(motifPower6);
                    Expression7 = new RegExp(motifPower7);
                    ExpressionOrange = new RegExp(motifOrange);
                    ExpressionSFR = new RegExp(motifSFR);
                    ExpressionFree = new RegExp(motifFree);
                    ExpressionSequalum = new RegExp(motifSequalum);
                    ExpressionVauc = new RegExp(motifVauc);
                    ExpressionSiel = new RegExp(motifSiel);
                    ExpressionPto1 = new RegExp(motifPto1);
                    ExpressionPto2 = new RegExp(motifPto2);
                    ExpressionPto3 = new RegExp(motifPto3);
                    ExpressionPto4 = new RegExp(motifPto4);
                    ExpressionPto5 = new RegExp(motifPto5);
                    ExpressionSFR2 = new RegExp(motifSFR2);
                    ExpressionPto8 = new RegExp(motifPto8);
                    ExpressionPto9 = new RegExp(motifPto9);
                    ExpressionPto10 = new RegExp(motifPto10);
                    ExpressionPto11 = new RegExp(motifPto11);
                    ExpressionPto12 = new RegExp(motifPto12);
                    ExpressionPto13 = new RegExp(motifPto13);
                    ExpressionPto14 = new RegExp(motifPto14);
                    ExpressionPto15 = new RegExp(motifPto15);
                    var at = $("#form" + n).find("[name=inter_stat]").val();
                    var a2 = $("#form" + n).find("[name=report_result_id]").val();
                    var a9 = $("#form" + n + " select[name=report_result_id] option:selected").attr("block_val");
                    if (at == 3 || at == 4) {
                        switch (a2) {
                            case "61447":
                            case "61448":
                            case "61419":
                            case "61433":
                            case "61434":
                                alert("Attention! [Ce code clÃ´ture nÃ©cessite la crÃ©ation d'un ticket ProblÃ¨me d'adresse] (VIA ALF)");
                                break;
                            case "61457":
                            case "61426":
                            case "61431":
                            case "61444":
                            case "61445":
                            case "61432":
                            case "61427":
                            case "61429":
                            case "61428":
                            case "61461":
                            case "61439":
                                alert("Attention! [Ce code clÃ´ture nÃ©cessite la crÃ©ation d'un ticket Reprovisionning Ã  froid] (VIA ALF)");
                                break;
                            case "61435":
                                alert("Attention! [Ce code clÃ´ture nÃ©cessite la crÃ©ation d'un ticket Pas de signal, Signal dÃ©gradÃ© OU ProblÃ¨me d'alignement] (VIA DIAGPRO)");
                                break;
                            case "61456":
                                alert("Attention! [Ce code clÃ´ture nÃ©cessite la crÃ©ation d'un ticket ProblÃ¨me de Rogue] (VIA DIAGPRO)");
                                break;
                            case "61415":
                                alert("Attention! [la photo de la fiche travaux est obligatoire ]");
                                break;
                            case "61425":
                                alert("Attention! [la photo du document d'autorisation Syndic est obligatoire ]");
                                break;
                            default:
                                break
                        }
                        if (a2 == 61441) {
                            var aY = confirm("Il faut impÃ©rativement que cet Ã©chec soit valider  avec le superviseur de la Zone. Rajouter le Nom et PrÃ©nom du Valideur sur lâ€™historisation de lâ€™appel");
                            if (aY != true) {
                                UNblockAllUI();
                                return false
                            }
                        }
                        var bi = $("#form" + n).find("[name=bouygues_ftth_commentairesOI]").val();
                        if (bi != "") {
                            if (bi.indexOf("XXX") != -1) {
                                $.MyDLG("Merci de vÃ©rifier les commentaires OI", dlg_button_ok, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                        if (a2 == -1 || a2 == 0) {
                            $.MyDLG("Merci de mentionner le code rÃ©sultat", dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        } else {
                            if ((at == 3 && a9 == 0) || (at == 4 && a9 == 1)) {
                                $.MyDLG("Merci de mentionner un correcte code rÃ©sultat", dlg_button_ok, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                        var bg = confirm("Merci de vÃ©rifier le Check Voisinage")
                    }
                    if (at == 3 || at == 4) {
                        if (bB.bouygues_ftth_internetStatus.value == "") {
                            $.MyDLG("Merci de mentionner la valeur INTERNET", dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                        if (bB.bouygues_ftth_phoneStatus.value == "") {
                            $.MyDLG("Merci de mentionner la valeur TEL", dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                        if (bB.bouygues_ftth_tvStatus.value == "") {
                            $.MyDLG("Merci de mentionner la valeur TV ", dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                        if (bB.bouygues_ftth_ptoInstalled.value == "") {
                            $.MyDLG("Merci de rÃ©pondre Ã  la question As-tu posÃ© la PTO?", dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                    }
                    if (at == 3) {
                        if (bB.type_inter_todo_id.value == 0 || bB.type_inter_todo_id.value == 1 || bB.type_inter_todo_id.value == 2) {
                            if ((!Expression1.test(bB.bouygues_ftth_ocpower.value)) && (!b0.test(bB.bouygues_ftth_ocpower.value))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.bouygues_ftth_ocEtiq.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.bouygues_ftth_pboAccessibility.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((!Expression1.test(bB.bouygues_ftth_pboFiberPower.value)) && (!b0.test(bB.bouygues_ftth_pboFiberPower.value))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if ((!Expression1.test(bB.bouygues_ftth_ptoPower.value)) && (!b0.test(bB.bouygues_ftth_ptoPower.value))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.bouygues_ftth_ptoEtiq.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            } else {
                                if (!ExpressionOrange.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionSFR.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionFree.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionSequalum.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionVauc.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionSiel.test(bB.bouygues_ftth_ptoEtiq.value) && !Expression7.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto1.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto2.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto3.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto4.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto5.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto8.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto9.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto10.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto11.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto12.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto13.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto14.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionPto15.test(bB.bouygues_ftth_ptoEtiq.value) && !ExpressionSFR2.test(bB.bouygues_ftth_ptoEtiq.value)) {
                                    $("input[name$='bouygues_ftth_ptoEtiq']").focus();
                                    $.MyDLG("Merci de bien respecter le format du Etiquetage PTO ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                            }
                            if ((!Expression3.test(bB.bouygues_ftth_pmPtoPower.value)) && (!Expression4.test(bB.bouygues_ftth_pmPtoPower.value)) && (!Expression5.test(bB.bouygues_ftth_pmPtoPower.value)) && (!Expression6.test(bB.bouygues_ftth_pmPtoPower.value))) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                        if (!Expression3.test(bB.bouygues_ftth_pmPtoPower.value)) {
                            $("input[name$='bouygues_ftth_pmPtoPower']").focus();
                            $.MyDLG("Merci de bien respecter le format du Mesure sortie PM/PTO ", dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        } else {
                            if (bB.bouygues_ftth_pmPtoPower.value < -1.8 || bB.bouygues_ftth_pmPtoPower.value > -0.01) {
                                $("input[name$='bouygues_ftth_pmPtoPower']").focus();
                                $.MyDLG("La Mesure sortie PM/PTO varie entre -1.8 et -0.01 ", dlg_button_ok, "", function() {
                                    my_LastStepResult = -61;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            } else {
                                if (bB.bouygues_ftth_ocpower.value == "") {
                                    $("input[name$='bouygues_ftth_ocpower']").focus();
                                    $.MyDLG("La Mesure connecteur OC est obligatoire ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -61;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                } else {
                                    if (bB.bouygues_ftth_pboFiberPower.value == "") {
                                        $("input[name$='bouygues_ftth_pboFiberPower']").focus();
                                        $.MyDLG("La Mesure puissance fibre PBO est obligatoire ", dlg_button_ok, "", function() {
                                            my_LastStepResult = -61;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    } else {
                                        if (bB.bouygues_ftth_ptoPower.value == "") {
                                            $("input[name$='bouygues_ftth_ptoPower']").focus();
                                            $.MyDLG("La Mesure sortie PTO est obligatoire ", dlg_button_ok, "", function() {
                                                my_LastStepResult = -61;
                                                UNblockAllUI()
                                            }, function() {
                                                my_LastStepResult = -1;
                                                UNblockAllUI()
                                            });
                                            return false
                                        }
                                    }
                                }
                            }
                        }
                    }
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if ((bB.type_inter_todo_id.value == 1 || bB.type_inter_todo_id.value == 5) && bB.partner_id.value != 1011) {
                            if (bB.bouygues_ftth_panne.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.bouygues_ftth_descriptionDiagnostic.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.inter_stat.value == 3 || bB.report_result_id.value == 1734 || bB.report_result_id.value == 1736 || bB.report_result_id.value == 1738 || bB.report_result_id.value == 1740 || bB.report_result_id.value == 1742 || bB.report_result_id.value == 1743 || bB.report_result_id.value == 1745 || bB.report_result_id.value == 1746 || bB.report_result_id.value == 1747 || bB.report_result_id.value == 1750 || bB.report_result_id.value == 1751) {
                            if (bB.type_inter_todo_id.value == 0 || bB.type_inter_todo_id.value == 2 || bB.type_inter_todo_id.value == 4) {
                                if (bB.bouygues_ftth_typeEmplacementPMRealise.value == "") {
                                    $.MyDLG("Le type Emplacement PM RÃ©alisÃ© est obligatoire ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -61;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.bouygues_ftth_categorieRaccoLogementRealise.value == "") {
                                    $.MyDLG("La catÃ©gorie RACCO Logement RÃ©alisÃ© est obligatoire ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -61;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                var aR = bB.bouygues_ftth_categorieRaccoLogementRealise.value;
                                var b5 = ["CHAMBRE", "AERIEN", "FACADE"];
                                var bm = false;
                                var ay = false;
                                var b8 = false;
                                if (b5.indexOf(aR) != -1) {
                                    b8 = true;
                                    if (aR == "AERIEN") {
                                        bm = true
                                    }
                                    if (aR == "CHAMBRE") {
                                        ay = true
                                    }
                                }
                                if (bB.xml_nbChambre.value == "" && b8) {
                                    $.MyDLG("Le Nombre chambre est obligatoire ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -61;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                } else {
                                    if (isNaN(bB.xml_nbChambre.value) || bB.xml_nbChambre.value.indexOf(" ") != -1) {
                                        $.MyDLG("Le Nombre chambre doit Ãªtre numÃ©rique ", dlg_button_ok, "", function() {
                                            my_LastStepResult = -61;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    }
                                }
                                if (bB.xml_NumeroChambrePB.value == "" && ay) {
                                    $.MyDLG("Le NumÃ©ro chambre PB est obligatoire ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -61;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                } else {
                                    if (isNaN(bB.xml_NumeroChambrePB.value) || bB.xml_NumeroChambrePB.value.indexOf(" ") != -1) {
                                        $.MyDLG("Le NumÃ©ro chambre PB doit Ãªtre numÃ©rique ", dlg_button_ok, "", function() {
                                            my_LastStepResult = -61;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    }
                                }
                                if (bB.xml_NumeroPoteauPB.value == "" && bm) {
                                    $.MyDLG("Le NumÃ©ro poteau PB est obligatoire ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -61;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                } else {
                                    if (isNaN(bB.xml_NumeroPoteauPB.value) || bB.xml_NumeroPoteauPB.value.indexOf(" ") != -1) {
                                        $.MyDLG("Le NumÃ©ro poteau PB doit Ãªtre numÃ©rique ", dlg_button_ok, "", function() {
                                            my_LastStepResult = -61;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    }
                                }
                                if (bB.xml_DiametreCableEnMM.value == "" && b8) {
                                    $.MyDLG("Le DiamÃ¨tre cÃ¢ble est obligatoire ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -61;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                } else {
                                    if (isNaN(bB.xml_DiametreCableEnMM.value) || bB.xml_DiametreCableEnMM.value.indexOf(" ") != -1) {
                                        $.MyDLG("Le DiamÃ¨tre cÃ¢ble doit Ãªtre numÃ©rique ", dlg_button_ok, "", function() {
                                            my_LastStepResult = -61;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    }
                                }
                                if (bB.xml_LongueurCableEnM.value == "" && b8) {
                                    $.MyDLG("Le Longueur cÃ¢ble est obligatoire ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -61;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                } else {
                                    if (isNaN(bB.xml_LongueurCableEnM.value) || bB.xml_LongueurCableEnM.value.indexOf(" ") != -1) {
                                        $.MyDLG("Le Longueur cÃ¢ble doit Ãªtre numÃ©rique ", dlg_button_ok, "", function() {
                                            my_LastStepResult = -61;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    }
                                }
                                if (bB.xml_NombreAppuisAeriens.value == "" && bm) {
                                    $.MyDLG("Le Nombre appuis aÃ©riens est obligatoire ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -61;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                } else {
                                    if (isNaN(bB.xml_NombreAppuisAeriens.value) || bB.xml_NombreAppuisAeriens.value.indexOf(" ") != -1) {
                                        $.MyDLG("Le Nombre appuis aÃ©riens doit Ãªtre numÃ©rique ", dlg_button_ok, "", function() {
                                            my_LastStepResult = -61;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    }
                                }
                                if (bB.xml_NombrePotelets.value == "" && bm) {
                                    $.MyDLG("Le Nombre potelets est obligatoire ", dlg_button_ok, "", function() {
                                        my_LastStepResult = -61;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                } else {
                                    if (isNaN(bB.xml_NombrePotelets.value) || bB.xml_NombrePotelets.value.indexOf(" ") != -1) {
                                        $.MyDLG("Le Nombre potelets doit Ãªtre numÃ©rique ", dlg_button_ok, "", function() {
                                            my_LastStepResult = -61;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    }
                                }
                            }
                        }
                    }
                    if ((bB.bouygues_ftth_debitMbps.value != "") && (isNaN(bB.bouygues_ftth_debitMbps.value))) {
                        $.MyDLG("Le debit Mbps doit Ãªtre numÃ©rique ", dlg_button_ok, "", function() {
                            my_LastStepResult = -61;
                            UNblockAllUI()
                        }, function() {
                            my_LastStepResult = -1;
                            UNblockAllUI()
                        });
                        return false
                    }
                    var bP = $(bB).find("[name=bouygues_ftth_isPmCorrected]").attr("checked");
                    if (bP) {
                        if (bB.bouygues_ftth_pmRef.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if ((bB.bouygues_ftth_codeInsee.value == "") || (isNaN(bB.bouygues_ftth_codeInsee.value))) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_commune.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_typeVoie.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_nomVoie.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if ((bB.bouygues_ftth_numVoie.value == "") || (isNaN(bB.bouygues_ftth_numVoie.value))) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_extNumVoie.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_correctedPmAccess.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                    var az = $(bB).find("[name=bouygues_ftth_isReproOI]").attr("checked");
                    if (az) {
                        if (bB.bouygues_ftth_causeOI.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_imputationCode.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_moduleName.value == "" || bB.bouygues_ftth_moduleName.value.indexOf(" ") != -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if ((bB.bouygues_ftth_modulePosition.value == "") || (isNaN(bB.bouygues_ftth_modulePosition.value)) || (bB.bouygues_ftth_modulePosition.value.indexOf(" ") != -1)) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_moduleCableRef.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_moduleTubeInfo.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_moduleFiberInfo.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_reference.value == "" || bB.bouygues_ftth_reference.value.indexOf(" ") != -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_localisation.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_referenceCable.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_tubeInfo.value == "" || bB.bouygues_ftth_tubeInfo.value == " " || bB.bouygues_ftth_tubeInfo.value == "  ") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_fiberInfo.value == "" || bB.bouygues_ftth_fiberInfo.value.indexOf(" ") != -1) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if ((bB.bouygues_ftth_connecteurPriseNum.value == "") || (isNaN(bB.bouygues_ftth_connecteurPriseNum.value)) || (bB.bouygues_ftth_connecteurPriseNum.value.indexOf(" ") != -1)) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_connecteurPriseCouleur.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_canalCommunicationOi.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                    var aD = $(bB).find("[name=bouygues_ftth_isReproOC]").attr("checked");
                    if (aD) {
                        if (bB.bouygues_ftth_causeOC.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_pmId.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_pmLink.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_pmWdm.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.bouygues_ftth_pmPanel.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if ((bB.bouygues_ftth_pmPort.value == "") || (isNaN(bB.bouygues_ftth_pmPort.value))) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        var cb = $("select[name=report_result_id] option:selected").val();
                        var aV = false;
                        var bl = 0;
                        if (cb == 1745 || cb == 1746 || cb == 1747 || cb == 1750 || cb == 1751) {
                            var aY = confirm("Attention : il sâ€™agit dâ€™une clÃ´ture NOK Cause OI Veuillez vÃ©rifier que tous les champs sont bien remplis");
                            if (aY == true) {
                                aV = true;
                                tt = 1
                            } else {
                                $.MyDLG("Veuillez vÃ©rifier que tous les champs sont bien remplis ", dlg_button_ok, "", function() {
                                    my_LastStepResult = -61;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                        var bp = $("#form" + n).find('input[name="bouygues_ftth_ocEtiq"]');
                        var a8 = $(bp).attr("integ_val");
                        var bs = $(bp).val();
                        var bo = $("#form" + n).find('input[name="bouygues_ftth_ptoEtiq"]');
                        var aL = $(bo).attr("integ_val");
                        var br = $(bo).val();
                        var bn = $("#form" + n).find('select[name="bouygues_ftth_typeEmplacementPMRealise"]');
                        var bz = $(bn).attr("integ_val");
                        var au = $(bn).val();
                        if (a8 != "" && a8 != bs) {
                            var aK = confirm("Ãªtes-vous sÃ»r que la valeur du champ etiquitage boitier oc est diffÃ¨rente Ã  celle reÃ§u lors de l'intÃ©gration du ticket !!!");
                            if (aK == true) {
                                bl = 1;
                                aV = true
                            } else {
                                $.MyDLG("Veuillez vÃ©rifier que ce champ est bien renseignÃ©", dlg_button_ok, "", function() {
                                    my_LastStepResult = -61;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                        if (aL != "" && aL != br) {
                            var aJ = confirm("Ãªtes-vous sÃ»r que la valeur du champ etiquitage PTO est diffÃ¨rente Ã  celle reÃ§u lors de l'intÃ©gration du ticket !!!");
                            if (aJ == true) {
                                aV = true;
                                bl = 1
                            } else {
                                $.MyDLG("Veuillez vÃ©rifier que ce champ est bien renseignÃ©", dlg_button_ok, "", function() {
                                    my_LastStepResult = -61;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                        if (bB.type_inter_todo_id.value != 0 && bB.type_inter_todo_id.value != 2 && bB.type_inter_todo_id.value != 4 && bB.partner_id.value != 1011) {
                            var bk = $("#form" + n).find('input[name="codeResultatSnow"]');
                            var cf = $(bk).val();
                            if (cf == "") {
                                $.MyDLG("Veuillez valider le questionnaire", dlg_button_ok, "", function() {
                                    my_LastStepResult = -61;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                        if (bl == 1) {
                            return aV
                        }
                    }
                }
                if (bB.additional_id.value == 36) {
                    if (bB.inter_stat.value == 3) {
                        if (bB.samsung_compteur_page.value.length == 0) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.samsung_numero_firmware.value.length < 3) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.samsung_code_condition.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.samsung_codes_symptome.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.samsung_code_section.value == "" && bB.partner_id.value != 552) {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.samsung_code_defect_repair.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 37) {
                    motifPower1 = "^RCBT[0-9]{8}$";
                    Expression1 = new RegExp(motifPower1);
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.wincor_rcbt_inter_type.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.wincor_rcbt_device_type1.value == "") {
                            alert("1");
                            ClientDetailsReportFormError(bj, z);
                            return false
                        } else {
                            if ((bB.wincor_rcbt_old_serial1.value == "") || (!Expression1.test(bB.wincor_rcbt_old_serial1.value))) {
                                $.MyDLG("L'ancien num\351ro de s\351rie du mat\351riel n\2601 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                $(this).get(0).selectedIndex = 0;
                                return false
                            } else {
                                if ((bB.wincor_rcbt_inter_type.value == "Swap") && (bB.wincor_rcbt_new_serial1.value == "")) {
                                    $.MyDLG("En cas de SWAP, le nouveau num\351ro de s\351rie du mat\351riel n\2601 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                    $(this).get(0).selectedIndex = 0;
                                    return false
                                } else {
                                    if ((bB.wincor_rcbt_new_serial1.value != "") && (!Expression1.test(bB.wincor_rcbt_new_serial1.value))) {
                                        $.MyDLG("Le nouveau num\351ro de s\351rie du mat\351riel n\2601 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                        $(this).get(0).selectedIndex = 0;
                                        return false
                                    }
                                }
                            }
                        }
                        if (bB.wincor_rcbt_device_type2.value != "") {
                            if ((bB.wincor_rcbt_old_serial2.value == "") || (!Expression1.test(bB.wincor_rcbt_old_serial2.value))) {
                                $.MyDLG("L'ancien num\351ro de s\351rie du mat\351riel n\2602 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                $(this).get(0).selectedIndex = 0;
                                return false
                            } else {
                                if ((bB.wincor_rcbt_inter_type.value == "Swap") && (bB.wincor_rcbt_new_serial2.value == "")) {
                                    $.MyDLG("En cas de SWAP, le nouveau num\351ro de s\351rie du mat\351riel n\2602 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                    $(this).get(0).selectedIndex = 0;
                                    return false
                                } else {
                                    if ((bB.wincor_rcbt_new_serial2.value != "") && (!Expression1.test(bB.wincor_rcbt_new_serial2.value))) {
                                        $.MyDLG("Le nouveau num\351ro de s\351rie du mat\351riel n\2602 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                        $(this).get(0).selectedIndex = 0;
                                        return false
                                    }
                                }
                            }
                        }
                        if (bB.wincor_rcbt_device_type3.value != "") {
                            if ((bB.wincor_rcbt_old_serial3.value == "") || (!Expression1.test(bB.wincor_rcbt_old_serial3.value))) {
                                $.MyDLG("L'ancien num\351ro de s\351rie du mat\351riel n\2603 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                $(this).get(0).selectedIndex = 0;
                                return false
                            } else {
                                if ((bB.wincor_rcbt_inter_type.value == "Swap") && (bB.wincor_rcbt_new_serial3.value == "")) {
                                    $.MyDLG("En cas de SWAP, le nouveau num\351ro de s\351rie du mat\351riel n\2603 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                    $(this).get(0).selectedIndex = 0;
                                    return false
                                } else {
                                    if ((bB.wincor_rcbt_new_serial3.value != "") && (!Expression1.test(bB.wincor_rcbt_new_serial3.value))) {
                                        $.MyDLG("Le nouveau num\351ro de s\351rie du mat\351riel n\2603 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                        $(this).get(0).selectedIndex = 0;
                                        return false
                                    }
                                }
                            }
                        }
                        if (bB.wincor_rcbt_device_type4.value != "") {
                            if ((bB.wincor_rcbt_old_serial4.value == "") || (!Expression1.test(bB.wincor_rcbt_old_serial4.value))) {
                                $.MyDLG("L'ancien num\351ro de s\351rie du mat\351riel n\2604 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                $(this).get(0).selectedIndex = 0;
                                return false
                            } else {
                                if ((bB.wincor_rcbt_inter_type.value == "Swap") && (bB.wincor_rcbt_new_serial4.value == "")) {
                                    $.MyDLG("En cas de SWAP, le nouveau num\351ro de s\351rie du mat\351riel n\2604 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                    $(this).get(0).selectedIndex = 0;
                                    return false
                                } else {
                                    if ((bB.wincor_rcbt_new_serial4.value != "") && (!Expression1.test(bB.wincor_rcbt_new_serial4.value))) {
                                        $.MyDLG("Le nouveau num\351ro de s\351rie du mat\351riel n\2604 ne peut \352tre nul et doit avoir le format suivant : 'RCBTXXXXXXXX' o\371 X est en entier compris entre 0 et 9.", dlg_button_ok, "", function() {}, function() {});
                                        $(this).get(0).selectedIndex = 0;
                                        return false
                                    }
                                }
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 38) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.wincor_product_group.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.wincor_elim_activities.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.wincor_error_cause.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if (bB.wincor_error_location.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 39) {
                    if (bB.inter_stat.value == 1) {
                        if (bB.voda_prem_res_class_int.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 35) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.bp2i_code_panne.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 42) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.bp2i_code_panne.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 43) {
                    if ((bB.type_inter_todo_id.value == 1) || (bB.type_inter_todo_id.value == 2)) {
                        if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                            if ((bB.faeton_user_string.value == "") && (bB.faeton_desk_string.value == "")) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.faeton_uc_sn.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.faeton_screen_sn.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                            if (bB.faeton_mpcanon_sn.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                }
                if ((bB.partner_id.value == 589) || (bB.partner_id.value == 590) || (bB.partner_id.value == 591) || (bB.partner_id.value == 595) || (bB.partner_id.value == 596)) {
                    ax = "^[0-9]{2}/[0-9]{2}/[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}$";
                    bX = new RegExp(ax);
                    if (!bX.test(bB.sla_current.value)) {
                        BP2ISLAFormat(bj, z);
                        return false
                    }
                    if (!bX.test(bB.bp2i_sla_max.value)) {
                        BP2ISLAFormat(bj, z);
                        return false
                    }
                } else {
                    if (bB.sla_current.value != "") {
                        ax = "^[0-9]{2}/[0-9]{2}/[0-9]{4} [0-9]{2}:[0-9]{2}:[0-9]{2}$";
                        bX = new RegExp(ax);
                        if (!bX.test(bB.sla_current.value)) {
                            BP2ISLAFormat(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 51) {
                    if ((user_group_id == 5) || (user_group_id == 15) || (user_group_id == 16)) {
                        if ((bB.inter_stat.value == 2) || (bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                            bA = "Code_prestation" + n;
                            C = $("#form" + bA).find("input[name=somme]").val();
                            if ((C == 0 || C == "Unknown")) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 54) {
                    if ((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) {
                        if (bB.anovo_philips_condition.value == "" || bB.anovo_philips_software_out.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                        if ((bB.report_result_id.value == 8301) || (bB.report_result_id.value == 8322)) {
                            if (bB.anovo_philips_symptom.value == "") {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                        if (bB.report_result_id.value == 8324) {
                            if ((bB.anovo_philips_section.value == "") || (bB.anovo_philips_symptom.value == "")) {
                                ClientDetailsReportFormError(bj, z);
                                return false
                            }
                        }
                        if (bB.anovo_philips_soft.value == "") {
                            ClientDetailsReportFormError(bj, z);
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 55 || bB.additional_id.value == 57) {}
                if (bB.additional_id.value == 56) {
                    if (bB.inter_stat.value == 3) {
                        motifNumeric1 = "[0-9]{1}";
                        numeric1 = new RegExp(motifNumeric1);
                        motifNumeric3 = "[0-9]{1,3}";
                        numeric3 = new RegExp(motifNumeric3);
                        motifMAJ6 = "[A-Z]{6}";
                        maj6 = new RegExp(motifMAJ6);
                        motifMAJNUM6 = "[A-Z0-9]{6}";
                        majNum6 = new RegExp(motifMAJNUM6);
                        motifNumMA = "MA[a-z0-9]{7}";
                        numMA = new RegExp(motifNumMA);
                        if ((bB.type_inter_todo_id.value == 0) || (bB.type_inter_todo_id.value == 1)) {
                            if (!numeric3.test(bB.sgtul_std_prevu.value)) {
                                $.MyDLG(sgtul_std_prevu_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (!numeric1.test(bB.sgtul_caisse_prevu.value)) {
                                $.MyDLG(sgtul_caisse_prevu_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (!numeric1.test(bB.sgtul_imp_prevu.value)) {
                                $.MyDLG(sgtul_imp_prevu_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (!numeric3.test(bB.sgtul_ecran_prevu.value)) {
                                $.MyDLG(sgtul_ecran_prevu_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                        if (bB.type_inter_todo_id.value == 1) {
                            if (!numeric3.test(bB.sgtul_std_rea.value)) {
                                $.MyDLG(sgtul_std_rea_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (!numeric1.test(bB.sgtul_caisse_rea.value)) {
                                $.MyDLG(sgtul_caisse_rea_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (!numeric3.test(bB.sgtul_pc_repris.value)) {
                                $.MyDLG(sgtul_pc_repris_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (!numeric1.test(bB.sgtul_imp_rea.value)) {
                                $.MyDLG(sgtul_imp_rea_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (!numeric3.test(bB.sgtul_ecran_rea.value)) {
                                $.MyDLG(sgtul_ecran_rea_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_date_deb_inter.value == "") {
                                $.MyDLG(sgtul_date_deb_inter_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_heure_deb_inter.value == "") {
                                $.MyDLG(sgtul_heure_deb_inter_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_date_fin_inter.value == "") {
                                $.MyDLG(sgtul_date_fin_inter_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_heure_fin_inter.value == "") {
                                $.MyDLG(sgtul_heure_fin_inter_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                        if ((bB.type_inter_todo_id.value == 2) || (bB.type_inter_todo_id.value == 3)) {
                            if (!majNum6.test(bB.sgtul_netbios.value)) {
                                $.MyDLG(sgtul_netbios_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (!numMA.test(bB.sgtul_ma_instal.value)) {
                                $.MyDLG(sgtul_ma_instal_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_ma_repris.value == "") {
                                $.MyDLG(sgtul_ma_repris_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_sec_ecran.value == "") {
                                $.MyDLG(sgtul_sec_ecran_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_imp_perso_ded.value == "") {
                                $.MyDLG(sgtul_imp_perso_ded_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_imp_perso_ded.value == "Oui") {
                                if (!numeric3.test(bB.sgtul_num_il.value)) {
                                    $.MyDLG(sgtul_num_il_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                            }
                            if (bB.sgtul_ouv_tul.value == "") {
                                $.MyDLG(sgtul_ouv_tul_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_recette_tech.value == "") {
                                $.MyDLG(sgtul_recette_tech_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_date_deb_inter.value == "") {
                                $.MyDLG(sgtul_date_deb_inter_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_heure_deb_inter.value == "") {
                                $.MyDLG(sgtul_heure_deb_inter_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_date_fin_inter.value == "") {
                                $.MyDLG(sgtul_date_fin_inter_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_heure_fin_inter.value == "") {
                                $.MyDLG(sgtul_heure_fin_inter_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                        if (bB.type_inter_todo_id.value == 2) {
                            if (bB.sgtul_imp_perso_ded.value == "") {
                                $.MyDLG(sgtul_imp_perso_ded_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_imp_perso_ded.value == "") {
                                $.MyDLG(sgtul_imp_perso_ded_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_imp_perso_ded.value == "") {
                                $.MyDLG(sgtul_imp_perso_ded_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                        if (bB.type_inter_todo_id.value == 3) {
                            if (bB.sgtul_caisse_geskes.value == "") {
                                $.MyDLG(sgtul_caisse_geskes_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_caisse_kegk7.value == "") {
                                $.MyDLG(sgtul_caisse_kegk7_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_caisse_oce.value == "") {
                                $.MyDLG(sgtul_caisse_oce_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                            if (bB.sgtul_caisse_ick.value == "") {
                                $.MyDLG(sgtul_caisse_ick_format, "", function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                }, function() {
                                    my_LastStepResult = -1;
                                    UNblockAllUI()
                                });
                                return false
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 59) {
                    motifNumeric1 = "[0-9]{1}";
                    numeric1 = new RegExp(motifNumeric1);
                    motifNumeric2 = "[0-9]{1,2}";
                    numeric2 = new RegExp(motifNumeric2);
                    motifNumeric3 = "[0-9]{1,3}";
                    numeric3 = new RegExp(motifNumeric3);
                    motifNumeric5 = "[0-9]{1,5}";
                    numeric5 = new RegExp(motifNumeric5);
                    motifMAJ6 = "[A-Z]{6}";
                    maj6 = new RegExp(motifMAJ6);
                    motifMAJNUM12 = "[A-Z0-9]{1,12}";
                    majNum12 = new RegExp(motifMAJNUM12);
                    motifNumMA = "MA[0-9]{7}";
                    numMA = new RegExp(motifNumMA);
                    var ar = $("#form" + n).find('select[name="type_inter_todo_id"]');
                    var bW = $(ar).attr("my_sel");
                    if (bB.type_inter_todo_id.value == bW) {
                        if (bB.inter_stat.value == 2 || bB.inter_stat.value == 3) {
                            if (bB.type_inter_todo_id.value == 0 || bB.type_inter_todo_id.value == 2) {
                                if (!numeric3.test(bB.nbr_tul_prevu.value)) {
                                    $.MyDLG(cdn_nbr_tul_prevu_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric1.test(bB.nbr_tul_prevu.value)) {
                                    $.MyDLG(cdn_nbr_plg_prevu_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric3.test(bB.nbr_omf_prevu.value)) {
                                    $.MyDLG(cdn_nbr_omf_prevu_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric3.test(bB.nbr_imp_usb_prevu.value)) {
                                    $.MyDLG(cdn_nbr_imp_usb_prevu_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric2.test(bB.nbr_imp_reseau_prevu.value)) {
                                    $.MyDLG(cdn_nbr_imp_reseau_prevu_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric1.test(bB.nbr_imp_couleur_prevu.value)) {
                                    $.MyDLG(cdn_nbr_imp_couleur_prevu_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric1.test(bB.nbr_scancheque_prevu.value)) {
                                    $.MyDLG(cdn_nbr_scancheque_prevu_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                            }
                            if (bB.type_inter_todo_id.value == 2) {
                                if (!numeric3.test(bB.nbr_tul_realise.value)) {
                                    $.MyDLG(cdn_nbr_tul_realise_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric1.test(bB.nbr_tul_realise.value)) {
                                    $.MyDLG(cdn_nbr_plg_realise_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric3.test(bB.nbr_omf_realise.value)) {
                                    $.MyDLG(cdn_nbr_omf_realise_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric3.test(bB.nbr_imp_usb_realise.value)) {
                                    $.MyDLG(cdn_nbr_imp_usb_realise_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric2.test(bB.nbr_imp_reseau_realise.value)) {
                                    $.MyDLG(cdn_nbr_imp_reseau_realise_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric1.test(bB.nbr_imp_couleur_realise.value)) {
                                    $.MyDLG(cdn_nbr_imp_couleur_realise_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric1.test(bB.nbr_scancheque_realise.value)) {
                                    $.MyDLG(cdn_nbr_scancheque_realise_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numeric3.test(bB.nbr_asset_ancien_repris.value)) {
                                    $.MyDLG(cdn_nbr_asset_ancien_repris_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.commentaire_signataire.value == "") {
                                    $.MyDLG(cdn_commentaire_signataire_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                            }
                            if (bB.type_inter_todo_id.value == 4 || bB.type_inter_todo_id.value == 5 || bB.type_inter_todo_id.value == 6 || bB.type_inter_todo_id.value == 7) {
                                if (!majNum12.test(bB.nom_post.value)) {
                                    $.MyDLG(cdn_nom_post_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (!numMA.test(bB.n_ma_installe.value)) {
                                    $.MyDLG(cdn_n_ma_installe_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.type_inter_todo_id.value == 7) {
                                    if (bB.mod_install_peri.value == "") {
                                        $.MyDLG(cdn_mod_install_format, "", function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    } else {
                                        if (bB.mod_install_peri.value == "MS610" && bB.adress_ip.value == "") {
                                            $.MyDLG(cdn_adress_ip_format, "", function() {
                                                my_LastStepResult = -1;
                                                UNblockAllUI()
                                            }, function() {
                                                my_LastStepResult = -1;
                                                UNblockAllUI()
                                            });
                                            return false
                                        }
                                    }
                                    if (bB.mod_repris_peri.value == "") {
                                        $.MyDLG(cdn_mod_repris_format, "", function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    }
                                } else {
                                    if (bB.mod_install_tul.value == "") {
                                        $.MyDLG(cdn_mod_install_format, "", function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    }
                                    if (bB.mod_repris_tul.value == "") {
                                        $.MyDLG(cdn_mod_repris_format, "", function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        }, function() {
                                            my_LastStepResult = -1;
                                            UNblockAllUI()
                                        });
                                        return false
                                    }
                                }
                                if (bB.sn_repris.value == "") {
                                    $.MyDLG(cdn_sn_repris_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.test.value == "") {
                                    $.MyDLG(cdn_test_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.commentaire_tech.value == "") {
                                    $.MyDLG(cdn_commentaire_tech_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.recette.value == "") {
                                    $.MyDLG(cdn_recette_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.commentaire_signataire.value == "") {
                                    $.MyDLG(cdn_commentaire_signataire_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                            }
                            if (bB.type_inter_todo_id.value == 2 || bB.type_inter_todo_id.value == 4 || bB.type_inter_todo_id.value == 5 || bB.type_inter_todo_id.value == 6 || bB.type_inter_todo_id.value == 7) {
                                if (bB.date_deb.value == "" || bB.date_deb.value == "0000-00-00") {
                                    $.MyDLG(cdn_date_deb_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.heure_deb.value == "") {
                                    $.MyDLG(cdn_heure_deb_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.date_fin.value == "" || bB.date_fin.value == "0000-00-00") {
                                    $.MyDLG(cdn_date_fin_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                                if (bB.heure_fin.value == "") {
                                    $.MyDLG(cdn_heure_fin_format, "", function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    }, function() {
                                        my_LastStepResult = -1;
                                        UNblockAllUI()
                                    });
                                    return false
                                }
                            }
                        }
                    }
                }
                if (bB.additional_id.value == 60) {
                    if (bB.inter_stat.value == 3) {
                        if ($("input[name$='bp2i_nom_imprimante']").val() == "") {
                            $("input[name$='bp2i_nom_imprimante']").focus();
                            $.MyDLG("Meci de renseigner le Nom Imprimante", dlg_button_ok, "", function() {
                                my_LastStepResult = -61;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                        if ($("input[name$='bp2i_compteur_page']").val() == "") {
                            $("input[name$='bp2i_compteur_page']").focus();
                            $.MyDLG("Meci de renseigner le Compteur Page", dlg_button_ok, "", function() {
                                my_LastStepResult = -61;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 61) {
                    var cd = "";
                    var aT = "";
                    var ao = false;
                    var bb = bB.inter_id.value;
                    var a4 = "csav" + bb;
                    var aZ = [a4 + "-debit_down_dti", a4 + "-debit_down_pc", a4 + "-debit_down_rco", a4 + "-debit_down_ro", a4 + "-debit_down_sr", a4 + "-debit_down_tv", a4 + "-debit_up_dti", a4 + "-debit_up_pc", a4 + "-debit_up_rco", a4 + "-debit_up_ro", a4 + "-debit_up_sr", a4 + "-debit_up_tv"];
                    if ($('input[name="canceled"]').is(":checked")) {
                        ao = true;
                        if (bB.code_annulation.value == -1) {
                            cd = "Merci  de mentionner le motif d'annulation";
                            $('select[name="code_annulation"]').focus()
                        }
                    }
                    if ((bB.inter_stat.value == 3 || bB.inter_stat.value == 4) && !ao) {
                        if (bB.report_result_id.value == -1 || bB.report_result_id.value == 0) {
                            cd = "Merci de mentioner le code rÃ©sultat"
                        }
                    }
                    var an = "";
                    var bC = "";
                    var bN = $.ajax({
                        url: "interventions/get_xml_correspondance_ci",
                        type: "post",
                        data: "code=" + bB.report_result_id.value,
                        dataType: "text",
                        async: false
                    }).success(function(cg) {
                        an = cg.substring(0, 3);
                        bC = cg;
                        if (ao) {
                            var ch = $.ajax({
                                url: "interventions/get_nb_inter_loged_event_bytel",
                                type: "post",
                                data: "id_inter=" + bB.inter_id.value,
                                dataType: "text",
                                async: false
                            }).success(function(ci) {
                                if (ci > 0) {
                                    cd = "Annulation impossible, merci de clÃ´turer l'intervention avec un code dÃ©diÃ©";
                                    $(this).focus();
                                    return false
                                }
                            })
                        } else {
                            if ((bB.inter_stat.value == 3 || bB.inter_stat.value == 4) && (an == "RET" || an == "SNR") && !ao) {
                                $('select[name^="' + a4 + '-"], input[name^="' + a4 + '-"], textarea[name^="' + a4 + '-"]').each(function(ci) {
                                    var cn = $(this);
                                    var cj = cn.attr("id");
                                    var cl = cn.attr("name");
                                    var ck = $(this).val();
                                    if (cn.is("input") || cn.is("select") || cn.is("textarea")) {
                                        if (ck == "" || ck == null) {
                                            cd = "Le champ " + cn.attr("title") + " est obligatoire";
                                            $(this).focus();
                                            return false
                                        } else {
                                            if ($(this).attr("pattern") == "[0-9]*" && !ck.match(/^ *[0-9]+ *$/)) {
                                                cd = "Le champ " + cn.attr("title") + " doit Ãªtre sous format numÃ©rique";
                                                $(this).focus();
                                                return false
                                            } else {
                                                if (aZ.indexOf(cl) != -1 && ck >= 100) {
                                                    cd = "Le champ " + cn.attr("title") + " doit Ãªtre infÃ©rieur Ã  100";
                                                    $(this).focus();
                                                    return false
                                                }
                                            }
                                        }
                                        if ($(this).attr("type") != "file" && cd == "") {
                                            aT = check_sav_complement(cn, bC, ae, bb, J);
                                            if (aT != "") {
                                                cd = aT;
                                                $(this).focus();
                                                return false
                                            }
                                        }
                                    }
                                })
                            }
                        }
                    });
                    if (cd != "") {
                        $.MyDLG(cd, dlg_button_ok, "", function() {
                            my_LastStepResult = -1;
                            UNblockAllUI()
                        }, function() {
                            my_LastStepResult = -1;
                            UNblockAllUI()
                        });
                        return false
                    }
                }
                if (bB.additional_id.value == 68) {
                    var cd = "";
                    if (bB.inter_stat.value == 3) {
                        if ($("#echange_std").val() == "") {
                            cd = "Le champ " + $("#echange_std").attr("title") + " est obligatoire";
                            $("#echange_std").focus()
                        } else {
                            if ($("#mat_panne").val() == "") {
                                cd = "Le champ " + $("#mat_panne").attr("title") + " est obligatoire";
                                $("#mat_panne").focus()
                            } else {
                                if ($("#code_panne").val() == "") {
                                    cd = "Le champ " + $("#code_panne").attr("title") + " est obligatoire";
                                    $("#code_panne").focus()
                                }
                            }
                        }
                        if (cd != "") {
                            $.MyDLG(cd, dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 64) {
                    var bb = bB.inter_id.value;
                    if (bB.inter_stat.value == 3 || bB.inter_stat.value == 4) {
                        var aU = $("#form_pm2s_" + bb);
                        var cc = "";
                        var cd = "";
                        var bq = $("#inter").data("id");
                        $("select, input:text, input:checkbox, input:radio", aU).each(function() {
                            var cl = $(this);
                            var ch = cl.attr("id");
                            var ck = $("#" + ch).attr("name");
                            var cj = $("#" + ch).attr("title");
                            var cn = $("#" + ch).attr("required");
                            var cg = $("#" + ch).attr("data-else");
                            if (cl.is("input:text") || cl.is("select")) {
                                var ci = $("#" + ch).val();
                                cd = check_form_pm2s(ch, ci, cj, cn, cg)
                            } else {
                                if (cl.is("input:checkbox")) {
                                    var ci = $("input[name=" + ck + "]:checked").val();
                                    cd = check_form_pm2s(ch, ci, cj, cn, cg)
                                } else {
                                    if (cl.is("input:radio")) {
                                        var ci = $("input[name=" + ck + "]:checked").val();
                                        cd = check_form_pm2s(ch, ci, cj, cn, cg)
                                    }
                                }
                            }
                            if (cd != "") {
                                $(this).focus();
                                cc = "false";
                                return false
                            }
                        });
                        if (bB.report_result_id.value == -1 || bB.report_result_id.value == 0) {
                            $("select[name='report_result_id']").focus();
                            cd = "Merci de mentioner le code rÃ©sultat";
                            cc = "false"
                        }
                        if (cc != "") {
                            $.MyDLG(cd, dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                    }
                }
                if (bB.additional_id.value == 119) {
                    var bb = bB.inter_id.value;
                    if (bB.inter_stat.value == 3 || bB.inter_stat.value == 4) {
                        var aU = $("#sav_cr_" + bb);
                        var cc = "";
                        var cd = "";
                        $("select, input:text", aU).each(function() {
                            var ck = $(this);
                            var ch = ck.attr("id");
                            var cg = $("#" + ch).attr("title");
                            var cl = $("#" + ch).attr("required");
                            var cj = $("#" + ch).attr("pattern");
                            if (ck.is("input:text") || ck.is("select") || $this.is("textarea")) {
                                var ci = $("#sav_cr_" + bb).find("#" + ch).val();
                                if (cl && ci == "") {
                                    cd = "Le champ " + cg + " est obligatoire"
                                } else {
                                    if (cj == "[0-9]*" && !ci.match(/^ *[0-9]+ *$/) && ci != "") {
                                        cd = "Le champ " + cg + " doit Ãªtre sous format numÃ©rique"
                                    }
                                }
                            }
                            if (cd != "") {
                                $(this).focus();
                                cc = "false";
                                return false
                            }
                        });
                        if (bB.report_result_id.value == -1 || bB.report_result_id.value == 0) {
                            $("select[name='report_result_id']").focus();
                            cd = "Merci de mentioner le code rÃ©sultat";
                            cc = "false"
                        }
                        if (cc != "") {
                            $.MyDLG(cd, dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                        var bg = confirm("Merci de vÃ©rifier le Check Voisinage")
                    }
                    $("#photo_cmp_" + bb).remove();
                    return true
                }
                if (bB.materiel_ok.value == 2 && bB.inter_stat.value == 0) {
                    var bd = new RegExp("tech_name", "g");
                    if (user_group_id == 3 || user_group_id == 1) {
                        temp_dbs_warning_when_transfer_inter_to_backlog_and_piece_received = dbs_warning_when_transfer_inter_to_backlog_and_piece_received.replace(bd, bB.tech_name.value);
                        if (!confirm(temp_dbs_warning_when_transfer_inter_to_backlog_and_piece_received)) {
                            $.MyDLG(operation_annulee, dlg_button_ok, "", function() {}, function() {});
                            return false
                        }
                    } else {
                        temp_dbs_error_when_transfer_inter_to_backlog_and_piece_received = dbs_error_when_transfer_inter_to_backlog_and_piece_received.replace(bd, bB.tech_name.value);
                        $.MyDLG(temp_dbs_error_when_transfer_inter_to_backlog_and_piece_received, dlg_button_ok, "", function() {}, function() {});
                        return false
                    }
                }
                if (bB.partner_id.value == "") {
                    ClientDetailsReportFormError(bj, z);
                    return false
                }
                if (language_s == "it") {
                    if (((bB.inter_stat.value > 1) && (bB.inter_stat.value != 9) && (bB.inter_stat.value != 7) && (bB.inter_stat.value != 25) && (bB.inter_stat.value != 6)) && ((bB.report_result_id.value == -1) || (bB.report_result_id.value == 0))) {
                        ClientDetailsReportFormError(bj, z);
                        return false
                    }
                }
                if (((bB.inter_stat.value == 3) || (bB.inter_stat.value == 4)) && (default_language != "it") && (default_language != "de") && ((bB.paid.checked == false) && (bB.not_paid.checked == false))) {
                    ClientDetailsReportFormError(bj, z);
                    return false
                }
                var bM = $("#form" + n).find("input[name=client_id]").val();
                if ((bM == null) || (bM < 0)) {
                    ClientDetailsReportFormError_BadOrder(bj, z);
                    return false
                }
                if (regional_version == "FR01") {
                    bB.req_date_certain_select.value = $("#form" + n + ' select[name="req_date_certain_select"]').val()
                }
                return true
            },
            error: function() {
                chkRes($(z), "", "");
                tabs_delimiter_height();
                my_LastStepResult = -2;
                UNblockAllUI()
            },
            success: function(ao, al) {
                $.post("interventions/check_historyisation_cr", {
                    inter: Q,
                    partenaire: ae
                }, function(ar) {
                    console.log(ar)
                }, "json");
                if (chkRes($(z), al, ao)) {
                    var aq = $(this).find("input[name=sub_id]").val();
                    if (aq > 0) {
                        $(this).parent().find("input[name=for_inter]").each(function(at, ar) {
                            if ($(ar).val() < 0) {
                                $(ar).val(aq)
                            }
                        });
                        var ap = $("#tableTimitable").find("div[inter_id=" + aq + "]");
                        if ((ap != null) && (ap.length > 0)) {
                            LoadTimeTables(1, aq)
                        }
                        ap = $(this).parent().find("select[name=inter_duration]");
                        if ((ap != null) && (ap.length > 0)) {
                            var am = $(ap).children("option:eq(" + $(ap).get(0).selectedIndex + ")");
                            if ($(am).length > 0) {
                                var an = am.attr("value");
                                $("#tableInetvention").find("div[inter_id=" + aq + "]").attr("m_dur", an)
                            }
                        }
                    }
                    $("#form" + n).parents("div[my_chng]").attr("my_chng", 0);
                    my_LastStepResult = 1
                } else {
                    my_LastStepResult = -2
                }
                tabs_delimiter_height();
                UNblockAllUI()
            }
        };
        var Y = parseInt($("#form" + n).find("select[id=inter_stat]").val());
        if ((Y == 3) || (Y == 4)) {
            $.post("logistics/inter_is_saveable", {
                inter_id: $(this).find("input[name=sub_id]").val()
            }, function(al) {
                if (al == "") {
                    $("#form" + n).ajaxSubmit(N)
                } else {
                    if (al == "NO_CLOSURE") {
                        alert(lang_no_save)
                    } else {
                        if (al == "NOK_PARTS") {
                            if ($("#no_part_validated_" + M).val() == 1) {
                                $("#form" + n).ajaxSubmit(N)
                            } else {
                                alert(lang_nopart_alert);
                                window.scrollTo(0, 0)
                            }
                        } else {
                            alert(lang_logi_no_save)
                        }
                    }
                }
            })
        } else {
            $("#form" + n).ajaxSubmit(N)
        }
        var M = $(this).find("input[name=sub_id]").val(),
            ae = $(this).find("select[name=partner_id]").val(),
            R = "form" + n,
            S = "#" + R + "_logistic";
        console.log(M, ae, R, S);
        if (M !== undefined && ae !== undefined && S !== undefined) {
            $(S).html('<div style="font-variant: small-caps;font-weight: bold;width: 100%;white-space:pre-wrap;color: black;background-color: #FFA07A;opacity: .9;padding: 5px 5px"><img src="/var/themes/default/img/loader.gif"> - Loading logistics parts, please wait...</div>').load("logistics/get_parts_by_inter", {
                inside: "yes",
                sub_id: M,
                partner_id: ae,
                form_id: R
            }, function(an, al, am) {})
        }
        return false
    });
    $("#form" + n + "_att").submit(function(M) {
        M.stopImmediatePropagation();
        var L = {
            target: "#att_msg_" + n,
            url: "attachments/put_intervention_att",
            type: "post",
            beforeSubmit: function(Q, O, N) {
                var P = O[0];
                if (P.file.value == "") {
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                tabs_delimiter_height();
                $("#form" + n + "_att").resetForm();
                UNblockAllUI()
            },
            success: function(O, N) {
                Load_List_of_Attachments("#att_list_" + n, J, d);
                tabs_delimiter_height();
                $("#form" + n + "_att").resetForm();
                UNblockAllUI()
            }
        };
        $("#form" + n + "_att").ajaxSubmit(L);
        return false
    });
    $("#form" + n + "_photo").submit(function(M) {
        M.stopImmediatePropagation();
        var L = {
            target: "#photo_msg_" + n,
            url: "attachments/put_intervention_photo",
            type: "post",
            beforeSubmit: function(Q, O, N) {
                var P = O[0];
                if (P.photo.value == "") {
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                tabs_delimiter_height();
                $("#form" + n + "_photo").resetForm();
                UNblockAllUI()
            },
            success: function(O, N) {
                $("#form" + n + "_photo").resetForm();
                UNblockAllUI()
            }
        };
        $("#form" + n + "_photo").ajaxSubmit(L);
        return false
    });
    DisableAllForParthers($("#form" + n));
    Load_List_of_Attachments("#att_list_" + n, J, d);
    ClientDetails_ReSet_IDs(r, v, n, "client_interventions", J, d, 1);
    if (regional_version == "IT01" && user_group_id == 3) {
        $("#form" + n).find("input[name=canceled]").attr("disabled", true);
        Set_Disabled($("#form" + n).find("select[name=cancel_d]"));
        Set_Disabled($("#form" + n).find("select[name=cancel_m]"));
        Set_Disabled($("#form" + n).find("select[name=cancel_y]"));
        Set_Disabled($("#form" + n).find("select[name=cancel_hh]"));
        Set_Disabled($("#form" + n).find("select[name=cancel_mm]"));
        Set_Disabled($("#form" + n).find("textarea[name=canceled_reason]"))
    }
}

function DisableAllForParthers(b) {
    if (user_is_partner >= 0) {
        $(b).find("select").each(function(c, d) {
            $(d).attr("disabled", "disabled");
            $(d).addClass("disabled_inf");
            $(d).unbind("change")
        });
        $(b).find("textarea").each(function(c, d) {
            $(d).attr("readonly", "readonly");
            $(d).addClass("disabled_inf");
            $(d).unbind("change")
        });
        $(b).find("input[type=text]").each(function(c, d) {
            $(d).attr("readonly", "readonly");
            $(d).addClass("disabled_inf");
            $(d).unbind("change")
        });
        $(b).find("input[type=checkbox]").each(function(c, d) {
            $(d).attr("disabled", "disabled");
            $(d).addClass("disabled_inf");
            $(d).unbind("change")
        });
        $(b).find("input[type=submit]").each(function(c, d) {
            $(d).attr("disabled", "disabled")
        })
    }
}

function my_del_att() {
    var d = $(this).attr("att_id");
    var e = $(this).attr("inter_id");
    var f = $(this).attr("cli_id");
    var c = $(this).parents("div").attr("suff");
    var b = $(this).parents("div").attr("id");
    if ((d > 0) && (e > 0) && (f > 0)) {
        $.MyDLG(qustion_del_rec, dlg_button_yes, dlg_button_no, function() {
            blockAllUI();
            $("#att_msg_" + c).load("attachments/del_intervention_att", {
                att_id: d,
                inter_id: e,
                cli_id: f
            }, function(m, g, h) {
                Load_List_of_Attachments("#" + b, f, e);
                UNblockAllUI()
            });
            return false
        }, function() {})
    }
    return false
}

function my_get_att() {
    var c = $(this).attr("att_id");
    var d = $(this).attr("inter_id");
    var e = $(this).attr("cli_id");
    var b = $(this).attr("f_ext");
    if ((c > 0) && (d > 0) && (e > 0)) {
        $(this).attr("href", "attachments/get_intervention_att_new/" + c + "/" + d + "/" + e + "/file." + b);
        return true
    }
    return false
}

function Load_List_of_Attachments(b, e, d) {
    var c = $(b);
    if ((c != null) && $(c).length) {
        blockAllUI();
        $(b).load("attachments/get_intervention_att_list", {
            client_id: e,
            inter_id: d
        }, function(h, f, g) {
            chkRes($(b), f, h);
            $(b).children("a.att_link_del").each(function(m, o) {
                $(o).bind("click", my_del_att)
            });
            $(b).children("a.att_link").each(function(m, o) {
                $(o).bind("click", my_get_att)
            });
            UNblockAllUI()
        })
    }
}

function Addon1_ComboChange_Change_Switch(f) {
    var b = $(f).children("option:eq(" + $(f).get(0).selectedIndex + ")");
    if ($(b).length > 0) {
        var d = b.attr("resp");
        var c = $(f).parents("form");
        var e = $(c).find("select[name=add_failure_resp_txt]");
        get_option_from_value(ResponBox, d).attr("selected", "selected")
    }
}

function Addon1_ComboChange_Change(b) {
    ClientDetails_Common_Change(b);
    Addon1_ComboChange_Change_Switch(b)
}

function init_Intervention_Add_1_3_6_8(z, d, I, u, w, D, r, G, f, h, o, n, m) {
    var q = "#" + f;
    var c = "#" + o;
    var b = "#" + h;
    LoadSelectFromHiddenStorageDIV(G, "add_res_adsl_txt", "#interv_addon_a_list_a");
    LoadSelectFromHiddenStorageDIV(G, "add_res_voip_txt", "#interv_addon_a_list_b");
    LoadSelectFromHiddenStorageDIV(G, "add_res_tv_txt", "#interv_addon_a_list_c");
    LoadSelectFromHiddenStorageDIV(G, "add_failure_resp_txt", "#interv_addon_a_list_d");
    if (u == 8) {
        LoadSelectMultipleFromHiddenStorageDIV("#form" + f, "orange_select_diag_assistance[]", "#orange_select_diag_assistance");
        LoadSelectFromHiddenStorageDIV(G, "ai_indice_details", "#oa_ai_indice")
    }
    if ((u == 3) || (u == 6) || (u == 8)) {
        if (w != 691 && w != 692) {
            LoadSelectFromHiddenStorageDIV(G, "zone_not_eligible", "#interv_addon_c_list_c")
        } else {
            var v = $("#" + r + "_add").find('select[name="zone_not_eligible"]');
            if ($(v).attr("my_sel") != "") {
                var g = $(v).attr("my_sel");
                $(v).children("option[value=" + g + "]").attr("selected", "selected")
            }
        }
        blockAllUI();
        var E = $("#form" + o).find("[name=orange_select_prestation]");
        E.load("interventions/common_orange_prestation/" + default_language + "/0/0/0/0/0/0/dummy.html", {
            partner_id: w
        }, function(L, J, K) {
            chkRes(E, J, L);
            UNblockAllUI()
        });
        blockAllUI();
        var C = $("#form" + h).find("[name=orange_select_equipement]");
        C.load("interventions/common_orange_equipement/" + default_language + "/0/0/0/0/0/0/dummy.html", function(L, J, K) {
            chkRes(C, J, L);
            UNblockAllUI()
        });
        LoadSelectFromHiddenStorage(f, "hl2_date_d", "#common_days");
        LoadSelectFromHiddenStorage(f, "hl2_date_m", "#common_months");
        LoadSelectFromHiddenStorage(f, "hl2_date_y", "#common_short_years");
        LoadSelectFromHiddenStorage(f, "hl2_hh", "#common_hours");
        LoadSelectFromHiddenStorage(f, "hl2_mm", "#common_minutes")
    }
    if (u == 1) {
        LoadSelectFromHiddenStorageDIV(G, "byt_fiac_arr_ft_loc", "#interv_addon_d_list_b");
        LoadSelectFromHiddenStorageDIV(G, "byt_fiac_mod_rc", "#interv_addon_d_list_b");
        LoadSelectFromHiddenStorageDIV(G, "byt_fiac_rallonge", "#interv_addon_d_list_b");
        var v = $(G).find("select[name=byt_fiac_desserte_int]");
        var g = $(v).attr("my_sel");
        get_option_from_value(v, g).attr("selected", "selected");
        var H = $(G).find("select[name=byt_appel_hl]");
        var e = $(H).attr("my_sel");
        get_option_from_value(H, e).attr("selected", "selected")
    }
    ClientDetails_Common_set_On_Change($(G));
    $(G).find("select[name=add_res_adsl_txt]").bind("change", function() {
        Addon1_ComboChange_Change(this)
    });
    $(G).find("select[name=add_res_voip_txt]").bind("change", function() {
        Addon1_ComboChange_Change(this)
    });
    $(G).find("select[name=add_res_tv_txt]").bind("change", function() {
        Addon1_ComboChange_Change(this)
    });
    DisableAllForParthers($("#" + r));
    tabs_delimiter_height();
    var p = "#form" + f + "_add";
    $("#form" + o).submit(function(K) {
        K.stopImmediatePropagation();
        var J = {
            target: p,
            url: "interventions/save_prestation",
            type: "post",
            beforeSubmit: function(O, M, L) {
                var N = M[0];
                if (N.orange_prestation_quantites.value == "" || N.orange_prestation_quantites.value == "0") {
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(M, L) {
                UNblockAllUI()
            }
        };
        $("#form" + o).ajaxSubmit(J);
        return false
    });
    $("#form" + h).submit(function(K) {
        K.stopImmediatePropagation();
        var J = {
            target: p,
            url: "interventions/save_equipement",
            type: "post",
            beforeSubmit: function(O, M, L) {
                var N = M[0];
                if (N.orange_equipement_quantites.value == "" || N.orange_equipement_quantites.value == "0") {
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(M, L) {
                UNblockAllUI()
            }
        };
        $("#form" + h).ajaxSubmit(J);
        return false
    })
}

function init_Intervention_Add_2(m, d, g, f, h, e, b, c) {
    ClientDetails_Common_set_On_Change($(c));
    DisableAllForParthers($("#" + b));
    tabs_delimiter_height()
}

function init_Intervention_Add_9(m, d, g, f, h, e, b, c) {
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_type", "#interv_addon_d_list_a");
    LoadSelectFromHiddenStorageDIV(c, "add_ribaltamento_borchie", "#interv_addon_d_list_c");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_borchia", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_portante", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_problemi", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_vs", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_sim", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_vik", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_irreperibile", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_rifiuta", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_adsl_ok", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_tgu_errata", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_contatto_call", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_no_dac", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_autenticazione_dati", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_autenticazione_voce", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_autenticazione_servizi", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_lavori_extra", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_apparecchi_non_comptabiliti", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_infrastruttura_ko", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_disdetta", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_vodafone_chiarimenti_commerciali", "#interv_addon_d_list_b");
    ClientDetails_Common_set_On_Change($(c));
    DisableAllForParthers($("#" + b));
    tabs_delimiter_height()
}

function ChangePasswordOldMissing(c, b) {
    $(b).find(".error_msg_area").html(message_you_must_fill_old_password);
    $.MyDLG(message_you_must_fill_old_password, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function ConfirmNewPasswordFailed(c, b) {
    $(b).find(".error_msg_area").html(message_check_password_failed);
    $.MyDLG(message_check_password_failed, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function MessageBadPhoneFormat(c, b) {
    $(b).find(".error_msg_area").html(message_phone_bad_format);
    $.MyDLG(message_phone_bad_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function MessageCantCloseInterDBS(c, b) {
    $(b).find(".error_msg_area").html(message_cant_close_inter_dbs);
    $.MyDLG(message_cant_close_inter_dbs, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function MessageInterventionLocked(c, b) {
    $(b).find(".error_msg_area").html(message_sfr_intervention_locked);
    $.MyDLG(message_sfr_intervention_locked, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function MessageCantCancelIntervention(c, b) {
    $(b).find(".error_msg_area").html(message_cant_cancel_intervention);
    $.MyDLG(message_cant_cancel_intervention, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function init_Profile_View(e, d) {
    var b = "#" + d;
    ClientDetails_Common_set_On_Change($("#form" + d));
    if (user_is_partner < 0) {
        var c = "#" + e;
        ClientDetails_Common_set_On_Change($("#form" + e));
        LoadSelectFromHiddenStorage(e, "bday_date_d", "#common_days");
        LoadSelectFromHiddenStorage(e, "bday_date_m", "#common_months");
        LoadSelectFromHiddenStorage(e, "bday_date_y", "#common_years");
        LoadSelectFromHiddenStorage(e, "profil_tech_gender", "#profil_gender");
        $("#form" + e).submit(function(g) {
            g.stopImmediatePropagation();
            var f = {
                target: "#dummy_container",
                url: "profile/save_profile",
                type: "post",
                beforeSubmit: function(q, m, h) {
                    var p = m[0];
                    if (p.email_smartfix.value != "") {
                        var o = p.email_smartfix.value;
                        var r = $.ajax({
                            url: "interventions/get_nb_email_smartfix",
                            type: "post",
                            data: "email_smartfix=" + o + "&id_employee=ND",
                            dataType: "text",
                            async: false
                        });
                        var n = r.responseText;
                        if (n > 0) {
                            $.MyDLG("Email Smartfix dÃ©jÃ  utilisÃ©, veuillez rÃ©essayer!!!", dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                    }
                    if (p.profil_tech_email1.value == "") {
                        ClientDetailsReportFormError(m, c);
                        return false
                    }
                    if (p.profil_tech_cellphone.value == "") {
                        ClientDetailsReportFormError(m, c);
                        return false
                    }
                    if ((regional_version == "FR01") || (regional_version == "IT01") || (regional_version == "BE01")) {
                        if ((p.profil_tech_cellphone.value.length != 10) || (isNaN(p.profil_tech_cellphone.value))) {
                            MessageBadPhoneFormat(m, c);
                            return false
                        }
                    }
                    if ((p.profil_tech_tel.value != "") && ((p.profil_tech_tel.value.length != 10) || (isNaN(p.profil_tech_tel.value)))) {
                        MessageBadPhoneFormat(m, c);
                        return false
                    }
                    alert("return true");
                    blockAllUI();
                    return true
                },
                error: function() {
                    alert("erro");
                    UNblockAllUI()
                },
                success: function(m, h) {
                    alert("success");
                    tabs_delimiter_height();
                    UNblockAllUI()
                }
            };
            $("#form" + e).ajaxSubmit(f);
            return false
        })
    }
    $("#form" + d).submit(function(g) {
        g.stopImmediatePropagation();
        var f = {
            target: "#dummy_container",
            url: "profile/save_password",
            type: "post",
            beforeSubmit: function(o, m, h) {
                var n = m[0];
                if (n.profil_password_old.value == "") {
                    ChangePasswordOldMissing(m, b);
                    return false
                }
                if ((n.profil_password_new1.value == "") || (n.profil_password_new2.value == "") || (n.profil_password_new1.value != n.profil_password_new2.value)) {
                    ConfirmNewPasswordFailed(m, b);
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(m, h) {
                tabs_delimiter_height();
                UNblockAllUI()
            }
        };
        $("#form" + d).ajaxSubmit(f);
        return false
    })
}

function LoadEmployeeResult() {
    var b = $("#employees_management_form").find("[name=int_src_employee_id]").val();
    if (b > 0) {
        blockAllUI();
        $("#employee_result").load("employees/get_management_result", {
            inside: "yes",
            id_employe: b
        }, function(e, c, d) {
            if (chkRes($("#employee_result"), c, e)) {}
            tabs_delimiter_height();
            UNblockAllUI()
        })
    }
}

function LoadEmployeeWorkingAgency() {
    blockAllUI();
    var c = $("#formemployees_management_search_result").find("[name=int_src_employee]").val();
    var b = $("#formemployees_management_search_result").find("[name=int_select_week]").val();
    $("#working_agency").load("employees/get_working_agency", {
        inside: "yes",
        id_employe: c,
        week: b
    }, function(f, d, e) {
        if (chkRes($("#working_agency"), d, f)) {}
        UNblockAllUI()
    })
}

function SaveWorkingAgency() {
    if (!$("#employee_Table_Working_Agency").length) {
        return
    }
    var V = $("#employee_Table_Working_Agency").get(0).rows;
    var m = V.length - 1;
    var u = $("#formemployees_management_search_result").find("[name=int_src_employee]").val();
    var Q = $("#formemployees_management_search_result").find("[name=int_select_week]").val();
    blockAllUI();
    var X = [];
    for (var U = 1; U <= m; U++) {
        var I = "agency_id_" + U;
        var r = "existing_" + U;
        var P = "monday_morning_" + U;
        var M = "monday_afternoon_" + U;
        var e = "tuesday_morning_" + U;
        var c = "tuesday_afternoon_" + U;
        var v = "wednesday_morning_" + U;
        var L = "wednesday_afternoon_" + U;
        var O = "thursday_morning_" + U;
        var f = "thursday_afternoon_" + U;
        var g = "friday_morning_" + U;
        var G = "friday_afternoon_" + U;
        var Z = "saturday_morning_" + U;
        var h = "saturday_afternoon_" + U;
        var S = "sunday_morning_" + U;
        var p = "sunday_afternoon_" + U;
        var Y = $("#table_working_agency").find('[name="' + I + '"]').val();
        var T = $("#table_working_agency").find('[name="' + r + '"]').val();
        var D = $("#table_working_agency").find('[name="' + P + '"]').attr("checked");
        if (D) {
            var d = 1
        } else {
            var d = 0
        }
        var D = $("#table_working_agency").find('[name="' + M + '"]').attr("checked");
        if (D) {
            var b = 1
        } else {
            var b = 0
        }
        var D = $("#table_working_agency").find('[name="' + e + '"]').attr("checked");
        if (D) {
            var K = 1
        } else {
            var K = 0
        }
        var D = $("#table_working_agency").find('[name="' + c + '"]').attr("checked");
        if (D) {
            var n = 1
        } else {
            var n = 0
        }
        var D = $("#table_working_agency").find('[name="' + v + '"]').attr("checked");
        if (D) {
            var C = 1
        } else {
            var C = 0
        }
        var D = $("#table_working_agency").find('[name="' + L + '"]').attr("checked");
        if (D) {
            var H = 1
        } else {
            var H = 0
        }
        var D = $("#table_working_agency").find('[name="' + O + '"]').attr("checked");
        if (D) {
            var o = 1
        } else {
            var o = 0
        }
        var D = $("#table_working_agency").find('[name="' + f + '"]').attr("checked");
        if (D) {
            var E = 1
        } else {
            var E = 0
        }
        var D = $("#table_working_agency").find('[name="' + g + '"]').attr("checked");
        if (D) {
            var q = 1
        } else {
            var q = 0
        }
        var D = $("#table_working_agency").find('[name="' + G + '"]').attr("checked");
        if (D) {
            var z = 1
        } else {
            var z = 0
        }
        var D = $("#table_working_agency").find('[name="' + Z + '"]').attr("checked");
        if (D) {
            var R = 1
        } else {
            var R = 0
        }
        var D = $("#table_working_agency").find('[name="' + h + '"]').attr("checked");
        if (D) {
            var N = 1
        } else {
            var N = 0
        }
        var D = $("#table_working_agency").find('[name="' + S + '"]').attr("checked");
        if (D) {
            var J = 1
        } else {
            var J = 0
        }
        var D = $("#table_working_agency").find('[name="' + p + '"]').attr("checked");
        if (D) {
            var w = 1
        } else {
            var w = 0
        }
        X.push({
            inside: "yes",
            id_employe: u,
            week: Q,
            id_agency: Y,
            existing_row: T,
            monday_morning: d,
            monday_afternoon: b,
            tuesday_morning: K,
            tuesday_afternoon: n,
            wednesday_morning: C,
            wednesday_afternoon: H,
            thursday_morning: o,
            thursday_afternoon: E,
            friday_morning: q,
            friday_afternoon: z,
            saturday_morning: R,
            saturday_afternoon: N,
            sunday_morning: J,
            sunday_afternoon: w
        })
    }
    $.post("employees/save_working_agency", {
        data: JSON.stringify(X)
    }, function(ac, aa, ab) {
        $("#dummy_container").html(ac);
        if (chkRes($("#dummy_container"), aa, ac)) {}
        UNblockAllUI();
        LoadEmployeeWorkingAgency()
    })
}

function LoadEmployeeViews() {
    blockAllUI();
    var c = $("#formemployees_management_search_result").find("[name=int_src_employee]").val();
    var b = $("#formemployees_management_search_result").find("[name=int_select_society]").val();
    $("#employee_views").load("employees/get_employee_views", {
        inside: "yes",
        id_employe: c,
        id_society: b
    }, function(f, d, e) {
        if (chkRes($("#employee_views"), d, f)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function SaveEmployeeViews() {
    if (!$("#table_Employee_Views").length) {
        return
    }
    var v = $("#table_Employee_Views").get(0).rows;
    var p = v.length - 1;
    blockAllUI();
    var b = $("#formemployees_management_search_result").find("[name=int_src_employee]").val();
    var d = $("#formemployees_management_search_result").find("[name=int_select_society]").val();
    var e = [];
    for (var g = 1; g <= p; g++) {
        var m = "target_id_" + g;
        var f = "is_target_agency_" + g;
        var h = "check_employee_view_" + g;
        var r = "existing_" + g;
        var q = $("#table_views").find("[name=" + m + "]").val();
        var n = $("#table_views").find("[name=" + f + "]").val();
        var c = $("#table_views").find("[name=" + r + "]").val();
        var o = $("#table_views").find("[name=" + h + "]").attr("checked");
        if (o) {
            var u = 1
        } else {
            var u = 0
        }
        e.push({
            inside: "yes",
            id_employe: b,
            id_society: d,
            is_agency: n,
            id_target: q,
            existing_row: c,
            view: u
        })
    }
    $.post("employees/save_employee_views", {
        data: JSON.stringify(e)
    }, function(C, w, z) {
        $("#dummy_container").html(C);
        if (chkRes($("#dummy_container"), w, C)) {}
        UNblockAllUI();
        LoadEmployeeViews()
    })
}

function init_Employees_Select_View() {
    blockAllUI();
    var b = $("#employees_management_form").find("[name=int_src_employee_id]");
    b.load("employees/employees_all/" + default_language + "/0/0/0/0/0/0/dummy.html", function(e, c, d) {
        chkRes(b, c, e);
        UNblockAllUI()
    });
    $("#employees_management_form").submit(function(c) {
        c.stopImmediatePropagation();
        LoadEmployeeResult();
        return false
    })
}

function init_Employees_Management_Result_View() {
    var b = "#employees_management_search_result";
    var d = $("#formemployees_management_search_result").find("[name=int_src_employee]").val();
    LoadSelectFromHiddenStorage("employees_management_search_result", "int_select_week", "#common_weeks");
    LoadSelectFromHiddenStorage("employees_management_search_result", "int_select_society", "#society_all");
    LoadSelectFromHiddenStorage("employees_management_search_result", "managing_employee_function", "#employee_function_all");
    LoadSelectFromHiddenStorage("employees_management_search_result", "bday_date_d", "#common_days");
    LoadSelectFromHiddenStorage("employees_management_search_result", "bday_date_m", "#common_months");
    LoadSelectFromHiddenStorage("employees_management_search_result", "bday_date_y", "#common_years");
    LoadSelectFromHiddenStorage("employees_management_search_result", "managing_tech_gender", "#profil_gender");
    LoadSelectFromHiddenStorage("employees_management_search_result", "managing_employee_type", "#employee_type");
    if (regional_version == "DE01") {
        LoadSelectFromHiddenStorage("employees_management_search_result", "managing_employee_prestation_price_group", "#prestation_price_group");
        LoadSelectFromHiddenStorage("employees_management_search_result", "managing_employee_actual_projects", "#actual_projects")
    }
    var c = $("#formemployees_management_search_result").find("[name=managing_employee_account_id]");
    c.load("employees/get_free_user_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        inside: "yes",
        id_tech: d
    }, function(h, e, g) {
        chkRes(c, e, h);
        if ($(c).attr("my_sel") != "") {
            var f = $(c).attr("my_sel");
            get_option_from_value(c, f).attr("selected", "selected")
        }
        UNblockAllUI()
    });
    LoadEmployeeWorkingAgency();
    LoadEmployeeViews();
    $("#formemployees_management_search_result").submit(function(g) {
        g.stopImmediatePropagation();
        var f = {
            target: "#dummy_container",
            url: "employees/save_management_result",
            type: "post",
            beforeSubmit: function(q, h, e) {
                var p = h[0];
                if (regional_version == "FR01") {
                    if (p.managing_email_smartfix.value != "") {
                        var o = p.managing_email_smartfix.value;
                        var n = p.int_src_employee.value;
                        var r = $.ajax({
                            url: "interventions/get_nb_email_smartfix",
                            type: "post",
                            data: "email_smartfix=" + o + "&id_employee=" + n,
                            dataType: "text",
                            async: false
                        });
                        var m = r.responseText;
                        if (m > 0) {
                            $.MyDLG("Email Smartfix dÃ©jÃ  utilisÃ©, veuillez rÃ©essayer!!!", dlg_button_ok, "", function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            }, function() {
                                my_LastStepResult = -1;
                                UNblockAllUI()
                            });
                            return false
                        }
                    }
                }
                if (p.managing_employee_lastname.value == "") {
                    ClientDetailsReportFormError(h, b);
                    return false
                }
                if (p.managing_employee_firstname.value == "") {
                    ClientDetailsReportFormError(h, b);
                    return false
                }
                if (p.managing_tech_email1.value == "") {
                    ClientDetailsReportFormError(h, b);
                    return false
                }
                if (p.managing_tech_cellphone.value == "") {
                    ClientDetailsReportFormError(h, b);
                    return false
                }
                if ((regional_version == "FR01") || (regional_version == "IT01") || (regional_version == "BE01")) {
                    if ((p.managing_tech_cellphone.value.length != 10) || (isNaN(p.managing_tech_cellphone.value))) {
                        MessageBadPhoneFormat(h, b);
                        return false
                    }
                }
                if ((p.managing_tech_tel.value != "") && ((p.managing_tech_tel.value.length != 10) || (isNaN(p.managing_tech_tel.value)))) {
                    MessageBadPhoneFormat(h, b);
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(m, e) {
                var h = jQuery.parseJSON(m);
                tabs_delimiter_height();
                UNblockAllUI();
                if (h.http_code != 200) {
                    if (h.http_code == 404) {
                        alert("an error has been occurred while syncing the technician with SOP (erreur : 404)")
                    } else {
                        if (h.http_code == 406) {
                            alert(h.result)
                        } else {
                            alert("an error has been occurred while syncing the technician with SOP (error : " + h.http_code + ")")
                        }
                    }
                }
            }
        };
        $("#formemployees_management_search_result").ajaxSubmit(f);
        return false
    })
}

function LoadNewEmployeeCreation() {
    blockAllUI();
    $("#management_menu_display").load("employees/load_employee_cration_view", {
        inside: "yes"
    }, function(d, b, c) {
        if (chkRes($("#management_menu_display"), b, d)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function LoadEmployeeManagement() {
    blockAllUI();
    $("#management_menu_display").load("employees/get_management", {
        inside: "yes"
    }, function(d, b, c) {
        if (chkRes($("#management_menu_display"), b, d)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function init_New_Employee_Creation_View() {
    var b = "#new_employee_creation";
    LoadSelectFromHiddenStorage("new_employee_creation", "new_employee_society", "#society_all");
    LoadSelectFromHiddenStorage("new_employee_creation", "new_employee_function", "#employee_function_all");
    LoadSelectFromHiddenStorage("new_employee_creation", "bday_date_d", "#common_days");
    LoadSelectFromHiddenStorage("new_employee_creation", "bday_date_m", "#common_months");
    LoadSelectFromHiddenStorage("new_employee_creation", "bday_date_y", "#common_years");
    LoadSelectFromHiddenStorage("new_employee_creation", "new_tech_gender", "#profil_gender");
    $("#formnew_employee_creation").submit(function(d) {
        d.stopImmediatePropagation();
        var c = {
            target: "#management_menu_display",
            url: "employees/create_new_employee",
            type: "post",
            beforeSubmit: function(h, f, e) {
                var g = f[0];
                if (g.new_employee_lastname.value == "") {
                    ClientDetailsReportFormError(f, b);
                    return false
                }
                if (g.new_employee_firstname.value == "") {
                    ClientDetailsReportFormError(f, b);
                    return false
                }
                if (g.new_tech_email1.value == "") {
                    ClientDetailsReportFormError(f, b);
                    return false
                }
                if (g.new_tech_cellphone.value == "") {
                    ClientDetailsReportFormError(f, b);
                    return false
                }
                if ((g.new_tech_cellphone.value.length != 10) || (isNaN(g.new_tech_cellphone.value))) {
                    MessageBadPhoneFormat(f, b);
                    return false
                }
                if ((g.new_tech_tel.value != "") && ((g.new_tech_tel.value.length != 10) || (isNaN(g.new_tech_tel.value)))) {
                    MessageBadPhoneFormat(f, b);
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(f, e, g) {
                UNblockAllUI()
            }
        };
        $("#formnew_employee_creation").ajaxSubmit(c);
        return false
    })
}

function DeletePrestation(c, f, e, h, q, m, g, p, b, d, o) {
    var n = "#form" + d + "_add";
    $(n).load("interventions/delete_prestation", {
        id_prestation: c,
        client_id: f,
        sub_id: e,
        arch: h,
        additional_id: q,
        partner_id: m,
        tabindex_cnt: g,
        form_id: p,
        addon_container_id: b,
        IDs_suff: d
    }, function(v, r, u) {
        chkRes($(n), r, v);
        UNblockAllUI()
    })
}

function DeleteEquipement(d, f, e, h, q, m, g, p, b, c, o) {
    var n = "#form" + c + "_add";
    $(n).load("interventions/delete_equipement", {
        id_equipement: d,
        client_id: f,
        sub_id: e,
        arch: h,
        additional_id: q,
        partner_id: m,
        tabindex_cnt: g,
        form_id: p,
        addon_container_id: b,
        IDs_suff: c
    }, function(v, r, u) {
        chkRes($(n), r, v);
        UNblockAllUI()
    })
}

function numeralsOnly(c) {
    c = (c) ? c : event;
    var b = (c.charCode) ? c.charCode : ((c.keyCode) ? c.keyCode : ((c.which) ? c.which : 0));
    if (b > 31 && (b < 48 || b > 57)) {
        return false
    }
    return true
}

function numeralsAndDelimOnly(c) {
    c = (c) ? c : event;
    var b = (c.charCode) ? c.charCode : ((c.keyCode) ? c.keyCode : ((c.which) ? c.which : 0));
    if (b == 44 || b == 46) {
        return true
    }
    if (b > 31 && (b < 48 || b > 57)) {
        return false
    }
    return true
}

function LoadAgencyCreation() {
    blockAllUI();
    $("#management_menu_display").load("agencies/load_agency_creation_view", {
        inside: "yes"
    }, function(d, b, c) {
        if (chkRes($("#management_menu_display"), b, d)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function init_New_Agency_Creation_View() {
    var b = "#new_agency_creation";
    LoadSelectFromHiddenStorage("new_agency_creation", "new_agency_society", "#society_all");
    $("#formnew_agency_creation").submit(function(d) {
        d.stopImmediatePropagation();
        var c = {
            target: "#management_menu_display",
            url: "agencies/create_new_agency",
            type: "post",
            beforeSubmit: function(h, f, e) {
                var g = f[0];
                if (g.new_agency_name.value == "") {
                    ClientDetailsReportFormError(f, b);
                    return false
                }
                if (g.new_agency_address.value == "") {
                    ClientDetailsReportFormError(f, b);
                    return false
                }
                if ((g.new_agency_zip_code.value != "") && ((g.new_agency_zip_code.value.length != 5) || (isNaN(g.new_agency_zip_code.value)))) {
                    MessageBadZipCodeFormat(f, b);
                    return false
                }
                if (g.new_agency_city.value == "") {
                    ClientDetailsReportFormError(f, b);
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(f, e, g) {
                UNblockAllUI()
            }
        };
        $("#formnew_agency_creation").ajaxSubmit(c);
        return false
    })
}

function LoadAgencyManagement() {
    blockAllUI();
    $("#management_menu_display").load("agencies/get_management", {
        inside: "yes"
    }, function(d, b, c) {
        if (chkRes($("#management_menu_display"), b, d)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function LoadAgencyResult() {
    var b = $("#agency_management_form").find("[name=int_src_agency_id]").val();
    if (b > 0) {
        blockAllUI();
        $("#agency_result").load("agencies/get_agency_result", {
            inside: "yes",
            id_agency: b
        }, function(e, c, d) {
            if (chkRes($("#agency_result"), c, e)) {}
            tabs_delimiter_height();
            UNblockAllUI()
        })
    }
}

function init_Agency_Select_View() {
    blockAllUI();
    var b = $("#agency_management_form").find("[name=int_src_agency_id]");
    b.load("agencies/agencies_all/" + default_language + "/0/0/0/0/0/0/dummy.html", function(e, c, d) {
        chkRes(b, c, e);
        UNblockAllUI()
    });
    $("#agency_management_form").submit(function(c) {
        c.stopImmediatePropagation();
        LoadAgencyResult();
        return false
    })
}

function MessageBadZipCodeFormat(c, b) {
    $(b).find(".error_msg_area").html(message_zip_code_bad_format);
    $.MyDLG(message_zip_code_bad_format, dlg_button_ok, "", function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    }, function() {
        my_LastStepResult = -1;
        UNblockAllUI()
    })
}

function init_Agency_Management_Result_View() {
    var b = "#agency_management_search_result";
    blockAllUI();
    var d = $("#formagency_management_search_result").find("[name=managing_agency_responsible]");
    d.load("employees/employees_all/" + default_language + "/0/0/0/0/0/0/dummy.html", function(h, e, g) {
        chkRes(d, e, h);
        if ($(d).attr("my_sel") != "") {
            var f = $(d).attr("my_sel");
            get_option_from_value(d, f).attr("selected", "selected")
        }
        UNblockAllUI()
    });
    blockAllUI();
    var c = $("#formagency_management_search_result").find("[name=managing_agency_target_com]");
    c.load("employees/employees_all/" + default_language + "/0/0/0/0/0/0/dummy.html", function(h, e, g) {
        chkRes(c, e, h);
        if ($(c).attr("my_sel") != "") {
            var f = $(c).attr("my_sel");
            get_option_from_value(c, f).attr("selected", "selected")
        }
        UNblockAllUI()
    });
    $("#formagency_management_search_result").submit(function(g) {
        g.stopImmediatePropagation();
        var f = {
            target: "#agency_result",
            url: "agencies/save_agency_profil",
            type: "post",
            beforeSubmit: function(n, h, e) {
                var m = h[0];
                if (m.managing_agency_name.value == "") {
                    ClientDetailsReportFormError(h, b);
                    return false
                }
                if ((m.managing_agency_zip_code.value != "") && ((m.managing_agency_zip_code.value.length != 5) || (isNaN(m.managing_agency_zip_code.value)))) {
                    MessageBadZipCodeFormat(h, b);
                    return false
                }
                if ((m.managing_agency_phone.value != "") && ((m.managing_agency_phone.value.length != 10) || (isNaN(m.managing_agency_phone.value)))) {
                    MessageBadPhoneFormat(h, b);
                    return false
                }
                if ((m.managing_agency_fax.value != "") && ((m.managing_agency_fax.value.length != 10) || (isNaN(m.managing_agency_fax.value)))) {
                    MessageBadPhoneFormat(h, b);
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(h, e) {
                tabs_delimiter_height();
                UNblockAllUI()
            }
        };
        $("#formagency_management_search_result").ajaxSubmit(f);
        return false
    })
}

function LoadSelectMultipleFromHiddenStorageDIV(h, c, b) {
    var g = $(h).find('select[name="' + c + '"]');
    $(g).append($(b).html());
    if ($(g).attr("my_sel") != null && $(g).attr("my_sel") != "") {
        var d = $(g).attr("my_sel");
        if (d.search(";mSep;") == -1) {
            get_option_from_value(g, d).attr("selected", "selected")
        } else {
            var f = d.split(";mSep;");
            for (var e = 0; e < f.length; e++) {
                get_option_from_value(g, f[e]).attr("selected", "selected")
            }
        }
    }
}

function init_Intervention_Add_4(f, d, h, q, n, g, p, b, c, r) {
    var o = "#LAgenciesTabTree1" + d;
    if ($(o).length) {
        blockAllUI()
    }
    $(o).load("lists/default_all/" + default_language + "/" + user_id + "/" + employe_id + "/0/0/0/0/dummy.html", {
        client_id: f,
        sub_id: d,
        arch: h,
        additional_id: q,
        partner_id: n,
        tabindex_cnt: g,
        form_id: p,
        addon_container_id: b,
        IDs_suff: c
    }, function(w, u, v) {
        if (chkRes($("#AllAgenciesTree1" + d), u, w)) {
            $("#AllAgenciesTree1" + d).treeview({
                collapsed: true,
                unique: true,
                speed: 1,
                prerendered: false,
                toggle: function() {
                    tabs_delimiter_height();
                    if ($(this).attr("class").indexOf("collapsable") >= 0) {
                        Planning_soc_id = $(this).find(">span").attr("ag_id");
                        Planning_soc_name = $(this).find(">span").text();
                        Planning_age_id = -1;
                        Planning_age_name = "";
                        if (Tree_el_old != null) {
                            $(Tree_el_old).find(">span").removeClass("selected")
                        }
                        $(".temp_text_messageA").html('<span class="debug_info">' + Planning_soc_id + "</span> " + Planning_soc_name);
                        $(".temp_text_messageB").html("&nbsp;");
                        LoadTimeTables(1, d)
                    }
                }
            })
        }
        UNblockAllUI()
    });
    LoadSelectFromHiddenStorageDIV(b, "add_garantie", "#common_sbe_list_garantie");
    var m = "";
    for (var e = 0; e < r; e++) {
        m = "add_int_sbe_travail" + e;
        LoadSelectFromHiddenStorageDIV(b, m, "#common_sbe_list_travaux")
    }
    ClientDetails_Common_set_On_Change($(b));
    $(b).find("select[name=add_garantie]").bind("change", function() {
        Addon1_ComboChange_Change(this)
    });
    tabs_delimiter_height()
}

function travaux_update(h, g, o, v, p, n, u, c, d, b, m) {
    var q = "add_int_sbe_travail" + m;
    var f = document.getElementById(q).selectedIndex;
    var e = document.getElementById(q).options[parseInt(f)].value;
    var r = "#form" + d + "_add";
    $(r).load("interventions/travaux_update", {
        id_travaux: b,
        inter_select_travaux_val: e,
        client_id: h,
        sub_id: g,
        arch: o,
        additional_id: v,
        partner_id: p,
        tabindex_cnt: n,
        form_id: u,
        addon_container_id: c,
        IDs_suff: d
    }, function(C, w, z) {
        chkRes($(r), w, C);
        UNblockAllUI()
    })
}

function add_serveur_vocal_adsl(g, e, m, w, o, h, u, b, c, r) {
    var v = "add_res_adsl_txt" + c;
    var q = document.getElementById(v).selectedIndex;
    var f = document.getElementById(v).options[parseInt(q)].value;
    var n = document.getElementById("add_res_adsl_txt" + c).selectedIndex;
    var d = document.getElementById("add_res_adsl_txt" + c).options[n].value;
    if (d == "NOK - Absence de synchronisation identifiÃ©e (coupure, court-circuit, DSLAM, etc.)" || d == "NOK - Absence de synchronisation non-identifiÃ©e") {
        var p = "#form" + c + "_add";
        $(p).load("interventions/get_hl2", {
            client_id: g,
            sub_id: e,
            arch: m,
            additional_id: w,
            partner_id: o,
            tabindex_cnt: h,
            form_id: u,
            addon_container_id: b,
            IDs_suff: c,
            inter_select_adsl_val: f,
            inter_select_adsl: q,
            etat_inter: r
        }, function(D, z, C) {
            chkRes($(p), z, D);
            UNblockAllUI()
        })
    } else {
        document.getElementById("add_voip").innerHTML = ""
    }
}

function add_date_hl2(E, c, K, z, C, H, w, J, f) {
    var v = "#form" + f + "_add";
    var h = "add_res_adsl_txt" + f;
    var m = document.getElementById(h).selectedIndex;
    var u = document.getElementById(h).options[parseInt(m)].value;
    var o = document.getElementById("hl2_date_d").selectedIndex;
    var q = document.getElementById("hl2_date_d").options[parseInt(o)].value;
    var e = document.getElementById("hl2_date_m").selectedIndex;
    var b = document.getElementById("hl2_date_m").options[parseInt(e)].value;
    var I = document.getElementById("hl2_date_y").selectedIndex;
    var p = document.getElementById("hl2_date_y").options[I].value;
    var g = document.getElementById("hl2_hh").selectedIndex;
    var G = document.getElementById("hl2_hh").options[g].value;
    var D = document.getElementById("hl2_mm").selectedIndex;
    var d = document.getElementById("hl2_mm").options[D].value;
    var r = 0;
    if (q == "" || b == "" || p == "" || G == "" || d == "") {
        alert("Date erronÃ©e")
    } else {
        var n = p + "-" + b + "-" + q + " " + G + ":" + d + ":" + r;
        $(v).load("interventions/add_hl2", {
            client_id: E,
            sub_id: c,
            arch: K,
            additional_id: z,
            partner_id: C,
            tabindex_cnt: H,
            form_id: w,
            addon_container_id: J,
            IDs_suff: f,
            hl2_date_time: n,
            inter_select_adsl_val: u,
            inter_select_adsl: m
        }, function(N, L, M) {
            chkRes($(v), L, N);
            UNblockAllUI()
        })
    }
}

function on_change_ignor_zip_code(d) {
    var c = $(d).parents("form");
    var b = $(d).attr("checked");
    if (b) {
        Set_Disabled($(c).find("input[name=zip_code]"));
        Set_Disabled($(c).find("input[name=city]"))
    } else {
        SetSelectedByOptionAndEnable($(c).find("input[name=zip_code]").get(0), 0, true);
        SetSelectedByOptionAndEnable($(c).find("input[name=city]").get(0), 0, true)
    }
}

function add_paid(b) {
    index_stat = document.getElementById("inter_stat").selectedIndex;
    IDs_suff1 = "Code_prestation" + b;
    if (index_stat == 3 || index_stat == 4) {
        if (index_stat == 3) {
            $("#form" + IDs_suff1).find("label[name=div_code_prestation]").attr("class", "mandatory")
        }
        $("#form" + b).find("label[name=sbe_defaut]").attr("class", "mandatory");
        document.getElementById("div_inter_paid").setAttribute("class", "mandatory");
        document.getElementById("div_inter_not_paid").setAttribute("class", "mandatory")
    } else {
        $("#form" + IDs_suff1).find("label[name=div_code_prestation]").removeAttr("class");
        document.getElementById("div_inter_paid").setAttribute("class", "");
        document.getElementById("div_inter_not_paid").setAttribute("class", "")
    }
}

function init_New_User_Creation_View() {
    var b = "#new_user_creation";
    var c = $("#formnew_user_creation").find("[name=new_user_groupname]");
    c.load("admin/get_user_groupname_list/" + default_language + "/0/0/0/0/0/0/dummy.html", function(f, d, e) {
        chkRes(c, d, f);
        UNblockAllUI()
    });
    $("#formnew_user_creation").submit(function(f) {
        f.stopImmediatePropagation();
        var d = {
            target: "#admin_menu_display",
            url: "admin/create_new_user",
            type: "post",
            beforeSubmit: function(m, g, e) {
                var h = g[0];
                if (h.new_user_name.value == "") {
                    ClientDetailsReportFormError(g, b);
                    return false
                }
                if (h.new_user_pwd1.value == "" || h.new_user_pwd2.value == "") {
                    ClientDetailsReportFormError(g, b);
                    return false
                }
                if (h.new_user_pwd1.value != h.new_user_pwd2.value) {
                    ConfirmNewPasswordFailed(g, b);
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(g, e, h) {
                UNblockAllUI()
            }
        };
        $("#formnew_user_creation").ajaxSubmit(d);
        return false
    })
}

function LoadNewUserCreation() {
    blockAllUI();
    $("#admin_menu_display").load("admin/load_user_cration_view", {
        inside: "yes"
    }, function(d, b, c) {
        if (chkRes($("#admin_menu_display"), b, d)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function LoadUserResult() {
    var b = $("#user_admin_form").find("[name=int_src_user_id]").val();
    if (b > 0) {
        blockAllUI();
        $("#user_result").load("admin/get_user_admin_result", {
            inside: "yes",
            id_user: b
        }, function(e, c, d) {
            if (chkRes($("#user_result"), c, e)) {}
            tabs_delimiter_height();
            UNblockAllUI()
        })
    }
}

function init_User_Select_View() {
    blockAllUI();
    var b = $("#user_admin_form").find("[name=int_src_user_id]");
    b.load("admin/users_all/" + default_language + "/0/0/0/0/0/0/dummy.html", function(e, c, d) {
        chkRes(b, c, e);
        UNblockAllUI()
    });
    $("#user_admin_form").submit(function(c) {
        c.stopImmediatePropagation();
        LoadUserResult();
        return false
    })
}

function LoadUserManagement() {
    blockAllUI();
    $("#admin_menu_display").load("admin/get_user_admin", {
        inside: "yes"
    }, function(d, b, c) {
        if (chkRes($("#admin_menu_display"), b, d)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function init_User_Admin_Result_View() {
    var c = "#user_admin_search_result";
    var b = $("#formuser_admin_search_result").find("[name=hidden_id_user]").val();
    LoadSelectFromHiddenStorage("user_admin_search_result", "user_status", "#user_status");
    var d = $("#formuser_admin_search_result").find("[name=user_groupname]");
    d.load("admin/get_user_groupname_list/" + default_language + "/0/0/0/0/0/0/dummy.html", function(h, e, g) {
        chkRes(d, e, h);
        if ($(d).attr("my_sel") != "") {
            var f = $(d).attr("my_sel");
            get_option_from_value(d, f).attr("selected", "selected")
        }
        UNblockAllUI()
    });
    $("#formuser_admin_search_result").submit(function(g) {
        g.stopImmediatePropagation();
        var f = {
            target: "#dummy_container",
            url: "admin/save_user",
            type: "post",
            beforeSubmit: function(n, h, e) {
                var m = h[0];
                if (m.user_name.value == "") {
                    ClientDetailsReportFormError(h, c);
                    return false
                }
                if (((m.user_pwd1.value != "") || (m.user_pwd2.value != "")) && (m.user_pwd1.value != m.user_pwd2.value)) {
                    ConfirmNewPasswordFailed(h, c);
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(h, e) {
                tabs_delimiter_height();
                UNblockAllUI()
            }
        };
        $("#formuser_admin_search_result").ajaxSubmit(f);
        return false
    })
}

function load_sbe_defauts(f, g) {
    var e = $(f).parents("form");
    var b = -1;
    var c = $(f).children("option:eq(" + $(f).get(0).selectedIndex + ")");
    if ($(c).length > 0) {
        b = c.attr("value")
    }
    var d = $(e).find("select[name=defauts_sbe_defuats]");
    if ((d == null) || ($(d).length < 1)) {
        return
    }
    blockAllUI();
    $(d).load("lists/sbe_default/" + default_language + "/" + g + "/" + b + "/0/dummy.html", function(o, h, n) {
        chkRes($(d), h, o);
        if ($(d).attr("my_sel") != "") {
            var m = $(d).attr("my_sel");
            get_option_from_value(d, m).attr("selected", "selected")
        }
        UNblockAllUI()
    })
}

function load_sbe_defauts_ss_famille(f) {
    var e = $(f).parents("form");
    var g = -1;
    var b = $(f).get(0).selectedIndex;
    var c = $(f).children("option:eq(" + $(f).get(0).selectedIndex + ")");
    if ($(c).length > 0) {
        g = c.attr("value")
    }
    var d = $(e).find("select[name=defauts_sbe_ss_familles]");
    if ((d == null) || ($(d).length < 1)) {
        return
    }
    blockAllUI();
    $(d).load("lists/sbe_default_ss_famillys/" + default_language + "/" + g + "/0/dummy.html", function(o, h, n) {
        chkRes($(d), h, o);
        if ($(d).attr("my_sel") != "") {
            var m = $(d).attr("my_sel");
            get_option_from_value(d, m).attr("selected", "selected")
        }
        load_sbe_defauts($(e).find("select[name=defauts_sbe_ss_familles]").get(0), g);
        UNblockAllUI()
    });
    $(e).find("select[name=defauts_sbe_ss_familles]").bind("change", function() {
        load_sbe_defauts(this, g)
    })
}

function load_sbe_defauts_famille(b) {
    var c = $(b).find("select[name=defauts_sbe_familles]");
    if ((c == null) || ($(c).length < 1)) {
        return
    }
    blockAllUI();
    $(c).load("lists/sbe_default_famillys/" + default_language + "/0/dummy.html", function(h, e, g) {
        chkRes($(c), e, h);
        if ($(c).attr("my_sel") != "") {
            var f = $(c).attr("my_sel");
            get_option_from_value(c, f).attr("selected", "selected")
        }
        load_sbe_defauts_ss_famille($(b).find("select[name=defauts_sbe_familles]").get(0));
        UNblockAllUI()
    });
    $(b).find("select[name=defauts_sbe_familles]").bind("change", function() {
        load_sbe_defauts_ss_famille(this)
    });
    $(b).find("div[id=add_defaut_div]").hide();
    var d = $(b).find("div[id=defauts_sbe]");
    d.show()
}

function Add_Defaut(b, c, d) {
    var m = $(b).find("select[name=defauts_sbe_familles]");
    var n = $(b).find("select[name=defauts_sbe_ss_familles]");
    var f = $(b).find("select[name=defauts_sbe_defuats]");
    var o = "#" + d;
    if ($(m).get(0).selectedIndex == -1 || $(n).get(0).selectedIndex == -1 || $(f).get(0).selectedIndex == -1) {
        $(o).find(".error_msg_area").html(message_phone_bad_format);
        $.MyDLG("Veuillez selectionner un dï¿½faut", dlg_button_ok, "", function() {
            my_LastStepResult = -1;
            UNblockAllUI()
        });
        return false
    }
    var e = $(f).children("option:eq(" + $(f).get(0).selectedIndex + ")");
    var h = e.attr("libelle");
    var g = e.attr("value");
    blockAllUI();
    $(b).find("div[id=add_defaut_div]").load("interventions/add_defaut/", {
        sub_id: c,
        id_defaut: g,
        libelle_defaut: h
    }, function(r, p, q) {
        $(m).get(0).selectedIndex = -1;
        $(n).get(0).selectedIndex = -1;
        $(f).get(0).selectedIndex = -1;
        add_defaut_in_display_table($(b).find("table[id=defaut_inter_Table]"), r, h, b);
        UNblockAllUI()
    })
}

function add_defaut_in_display_table(d, g, f, c) {
    if (d == null || d.length < 1) {
        return
    }
    var b = $("<tr>").attr("id", "#row_" + g);
    var e = "<span class='span_suprim ShowToolTipA' onClick='remove_defaut(this," + g + ',"' + c + "\")'>" + f + "</span> ";
    $("<td>").html(e).appendTo(b);
    b.appendTo(d)
}

function remove_defaut(d, c, b) {
    blockAllUI();
    $(b).find("div[id=ajaxDiv]").load("interventions/delete_defaut/", {
        id_defaut: c
    }, function(g, e, f) {
        UNblockAllUI()
    });
    $(d).parent().parent().remove()
}

function init_Intervention_Add_10(h, f, n, r, o, m, q, c, e, b) {
    if ((o == 303) || (o == 305) || (o == 306) || (F.partner_id.value == 336)) {
        LoadSelectFromHiddenStorageDIV(c, "add_sogetrel_colonne_montante", "#interv_addon_d_list_b");
        LoadSelectFromHiddenStorageDIV(c, "add_sogetrel_bpi", "#interv_addon_d_list_b");
        var d = "#" + b;
        blockAllUI();
        var g = $("#form" + b).find("[name=sogetrel_select_prestation]");
        g.load("interventions/common_sogetrel_prestation/" + default_language + "/0/0/0/0/0/0/dummy.html", {
            partner_id: o
        }, function(w, u, v) {
            chkRes(g, u, w);
            UNblockAllUI()
        });
        var p = "#form" + e + "_add";
        $("#form" + b).submit(function(v) {
            v.stopImmediatePropagation();
            var u = {
                target: p,
                url: "interventions/save_sogetrel_prestation",
                type: "post",
                beforeSubmit: function(D, z, w) {
                    var C = z[0];
                    if (C.sogetrel_prestation_quantites.value == "" || C.sogetrel_prestation_quantites.value == "0") {
                        return false
                    }
                    blockAllUI();
                    return true
                },
                error: function() {
                    UNblockAllUI()
                },
                success: function(z, w) {
                    UNblockAllUI()
                }
            };
            $("#form" + b).ajaxSubmit(u);
            return false
        })
    }
    if ((o == 287) || (o == 300) || (o == 62) || (o == 305) || (o == 306)) {
        LoadSelectFromHiddenStorageDIV(c, "add_sogetrel_pose_cable", "#interv_addon_d_list_b");
        LoadSelectFromHiddenStorageDIV(c, "add_sogetrel_service_tel", "#interv_addon_d_list_b");
        LoadSelectFromHiddenStorageDIV(c, "add_sogetrel_service_web", "#interv_addon_d_list_b");
        LoadSelectFromHiddenStorageDIV(c, "add_sogetrel_service_tv", "#interv_addon_d_list_b");
        LoadSelectFromHiddenStorageDIV(c, "add_sogetrel_code_echec", "#sogetrel_code_echec");
        ClientDetails_Common_set_On_Change($(c))
    }
}

function init_Intervention_Add_11(c, g, b) {
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_appel_support_9c", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_inter_nra", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_inter_client", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_inter_st", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_prise_charge_9c", "#sfr_prise_en_charge");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_origine_panne", "#sfr_origine_panne");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_choix_origine", "#sfr_choix_origine_panne");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_resultat_inter", "#sfr_resultats_inter");
    var e = $(c).find("[name=add_sfr_gel_reac]").val();
    if ((e == "AUCUN") || (e == "REACT")) {
        LoadSelectFromHiddenStorageDIV(c, "add_sfr_motifs_suspension", "#sfr_motifs_suspension")
    }
    var d = $(c).find("[name=add_sfr_choix_origine]").val();
    var f = $(c).find("[name=add_sfr_resultat_inter]").val();
    if ((d > 0) && (f > 0)) {
        LoadSFROriginePanneList(c, g, b)
    }
}

function CreateGelRequest(c, b, d) {
    var e = "#" + d;
    var f = $(c).find("[name=add_sfr_motifs_suspension]").val();
    if (f != "Aucun") {
        blockAllUI();
        $("#dummy_container").load("interventions/add_gel_request", {
            motif_gel: f,
            id_inter: b
        }, function(m, g, h) {
            chkRes($("#dummy_container"), g, m);
            UNblockAllUI()
        })
    } else {
        $(e).find(".error_msg_area").html(message_sfr_choice_needed);
        $.MyDLG(message_sfr_choice_needed, dlg_button_ok, "", function() {
            my_LastStepResult = -1;
            UNblockAllUI()
        }, function() {
            my_LastStepResult = -1;
            UNblockAllUI()
        })
    }
}

function CreateReactRequest(c, b, d) {
    var e = "#" + d;
    var f = $(c).find("[name=add_sfr_motif_react]").val();
    if (f != "") {
        blockAllUI();
        $("#dummy_container").load("interventions/add_react_request", {
            motif_react: f,
            id_inter: b
        }, function(m, g, h) {
            chkRes($("#dummy_container"), g, m);
            UNblockAllUI()
        })
    } else {
        $(e).find(".error_msg_area").html(message_reactivation_text_missing);
        $.MyDLG(message_reactivation_text_missing, dlg_button_ok, "", function() {
            my_LastStepResult = -1;
            UNblockAllUI()
        }, function() {
            my_LastStepResult = -1;
            UNblockAllUI()
        })
    }
}

function LoadVisuTelima() {
    blockAllUI();
    $("#admin_menu_display").load("admin/get_visu_telima", {
        inside: "yes"
    }, function(d, b, c) {
        if (chkRes($("#admin_menu_display"), b, d)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function LoadVisuTelimaConfig() {
    var b = $("#select_telima_form").find("[name=int_society_id_source]").val();
    var c = $("#select_telima_form").find("[name=int_society_id_dest]").val();
    if ((b > -1) && (c > -1)) {
        blockAllUI();
        $("#visu_telima_result").load("admin/get_visu_telima_result", {
            inside: "yes",
            id_society_src: b,
            id_society_dest: c
        }, function(f, d, e) {
            if (chkRes($("#visu_telima_result"), d, f)) {}
            tabs_delimiter_height();
            UNblockAllUI()
        })
    }
}

function init_Visu_Telima_Select_View() {
    LoadSelectFromHiddenStorage("visu_telima_select_form_container", "int_society_id_source", "#society_all");
    LoadSelectFromHiddenStorage("visu_telima_select_form_container", "int_society_id_dest", "#society_all");
    $("#select_telima_form").submit(function(b) {
        b.stopImmediatePropagation();
        LoadVisuTelimaConfig();
        return false
    })
}

function SaveTelimaViews() {
    if (!$("#table_Telima_Views").length) {
        return
    }
    var u = $("#table_Telima_Views").get(0).rows;
    var o = u.length - 1;
    var m = $("#formvisu_telima_select_form_container").find("[name=int_society_id_source]").val();
    var b = $("#formvisu_telima_select_form_container").find("[name=int_society_id_dest]").val();
    for (var e = 1; e <= o; e++) {
        blockAllUI();
        if ((m > -1) && (b > -1)) {
            var g = "target_id_" + e;
            var d = "is_target_agency_" + e;
            var f = "check_employee_view_" + e;
            var q = "existing_" + e;
            var p = $("#telima_views").find('[name="' + g + '"]').val();
            var h = $("#telima_views").find('[name="' + d + '"]').val();
            var c = $("#telima_views").find('[name="' + q + '"]').val();
            var n = $("#telima_views").find('[name="' + f + '"]').attr("checked");
            if (n) {
                var r = 1
            } else {
                var r = 0
            }
            $("#dummy_container").load("admin/save_visu_telima", {
                inside: "yes",
                id_society_src: m,
                id_society_dest: b,
                is_agency: h,
                id_target: p,
                existing_row: c,
                view: r
            }, function(z, v, w) {
                if (chkRes($("#dummy_container"), v, z)) {}
                UNblockAllUI()
            })
        }
    }
}

function LoadStateNotifications() {
    blockAllUI();
    $("#admin_menu_display").load("admin/state_notifications", function(c, b) {
        chkRes($("#admin_menu_display"), b, c);
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function LoadSkillsManagement() {
    blockAllUI();
    $("#admin_menu_display").load("admin/get_skills_management", {
        inside: "yes"
    }, function(d, b, c) {
        tabs_delimiter_height();
        UNblockAllUI();
        return false
    })
}

function SaveSkillsManagement() {
    blockAllUI();
    value = 0;
    $("input[type=checkbox]", "#admin_menu_display #skills_admin_form").each(function() {
        if ($(this).is(":checked")) {
            value += parseInt($(this).val())
        }
    });
    $("#admin_menu_display").load("admin/save_skills_management", {
        inside: "yes",
        value: value
    }, function(d, b, c) {
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function AddSkills() {
    blockAllUI();
    value = 0;
    skill_name = $("input[name=new_skill]", "#admin_menu_display").val();
    new_skill_type = $("select[name=new_skill_type]", "#admin_menu_display").val();
    if (skill_name.trim(" ").length != 0 && new_skill_type != "") {
        $("#admin_menu_display").load("admin/add_skills", {
            inside: "yes",
            skill: skill_name,
            skill_type: new_skill_type
        }, function(d, b, c) {
            tabs_delimiter_height();
            UNblockAllUI()
        })
    } else {
        UNblockAllUI();
        alert("Please save only Skills with name!")
    }
}

function AddEmployeToSkill(c, b) {
    id_employe = $("#skills_detail_skills_admin_table" + b + " select[name=tech]").val();
    skill_level = $("#skills_detail_skills_admin_table" + b + " select[name=slevel]").val();
    skill_start_date = $("#skills_detail_skills_admin_table" + b + " input[name=skill_start_date]").val();
    skill_end_date = $("#skills_detail_skills_admin_table" + b + " input[name=skill_end_date]").val();
    skill_description = $("#skills_detail_skills_admin_table" + b + " input[name=skill_description]").val();
    skill_type = $("#skills_detail_skills_admin_table" + b + " [name=skill_type]").val();
    if (parseInt(id_employe) > 0 && parseInt(skill_level) > 0) {
        $.post("admin/set_skill_user", {
            id: c,
            pos: b,
            id_employe: id_employe,
            skill_level: skill_level,
            skill_start_date: skill_start_date,
            skill_end_date: skill_end_date,
            skill_description: skill_description,
            skill_type: skill_type
        }, function(d) {
            $("#skills_detail_skills_admin_table" + b).html(d).fadeIn("fast")
        })
    } else {
        UNblockAllUI();
        alert("Please save only Skills with name!")
    }
}

function AddInterventionTypeToSkill(c, b) {
    modele_intervention = $("#skills_detail_skills_admin_table" + b + " select[name=skill_modele_partenaire_" + c + "]").val();
    skill_level = $("#skills_detail_skills_admin_table" + b + " select[name=smlevel]").val();
    if (parseInt(modele_intervention) > 0 && parseInt(skill_level) > 0) {
        $.post("admin/set_skill_modelete_intervention", {
            id: c,
            pos: b,
            modele_intervention: modele_intervention,
            skill_level: skill_level
        }, function(d) {
            $("#skills_detail_skills_admin_table" + b).html(d).fadeIn("fast");
            $("#skills_detail_tab_" + c).tabs("option", "selected", 1)
        })
    } else {
        UNblockAllUI();
        alert("Please save only Skills with name!")
    }
}

function DelEmployeFromSkill(d, b, e, c) {
    $.post("admin/del_skill_user", {
        id: d,
        id_employe: b,
        pos: e,
        skill_type: c
    }, function(f) {
        $("#skills_detail_skills_admin_table" + e).html(f).fadeIn("fast")
    })
}

function DelModeleInterventionFromSkill(c, e, d, b) {
    $.post("admin/del_skill_modele_intervention", {
        id: c,
        id_modele_intervention: e,
        pos: d,
        skill_type: b
    }, function(f) {
        $("#skills_detail_skills_admin_table" + d).html(f).fadeIn("fast");
        $("#skills_detail_tab_" + c).tabs("option", "selected", 1)
    })
}

function del_skill_from_intervention_type(d, c, b) {
    $.post("admin/del_skill_from_intervention_type", {
        type_id: b,
        skill_id: c,
        pos: d
    }, function(e) {
        $("#skills_admin_modele_intervention_skills_admin_modele_intervention_assign_table" + d).hide().html(e).fadeIn("fast")
    });
    return false
}

function add_skill_to_intervention_type(b) {
    skill = $("#skills_admin_modele_intervention_skills_admin_modele_intervention_assign_table" + b + " select[name=smskills]").val();
    level = $("#skills_admin_modele_intervention_skills_admin_modele_intervention_assign_table" + b + " select[name=smlevel]").val();
    type = $("#skills_admin_modele_intervention_skills_admin_modele_intervention_assign_table" + b + " input[name=smtype]").val();
    recommandation = $("#skills_admin_modele_intervention_skills_admin_modele_intervention_assign_table" + b + " select[name=recommandation]").val();
    if (level != "" && type != "") {
        $.post("admin/add_skill_to_intervention_type", {
            type_id: type,
            skill_id: skill,
            pos: b,
            level: level,
            recommandation: recommandation
        }, function(c) {
            $("#skills_admin_modele_intervention_skills_admin_modele_intervention_assign_table" + b).hide().html(c).fadeIn("fast")
        })
    }
    return false
}

function AddSkillToIntervention(c, d) {
    var b = $("#form" + d + "_add_skills_assign_table");
    var e = $("select[name=intervention_skills]", "#" + d).val();
    var g = $("select[name=intervention_skills_level]", "#" + d).val();
    var f = $("select[name=intervention_skills_recommandation]", "#" + d).val();
    if (e != "" && g != "" && f != "") {
        $.post("interventions/add_skills_to_intervention", {
            suff: d,
            sub_id: c,
            id_skill: e,
            skills_level: g,
            skills_recommandation: f
        }, function(h) {
            $(b).hide().html(h).fadeIn("fast")
        })
    } else {
        alert("Please fill all Fields in Formular")
    }
}

function DelSkillFromIntervention(c, e, d) {
    var b = $("#form" + d + "_add_skills_assign_table");
    $.post("interventions/del_skills_from_intervention", {
        suff: d,
        sub_id: c,
        id_skill: e
    }, function(f) {
        $(b).hide().html(f).fadeIn("fast")
    })
}

function AddSkillToSearch(e, f) {
    var h = $("#form" + f + "_skills_intervention_search_table");
    var b = $("select[name=intervention_search_skills]", "#" + f).val();
    var c = $("select[name=intervention_search_skills] option:selected", "#" + f).text();
    var m = $("select[name=intervention_search_skills] option:selected", "#" + f).data("skill_type");
    var n = $("select[name=intervention_search_skills_level]", "#" + f).val();
    var g = $("select[name=intervention_search_skills_definition]", "#" + f).val();
    var d = '<a href="#" onclick="DelSkillFromSearch(this,\'' + f + '\'); return false;" value="search Technicians" type="submit"><img src="/var/themes/default/img/small_close.gif" alt="del"></a>';
    h.DataTable().fnAddData([c, m, n, g, d, b]);
    $("select[name=intervention_search_skills] option:selected", "#" + f).remove()
}

function DelSkillFromSearch(d, c) {
    var b = $("#form" + c + "_skills_intervention_search_table");
    var d = $(d).closest("tr").get(0);
    arr = b.DataTable().fnGetData(d);
    $("select[name=intervention_search_skills]", "#" + c).append($("<option>", {
        value: arr[5],
        text: arr[0],
        data: {
            skill_type: arr[1]
        }
    }));
    b.DataTable().fnDeleteRow(b.DataTable().fnGetPosition(d))
}

function SkillsTechSearch(b, d) {
    var c = $("#form" + d + "_skill_search_emps");
    var g = $("#form" + d + "_skills_intervention_search_table").DataTable().fnGetNodes();
    var f = [];
    for (var e = 0; e < g.length; e++) {
        skill = [];
        min_skill_level = $(g[e]).find("td:eq(2)").html();
        skill_def = $(g[e]).find("td:eq(3)").html();
        id_skill = $(g[e]).find("td:eq(5)").html();
        f.push({
            id_skill: id_skill,
            min_skill_level: min_skill_level,
            skill_def: skill_def
        })
    }
    $.post("interventions/skills_search_tech_from_intervention", {
        suff: d,
        sub_id: b,
        data: f
    }, function(h) {
        $(c).hide().html(h).fadeIn("fast")
    })
}

function fnFormatDetailsSkills(d, e) {
    var b = d.fnGetData(e);
    var g = d.fnGetPosition(e);
    var c = $(d).attr("id");
    var f = "";
    if (c == "skills_admin_table") {
        f = '<div id="skills_detail_' + c + g + '" class="notification_details common_form_container"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_notification_loading_details + "</div>";
        $.post("admin/get_skill_users", {
            id: b.skill_id,
            pos: g,
            skill_type: b.skill_type
        }, function(h) {
            $("#skills_detail_" + c + g).hide().html(h).fadeIn("fast")
        })
    }
    return f
}

function fnFormatDetailsSkillsEmp(d, e) {
    var b = d.fnGetData(e);
    var g = d.fnGetPosition(e);
    var c = $(d).attr("id");
    var f = "";
    if (c == "skills_admin_emp_table") {
        f = '<div id="skills_emp_detail_' + g + '" class="notification_details common_form_container"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_notification_loading_details + "</div>";
        $.post("admin/get_user_skills", {
            pos: g,
            emp_id: b.emp_id
        }, function(h) {
            $("#skills_emp_detail_" + g).hide().html(h).fadeIn("fast")
        })
    }
    return f
}

function fnFormatDetailsSkillsModeleIntervention(d, e) {
    var b = d.fnGetData(e);
    var g = d.fnGetPosition(e);
    var c = $(d).attr("id");
    var f = "";
    if (c == "skills_admin_modele_intervention_assign_table") {
        f = '<div id="skills_admin_modele_intervention_' + c + g + '" class="notification_details common_form_container"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_notification_loading_details + "</div>";
        $.post("admin/get_skills_for_intervention_type", {
            type_id: b.id_modelete_intervention,
            pos: g
        }, function(h) {
            $("#skills_admin_modele_intervention_" + c + g).hide().html(h).fadeIn("fast")
        })
    }
    return f
}

function init_skills_management() {
    var c = [{
        sTitle: "#",
        bVisible: true,
        bSortable: false,
        sClass: "center",
        sWidth: "5px",
        sDefaultContent: "",
        aTargets: [0],
        fnRender: function(d) {
            return '<img class=tdopen src="/var/themes/default/extjs_images/elbow-plus-nl.gif">'
        }
    }, {
        sTitle: "Skill",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_name",
        sDefaultContent: "",
        aTargets: [1]
    }, {
        sTitle: "Type",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_type",
        sDefaultContent: "",
        aTargets: [2]
    }, {
        sTitle: "id",
        bVisible: false,
        bSortable: false,
        mDataProp: "skill_id",
        sDefaultContent: "",
        aTargets: [3]
    }];
    var b = [{
        sTitle: "#",
        bVisible: true,
        bSortable: false,
        sClass: "center",
        sWidth: "5px",
        sDefaultContent: "",
        aTargets: [0],
        fnRender: function(d) {
            return '<img class=tdopen src="/var/themes/default/extjs_images/elbow-plus-nl.gif">'
        }
    }, {
        sTitle: "Name",
        bVisible: true,
        bSortable: true,
        mDataProp: "emp_nom",
        sDefaultContent: "",
        aTargets: [1]
    }, {
        sTitle: "Societe",
        bVisible: true,
        bSortable: true,
        mDataProp: "emp_soc",
        sDefaultContent: "",
        aTargets: [2]
    }, {
        sTitle: "Company",
        bVisible: true,
        bSortable: true,
        mDataProp: "emp_comp",
        sDefaultContent: "",
        aTargets: [3]
    }, {
        sTitle: "id",
        bVisible: false,
        bSortable: false,
        mDataProp: "emp_id",
        sDefaultContent: "",
        aTargets: [4]
    }];
    oTableskills = $("#skills_admin_table").dataTable({
        bDestroy: true,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: c,
        aLengthMenu: [
            [25, 50, 100, -1],
            [25, 50, 100, "Alle"]
        ],
        iDisplayLength: -1,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageNotification,
        aaSorting: [
            [1, "asc"],
            [2, "asc"]
        ],
        bStateSave: false
    });
    oTableskillsEmp = $("#skills_admin_emp_table").dataTable({
        bDestroy: true,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: b,
        aLengthMenu: [
            [25, 50, 100, -1],
            [25, 50, 100, "Alle"]
        ],
        iDisplayLength: -1,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageNotification,
        aaSorting: [
            [1, "asc"],
            [2, "asc"],
            [3, "asc"]
        ],
        bStateSave: false
    });
    $("#skills_admin_table img.tdopen").css("cursor", "pointer");
    $("#skills_admin_emp_table img.tdopen").css("cursor", "pointer");
    $("#skills_admin_table img.tdopen").click(function() {
        var d = $(this).parents("tr")[0];
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            oTableskills.fnClose(d)
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            oTableskills.fnOpen(d, fnFormatDetailsSkills(oTableskills, d), "details")
        }
    });
    $("#skills_admin_emp_table img.tdopen").click(function() {
        var d = $(this).parents("tr")[0];
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            oTableskillsEmp.fnClose(d)
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            oTableskillsEmp.fnOpen(d, fnFormatDetailsSkillsEmp(oTableskillsEmp, d), "details")
        }
    });
    $("select[name=skill_modele_partenaire]", "#skills_overview_tab-2").change(function() {
        id_partenaire = $("select[name=skill_modele_partenaire]", "#skills_overview_tab-2").val();
        $.post("admin/get_admin_modele_intervention", {
            id_partenaire: id_partenaire
        }, function(d) {
            $("#skill_modele_partenaire_details").html(d)
        })
    })
}

function init_skills_management_types() {
    var c = [{
        sTitle: "#",
        bVisible: true,
        bSortable: false,
        sClass: "center",
        sWidth: "5px",
        sDefaultContent: "",
        aTargets: [0],
        fnRender: function(d) {
            return '<img class=tdopen src="/var/themes/default/extjs_images/elbow-plus-nl.gif">'
        }
    }, {
        sTitle: "Type",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_type",
        sDefaultContent: "",
        aTargets: [1]
    }, {
        sTitle: "id_modelete_intervention",
        bVisible: false,
        bSortable: false,
        mDataProp: "id_modelete_intervention",
        sDefaultContent: "",
        aTargets: [2]
    }];
    var b = $("#skills_admin_modele_intervention_assign_table").dataTable({
        bDestroy: true,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: c,
        aLengthMenu: [
            [10, 25, 50, 100, -1],
            [10, 25, 50, 100, "Alle"]
        ],
        iDisplayLength: -1,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageNotification,
        aaSorting: [
            [0, "asc"]
        ],
        bStateSave: false
    });
    $("#skills_admin_modele_intervention_assign_table img.tdopen").css("cursor", "pointer");
    $("#skills_admin_modele_intervention_assign_table img.tdopen").click(function() {
        var d = $(this).parents("tr")[0];
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            b.fnClose(d)
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            b.fnOpen(d, fnFormatDetailsSkillsModeleIntervention(b, d), "details")
        }
    })
}

function init_skills_management_types2(c) {
    var b = [{
        sTitle: "Skill",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_name",
        sDefaultContent: "",
        aTargets: [0]
    }, {
        sTitle: "Type",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_type",
        sDefaultContent: "",
        aTargets: [1]
    }, {
        sTitle: "min Level",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_level",
        sDefaultContent: "",
        aTargets: [2]
    }, {
        sTitle: "Recommandation",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_recommandation",
        sDefaultContent: "",
        aTargets: [3]
    }, {
        sTitle: "",
        bVisible: true,
        bSortable: false,
        mDataProp: "action",
        sDefaultContent: "",
        aTargets: [4]
    }, {
        sTitle: "",
        bVisible: false,
        bSortable: false,
        mDataProp: "modele_intervention_id",
        sDefaultContent: "",
        aTargets: [5]
    }, {
        sTitle: "",
        bVisible: false,
        bSortable: false,
        mDataProp: "skill_id",
        sDefaultContent: "",
        aTargets: [6]
    }];
    oTableskills_for_intervention_type = $("#skills_for_intervention_type_table_" + c).dataTable({
        bDestroy: true,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: b,
        aLengthMenu: [
            [25, 50, 100, -1],
            [25, 50, 100, "Alle"]
        ],
        iDisplayLength: 25,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageNotification,
        aaSorting: [
            [1, "asc"],
            [2, "asc"]
        ],
        bStateSave: false
    })
}

function init_skills_management_users(e, d) {
    var b = [{
        sTitle: "Nom",
        bVisible: true,
        bSortable: true,
        mDataProp: "nom",
        sDefaultContent: "",
        aTargets: [0]
    }, {
        sTitle: "Level",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_level",
        sDefaultContent: "",
        aTargets: [1]
    }, {
        sTitle: "Start",
        bVisible: true,
        bSortable: true,
        mDataProp: "start_time",
        sDefaultContent: "",
        aTargets: [2]
    }, {
        sTitle: "End",
        bVisible: true,
        bSortable: true,
        mDataProp: "end_time",
        sDefaultContent: "",
        aTargets: [3]
    }, {
        sTitle: "Description",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_details",
        sDefaultContent: "",
        aTargets: [4]
    }, {
        sTitle: "action",
        bVisible: true,
        bSortable: false,
        sClass: "center",
        sWidth: "5px",
        mDataProp: "action",
        sDefaultContent: "",
        aTargets: [5]
    }, {
        sTitle: "Id",
        bVisible: false,
        bSortable: false,
        mDataProp: "id",
        sDefaultContent: "",
        aTargets: [6]
    }];
    var c = [{
        sTitle: "Partner",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_partenaire",
        sDefaultContent: "",
        aTargets: [0]
    }, {
        sTitle: "Type",
        bVisible: true,
        bSortable: true,
        mDataProp: "modele_intervention",
        sDefaultContent: "",
        aTargets: [1]
    }, {
        sTitle: "Level",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_level",
        sDefaultContent: "",
        aTargets: [2]
    }, {
        sTitle: "action",
        bVisible: true,
        bSortable: false,
        sClass: "center",
        sWidth: "5px",
        mDataProp: "action",
        sDefaultContent: "",
        aTargets: [3]
    }, {
        sTitle: "id_modelete_intervention",
        bVisible: false,
        bSortable: false,
        mDataProp: "id_modelete_intervention",
        sDefaultContent: "",
        aTargets: [4]
    }];
    $("#skills_admin_assign" + e + "_table").dataTable({
        bDestroy: true,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: b,
        aLengthMenu: [
            [10, 25, 50, 100, -1],
            [10, 25, 50, 100, "Alle"]
        ],
        iDisplayLength: 10,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageNotification,
        aaSorting: [
            [0, "asc"]
        ],
        bStateSave: false
    });
    $("#skills_admin_modele_intervention_assign" + e + "_table").dataTable({
        bDestroy: true,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: c,
        aLengthMenu: [
            [10, 25, 50, 100, -1],
            [10, 25, 50, 100, "Alle"]
        ],
        iDisplayLength: 10,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageNotification,
        aaSorting: [
            [0, "asc"]
        ],
        bStateSave: false
    });
    $("#skill_start_date, #skill_end_date").datepicker({
        firstDay: 1,
        changeFirstDay: true,
        changeYear: true,
        yearRange: "-10:+10",
        changeMonth: true,
        numberOfMonths: 1,
        showCurrentAtPos: 1,
        dateFormat: "yy-mm-dd"
    });
    $("#skills_detail_tab_" + d).tabs();
    $("select[name=skill_partenaire_" + d + "]").change(function() {
        $.post("admin/get_modele_intervention", {
            id_partenaire: $("select[name=skill_partenaire_" + d + "]").val()
        }, function(f) {
            $("select[name=skill_modele_partenaire_" + d + "]").html(f)
        })
    })
}

function init_skills_emp_view(c) {
    var b = [{
        sTitle: "Skill",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_name",
        sDefaultContent: "",
        aTargets: [0]
    }, {
        sTitle: "Type",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_type",
        sDefaultContent: "",
        aTargets: [1]
    }, {
        sTitle: "min Level",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_level",
        sDefaultContent: "",
        aTargets: [2]
    }, {
        sTitle: "Start",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_start_date",
        sDefaultContent: "",
        aTargets: [3]
    }, {
        sTitle: "End",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_end_date",
        sDefaultContent: "",
        aTargets: [4]
    }, {
        sTitle: "Details",
        bVisible: true,
        bSortable: true,
        mDataProp: "skill_description",
        sDefaultContent: "",
        aTargets: [5]
    }, {
        sTitle: "",
        bVisible: true,
        bSortable: false,
        mDataProp: "action",
        sDefaultContent: "",
        aTargets: [6]
    }, {
        sTitle: "",
        bVisible: false,
        bSortable: false,
        mDataProp: "skill_id",
        sDefaultContent: "",
        aTargets: [7]
    }];
    oTableskills_for_emp = $("#skills_for_emp_" + c).dataTable({
        bDestroy: true,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: b,
        aLengthMenu: [
            [25, 50, 100, -1],
            [25, 50, 100, "Alle"]
        ],
        iDisplayLength: 25,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageNotification,
        aaSorting: [
            [1, "asc"],
            [2, "asc"]
        ],
        bStateSave: false
    });
    $("#skill_start_date, #skill_end_date").datepicker({
        firstDay: 1,
        changeFirstDay: true,
        changeYear: true,
        yearRange: "-10:+10",
        changeMonth: true,
        numberOfMonths: 1,
        showCurrentAtPos: 1,
        dateFormat: "yy-mm-dd"
    });
    $("select[name=slevel]", "#skills_emp_detail_" + c).parent().closest("p").hide();
    $("input[name=skill_description]", "#skills_emp_detail_" + c).parent().closest("p").hide();
    $("input[name=skill_start_date]", "#skills_emp_detail_" + c).parent().closest("p").hide();
    $("input[name=skill_end_date]", "#skills_emp_detail_" + c).parent().closest("p").hide();
    $("select[name=smskills]", "#skills_emp_detail_" + c).change(function() {
        if ($("select[name=smskills] option:selected", "#skills_emp_detail_" + c).val() != "") {
            $("select[name=slevel]", "#skills_emp_detail_" + c).parent().closest("p").show();
            $("input[name=skill_description]", "#skills_emp_detail_" + c).parent().closest("p").show()
        } else {
            $("select[name=slevel]", "#skills_emp_detail_" + c).parent().closest("p").hide();
            $("input[name=skill_description]", "#skills_emp_detail_" + c).parent().closest("p").hide()
        }
        if ($("select[name=smskills] option:selected", "#skills_emp_detail_" + c).text().indexOf("/ certification") > 0) {
            $("input[name=skill_start_date]", "#skills_emp_detail_" + c).parent().closest("p").show();
            $("input[name=skill_end_date]", "#skills_emp_detail_" + c).parent().closest("p").show()
        } else {
            $("input[name=skill_start_date]", "#skills_emp_detail_" + c).parent().closest("p").hide();
            $("input[name=skill_end_date]", "#skills_emp_detail_" + c).parent().closest("p").hide()
        }
    })
}

function del_skill_from_emp(d, b, c) {
    $.post("admin/del_skill_from_emp", {
        pos: d,
        emp_id: b,
        skill_id: c,
        emp_id: b
    }, function(e) {
        $("#skills_emp_detail_" + d).html(e)
    })
}

function AddSkillToEmp(b) {
    skill_id = $("select[name=smskills]", "#skills_emp_detail_" + b).val();
    skill_level = $("select[name=slevel]", "#skills_emp_detail_" + b).val();
    skill_start_date = $("input[name=skill_start_date]", "#skills_emp_detail_" + b).val();
    skill_end_date = $("input[name=skill_end_date]", "#skills_emp_detail_" + b).val();
    skill_description = $("input[name=skill_description]", "#skills_emp_detail_" + b).val();
    emp_id = $("input[name=emp_id]", "#skills_emp_detail_" + b).val();
    $.post("admin/add_skill_to_emp", {
        pos: b,
        skill_id: skill_id,
        skill_level: skill_level,
        skill_start_date: skill_start_date,
        skill_end_date: skill_end_date,
        skill_description: skill_description,
        emp_id: emp_id
    }, function(c) {
        $("#skills_emp_detail_" + b).html(c)
    })
}

function LoadSFROriginePanneList(c, d, b) {
    blockAllUI();
    $("#add_sfr_choix_origine_panne_" + b).load("interventions/load_origine_panne_select_view", {
        inside: "yes",
        addon_container_id: c,
        id_inter: d,
        id_suff: b
    }, function(g, e, f) {
        if (chkRes($("#add_sfr_choix_origine_panne"), e, g)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function init_SFR_Origine_Panne_List(c, f, b) {
    var d = $(c).find("[name=add_sfr_choix_origine]").val();
    var e = $(c).find("[name=add_sfr_resultat_inter]").val();
    if ((d <= 0) || (e <= 0)) {
        d = 0;
        e = 0
    }
    var g = $(c).find("[name=add_sfr_origine_panne_list]");
    g.load("interventions/load_sfr_origine_panne_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        id_origine_detection: d,
        id_corresp_code_retour: e
    }, function(o, h, n) {
        chkRes(g, h, o);
        if ($(g).attr("my_sel") != "") {
            var m = $(g).attr("my_sel");
            get_option_from_value(g, m).attr("selected", "selected")
        }
        UNblockAllUI()
    });
    blockAllUI();
    $("#add_sfr_choix_origine_panne_detail_" + b).load("interventions/load_origine_panne_detail_select_view", {
        inside: "yes",
        addon_container_id: c,
        id_inter: f
    }, function(n, h, m) {
        if (chkRes($("#add_sfr_choix_origine_panne_detail"), h, n)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function init_SFR_Origine_Panne_Detail_List(b) {
    var c = $(b).find("[name=add_sfr_choix_origine]").val();
    var d = $(b).find("[name=add_sfr_origine_panne_list]").val();
    if ((c <= 0) || (d <= 0)) {
        c = 0;
        d = 0
    }
    var e = $(b).find("[name=add_sfr_origine_panne_detail_list]");
    e.load("interventions/load_sfr_origine_panne_detail_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        id_origine_detection: c,
        id_origine_panne: d
    }, function(m, f, h) {
        chkRes(e, f, m);
        if ($(e).attr("my_sel") != "") {
            var g = $(e).attr("my_sel");
            get_option_from_value(e, g).attr("selected", "selected")
        }
        UNblockAllUI()
    })
}

function mark_user_evts_as_read(b) {
    blockAllUI();
    $("#dummy_container").load("startup_messages/mark_user_evts_as_read/" + b, function(e, c, d) {
        if (e == "1") {
            $("#user_evts" + b).css("display", "none")
        }
        UNblockAllUI()
    })
}

function init_Intervention_Add_12(d, c, b) {}

function init_Intervention_Add_13(g, d, c, f, p, h, e, o, b) {
    var q = g + "_add";
    var n = $("#form" + g + "_add");
    var m = "#form" + g + "_logistic";
    n.find("input[type=button].btn_tech_assign").click(function() {
        var v = $(this).parents("#row").attr("data-id_piece");
        var r = $(this).parents("#row").attr("data-id_inter");
        var u = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: v,
                id_inter: r
            }, function() {
                $(m).load("logistics/get_parts_by_inter", {
                    inside: "yes",
                    sub_id: r,
                    partner_id: h
                }, function(C, w, z) {
                    u.remove();
                    UNblockAllUI()
                })
            })
        }
    });
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_type", "#interv_addon_d_list_a");
    LoadSelectFromHiddenStorageDIV(b, "add_ribaltamento_borchie", "#interv_addon_d_list_c");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_vs", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_sim", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_vik", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_irreperibile", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_rifiuta", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_adsl_ok", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_contatto_call", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_lavori_extra", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_apparecchi_non_comptabiliti", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_infrastruttura_ko", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_disdetta", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_chiarimenti_commerciali", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_tipo_primaria", "#vodafone_tipo_presa_primaria");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_tipo_impianto", "#vodafone_tipo_impianto");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_posizionamento", "#vodafone_posizionamento");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_vik_non_presente", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_mancanza_vik", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_sim_errata", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_sim_non_attiva", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_vik_guasta", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_guasto_sim", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_home_zone_errata", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_sim_non_associata", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_copertura_radiomobile", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_vik_non_rilevata", "#interv_addon_d_list_b");
    ClientDetails_Common_set_On_Change($(b));
    DisableAllForParthers($("#" + o));
    tabs_delimiter_height()
}

function secToTime(d) {
    var b = Math.floor(d / 3600);
    var c = Math.floor((d - b * 3600) / 60);
    var e = d - b * 3600 - c * 60;
    if (b < 10) {
        b = "0" + b
    }
    if (c < 10) {
        c = "0" + c
    }
    if (e < 10) {
        e = "0" + e
    }
    return b + ":" + c + ":" + e
}

function hide_map() {
    $("#legende").html("");
    $("#logerrors").html("");
    $("#map").html("")
}

function v3location(d, b) {
    var e = new Array();
    e = d.split(",");
    var c = {
        location: new google.maps.LatLng(e[0], e[1])
    };
    return c
}

function computeTotalDistance(o, m, f) {
    var n = 0;
    var c = 0;
    var b = o.routes[0];
    var g = $(m).attr("titles");
    var h = new Array();
    h = g.split(";");
    html_legende = "<span style='text-align:center !important;' class=\"client_details_buttons\" href=\"#\" onclick='javacript:hide_map()'>close Map</span><br><br><table border=1 cellpadding=5>";
    html_legende += "<tr><th></th><th>Description</th><th>Km</th><th>Time</th></tr>";
    html_legende += "<tr><td>" + String.fromCharCode(65 + 0) + "</td><td>" + h[0] + "</td><td></td><td></td></tr>";
    for (var d = 0; d < b.legs.length; d++) {
        n += b.legs[d].distance.value;
        c += b.legs[d].duration.value;
        html_legende += "<tr><td>" + String.fromCharCode(65 + d + 1) + "</td><td>" + h[d + 1] + "</td><td>" + Math.round(b.legs[d].distance.value / 1000) + "</td><td>" + secToTime(b.legs[d].duration.value) + "</td></tr>"
    }
    n = Math.round(n / 1000);
    var e = "km " + n + " | temps " + secToTime(c);
    $(m).text(e);
    html_legende += "</table>";
    $("#legende").html(html_legende);
    if (f == 0) {
        hide_map()
    }
    $("#dummy_container").load("planning/save_trajet", {
        inside: "yes",
        id_employe: $(m).attr("id_emp"),
        planning_date: Planning_date,
        planning_age_id: Planning_age_id,
        address: $(m).attr("address"),
        temps: secToTime(c),
        km: n
    }, function(r, p, q) {})
}

function calc_trajet_v3(m, c, d) {
    var n = $(m).attr("address");
    var u = new Array();
    var h = new Array();
    u = n.split(";");
    var e = $(m).attr("titles");
    var g = new Array();
    g = e.split(";");
    for (var c = 1, f = u.length - 1; c < f; c++) {
        var p = v3location(u[c], g[c]);
        h.push(p)
    }
    var o = new google.maps.DirectionsService();
    var q = new google.maps.DirectionsRenderer();
    var r = {
        zoom: 13,
        mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    map = new google.maps.Map(document.getElementById("map"), r);
    q.setMap(map);
    q.addListener("directions_changed", function() {
        computeTotalDistance(q.getDirections(), m)
    });
    var b = {
        origin: u[0],
        destination: u[0],
        waypoints: h,
        optimizeWaypoints: false,
        travelMode: google.maps.TravelMode.DRIVING
    };
    o.route(b, function(w, v) {
        if (v == google.maps.DirectionsStatus.OK) {
            q.setDirections(w);
            console.log(v)
        } else {
            alert("Could not display directions due to: " + v)
        }
    })
}

function calc_trajet_from_planning(g, f, m) {
    console.log(g);
    console.log(f);
    console.log(m);
    calc_trajet_v3(g, f, m);
    return;
    var d = new Array();
    var b = $(g).attr("address");
    var c = parseInt($(g).attr("nb_forfait"));
    var n = new Array();
    n = b.split(";");
    try {
        map = new GMap2(document.getElementById("map"))
    } catch (h) {
        return false
    }
    d[f] = new GDirections(map);
    if (n.length == 0) {} else {
        GEvent.addListener(d[f], "load", function() {
            $("#logerrors").text("");
            var p = d[f].getDuration().seconds;
            var o = d[f].getDistance().meters / 1000;
            var e = "km " + o + " | ";
            e += "temps " + secToTime(p);
            $(g).text(e);
            var r = $(g).attr("titles");
            var q = new Array();
            q = r.split(";");
            html_legende = "<table>";
            for (j = 0; j < q.length; j++) {
                html_legende += "<tr><td>" + String.fromCharCode(65 + j) + "</td><td>" + q[j] + "</td></tr>"
            }
            html_legende += "<span style='text-align:center !important;' class=\"client_details_buttons\" href=\"#\" onclick='javacript:hide_map()'>close Map</span></table>";
            $("#legende").html(html_legende);
            if (m == 0) {
                hide_map()
            }
            $("#dummy_container").load("planning/save_trajet", {
                inside: "yes",
                id_employe: $(g).attr("id_emp"),
                planning_date: Planning_date,
                planning_age_id: Planning_age_id,
                address: $(g).attr("address"),
                temps: secToTime(p),
                km: o
            }, function(w, u, v) {})
        });
        GEvent.addListener(d[f], "error", function() {
            var e = "Erreur : ";
            if (d[f].getStatus().code == 602) {
                e += "Error code: " + d[f].getStatus().code
            } else {
                if (d[f].getStatus().code == 500) {
                    e += "Error code: " + d[f].getStatus().code
                } else {
                    if (d[f].getStatus().code == G_GEO_MISSING_QUERY) {
                        e += "Error code: " + d[f].getStatus().code
                    } else {
                        if (d[f].getStatus().code == G_GEO_BAD_KEY) {
                            e += "Error code: " + d[f].getStatus().code
                        } else {
                            if (d[f].getStatus().code == G_GEO_BAD_REQUEST) {
                                e += "Error code: " + d[f].getStatus().code
                            } else {
                                e = "Erreur inconnu" + d[f].getStatus().code
                            }
                        }
                    }
                }
            }
            $("#logerrors").text(e);
            $("#logerrors").css("background-color", "#FF0000");
            if (m == 0) {
                hide_map()
            }
        });
        d[f].loadFromWaypoints(n, {
            locale: "fr"
        });
        $(g).text("loading")
    }
}

function init_pilotage_main_view() {
    $("#pilotage_selection_form_container").find("[name=client_partner]").append($("#partners_list").html());
    $("#pilotage_date").find("[name=int_src_from_date]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#pilotage_date").find("[name=int_src_to_date]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    SetSelectedByOptionAndEnable($("#pilotage_date").find("[name=get_zip]"), "", true);
    SetSelectedByOptionAndEnable($("#pilotage_date").find("[name=int_src_from_date]"), "", true);
    SetSelectedByOptionAndEnable($("#pilotage_date").find("[name=int_src_to_date]"), "", true);
    $("#pilotage_date").find("[name=get_zip]").bind("click", pilotage_get_attachements_by_partner_and_dates)
}

function init_load_timeSlot_form_view() {
    $("#disponibilities_selection_form").find("[name=partner]").append($("#partners_list").html())
}

function pilotage_get_attachements_by_partner_and_dates() {
    var c = $("#pilotage_date").find("[name=int_src_from_date]").val();
    var b = $("#pilotage_date").find("[name=int_src_to_date]").val();
    var d = $("#pilotage_selection_form_container").find("select[name=client_partner]");
    var f = $(d).children("option:eq(" + $(d).get(0).selectedIndex + ")").attr("value");
    var e = $(d).children("option:eq(" + $(d).get(0).selectedIndex + ")").text();
    e = e.split(" ");
    if (f == "") {
        $.MyDLG("Veuillez selectionner un partenaire", dlg_button_ok, "", function() {
            my_LastStepResult = -1;
            UNblockAllUI()
        });
        return
    }
    if (c == "" || b == "") {
        $.MyDLG("Veuillez saisir une date de debut et une date de fin", dlg_button_ok, "", function() {
            my_LastStepResult = -1;
            UNblockAllUI()
        });
        return
    }
    window.open("pilotage/get_attachment_list/" + f + "/" + c + "/" + b + "/" + e[0] + "/", "attachments", "toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=0,resizable=1,history=0,width=780,height=570", false)
}

function DeleteSogetrelPrestation(c, f, e, h, q, m, g, p, b, d, o) {
    var n = "#form" + d + "_add";
    $(n).load("interventions/delete_sogetrel_prestation", {
        id_prestation: c,
        client_id: f,
        sub_id: e,
        arch: h,
        additional_id: q,
        partner_id: m,
        tabindex_cnt: g,
        form_id: p,
        addon_container_id: b,
        IDs_suff: d
    }, function(v, r, u) {
        chkRes($(n), r, v);
        UNblockAllUI()
    })
}

function init_Intervention_Add_14(h, f, n, r, o, m, q, c, e, b) {
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_nat_service_tel", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_nat_service_web", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_nat_service_tv", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_nat_multi_tv", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_nat_type_echec", "#sogetrel_code_echec");
    LoadSelectFromHiddenStorageDIV(c, "add_sfr_be_non_conforme", "#interv_addon_d_list_b");
    var d = "#" + b;
    blockAllUI();
    var g = $("#form" + b).find("[name=sogetrel_select_prestation]");
    g.load("interventions/common_sogetrel_prestation/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        partner_id: o
    }, function(w, u, v) {
        chkRes(g, u, w);
        UNblockAllUI()
    });
    var p = "#form" + e + "_add";
    $("#form" + b).submit(function(v) {
        v.stopImmediatePropagation();
        var u = {
            target: p,
            url: "interventions/save_sogetrel_prestation",
            type: "post",
            beforeSubmit: function(D, z, w) {
                var C = z[0];
                if (C.sogetrel_prestation_quantites.value == "" || C.sogetrel_prestation_quantites.value == "0") {
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(z, w) {
                UNblockAllUI()
            }
        };
        $("#form" + b).ajaxSubmit(u);
        return false
    })
}

function init_Intervention_Add_114(g, f, m, q, n, h, p, c, e, b) {
    var d = "#" + b;
    UNblockAllUI();
    var o = "#form" + e + "_add"
}

function init_Intervention_Add_115(g, f, m, q, n, h, p, c, e, b) {
    var d = "#" + b;
    UNblockAllUI();
    var o = "#form" + e + "_add"
}

function init_Intervention_Add_116(c, g, h, e, b) {
    var d = "#" + b;
    var n = new Date(SRVtime * 1000);
    LoadSelectFromHiddenStorage(g, "fujitsu_sncf_reso", "#fujitsu_sncf_reso");
    var f = $("#form" + g).find('select[name="fujitsu_sncf_reso"]');
    if ($(f).attr("my_sel") != "") {
        var m = $(f).attr("my_sel");
        $(f).children("option[value=" + m + "]").attr("selected", "selected")
    }
    LoadSelectFromHiddenStorage(g, "fujitsu_sncf_factu", "#fujitsu_sncf_factu");
    var f = $("#form" + g).find('select[name="fujitsu_sncf_factu"]');
    if ($(f).attr("my_sel") != "") {
        var m = $(f).attr("my_sel");
        $(f).children("option[value=" + m + "]").attr("selected", "selected")
    }
}

function init_Intervention_Add_117(d, e, h, c, g) {
    var f = "#" + g;
    var b = new Date(SRVtime * 1000)
}

function init_Intervention_Add_118(g, d, c, f, p, h, e, o, b) {
    var q = g + "_add";
    var n = $("#form" + g + "_add");
    var m = "#form" + g + "_logistic";
    n.find("input[type=button].btn_tech_assign").click(function() {
        var v = $(this).parents("#row").attr("data-id_piece");
        var r = $(this).parents("#row").attr("data-id_inter");
        var u = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: v,
                id_inter: r
            }, function() {
                $(m).load("logistics/get_parts_by_inter", {
                    inside: "yes",
                    sub_id: r,
                    partner_id: h
                }, function(C, w, z) {
                    u.remove();
                    UNblockAllUI()
                })
            })
        }
    })
}

function init_Intervention_Add_119(g, f, m, q, n, h, p, c, e, b) {
    var d = "#" + b;
    UNblockAllUI();
    var o = "#form" + e + "_add"
}

function init_Intervention_Add_120(g, f, m, q, n, h, p, c, e, b) {
    var d = "#" + b;
    UNblockAllUI();
    var o = "#form" + e + "_add"
}

function init_Intervention_Add_125(g, f, m, q, n, h, p, c, e, b) {
    var d = "#" + b;
    UNblockAllUI();
    var o = "#form" + e + "_add"
}

function init_Intervention_Add_126(g, f, m, q, n, h, p, c, e, b) {
    var d = "#" + b;
    UNblockAllUI();
    var o = "#form" + e + "_add"
}

function init_Intervention_Add_130(g, f, m, q, n, h, p, c, e, b) {
    var d = "#" + b;
    UNblockAllUI();
    var o = "#form" + e + "_add"
}

function init_Intervention_Add_127(g, f, m, q, n, h, p, c, e, b) {
    var d = "#" + b;
    UNblockAllUI();
    var o = "#form" + e + "_add"
}

function init_conduite_activite_main_view() {
    $("#left_side_tabs_container_conduite_activite").resizable({
        stop: function(c, b) {
            tabs_delimiter_height()
        },
        transparent: false,
        autoHide: false,
        helper: "proxy",
        minWidth: 210,
        maxWidth: 800,
        handles: "e"
    })
}

function switch_div(c, b) {
    div_to_hide = $("#right_top_level_tabs_" + b).attr("my_sel");
    $("#" + div_to_hide).hide();
    $("#right_top_level_tabs_" + b).attr("my_sel", $(c).attr("div_id"));
    $("#" + $(c).attr("div_id")).show()
}

function load_anomalie_details(c, g, e) {
    var f = "#client_" + g + "_anomalie";
    var h = "#client_" + g + "_anomalie";
    var o = "#client_" + g + "_anomalie_" + e + "nav";
    $(f).load("anomalies/get_anomalie_result", {
        inside: "yes",
        client_id: g,
        anomalie_id: e
    }, function(r, p, q) {
        if (chkRes($(f), p, r)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    });
    var d = $(c).parent().parents("div");
    var n = d.attr("selected_div");
    if (n != h) {
        var m = n + "nav";
        var b = d.get(0);
        $(n).addClass("ui-tabs-hide");
        $(h).removeClass("ui-tabs-hide");
        $(m).removeClass("selected");
        $(o).addClass("selected");
        d.attr("selected_div", h);
        tabs_delimiter_height()
    }
    $("div.client_anomalies", "#client_id_" + g).removeClass("selected");
    $(o).addClass("selected")
}

function init_Anomalie_Details_View(f, d, c) {
    var e = "#client_" + f + "_anomalie";
    var b = "client_" + f + "_anomalie_" + d;
    LoadSelectFromHiddenStorage(b, "anomalie_code", "#anomalies_code");
    LoadSelectFromHiddenStorage(b, "anomalie_statut", "#anomalies_statut");
    $("#form" + c).submit(function(h) {
        h.stopImmediatePropagation();
        var g = {
            target: e,
            url: "anomalies/save_anomalies_details",
            type: "post",
            beforeSubmit: function(p, n, m) {
                var o = n[0];
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(n, m) {
                tabs_delimiter_height();
                UNblockAllUI();
                $("#client_id_" + f).html("");
                $("#client_id_" + f).load("clients/get_client_container", {
                    inside: "yes",
                    client_id: f,
                    intervention_id: -1,
                    wcall_id: -1
                }, function(q, o, p) {
                    chkRes($("#client_id_" + f), o, q);
                    UNblockAllUI()
                })
            }
        };
        $("#form" + c).ajaxSubmit(g);
        return false
    })
}

function init_Anomalie_Creation_View(f, c, e) {
    var d = "#client_" + f + "_anomalie";
    var b = "client_" + f + "_anomalie_new";
    LoadSelectFromHiddenStorage(b, "anomalie_code", "#anomalies_code");
    LoadSelectFromHiddenStorage(b, "anomalie_statut", "#anomalies_statut");
    $("#form" + c).submit(function(h) {
        h.stopImmediatePropagation();
        var g = {
            target: d,
            url: "anomalies/save_new_anomalie",
            type: "post",
            beforeSubmit: function(p, n, m) {
                var o = n[0];
                if (o.anomalie_code.value == "" || o.anomalie_code.value < 1) {
                    ClientDetailsReportFormError(n, d);
                    return false
                }
                if (o.anomalie_statut.value == "" || o.anomalie_statut.value < 1) {
                    ClientDetailsReportFormError(n, d);
                    return false
                }
                if (o.anomalie_notes_creation.value == "") {
                    ClientDetailsReportFormError(n, d);
                    return false
                }
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(n, m) {
                tabs_delimiter_height();
                UNblockAllUI();
                $("#client_id_" + f).html("");
                $("#client_id_" + f).load("clients/get_client_container", {
                    inside: "yes",
                    client_id: f,
                    intervention_id: -1,
                    wcall_id: -1
                }, function(q, o, p) {
                    chkRes($("#client_id_" + f), o, q);
                    UNblockAllUI()
                })
            }
        };
        $("#form" + c).ajaxSubmit(g);
        return false
    })
}

function client_new_anomalie(h, f) {
    var g = "#client_" + f + "_anomalie";
    var e = -99;
    var c = $(h).parent().parent().find(".client_interventions_list").attr("nbInters");
    var m = $(h).parent().parents("div").attr("selected_div").match(/#client_([^)]*)_intervention_([^)]*)/);
    if (m) {
        if (m[2] == "NEW") {
            e = -1
        } else {
            e = m[2]
        }
    }
    if (e < -1 && c != "0") {
        $.MyDLG(select_intervention_before, dlg_button_ok, "", function() {}, function() {});
        return false
    } else {
        $(g).load("anomalies/load_create_anomalie", {
            inside: "yes",
            client_id: f,
            inter_id: e
        }, function(r, p, q) {
            if (chkRes($(g), p, r)) {}
            tabs_delimiter_height()
        });
        var d = $(h).parent().parents("div");
        var o = d.attr("selected_div");
        if (o != g) {
            var n = o + "nav";
            var b = d.get(0);
            $(o).addClass("ui-tabs-hide");
            $(g).removeClass("ui-tabs-hide");
            d.attr("selected_div", g);
            tabs_delimiter_height()
        }
    }
}

function init_Intervention_Add_16(b) {
    var c = b + "_add";
    LoadSelectFromHiddenStorage(c, "add_easydentic_couv_gprs", "#interv_ok_nok");
    LoadSelectFromHiddenStorage(c, "add_easydentic_alarm_gprs", "#interv_ok_nok");
    LoadSelectFromHiddenStorage(c, "add_easydentic_defibrilateur", "#interv_ok_nok");
    LoadSelectFromHiddenStorage(c, "add_easydentic_defaut_tech", "#interv_ok_nok");
    $("#form" + b + "_add").find("[name=add_easydentic_date_doc]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form" + b + "_add").find("[name=add_easydentic_date_elec]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        dateFormat: "yy-mm-dd",
        duration: ""
    })
}

function init_Intervention_Add_17(b) {
    var c = b + "_add";
    LoadSelectFromHiddenStorage(c, "add_hpge_facturation_type", "#hpge_ticket")
}

function init_Intervention_Add_18(c, e) {
    var d = c + "_add";
    var b = "#form" + c + "_add";
    LoadSelectFromHiddenStorage(d, "add_sfr_gp_opac", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorage(d, "add_sfr_gp_diag_hotline", "#sfr_gp_diag_hotline");
    LoadSelectFromHiddenStorage(d, "add_sfr_gp_localisation", "#sfr_gp_localisation");
    LoadSelectFromHiddenStorage(d, "add_sfr_gp_causes", "#sfr_gp_causes");
    LoadSelectFromHiddenStorage(d, "add_sfr_gp_diag_precis", "#sfr_gp_diag_precis");
    LoadSelectFromHiddenStorage(d, "add_sfr_gp_resolution", "#sfr_gp_resolution");
    LoadSelectFromHiddenStorage(d, "sfr_gp_select_equipement", "#sfr_gp_liste_equipements");
    $("#form" + c + "_add").find("[name=add_sfr_gp_heure_arrivee_d]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form" + c + "_add").find("[name=add_sfr_gp_heure_appel_hl_d]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form" + c + "_add").find("[name=add_sfr_gp_heure_arrivee_h]").timepicker({});
    $("#form" + c + "_add").find("[name=add_sfr_gp_heure_appel_hl_h]").timepicker({});
    $("#form" + c + "_add").find("[name=add_sfr_gp_heure_depart_h]").timepicker({});
    $("#form" + e).submit(function(g) {
        g.stopImmediatePropagation();
        var f = {
            target: b,
            url: "interventions/save_sfr_gp_equipement",
            type: "post",
            beforeSubmit: function(o, m, h) {
                var n = m[0];
                if (n.sfr_gp_equipement_quantites.value == "" || n.sfr_gp_equipement_quantites.value == "0") {
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(m, h) {
                UNblockAllUI()
            }
        };
        $("#form" + e).ajaxSubmit(f);
        return false
    })
}

function DeleteSFRGPEquipement(d, f, e, h, q, m, g, p, b, c, o) {
    var n = "#form" + c + "_add";
    $(n).load("interventions/delete_sfr_gp_equipement", {
        id_equipement: d,
        client_id: f,
        sub_id: e,
        arch: h,
        additional_id: q,
        partner_id: m,
        tabindex_cnt: g,
        form_id: p,
        addon_container_id: b,
        IDs_suff: c
    }, function(v, r, u) {
        chkRes($(n), r, v);
        UNblockAllUI()
    })
}

function CreateUserFromEmployeeView() {
    var b = $("#formemployees_management_search_result").find("[name=managing_employee_lastname]").val();
    var d = $("#formemployees_management_search_result").find("[name=managing_employee_firstname]").val();
    var c = $("#formemployees_management_search_result").find("[name=int_src_employee]").val();
    blockAllUI();
    $("#my_popup_form").load("employees/get_quick_create_user_form", {
        inside: "yes",
        prenom_tech: b,
        nom_tech: d,
        id_employe: c
    }, function(g, e, f) {
        if (chkRes($("#my_popup_form"), e, g)) {}
        UNblockAllUI();
        var m = 200;
        var h = 200;
        show_my_popupform(m, h, false)
    })
}

function init_quick_create_user_popup() {
    var b = $("#form_quick_create_user_popup").find("[name=quick_user_groupname]");
    b.load("admin/get_quick_user_groupname_list/" + default_language + "/0/0/0/0/0/0/dummy.html", function(e, c, d) {
        chkRes(b, c, e)
    });
    $("#form_quick_create_user_popup").submit(function(d) {
        d.stopImmediatePropagation();
        var c = {
            target: "#dummy_container",
            url: "employees/create_quick_user",
            type: "post",
            beforeSubmit: function(g, f, e) {
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(f, e) {
                UNblockAllUI();
                LoadEmployeeResult()
            }
        };
        $("#form_quick_create_user_popup").ajaxSubmit(c);
        return false
    })
}

function clear_me(b) {
    var c = $(b).attr("value");
    if ((c == message_orange_ai_indice_default) || (c == message_orange_ai_investigation_default) || (c == message_orange_ai_information_default) || (c == message_orange_ai_info_default)) {
        $(b).removeAttr("value")
    }
}

function init_Intervention_Add_19(h, f, n, v, o, m, r, c, d, g, u, b, q) {
    var p = "#form" + g;
    var e = "#form" + u;
    for (i = 1; i <= b; i++) {
        LoadSelectFromHiddenStorage(g, "afone_logistique_piece_do_" + i, "#afone_logistique_etat_piece_do");
        LoadSelectFromHiddenStorage(g, "afone_logistique_anomalie_do_" + i, "#afone_logistique_anomalie")
    }
    for (j = 1; j <= q; j++) {
        LoadSelectFromHiddenStorage(u, "afone_logistique_piece_pu_" + j, "#afone_logistique_etat_piece_pu");
        LoadSelectFromHiddenStorage(u, "afone_logistique_anomalie_pu_" + j, "#afone_logistique_anomalie")
    }
}

function UpdateAfoneLogistique(o, d, c, h, n, g, q) {
    var u = "#" + c;
    var p = "#form" + c + "_add";
    var m = "#form" + h;
    var r = $(m).find("[name=afone_logistique_piece_" + n + "_" + d + "]").val();
    var f = $(m).find("[name=afone_logistique_anomalie_" + n + "_" + d + "]").val();
    var b = $(m).find("[name=afone_logistique_commentaire_" + n + "_" + d + "]").val();
    var e = 1;
    if ((f > 0) && (b == "")) {
        e = 0;
        $.MyDLG(message_afone_logistique_anomalie_missing, dlg_button_ok, "", function() {}, function() {});
        return false
    }
    if (e == 1) {
        $("#dummy_container").load("interventions/update_afone_piece", {
            inside: "yes",
            idLogistique: o,
            etatPiece: r,
            anomaliePiece: f,
            commentaire: b
        }, function(z, v, w) {
            if (chkRes($("#dummy_container"), v, z)) {}
            UNblockAllUI()
        });
        RefreshInterventionIfItsOpened(g, q)
    }
}

function UpdateCircuitDetails(e, d, h, g) {
    var f = "#complement_releve_erdf_tab";
    var c = $(f).find("[name=circuit_nb_compteur_done_" + d + "]").val();
    var b = $(f).find("[name=circuit_temps_done_" + d + "]").val();
    blockAllUI();
    $("#dummy_container").load("interventions/update_releve_erdf_circuit", {
        inside: "yes",
        id_circuit: e,
        cpt_done: c,
        temps_done: b,
        inter_id: g
    }, function(o, m, n) {
        if (chkRes($("#dummy_container"), m, o)) {}
        UNblockAllUI()
    });
    RefreshInterventionIfItsOpened(h, g)
}

function LoadNewVoltalisModCreation(c, b) {
    blockAllUI();
    $("#my_popup_form").load("interventions/load_Voltalis_Mod_Creation_View", {
        inside: "yes",
        client_id: c,
        sub_id: b
    }, function(d, m, e) {
        if (chkRes($("#my_popup_form"), m, d)) {}
        UNblockAllUI();
        var n = 710;
        var p = 360;
        var g = 18;
        var f = 18;
        var h = $(window).width();
        if (h > n) {
            g = Math.round(h / 2 - n / 2 - 9)
        }
        var o = $(window).height();
        if (o > p) {
            f = Math.round(o / 2 - p / 2 + 1000)
        }
        show_my_popupform(g, f, false)
    })
}

function init_New_Voltalis_Mod_Creation_View(b, c) {
    DIVc = "#formnew_voltalis_mod_creation";
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_mod_type", "#voltalis_mod_type");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_ti_racc", "#voltalis_tic_racc");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_p1_m", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_p1_r", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_p2_m", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_p2_r", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_p3_m", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_p3_r", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_p4_m", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_p4_r", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_p5_m", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage("new_voltalis_mod_creation", "new_voltalis_p5_r", "#voltalis_ok_nok");
    $("#formnew_voltalis_mod_creation").submit(function(f) {
        f.stopImmediatePropagation();
        var d = {
            target: "#dummy_container",
            url: "interventions/create_voltalis_mod",
            type: "post",
            beforeSubmit: function(m, g, e) {
                var h = g[0];
                if ((h.new_voltalis_mod_type.value == "") || (h.new_voltalis_ti_racc.value == "") || (h.new_voltalis_ns.value == "")) {
                    confirm(message_you_must_fill_fields);
                    return false
                }
                if (h.new_voltalis_ns.value != "") {
                    motif = "[A-Za-z0-9]{3}-[A-Za-z0-9]{4}-[A-Za-z0-9]{6}";
                    Expression = new RegExp(motif);
                    if (!Expression.test(h.new_voltalis_ns.value)) {
                        confirm(message_voltalis_compulsory_pil_ns_format);
                        return false
                    }
                }
                if (h.new_voltalis_p1_w.value != "") {
                    motif = "[0-9]{1,4}";
                    Expression = new RegExp(motif);
                    if (!Expression.test(h.new_voltalis_p1_w.value)) {
                        confirm(message_voltalis_compulsory_l1);
                        return false
                    }
                    if ((h.new_voltalis_p1_m.value == "") || (h.new_voltalis_p1_r.value == "")) {
                        confirm(message_voltalis_compulsory_l1);
                        return false
                    }
                } else {
                    confirm(message_voltalis_compulsory_l1);
                    return false
                }
                if (h.new_voltalis_p2_w.value != "") {
                    motif = "[0-9]{1,4}";
                    Expression = new RegExp(motif);
                    if (!Expression.test(h.new_voltalis_p2_w.value)) {
                        confirm(message_voltalis_compulsory_l2);
                        return false
                    }
                    if ((h.new_voltalis_p2_m.value == "") || (h.new_voltalis_p2_r.value == "")) {
                        confirm(message_voltalis_compulsory_l2);
                        return false
                    }
                }
                if (h.new_voltalis_p3_w.value != "") {
                    motif = "[0-9]{1,4}";
                    Expression = new RegExp(motif);
                    if (!Expression.test(h.new_voltalis_p3_w.value)) {
                        confirm(message_voltalis_compulsory_l3);
                        return false
                    }
                    if ((h.new_voltalis_p3_m.value == "") || (h.new_voltalis_p3_r.value == "")) {
                        confirm(message_voltalis_compulsory_l3);
                        return false
                    }
                }
                if (h.new_voltalis_p4_w.value != "") {
                    motif = "[0-9]{1,4}";
                    Expression = new RegExp(motif);
                    if (!Expression.test(h.new_voltalis_p4_w.value)) {
                        confirm(message_voltalis_compulsory_l4);
                        return false
                    }
                    if ((h.new_voltalis_p4_m.value == "") || (h.new_voltalis_p4_r.value == "")) {
                        confirm(message_voltalis_compulsory_l4);
                        return false
                    }
                }
                if (h.new_voltalis_p5_w.value != "") {
                    motif = "[0-9]{1,4}";
                    Expression = new RegExp(motif);
                    if (!Expression.test(h.new_voltalis_p5_w.value)) {
                        confirm(message_voltalis_compulsory_l5);
                        return false
                    }
                    if ((h.new_voltalis_p5_m.value == "") || (h.new_voltalis_p5_r.value == "")) {
                        confirm(message_voltalis_compulsory_l5);
                        return false
                    }
                }
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(g, e) {
                UNblockAllUI();
                RefreshInterventionIfItsOpened(c, b)
            }
        };
        $("#formnew_voltalis_mod_creation").ajaxSubmit(d);
        return false
    })
}

function init_Intervention_Add_21(c) {
    var d = c + "_add";
    var b = "#form" + c + "_add";
    LoadSelectFromHiddenStorage(d, "add_voltalis_test_gprs", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage(d, "add_voltalis_test_cpl", "#voltalis_ok_nok");
    LoadSelectFromHiddenStorage(d, "add_voltalis_pilote_installe", "#voltalis_tic_racc");
    LoadSelectFromHiddenStorage(d, "add_voltalis_facture_edf", "#voltalis_tic_racc");
    LoadSelectFromHiddenStorage(d, "add_voltalis_puiss_sct", "#voltalis_puiss_list")
}

function init_Intervention_Add_22(h, d, c, g, r, m, f, q, b) {
    var u = h + "_add";
    var o = $("#form" + h + "_add");
    var n = "#form" + h + "_logistic";
    o.find("input[type=button].btn_tech_assign").click(function() {
        var z = $(this).parents("#row").attr("data-id_piece");
        var v = $(this).parents("#row").attr("data-id_inter");
        var w = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: z,
                id_inter: v
            }, function() {
                $(n).load("logistics/get_parts_by_inter", {
                    inside: "yes",
                    sub_id: v,
                    partner_id: m
                }, function(E, C, D) {
                    w.remove();
                    UNblockAllUI()
                })
            })
        }
    });
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_type", "#interv_addon_d_list_a");
    LoadSelectFromHiddenStorageDIV(b, "add_ribaltamento_borchie", "#interv_addon_d_list_c");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_borchia", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_portante", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_problemi", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_vs", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_sim", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_vik", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_irreperibile", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_rifiuta", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_adsl_ok", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_tgu_errata", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_contatto_call", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_no_dac", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_autenticazione_dati", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_autenticazione_voce", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_autenticazione_servizi", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_lavori_extra", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_apparecchi_non_comptabiliti", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_infrastruttura_ko", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_disdetta", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_chiarimenti_commerciali", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_vik_non_presente", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_mancanza_vik", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_sim_errata", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_sim_non_attiva", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_vik_guasta", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_guasto_sim", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_home_zone_errata", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_sim_non_associata", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_copertura_radiomobile", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "add_vodafone_vik_non_rilevata", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorage(h, "esito_gestione", "#esito_gestione");
    var e = $("#form" + h).find('select[name="esito_gestione"]');
    if ($(e).attr("my_sel") != "") {
        var p = $(e).attr("my_sel");
        $(e).children("option[value=" + p + "]").attr("selected", "selected")
    }
    ClientDetails_Common_set_On_Change($(b));
    DisableAllForParthers($("#" + q));
    tabs_delimiter_height()
}

function init_Intervention_Add_106(h, d, c, g, r, m, f, q, b) {
    var u = h + "_add";
    var o = $("#form" + h + "_add");
    var n = "#form" + h + "_logistic";
    o.find("input[type=button].btn_tech_assign").click(function() {
        var z = $(this).parents("#row").attr("data-id_piece");
        var v = $(this).parents("#row").attr("data-id_inter");
        var w = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: z,
                id_inter: v
            }, function() {
                $(n).load("logistics/get_parts_by_inter", {
                    inside: "yes",
                    sub_id: v,
                    partner_id: m
                }, function(E, C, D) {
                    w.remove();
                    UNblockAllUI()
                })
            })
        }
    });
    LoadSelectFromHiddenStorage(h, "stato_npd", "#stato_npd");
    var e = $("#form" + h).find('select[name="stato_npd"]');
    if ($(e).attr("my_sel") != "") {
        var p = $(e).attr("my_sel");
        $(e).children("option[value=" + p + "]").attr("selected", "selected")
    }
    LoadSelectFromHiddenStorage(h, "dettaglio_npd_ko", "#dettaglio_npd_ko");
    var e = $("#form" + h).find('select[name="dettaglio_npd_ko"]');
    if ($(e).attr("my_sel") != "") {
        var p = $(e).attr("my_sel");
        $(e).children("option[value=" + p + "]").attr("selected", "selected")
    }
    LoadSelectFromHiddenStorage(h, "causale_ko", "#causale_ko");
    var e = $("#form" + h).find('select[name="causale_ko"]');
    if ($(e).attr("my_sel") != "") {
        var p = $(e).attr("my_sel");
        $(e).children("option[value=" + p + "]").attr("selected", "selected")
    }
    LoadSelectFromHiddenStorageDIV(b, "ribaltamento", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "collaudo", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "np_funzionante", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "np_impianto_1_funzionante", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "np_impianto_2_funzionante", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "iviata_mail", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "risposta_mail", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "esito_tim", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "esito_tim2", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "esito_vodafone_mobile", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "esito_vodafone_mobile2", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "esito_wind_mobile", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "esito_wind_mobile2", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "esito_h3g", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "esito_h3g2", "#interv_addon_d_list_b");
    LoadSelectFromHiddenStorageDIV(b, "sospensione_congruente", "#interv_addon_d_list_b");
    var e = $("#form" + h).find('select[name="dati"]');
    if ($(e).attr("my_sel") != "") {
        var p = $(e).attr("my_sel");
        $(e).children('option[value="' + p + '"]').attr("selected", "selected")
    }
    var e = $("#form" + h).find('select[name="dettaglio_fax"]');
    if ($(e).attr("my_sel") != "") {
        var p = $(e).attr("my_sel");
        $(e).children('option[value="' + p + '"]').attr("selected", "selected")
    }
    var e = $("#form" + h).find('select[name="dettaglio_pos"]');
    if ($(e).attr("my_sel") != "") {
        var p = $(e).attr("my_sel");
        $(e).children('option[value="' + p + '"]').attr("selected", "selected")
    }
    var e = $("#form" + h).find('select[name="dettaglio_wifi"]');
    if ($(e).attr("my_sel") != "") {
        var p = $(e).attr("my_sel");
        $(e).children('option[value="' + p + '"]').attr("selected", "selected")
    }
    ClientDetails_Common_set_On_Change($(b));
    DisableAllForParthers($("#" + q));
    tabs_delimiter_height()
}

function init_Intervention_Add_107(g, d, c, f, p, h, e, o, b) {
    var q = g + "_add";
    var n = $("#form" + g + "_add");
    var m = "#form" + g + "_logistic";
    n.find("input[type=button].btn_tech_assign").click(function() {
        var v = $(this).parents("#row").attr("data-id_piece");
        var r = $(this).parents("#row").attr("data-id_inter");
        var u = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: v,
                id_inter: r
            }, function() {
                $(m).load("logistics/get_parts_by_inter", {
                    inside: "yes",
                    sub_id: r,
                    partner_id: h
                }, function(C, w, z) {
                    u.remove();
                    UNblockAllUI()
                })
            })
        }
    });
    ClientDetails_Common_set_On_Change($(b));
    DisableAllForParthers($("#" + o));
    tabs_delimiter_height()
}

function init_Intervention_Add_28(h, e, d, g, u, m, f, r, b) {
    var v = h + "_add";
    var o = $("#form" + h + "_add");
    var n = "#form" + h + "_logistic";
    o.find("input[type=button].btn_tech_assign").click(function() {
        var C = $(this).parents("#row").attr("data-id_piece");
        var w = $(this).parents("#row").attr("data-id_inter");
        var z = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: C,
                id_inter: w
            }, function() {
                $(n).load("logistics/get_parts_by_inter", {
                    inside: "yes",
                    sub_id: w,
                    partner_id: m
                }, function(G, D, E) {
                    z.remove();
                    UNblockAllUI()
                })
            })
        }
    });
    if (m == 35) {
        LoadSelectFromHiddenStorage(h, "vru_tipo_dispositivo", "#vru_tipo_dispositivo");
        var q = $(b).find("select[name=vru_tipo_dispositivo]");
        if ($(q).attr("my_sel") != "") {
            var p = $(q).attr("my_sel");
            get_option_from_value(q, p).attr("selected", "selected")
        }
    }
    if (m == 114) {
        var c = "#" + suff1;
        UNblockAllUI();
        var o = "#form" + IDs_suff + "_add"
    }
    tabs_delimiter_height()
}

function showConfirmWindowCoffInst(c) {
    var b = $(c).attr("checked");
    var d = "Merci de prendre une photo du coffret et de l'envoyer ï¿½ voltalis@energy30.fr avec le numï¿½ro d'intervention.";
    if (b) {
        confirm(d)
    }
}

function DeleteVoltalisMod(c, d, b) {
    $("#dummy_container").load("interventions/delete_voltalis_mod", {
        inside: "yes",
        id_mod: c,
        client_id: d,
        sub_id: b
    }, function(g, e, f) {
        chkRes($("#dummy_container"), e, g);
        UNblockAllUI()
    });
    RefreshInterventionIfItsOpened(d, b)
}

function onlyNumbers(b) {
    var e;
    var d;
    var c;
    if (window.event) {
        e = b.keyCode
    } else {
        if (b.which) {
            e = b.which
        }
    }
    d = String.fromCharCode(e);
    c = /\d/;
    if (c.test(d)) {
        return d
    }
}

function init_Intervention_Add_24(f, o, p, d, n, g, h) {
    LoadSelectFromHiddenStorage(f, "begin_hh", "#common_hours");
    LoadSelectFromHiddenStorage(f, "begin_mm", "#common_minutes");
    LoadSelectFromHiddenStorage(f, "end_hh", "#common_hours");
    LoadSelectFromHiddenStorage(f, "end_mm", "#common_minutes");
    var e = $("#form" + f).find("select[name=main_product_done_notdone]");
    if ($(e).attr("my_sel") != "") {
        var m = $(e).attr("my_sel");
        get_option_from_value(e, m).attr("selected", "selected")
    }
    var c = $("#form" + f).find("[name=main_product_choose]");
    c.load("lists/mood_media_main_product_list/" + default_language + "/" + g + "/0/0/0/0/0/dummy.html", function(u, q, r) {
        chkRes(c, q, u)
    });
    if ((o != "") && (o > 0) && (h > 0)) {
        var b = $("#form" + f).find("[name=add_product_choose]");
        b.load("lists/mood_media_add_product_list/" + default_language + "/" + g + "/" + h + "/0/0/0/0/dummy.html", function(u, q, r) {
            chkRes(c, q, u)
        })
    }
    $("#formnew_mm_main_product_" + f).submit(function(r) {
        r.stopImmediatePropagation();
        var q = {
            target: "#dummy_container",
            url: "interventions/save_new_moodmedia_product",
            type: "post",
            beforeSubmit: function(z, v, u) {
                var w = v[0];
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(v, u) {
                UNblockAllUI();
                RefreshInterventionIfItsOpened(d, n)
            }
        };
        $("#formnew_mm_main_product_" + f).ajaxSubmit(q);
        return false
    });
    $("#formnew_mm_add_product_" + f).submit(function(r) {
        r.stopImmediatePropagation();
        var q = {
            target: "#dummy_container",
            url: "interventions/save_new_moodmedia_product",
            type: "post",
            beforeSubmit: function(z, v, u) {
                var w = v[0];
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(v, u) {
                UNblockAllUI();
                RefreshInterventionIfItsOpened(d, n)
            }
        };
        $("#formnew_mm_add_product_" + f).ajaxSubmit(q);
        return false
    })
}

function updateMMTotalDuration(c, e) {
    var d = $("#form" + c).find("input[name=add_product_qty_installed" + e + "]").val();
    var b = $("#form" + c).find("input[name=add_product_duration" + e + "]").val();
    if ((!isNaN(d)) && (!isNaN(b))) {
        TabChecks = document.getElementsByName("product_total_duration" + e);
        for (i = 0; i < TabChecks.length; i++) {
            TabChecks[i].value = d * b
        }
    }
}

function DeletePrestationBouyguesAI(c, f, e, h, p, m, g, o, b, d, n) {
    $("#dummy_container").load("interventions/delete_prestation_bouygues_ai", {
        inside: "yes",
        id_prestation: c,
        client_id: f,
        sub_id: e,
        arch: h,
        additional_id: p,
        partner_id: m,
        tabindex_cnt: g,
        form_id: o,
        addon_container_id: b,
        IDs_suff: d
    }, function(u, q, r) {
        chkRes($("#dummy_container"), q, u);
        UNblockAllUI()
    });
    RefreshInterventionIfItsOpened(f, e)
}

function init_Intervention_Add_25(h, f, n, u, o, m, q, c, e, b, p) {
    var r = "#" + e;
    var d = "#" + b;
    var g = $("#form" + b).find("[name=bouygues_ai_select_prestation]");
    g.load("interventions/common_bouygues_ai_prestation/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        partner_id: o
    }, function(z, v, w) {
        chkRes(g, v, z);
        UNblockAllUI()
    });
    LoadSelectMultipleFromHiddenStorageDIV("#form" + e, "bouygues_ai_select_diag_assistance[]", "#bouygues_ai_select_diag_assistance");
    $("#form" + b).submit(function(w) {
        w.stopImmediatePropagation();
        var v = {
            target: "#dummy_container",
            url: "interventions/save_prestation_bouygues_ai",
            type: "post",
            beforeSubmit: function(E, C, z) {
                var D = C[0];
                var D = C[0];
                if (D.bouygues_ai_prestation_quantites.value == "" || D.bouygues_ai_prestation_quantites.value == "0") {
                    ClientDetailsReportFormError(C, r);
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(C, z) {
                UNblockAllUI();
                RefreshInterventionIfItsOpened(h, f)
            }
        };
        $("#form" + b).ajaxSubmit(v);
        return false
    })
}

function init_Intervention_Add_26(b, m, n) {
    LoadSelectFromHiddenStorage(m, "add_fuji_cause", "#fujitsu_cause_list");
    LoadSelectFromHiddenStorage(m, "add_fuji_reso_dsc", "#fujitsu_reso_std_list");
    if (n == 426) {
        var o = $(b).find("[name=add_fuji_fsc_family_hidden]").val();
        if (o != "") {
            var g = $(b).find("select[name=add_fuji_reso_client_fsc_general]");
            var e = $(b).find("select[name=add_fuji_reso_client_fsc_secondaire]");
            g.load("interventions/fujitsu_reso_client_fsc_symptom_general_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
                inside: "yes",
                myFamily: o
            }, function(u, p, r) {
                chkRes(g, p, u);
                if ($(g).attr("my_sel") != "") {
                    var q = $(g).attr("my_sel");
                    get_option_from_value(g, q).attr("selected", "selected")
                }
            });
            e.load("interventions/fujitsu_reso_client_fsc_symptom_secondaire_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
                inside: "yes",
                myFamily: o
            }, function(u, p, r) {
                chkRes(e, p, u);
                if ($(e).attr("my_sel") != "") {
                    var q = $(e).attr("my_sel");
                    get_option_from_value(e, q).attr("selected", "selected")
                }
            });
            var h = g.attr("my_sel");
            var f = e.attr("my_sel");
            get_option_from_value(g, h).attr("selected", "selected");
            get_option_from_value(e, f).attr("selected", "selected")
        }
        LoadSelectFromHiddenStorage(m, "add_fuji_reso_client", "#fujitsu_reso_client_std_list");
        LoadSelectFromHiddenStorage(m, "add_fuji_reso_client_fsc_condition", "#fujitsu_reso_client_fsc_condition_list");
        LoadSelectFromHiddenStorage(m, "add_fuji_reso_client_fsc_action", "#fujitsu_reso_client_fsc_action_list");
        LoadSelectFromHiddenStorage(m, "add_fuji_reso_client_fsc_family", "#fujitsu_reso_client_fsc_symptom_family_list")
    } else {
        if (n == 427) {
            LoadSelectFromHiddenStorage(m, "add_fuji_reso_client", "#fujitsu_reso_client_sncf_list")
        } else {
            if (n == 428) {
                LoadSelectFromHiddenStorage(m, "add_fuji_reso_client", "#fujitsu_reso_client_auchan_list")
            } else {
                if (n == 742) {
                    LoadSelectFromHiddenStorage(m, "add_fuji_reso_client", "#fujitsu_reso_client_std_list")
                }
            }
        }
    }
    var d = $(b).find("select[name=add_fuji_facturable_ref]");
    var c = d.attr("my_sel");
    get_option_from_value(d, c).attr("selected", "selected")
}

function init_Intervention_Add_27(b, e, f, m) {
    var n = $("div[name='swap_epson']", b);
    $("input[type=button]", n).click(function() {
        var r = $(this).parents("#row").attr("data-id_piece");
        var p = $(this).parents("#row").attr("data-id_inter");
        var q = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            if ($("select[name=sel_epson_depot] option", n).length == 0) {
                alert("Vous ne pouvez pas ajouter de piÃ¨ces sans sÃ©lectionner le dÃ©pÃ´t de destination au prÃ©alable !");
                $("select[name=sel_epson_depot]", n).focus()
            } else {
                var o = $("select[name=sel_epson_depot]", n).val();
                blockAllUI();
                $.post("stock/assign_part_to_inter", {
                    id_piece: r,
                    id_inter: p
                }, function() {
                    $.post("stock/set_part_ready", {
                        id_piece: r,
                        type_depot: 3,
                        id_depot: o,
                        bl: "assign"
                    }, function() {
                        $(g).load("logistics/get_parts_by_inter", {
                            inside: "yes",
                            sub_id: p,
                            partner_id: f
                        }, function(w, u, v) {
                            q.remove();
                            UNblockAllUI()
                        })
                    })
                })
            }
        }
    });
    var g = "#form" + e + "_logistic";
    var d = $("div[name='cmde_epson']", b);
    var c = $("div[name='res_epson']", b);
    $("input[name='btn_remove']", d).live("click", function() {
        $(this).parent().parent("tr").remove();
        if ($("table tbody tr", d).length > 0) {
            d.show("fast")
        } else {
            d.hide("fast")
        }
    });
    $("input[name='btn_cmde_epson']", d).bind("click", function() {
        var o = new Array();
        $("table tbody tr", d).each(function() {
            var p = new Array();
            p.push($("td:first", $(this)).text());
            p.push($("td:eq(2)", $(this)).text());
            p.push($("td:eq(3)", $(this)).text());
            p.push($("td:eq(1)", $(this)).text());
            o.push(p)
        });
        blockAllUI();
        $.post("stock/epson_create_part_order", {
            id_inter: m,
            "tab[]": o
        }, function() {
            $("table tbody tr", d).remove();
            d.hide("fast");
            $("select[name='sel_epson']", b).val(0).change();
            $(g).load("logistics/get_parts_by_inter", {
                inside: "yes",
                sub_id: m,
                partner_id: f
            }, function(r, p, q) {
                UNblockAllUI()
            })
        })
    });
    $("select[name='sel_epson']", b).change(function() {
        if ($(this).val() != "") {
            blockAllUI();
            var o = "";
            if ((f == 448 || f == 454) && $("input[name=machine_serie]", "#form" + e + "_machine").length) {
                o = $("input[name=machine_serie]", "#form" + e + "_machine").val()
            }
            c.load("stock/get_part_availability", {
                id_inter: m,
                ref: $(this).val(),
                id_fournisseur: 164,
                type_depot: 5,
                id_depot: $("input[name=tech_id]", $(b).parent()).val(),
                partner_id: f,
                machine_serie: o
            }, function() {
                $("input[type=number]", $(this)).numeric({
                    allow: ".,"
                });
                $("input[name='btn_add_epson']", $(this)).click(function() {
                    var p = $("select[name='sel_epson'] option:selected", b).text();
                    p = p.substring(p.indexOf("] ") + 2, p.length);
                    $("table tbody", d).append("<tr><td>" + $("select[name='sel_epson']", b).val() + "</td><td>" + p + "</td><td>" + $("input[name=qt]", c).val() + "</td><td>" + o + "</td><td><input type=button class=button value='X' name='btn_remove' /></td></tr>");
                    if ($("table tbody tr", d).length > 0) {
                        d.show("fast")
                    } else {
                        d.hide("fast")
                    }
                });
                $("input[name=btn_assign]", $(this)).click(function() {
                    var r = $(this).parents("tr").data("id");
                    var p = $(this).parents("tr").data("id_inter");
                    var q = $(this).parents("tr");
                    if (confirm(lang_logi_assign_confirm)) {
                        blockAllUI();
                        $.post("stock/assign_part_to_inter", {
                            id_piece: r,
                            id_inter: p
                        }, function() {
                            $(g).load("logistics/get_parts_by_inter", {
                                inside: "yes",
                                sub_id: p,
                                partner_id: f
                            }, function(w, u, v) {
                                $("div[name='res_epson']", b).html("");
                                $("select[name='sel_epson']", b).val(0);
                                UNblockAllUI()
                            })
                        })
                    }
                });
                UNblockAllUI()
            })
        } else {
            $("div[name='res_epson']", b).html("");
            $("select[name='sel_epson']", b).val(0)
        }
    });
    var h = new Date(SRVtime * 1000);
    $("#form" + e).find("[name=epson_warranty_begin_date]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        minDate: new Date(h.getTime() - CalendarDeltaMin),
        maxDate: new Date(h.getTime() + CalendarDeltaMax),
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    LoadSelectFromHiddenStorage(e, "epson_warranty_type", "#epson_warranty_type");
    LoadSelectFromHiddenStorage(e, "epson_cause_code", "#epson_cause_code");
    LoadSelectFromHiddenStorage(e, "epson_phenomenon_code", "#epson_phenomenon_code");
    LoadSelectFromHiddenStorage(e, "epson_market_code", "#epson_market_code")
}

function init_Intervention_Add_35(c, e, h, g) {
    var d = "#form" + e + "_logistic";
    var f = $("div[name='swap_bp2i']", c);
    $("input[type=button]", f).click(function() {
        var p = $(this).parents("#row").attr("data-id_piece");
        var n = $(this).parents("#row").attr("data-id_inter");
        var o = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            if ($("select[name=sel_bp2i_depot] option", f).length == 0) {
                alert("Vous ne pouvez pas ajouter de piÃ¨ces sans sÃ©lectionner le dÃ©pÃ´t de destination au prÃ©alable !");
                $("select[name=sel_bp2i_depot]", f).focus()
            } else {
                var m = $("select[name=sel_bp2i_depot]", f).val();
                blockAllUI();
                $.post("stock/assign_part_to_inter", {
                    id_piece: p,
                    id_inter: n
                }, function() {
                    $.post("stock/set_part_ready", {
                        id_piece: p,
                        type_depot: 3,
                        id_depot: m,
                        bl: "assign"
                    }, function() {
                        $.post("stock/set_part_ready_confirm", {
                            id_piece: p
                        }, function() {
                            $(d).load("logistics/get_parts_by_inter", {
                                inside: "yes",
                                sub_id: n,
                                partner_id: h
                            }, function(u, q, r) {
                                o.remove();
                                UNblockAllUI()
                            })
                        })
                    })
                })
            }
        }
    });
    var b = $("div[name='fsl_bp2i']", c);
    $("input[type=button].bp2i_assign", b).click(function() {
        var o = $(this).parents("#row").attr("data-id_piece");
        var m = $(this).parents("#row").attr("data-id_inter");
        var n = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: o,
                id_inter: m
            }, function() {
                $.post("stock/set_part_ready_confirm", {
                    id_piece: o,
                    bl: "assigned",
                    create_tech_mvt: 1
                }, function() {
                    $(d).load("logistics/get_parts_by_inter", {
                        inside: "yes",
                        sub_id: m,
                        partner_id: h
                    }, function(r, p, q) {
                        n.remove();
                        UNblockAllUI()
                    })
                })
            })
        }
    });
    $("input[type=button].btn_other_fsl", b).click(function() {
        $("#other_fsl", b).toggle("fast")
    });
    LoadSelectFromHiddenStorage(e, "bp2i_code_panne", "#bp2i_code_panne")
}

function init_Intervention_Add_121(c, e, h, g) {
    var d = "#form" + e + "_logistic";
    var f = $("div[name='swap_bp2i']", c);
    $("input[type=button]", f).click(function() {
        var p = $(this).parents("#row").attr("data-id_piece");
        var n = $(this).parents("#row").attr("data-id_inter");
        var o = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            if ($("select[name=sel_bp2i_depot] option", f).length == 0) {
                alert("Vous ne pouvez pas ajouter de piÃ¨ces sans sÃ©lectionner le dÃ©pÃ´t de destination au prÃ©alable !");
                $("select[name=sel_bp2i_depot]", f).focus()
            } else {
                var m = $("select[name=sel_bp2i_depot]", f).val();
                blockAllUI();
                $.post("stock/assign_part_to_inter", {
                    id_piece: p,
                    id_inter: n
                }, function() {
                    $.post("stock/set_part_ready", {
                        id_piece: p,
                        type_depot: 3,
                        id_depot: m,
                        bl: "assign"
                    }, function() {
                        $.post("stock/set_part_ready_confirm", {
                            id_piece: p
                        }, function() {
                            $(d).load("logistics/get_parts_by_inter", {
                                inside: "yes",
                                sub_id: n,
                                partner_id: h
                            }, function(u, q, r) {
                                o.remove();
                                UNblockAllUI()
                            })
                        })
                    })
                })
            }
        }
    });
    var b = $("div[name='fsl_bp2i']", c);
    $("input[type=button].bp2i_assign", b).click(function() {
        var o = $(this).parents("#row").attr("data-id_piece");
        var m = $(this).parents("#row").attr("data-id_inter");
        var n = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: o,
                id_inter: m
            }, function() {
                $.post("stock/set_part_ready_confirm", {
                    id_piece: o,
                    bl: "assigned",
                    create_tech_mvt: 1
                }, function() {
                    $(d).load("logistics/get_parts_by_inter", {
                        inside: "yes",
                        sub_id: m,
                        partner_id: h
                    }, function(r, p, q) {
                        n.remove();
                        UNblockAllUI()
                    })
                })
            })
        }
    });
    $("input[type=button].btn_other_fsl", b).click(function() {
        $("#other_fsl", b).toggle("fast")
    });
    LoadSelectFromHiddenStorage(e, "bp2i_code_panne", "#bp2i_code_panne")
}

function init_Intervention_Add_45(c, e, h, g) {
    var d = "#form" + e + "_logistic";
    var f = $("div[name='swap_bp2i']", c);
    $("input[type=button]", f).click(function() {
        var p = $(this).parents("#row").attr("data-id_piece");
        var n = $(this).parents("#row").attr("data-id_inter");
        var o = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            if ($("select[name=sel_bp2i_depot] option", f).length == 0) {
                alert("Vous ne pouvez pas ajouter de piÃ¨ces sans sÃ©lectionner le dÃ©pÃ´t de destination au prÃ©alable !");
                $("select[name=sel_bp2i_depot]", f).focus()
            } else {
                var m = $("select[name=sel_bp2i_depot]", f).val();
                blockAllUI();
                $.post("stock/assign_part_to_inter", {
                    id_piece: p,
                    id_inter: n
                }, function() {
                    $.post("stock/set_part_ready", {
                        id_piece: p,
                        type_depot: 3,
                        id_depot: m,
                        bl: "assign"
                    }, function() {
                        $.post("stock/set_part_ready_confirm", {
                            id_piece: p
                        }, function() {
                            $(d).load("logistics/get_parts_by_inter", {
                                inside: "yes",
                                sub_id: n,
                                partner_id: h
                            }, function(u, q, r) {
                                o.remove();
                                UNblockAllUI()
                            })
                        })
                    })
                })
            }
        }
    });
    var b = $("div[name='fsl_bp2i']", c);
    $("input[type=button].bp2i_assign", b).click(function() {
        var o = $(this).parents("#row").attr("data-id_piece");
        var m = $(this).parents("#row").attr("data-id_inter");
        var n = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: o,
                id_inter: m
            }, function() {
                $.post("stock/set_part_ready_confirm", {
                    id_piece: o,
                    bl: "assigned",
                    create_tech_mvt: 1
                }, function() {
                    $(d).load("logistics/get_parts_by_inter", {
                        inside: "yes",
                        sub_id: m,
                        partner_id: h
                    }, function(r, p, q) {
                        n.remove();
                        UNblockAllUI()
                    })
                })
            })
        }
    });
    $("input[type=button].btn_other_fsl", b).click(function() {
        $("#other_fsl", b).toggle("fast")
    });
    LoadSelectFromHiddenStorage(e, "bp2i_code_panne", "#bp2i_code_panne")
}

function init_Intervention_Add_60(c, e, g, f) {
    var d = "#form" + e + "_logistic";
    var b = $("div[name='fsl_bp2i']", c);
    $("input[type=button].bp2i_assign", b).click(function() {
        var n = $(this).parents("#row").attr("data-id_piece");
        var h = $(this).parents("#row").attr("data-id_inter");
        var m = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: n,
                id_inter: h
            }, function() {
                $.post("stock/set_part_ready_confirm", {
                    id_piece: n,
                    bl: "assigned",
                    create_tech_mvt: 1
                }, function() {
                    $(d).load("logistics/get_parts_by_inter", {
                        inside: "yes",
                        sub_id: h,
                        partner_id: g
                    }, function(q, o, p) {
                        m.remove();
                        UNblockAllUI()
                    })
                })
            })
        }
    });
    LoadSelectFromHiddenStorage(e, "bp2i_code_panne", "#bp2i_code_panne")
}

function init_Intervention_Add_50(c, e, h, g) {
    var d = "#form" + e + "_logistic";
    var f = $("div[name='swap_bp2i']", c);
    $("input[type=button]", f).click(function() {
        var p = $(this).parents("#row").attr("data-id_piece");
        var n = $(this).parents("#row").attr("data-id_inter");
        var o = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            if ($("select[name=sel_bp2i_depot] option", f).length == 0) {
                alert("You cannot assign part without selecting the destination !");
                $("select[name=sel_bp2i_depot]", f).focus()
            } else {
                var m = $("select[name=sel_bp2i_depot]", f).val();
                blockAllUI();
                $.post("stock/assign_part_to_inter", {
                    id_piece: p,
                    id_inter: n
                }, function() {
                    $.post("stock/set_part_ready", {
                        id_piece: p,
                        type_depot: 3,
                        id_depot: m,
                        bl: "assign"
                    }, function() {
                        $.post("stock/set_part_ready_confirm", {
                            id_piece: p
                        }, function() {
                            $(d).load("logistics/get_parts_by_inter", {
                                inside: "yes",
                                sub_id: n,
                                partner_id: h
                            }, function(u, q, r) {
                                o.remove();
                                UNblockAllUI()
                            })
                        })
                    })
                })
            }
        }
    });
    var b = $("div[name='fsl_bp2i']", c);
    $("input[type=button].bp2i_assign", b).click(function() {
        var o = $(this).parents("#row").attr("data-id_piece");
        var m = $(this).parents("#row").attr("data-id_inter");
        var n = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: o,
                id_inter: m
            }, function() {
                $.post("stock/set_part_ready_confirm", {
                    id_piece: o,
                    bl: "assigned",
                    create_tech_mvt: 1
                }, function() {
                    $(d).load("logistics/get_parts_by_inter", {
                        inside: "yes",
                        sub_id: m,
                        partner_id: h
                    }, function(r, p, q) {
                        n.remove();
                        UNblockAllUI()
                    })
                })
            })
        }
    });
    $("input[type=button].btn_other_fsl", b).click(function() {
        $("#other_fsl", b).toggle("fast")
    })
}

function init_Intervention_Add_36(c, d, g, f) {
    var e = $("#form" + d).find('select[name="samsung_code_condition"]');
    if ($(e).attr("my_sel") != "") {
        var b = $(e).attr("my_sel");
        $(e).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var e = $("#form" + d).find('select[name="samsung_codes_symptome"]');
    if ($(e).attr("my_sel") != "") {
        var b = $(e).attr("my_sel");
        $(e).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var e = $("#form" + d).find('select[name="samsung_code_section"]');
    if ($(e).attr("my_sel") != "") {
        var b = $(e).attr("my_sel");
        $(e).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var e = $("#form" + d).find('select[name="samsung_code_defect_repair"]');
    if ($(e).attr("my_sel") != "") {
        var b = $(e).attr("my_sel");
        $(e).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var e = $("#form" + d).find('select[name="samsung_serviceIndicator"]');
    if ($(e).attr("my_sel") != "") {
        var b = $(e).attr("my_sel");
        $(e).children("option[value=" + b + "]").attr("selected", "selected")
    }
}

function LoadResoFSCGeneralFromFamily(c, b, f) {
    blockAllUI();
    var d = $(c).find("select[name=add_fuji_reso_client_fsc_family]").val();
    var g = $(c).find("select[name=add_fuji_reso_client_fsc_general]");
    var e = $(c).find("select[name=add_fuji_reso_client_fsc_secondaire]");
    g.load("interventions/fujitsu_reso_client_fsc_symptom_general_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        inside: "yes",
        myFamily: d
    }, function(n, h, m) {
        tabs_delimiter_height()
    });
    e.load("interventions/fujitsu_reso_client_fsc_symptom_secondaire_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        inside: "yes",
        myFamily: d
    }, function(n, h, m) {
        tabs_delimiter_height()
    });
    UNblockAllUI()
}

function Stime_device_Problem_Change_Switch(d) {
    var c = $(d).attr("checked");
    var b = $(d).parents("form");
    if (b) {
        if (c) {
            SetSelectedByOptionAndEnable($(b).find("input[name=stime_baie_manquante]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=stime_baie_inutilisable]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=stime_porte_cassee]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=stime_gonds_manquants]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=stime_serrure_cle]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=stime_manque_visserie]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=stime_passe_cable]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=stime_device_autres]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("textarea[name=stime_device_com]").get(0), 0, true)
        } else {
            Set_Disabled($(b).find("input[name=stime_baie_manquante]"));
            Set_Disabled($(b).find("input[name=stime_baie_inutilisable]"));
            Set_Disabled($(b).find("input[name=stime_porte_cassee]"));
            Set_Disabled($(b).find("input[name=stime_gonds_manquants]"));
            Set_Disabled($(b).find("input[name=stime_serrure_cle]"));
            Set_Disabled($(b).find("input[name=stime_manque_visserie]"));
            Set_Disabled($(b).find("input[name=stime_passe_cable]"));
            Set_Disabled($(b).find("input[name=stime_device_autres]"));
            Set_Disabled($(b).find("textarea[name=stime_device_com]"))
        }
    }
}

function Stime_baie_manquante_Change_Switch(d) {
    var c = $(d).attr("checked");
    var b = $(d).parents("form");
    if (b) {
        if (c) {
            $(b).find("input[name=stime_baie_inutilisable]").removeAttr("checked")
        }
    }
}

function Stime_baie_inutilisable_Change_Switch(d) {
    var c = $(d).attr("checked");
    var b = $(d).parents("form");
    if (b) {
        if (c) {
            $(b).find("input[name=stime_baie_manquante]").removeAttr("checked")
        }
    }
}

function Stime_device_Problem_Change(b) {
    ClientDetails_Common_Change(b);
    Stime_device_Problem_Change_Switch(b)
}

function Stime_baie_manquante_Change(b) {
    ClientDetails_Common_Change(b);
    Stime_baie_manquante_Change_Switch(b)
}

function Stime_baie_inutilisable_Change(b) {
    ClientDetails_Common_Change(b);
    Stime_baie_inutilisable_Change_Switch(b)
}

function init_Intervention_Add_29(b, c, e, d) {
    $("#form" + c).find("input[name=stime_device_problem]").bind("change", function() {
        Stime_device_Problem_Change(this)
    });
    Stime_device_Problem_Change_Switch($("#form" + c).find("input[name=stime_device_problem]").get(0));
    $("#form" + c).find("input[name=stime_baie_manquante]").bind("change", function() {
        Stime_baie_manquante_Change(this)
    });
    Stime_baie_manquante_Change_Switch($("#form" + c).find("input[name=stime_baie_manquante]").get(0));
    $("#form" + c).find("input[name=stime_baie_inutilisable]").bind("change", function() {
        Stime_baie_inutilisable_Change(this)
    });
    Stime_baie_inutilisable_Change_Switch($("#form" + c).find("input[name=stime_baie_inutilisable]").get(0))
}

function load_abonnement_details(c, f, g) {
    var e = "#client_" + f + "_abonnement";
    var h = "#client_" + f + "_abonnement";
    var o = "#client_" + f + "_abonnement_" + g + "nav";
    $(e).load("abonnements/get_abonnement_result", {
        inside: "yes",
        client_id: f,
        ref_a: g
    }, function(r, p, q) {
        if (chkRes($(e), p, r)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    });
    var d = $(c).parent().parents("div");
    var n = d.attr("selected_div");
    if (n != h) {
        var m = n + "nav";
        var b = d.get(0);
        $(n).addClass("ui-tabs-hide");
        $(h).removeClass("ui-tabs-hide");
        $(m).removeClass("selected");
        $(o).addClass("selected");
        d.attr("selected_div", h);
        tabs_delimiter_height()
    }
}

function init_Intervention_Add_30(b, c, d) {
    LoadSelectFromHiddenStorage(c, "vru_formazione_argo_princ_call", "#vru_formazione_addizionale_argo_princ");
    LoadSelectFromHiddenStorage(c, "vru_formazione_argo_secon_call", "#vru_formazione_addizionale_argo_secon");
    LoadSelectFromHiddenStorage(c, "vru_formazione_argo_princ_inter", "#vru_formazione_addizionale_argo_princ");
    LoadSelectFromHiddenStorage(c, "vru_formazione_argo_secon_inter", "#vru_formazione_addizionale_argo_secon")
}

function calculateBelgaSplicingFouilleData(f, b) {
    var g = $("#form" + f).find("input[name=belga_splc_f" + b + "_long]").val();
    var e = $("#form" + f).find("input[name=belga_splc_f" + b + "_larg]").val();
    var h = $("#form" + f).find("input[name=belga_splc_f" + b + "_prof]").val();
    if (g == "") {
        g = 0
    }
    if (e == "") {
        e = 0
    }
    if (h == "") {
        h = 0
    }
    if ((!isNaN(g)) && (!isNaN(e))) {
        if ((g > 0) && (e > 0)) {
            $("#form" + f).find("input[name=belga_splc_f" + b + "_m2]").val((Math.round(Math.abs(g) * Math.abs(e) * 100)) / 100)
        } else {
            $("#form" + f).find("input[name=belga_splc_f" + b + "_m2]").val("0")
        }
    } else {
        $("#form" + f).find("input[name=belga_splc_f" + b + "_m2]").val("0")
    }
    if ((!isNaN(g)) && (!isNaN(e)) && (!isNaN(h))) {
        if ((g > 0) && (e > 0) && (h > 0)) {
            $("#form" + f).find("input[name=belga_splc_f" + b + "_m3]").val((Math.round(Math.abs(g) * Math.abs(e) * Math.abs(h) * 100)) / 100)
        } else {
            $("#form" + f).find("input[name=belga_splc_f" + b + "_m3]").val("0")
        }
    } else {
        $("#form" + f).find("input[name=belga_splc_f" + b + "_m3]").val("0")
    }
    if ((b == 1) || (b == 2) || (b == 3)) {
        var d = 0;
        var c = 0;
        for (i = 1; i <= 3; i++) {
            d = parseFloat(d) + parseFloat($("#form" + f).find("input[name=belga_splc_f" + i + "_m2]").val());
            c = parseFloat(c) + parseFloat($("#form" + f).find("input[name=belga_splc_f" + i + "_m3]").val())
        }
        $("#form" + f).find("input[name=belga_splc_tot_m2]").val(Math.round(d * 100) / 100);
        $("#form" + f).find("input[name=belga_splc_tot_m3]").val(Math.round(c * 100) / 100)
    }
}

function init_Intervention_Add_33(c, h, m, b, g, f) {
    blockAllUI();
    for (var e = 1; e <= g; e++) {
        LoadSelectFromHiddenStorageDIV(c, "toshiba_main_defect_" + e, "#interv_addon_c_list_c");
        Obj = $(c).find("select[name=toshiba_area_" + e + "]");
        $(Obj).load("lists/toshiba_area_list/" + default_language + "/dummy.html", function(p, n, o) {
            chkRes($(Obj), n, p);
            UNblockAllUI()
        })
    }
    for (var d = 1; d <= f; d++) {
        LoadSelectFromHiddenStorageDIV(c, "new_toshiba_main_defect_" + d, "#interv_addon_c_list_c");
        Obj = $(c).find("select[name=new_toshiba_area_" + d + "]");
        $(Obj).load("lists/toshiba_area_list/" + default_language + "/dummy.html", function(p, n, o) {
            chkRes($(Obj), n, p);
            UNblockAllUI()
        })
    }
    UNblockAllUI()
}

function toshibaAreaChange(h, d, e, g) {
    blockAllUI();
    var c;
    var m;
    c = $(h).children("option:eq(" + $(h).get(0).selectedIndex + ")");
    if ($(c).length > 0) {
        var b;
        if (g == 1) {
            b = "new_toshiba_subarea1_"
        } else {
            b = "toshiba_subarea1_"
        }
        if ($(c).length > 0) {
            var m = c.attr("value")
        }
        if ((m == "") || (m == -1)) {
            $(d).find("select[name=" + b + e + "]").html("")
        } else {
            var f = $(d).find("select[name=" + b + e + "]");
            if ((f == null) || ($(f).length < 1)) {
                return
            }
            blockAllUI();
            $(f).load("lists/toshiba_subarea1_list/" + default_language + "/0/0/0/0/0/0/" + m + "/dummy.html", function(p, n, o) {
                chkRes($(f), n, p);
                UNblockAllUI()
            })
        }
    }
    UNblockAllUI()
}

function toshibaSubArea1Change(g, c, d, f) {
    blockAllUI();
    var b;
    var h;
    b = $(g).children("option:eq(" + $(g).get(0).selectedIndex + ")");
    if ($(b).length > 0) {
        var m;
        if (f == 1) {
            m = "new_toshiba_subarea2_"
        } else {
            m = "toshiba_subarea2_"
        }
        if ($(b).length > 0) {
            var h = b.attr("value")
        }
        if ((h == "") || (h == -1)) {
            $(c).find("select[name=" + m + d + "]").html("")
        } else {
            var e = $(c).find("select[name=" + m + d + "]");
            if ((e == null) || ($(e).length < 1)) {
                return
            }
            blockAllUI();
            $(e).load("lists/toshiba_subarea2_list/" + default_language + "/0/0/0/0/0/0/" + h + "/dummy.html", function(p, n, o) {
                chkRes($(e), n, p);
                UNblockAllUI()
            })
        }
    }
    UNblockAllUI()
}

function toshibaSubArea2Change(m, c, e, h) {
    blockAllUI();
    var b;
    var d;
    b = $(m).children("option:eq(" + $(m).get(0).selectedIndex + ")");
    if ($(b).length > 0) {
        var g;
        if (h == 1) {
            g = "new_toshiba_symptom_"
        } else {
            g = "toshiba_symptom_"
        }
        if ($(b).length > 0) {
            var d = b.attr("value")
        }
        if ((d == "") || (d == -1)) {
            $(c).find("select[name=" + g + e + "]").html("")
        } else {
            var f = $(c).find("select[name=" + g + e + "]");
            if ((f == null) || ($(f).length < 1)) {
                return
            }
            blockAllUI();
            $(f).load("lists/toshiba_symptom_list/" + default_language + "/0/0/0/0/0/0/" + d + "/dummy.html", function(p, n, o) {
                chkRes($(f), n, p);
                UNblockAllUI()
            })
        }
    }
    UNblockAllUI()
}

function AddSymptomCodes(b) {
    idInter = $(b).find("input[name=toshiba_id_inter]").val();
    idClient = $(b).find("input[name=toshiba_id_client]").val();
    blockAllUI();
    $("#dummy_container").load("interventions/toshiba_create_symptom_codes", {
        inside: "yes",
        idInter: idInter
    }, function(e, c, d) {
        if (chkRes($("#dummy_container"), c, e)) {}
        UNblockAllUI()
    });
    RefreshInterventionIfItsOpened(idClient, idInter)
}

function init_Intervention_Add_31(c, d, f) {
    var e = $("#form" + d).find('select[name="belga_splc_cloture_ot"]');
    if ($(e).attr("my_sel") != "") {
        var b = $(e).attr("my_sel");
        $(e).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var e = $("#form" + d).find('select[name="belga_splc_ntp"]');
    if ($(e).attr("my_sel") != "") {
        var b = $(e).attr("my_sel");
        $(e).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var e = $("#form" + d).find('select[name="belga_splc_obturateur"]');
    if ($(e).attr("my_sel") != "") {
        var b = $(e).attr("my_sel");
        $(e).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var e = $("#form" + d).find('select[name="belga_splc_fiche_bloc"]');
    if ($(e).attr("my_sel") != "") {
        var b = $(e).attr("my_sel");
        $(e).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var e = $("#form" + d).find('select[name="belga_splc_contact_iac"]');
    if ($(e).attr("my_sel") != "") {
        var b = $(e).attr("my_sel");
        $(e).children("option[value=" + b + "]").attr("selected", "selected")
    }
}

function init_Intervention_Add_34(c, g, h, d) {
    var b = new Date();
    var o = b.getFullYear();
    var f = $("#form" + g).find('select[name="inter_date_y"] option');
    for (var e = 0; e < f.length; e++) {
        if (f[e].value < o) {
            var m = $("#form" + g).find('select[name="inter_date_y"] option[value="' + f[e].value + '"]').prop("disabled", true)
        }
    }
    if ($(f).attr("my_sel") >= "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="bouygues_ftth_internetStatus"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="bouygues_ftth_phoneStatus"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="bouygues_ftth_tvStatus"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="bouygues_ftth_pboAccessibility"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="bouygues_ftth_ptoInstalled"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="bouygues_ftth_extNumVoie"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="bouygues_ftth_panne"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="bouygues_ftth_canalCommunicationOi"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="bouygues_ftth_canalCommunicationOc"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    $("#form" + g).find("input[name=bouygues_ftth_isPmCorrected]").bind("change", function() {
        Intervention_IsPMCorrected_Switch(this)
    });
    Intervention_IsPMCorrected_Switch($("#form" + g).find("input[name=bouygues_ftth_isPmCorrected]").get(0));
    $("#form" + g).find("input[name=bouygues_ftth_isReproOI]").bind("change", function() {
        Intervention_isReproOI_Switch(this)
    });
    Intervention_isReproOI_Switch($("#form" + g).find("input[name=bouygues_ftth_isReproOI]").get(0));
    $("#form" + g).find("input[name=bouygues_ftth_isReproOC]").bind("change", function() {
        Intervention_isReproOC_Switch(this)
    });
    Intervention_isReproOC_Switch($("#form" + g).find("input[name=bouygues_ftth_isReproOC]").get(0));
    $("#form" + g).find("select[name=report_result_id]").bind("change", function() {
        var p = this.value;
        var q = "";
        if (p == 61416 || p == 61425 || p == 61440 || p == 61449) {
            q = "- Attente autorisation Syndic pour passage de cÃ¢ble en apparent dans les parties communes.\n- Attente autorisation PropriÃ©taire pour percement et passage de cÃ¢ble en apparent dans le logement client. "
        } else {
            if (p == 61412 || p == 61413 || p == 61417 || p == 61418) {
                q = "- Le client est absent au RDV.\n- Le client doit s'absenter avant la fin du RDV."
            } else {
                if (p == 61437) {
                    q = "- Tentative d'appel rÃ©alisÃ©e le XX/XX/XXXX Ã  HH:MM puis HH:MM puis HH:MM."
                } else {
                    if (p == 61415 || p == 61438) {
                        q = "- L'intervention nÃ©cessite l'aide d'un autre technicien car XXXXX.\n- Le client doit rÃ©aliser des travaux dans son logement : Description des travaux."
                    } else {
                        if (p == 61441 || p == 61442 || p == 61443 || p == 61460) {
                            q = "- Rendez-vous non honorÃ© par lâ€™installateur.\n- Le technicien n'avait pas son Descriptif du matÃ©riel manquant."
                        } else {
                            if (p == 61423 || p == 61424 || p == 61450) {
                                q = "- Le PM est situÃ© dans le local XXXXX accessible uniquement via le moyen d'accÃ¨s XXXX. Le client a Ã©tÃ© informÃ© qu'il devait s'assurer des accÃ¨s lors de la prochaine intervention."
                            } else {
                                if (p == 61435) {
                                    q = "ProblÃ¨me pas de signal PM\nModule Bytel (FI-XXXXX-XXXX)\nPas d'autres clients connectÃ©s\nSignal jarretiÃ¨re d'alimentation( dans le cas des PMZ AMI)\nTest Signal module SFR :\nTest Signal module Bouygues :\nEtat Pon Port : up /XXDB\n- DÃ©faut alignement, L'ONT du client remonte sur la position OLT XXXX SLOT XX / PORT XX au lieu de position OLT XXXX SLOT XX / PORT XX.\n- Vandalisme sur module BYTEL. Demande de remise en conformitÃ© du module BYTEL rÃ©fÃ©rence XXXXXXX.\n- Signal dÃ©gradÃ© sur module BYTEL rÃ©fÃ©rence XXXXXXX (toutes positions confondues). Valeur mesurÃ©e : XXXXX Valeur attendue : XXXXX.\n- Pas de port sur module BYTEL disponible (cause port HS). Demande de remise en conformitÃ©.\n- Absence de Module Bougygues au PM RÃ©f xxxxx vÃ©rification de brassage ok , Signal module SFR =xxxx\nAbsence de coupleur de traversÃ©e sur le Module Bouygues aucun port prÃ©sent,\n\n-commentaire Â« [COMMANDE PMGC HOTLINE] â€“ En attente de l'intervention de FREE au PMGC â€“ DÃ©lai : 4 jours ouvrÃ©s â€“ Merci au bout du dÃ©lai imparti de contacter le client afin de vÃ©rifier avec lui l'activation de ses services Â»"
                                } else {
                                    if (p == 61458) {
                                        q = "- Droit de retrait pour cause Indiquer la cause (ex : hygiÃ¨ne / insalubritÃ© / violence / prÃ©sence d'amiante / etc.)"
                                    } else {
                                        if (p == 61419 || p == 61433 || p == 61434 || p == 61447 || p == 61448) {
                                            q = "- Le client habite Ã  l'adresse XXXXX nÃ©cessitant de changer de PM de raccordement ou non Ã©ligible BYTEL.\n- Le client habite bien Ã  l'adresse de la commande mais dans le bÃ¢timent XXXX non raccordable BYTEL."
                                        } else {
                                            if (p == 61414 || p == 61421 || p == 61422) {
                                                q = "- Descriptif de la cause du refus travaux client (Ex : dÃ©lai de mise en service, complexitÃ© travaux, choix d'un autre opÃ©rateur)"
                                            } else {
                                                if (p == 61408 || p == 61409 || p == 61410 || p == 61411) {
                                                    q = "- Descriptif de la cause du refus travaux client (Ex : dÃ©lai de mise en service, complexitÃ© travaux, choix d'un autre opÃ©rateur)"
                                                } else {
                                                    if (p == 61428) {
                                                        q = "- PB vandalisÃ© ou dÃ©gradÃ©, raccordement client impossible. Demande de remise en conformitÃ© [nÂ° de dÃ©charge XXX]."
                                                    } else {
                                                        if (p == 61429) {
                                                            q = "- PM vandalisÃ© ou dÃ©gradÃ© (module OI - Ex : colonne montante arrachÃ©e au niveau des connecteurs). Demande de remise en conformitÃ© [nÂ° de dÃ©charge XXX]."
                                                        } else {
                                                            if (p == 61426) {
                                                                q = "-Le Laser du technicien n'arrive pas au PM, Mutation de PB [XXX] Tube [XXX] Fibre [XXX]impossible demande de reporovisionning nÂ° de dÃ©charge [XXX]\n-Fibre pas raccotdÃ©e au PM [XXX] (toutes les fibres sont dÃ©ja prises))Demande de remis en conformitÃ© dÃ©charge[XXX]\n-Fibre coupÃ©e a ras au PB [XXX](toutes les fibres soudÃ©essont dÃ©ja prise)demande de remise en conformitÃ© [nÂ° de dÃ©charge[XXX]\n-Fibre coupÃ©e a ras au PM [XXX](toutes les fibres soudÃ©essont dÃ©ja prise)demande de remise en conformitÃ© [nÂ° de dÃ©charge[XXX]\n-Respect de la soudure au PB (Tube XXX/ Fibre XXX). Au PMGC, le brassage doit Ãªtre effectuÃ©. Coupleur XXX/ID panneau XXX/Port X/Nom du module OI XXX/ Position module XXX Â»\n"
                                                            } else {
                                                                if (p == 61431) {
                                                                    q = "- Affaiblissement trop important sur position PB XXX/Tube XXX/Fibre XXX. Signal PM -XXXdBm. Signal PBO -XXXdBm. Mutation sur autre fibre impossible [nÂ° de dÃ©charge XXX]."
                                                                } else {
                                                                    if (p == 61445) {
                                                                        q = "- Fibre [XXX] de Tube [XXX]. Sur le PBO xxx est prise par un autre client pas d'autre disponibilitÃ© demande de remise en conformitÃ© [nÂ° de dÃ©charge [XXX]"
                                                                    } else {
                                                                        if (p == 61432) {
                                                                            q = "- Le technicien trouve le PBO XXX mais il n'existe aucune position libre physiquement dans le PBO. La hotline de l'OI n'a pas de positions Ã  communiquer.  Impossible de raccorder sur un autre PBO ,Demande de dÃ©saturation physique du PBO."
                                                                        } else {
                                                                            if (p == 61457) {
                                                                                q = "- AccÃ¨s au PME impossible - serrure vandalisÃ©e - impossible d'ouvrir l'armoire [nÂ° de dÃ©charge XXX].\n- AccÃ¨s au PME impossible - DÃ©faut de mise Ã  disposition des moyens d'accÃ¨s par l'OI - indiquer le moyen d'accÃ¨s en dÃ©faut - [nÂ° de dÃ©charge XXX].\n- AccÃ¨s au PMI impossible - DÃ©faut de mise Ã  disposition des moyens d'accÃ¨s par l'OI - indiquer le moyen d'accÃ¨s en dÃ©faut -  [nÂ° de dÃ©charge XXX]."
                                                                            } else {
                                                                                if (p == 61427) {
                                                                                    q = "- Conduite cassÃ©e en partie publique - Type raccordement PB-PTO : xxxxx â€“ ExtrÃ©mitÃ© 1 â€“ ExtrÃ©mitÃ© 2 â€“ distance totale entre les 2 extrÃ©mitÃ©s â€“ distance de blocage Ã  partir de lâ€™extrÃ©mitÃ© 1 â€“ distance de blocage Ã  partir de lâ€™extrÃ©mitÃ© 2 â€“ description."
                                                                                } else {
                                                                                    if (p == 61427 || p == 61439 || p == 61461) {
                                                                                        q = "- Raccordement en AÃ©rien ou AÃ©rosouterrain - Absence de bandeau vert sur infrastructure de GÃ©nie Civil ENEDIS [nÂ° de dÃ©charge XXX]\n- Raccordement en AÃ©rien ou AÃ©rosouterrain - infrastructures ENEDIS inexploitable - Poteau bois inaccessible [nÂ° de dÃ©charge XXX]\n- Raccordement en AÃ©rien ou AÃ©rosouterrain - infrastructures ENEDIS inexploitable - Poteau Ã  remplacer ou rÃ©parer [nÂ° de dÃ©charge XXX]\n- Raccordement en AÃ©rien ou AÃ©rosouterrain - infrastructures ENEDIS inexploitable - Poteau Ã  crÃ©er aprÃ¨s le PB [nÂ° de dÃ©charge XXX]\n- Raccordement en souterrain ou AÃ©rosouterrain - infrastructures de GÃ©nie civil Orange inexploitable (Ex : Chambre scellÃ©e, chambre sous chaussÃ©e) [nÂ° de dÃ©charge XXX]\n- Raccordement en souterrain - GÃ©nie civil Ã  crÃ©er aprÃ¨s le PB [nÂ° de dÃ©charge XXX]\n- Logement client non prÃ©vu dans le plan de dÃ©ploiement de lâ€™OI. Il y a XXX logement(s) Ã  lâ€™Ã©tage du client mais dans les outils de lâ€™OI il nâ€™en prÃ©voit que XXX. Demande dâ€™Ã©tude dâ€™ajout de structure [nÂ° de dÃ©charge XXX].\n- Local commercial non prÃ©vu dans le plan de dÃ©ploiement de lâ€™OI. Il y a XXX logement(s) Ã  lâ€™Ã©tage du client mais dans les outils de lâ€™OI il nâ€™en prÃ©voit que XXX. Demande dâ€™Ã©tude dâ€™ajout de structure [nÂ° de dÃ©charge XXX]."
                                                                                    } else {
                                                                                        if (p == 61444) {
                                                                                            q = "-	Le technicien trouve sur le PBO XXX les positions libres suivantes : Tube XXX / fibre XXX, Tube XXX / fibre XXX, alors que la Hotline identifie sur le PBO XXX au niveau du rÃ©fÃ©rentiel les positions libres suivantes : Tube XXX / fibre XXX, Tube XXX / fibre XXX. Demande de correction du rÃ©fÃ©rentiel.\n- Le technicien trouve sur le PBO XXX les positions libres suivantes : Tube XXX / fibre XXX, Tube XXX / fibre XXX. La Hotline de l'OI identifie ces positions au PBO XXX comme Ã©tant occupÃ©es. Demande de correction du rÃ©fÃ©rentiel.\n- Le technicien trouve la PTO XXX sur tube XXX fibre XXX alors que la Hotline identifie la PTO XXX sur tube XXX fibre XXX. Demande de vÃ©rification du rÃ©fÃ©rentiel.\n- Le technicien trouve Ã  l'adresse [HEXACLE] / [BATIMENT] / [ESCALIER] les PBOs suivantes : [ETAGE]/[rÃ©fÃ©rence PBO], [ETAGE]/[rÃ©fÃ©rence PBO]. La Hotline n'identifie pas les mÃªmes PBO Ã  cette adresse. Demande de vÃ©rification du rÃ©fÃ©rentiel."
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        $("#form" + g).find("textarea[name=bouygues_ftth_commentairesOI]").text(q)
    });
    $("#form" + g).find("input[name=xml_NombrePotelets]").bind("change", function() {
        var u = this.value;
        if (isNaN(u) || u < 0) {
            alert("Le champ Nombre potelets doit Ãªtre un nombre entier positif.");
            return false
        } else {
            var w = "<h3>Appuis ERDF</h3>";
            var z = "";
            var v = "";
            for (var r = 1; r <= u; r++) {
                var q = "subxml_coordAppuiX_" + r;
                var p = "subxml_coordAppuiY_" + r;
                if ($("#" + q).length > 0) {
                    z = $("#" + q).val()
                } else {
                    z = ""
                }
                if ($("#" + p).length > 0) {
                    v = $("#" + p).val()
                } else {
                    v = ""
                }
                w += "<p>Potelets " + r + "</p>";
                w += "<p><label>CoordonnÃ©e Appuis " + r + " (X)  </label><input title='CoordonnÃ©e Appuis " + r + " (X)' type='text' value='" + z + "' name='" + q + "' id='" + q + "' required /></p>";
                w += "<p><label>CoordonnÃ©e Appuis " + r + " (Y)  </label><input title='CoordonnÃ©e Appuis " + r + " (Y)' type='text' value='" + v + "' name='" + p + "' id='" + p + "' required /></p>";
                w += "<hr>"
            }
            $("#DIVNombrePotelets_" + d).html(w).trigger("create").unbind();
            return false
        }
    });
    var f = $("#form" + g).find('select[name="bouygues_ftth_typeEmplacementPMRealise"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="bouygues_ftth_categorieRaccoLogementRealise"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
}

function Intervention_IsPMCorrected_Switch(d) {
    var c = $(d).attr("checked");
    var b = $(d).parents("form");
    if (b) {
        if (c) {
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_pmRef]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_codeInsee]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_commune]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_typeVoie]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_nomVoie]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_numVoie]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("select[name=bouygues_ftth_extNumVoie]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("textarea[name=bouygues_ftth_correctedPmAccess]").get(0), 0, false)
        } else {
            Set_Disabled($(b).find("input[name=bouygues_ftth_pmRef]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_codeInsee]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_commune]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_typeVoie]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_nomVoie]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_numVoie]"));
            Set_Disabled($(b).find("select[name=bouygues_ftth_extNumVoie]"));
            Set_Disabled($(b).find("textarea[name=bouygues_ftth_correctedPmAccess]"))
        }
    }
}

function Intervention_isReproOI_Switch(d) {
    var c = $(d).attr("checked");
    var b = $(d).parents("form");
    if (b) {
        if (c) {
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_causeOI]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_imputationCode]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_moduleName]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_modulePosition]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_moduleCableRef]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_moduleTubeInfo]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_moduleFiberInfo]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_reference]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_localisation]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_referenceCable]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_tubeInfo]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_fiberInfo]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_connecteurPriseNum]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_connecteurPriseCouleur]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("select[name=bouygues_ftth_canalCommunicationOi]").get(0), 0, true)
        } else {
            Set_Disabled($(b).find("input[name=bouygues_ftth_causeOI]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_imputationCode]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_moduleName]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_modulePosition]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_moduleCableRef]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_moduleTubeInfo]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_moduleFiberInfo]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_reference]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_localisation]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_referenceCable]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_tubeInfo]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_fiberInfo]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_connecteurPriseNum]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_connecteurPriseCouleur]"));
            Set_Disabled($(b).find("select[name=bouygues_ftth_canalCommunicationOi]"))
        }
    }
}

function Intervention_isReproOC_Switch(d) {
    var c = $(d).attr("checked");
    var b = $(d).parents("form");
    if (b) {
        if (c) {
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_causeOC]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_pmId]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_pmLink]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_pmWdm]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_pmPanel]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("input[name=bouygues_ftth_pmPort]").get(0), 0, true);
            SetSelectedByOptionAndEnable($(b).find("select[name=bouygues_ftth_canalCommunicationOc]").get(0), 0, true)
        } else {
            Set_Disabled($(b).find("input[name=bouygues_ftth_causeOC]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_pmId]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_pmLink]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_pmWdm]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_pmPanel]"));
            Set_Disabled($(b).find("input[name=bouygues_ftth_pmPort]"));
            Set_Disabled($(b).find("select[name=bouygues_ftth_canalCommunicationOc]"))
        }
    }
}

function init_Intervention_Add_37(d, e, g, c) {
    LoadSelectFromHiddenStorage(e, "wincor_rcbt_inter_type", "#wincor_rcbt_inter_type");
    LoadSelectFromHiddenStorage(e, "wincor_rcbt_device_type1", "#wincor_rcbt_device_type");
    LoadSelectFromHiddenStorage(e, "wincor_rcbt_device_type2", "#wincor_rcbt_device_type");
    LoadSelectFromHiddenStorage(e, "wincor_rcbt_device_type3", "#wincor_rcbt_device_type");
    LoadSelectFromHiddenStorage(e, "wincor_rcbt_device_type4", "#wincor_rcbt_device_type");
    var f = $("#form" + e).find('select[name="wincor_rcbt_inter_type"]');
    if ($(f).attr("my_sel") != "") {
        var b = $(f).attr("my_sel");
        $(f).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var f = $("#form" + e).find('select[name="wincor_rcbt_device_type1"]');
    if ($(f).attr("my_sel") != "") {
        var b = $(f).attr("my_sel");
        $(f).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var f = $("#form" + e).find('select[name="wincor_rcbt_device_type2"]');
    if ($(f).attr("my_sel") != "") {
        var b = $(f).attr("my_sel");
        $(f).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var f = $("#form" + e).find('select[name="wincor_rcbt_device_type3"]');
    if ($(f).attr("my_sel") != "") {
        var b = $(f).attr("my_sel");
        $(f).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var f = $("#form" + e).find('select[name="wincor_rcbt_device_type4"]');
    if ($(f).attr("my_sel") != "") {
        var b = $(f).attr("my_sel");
        $(f).children("option[value=" + b + "]").attr("selected", "selected")
    }
}

function init_Intervention_Add_39(b, e, f, c) {
    LoadSelectFromHiddenStorage(e, "voda_prem_res_class_int", "#voda_prem_res_class_int");
    LoadSelectFromHiddenStorage(e, "voda_prem_res_cat_chia", "#voda_prem_res_cat_chia");
    var d = $("#form" + e).find('select[name="voda_prem_res_rib_eseg"]');
    if ($(d).attr("my_sel") != "") {
        var m = $(d).attr("my_sel");
        $(d).children("option[value=" + m + "]").attr("selected", "selected")
    }
    var n = e + "_add";
    var h = $("#form" + e + "_add");
    var g = "#form" + e + "_logistic";
    h.find("input[type=button].btn_tech_assign").click(function() {
        var q = $(this).parents("#row").attr("data-id_piece");
        var o = $(this).parents("#row").attr("data-id_inter");
        var p = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: q,
                id_inter: o
            }, function() {
                $(g).load("logistics/get_parts_by_inter", {
                    inside: "yes",
                    sub_id: o,
                    partner_id: f
                }, function(v, r, u) {
                    p.remove();
                    UNblockAllUI()
                })
            })
        }
    })
}

function init_Intervention_Add_40(e, f, h, d) {
    var c = new Date(SRVtime * 1000);
    $("#form" + f).find("[name=byt_pm_date_appel_support]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        minDate: new Date(c.getTime() - CalendarDeltaMin),
        maxDate: new Date(c.getTime() + CalendarDeltaMax),
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form" + f).find("[name=byt_pm_heure_appel_support]").timepicker({});
    var g = $("#form" + f).find('select[name="byt_pm_etiq_mod"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_inst_bo"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_test_synchro_ont"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_detail_synchro_ont"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_lovage_fibre_bo"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_presence_fibre"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_conf_coupl_pm"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_type_coupl_inst"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_test_cont_nro_pm"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_loc_test_nok"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_test_reflec"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_test_synchro_post_audit"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var g = $("#form" + f).find('select[name="byt_pm_detail_ont_post_audit"]');
    if ($(g).attr("my_sel") != "") {
        var b = $(g).attr("my_sel");
        $(g).children("option[value=" + b + "]").attr("selected", "selected")
    }
}

function init_Intervention_Add_38(c, n, o, g) {
    codeType = "ROOT";
    rootId = 0;
    blockAllUI();
    var h = $(c).find("select[name=wincor_product_group]");
    h.load("interventions/load_wincor_codes_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        rootId: rootId,
        codeType: codeType
    }, function(v, q, u) {
        chkRes(h, q, v);
        if ($(h).attr("my_sel") != "") {
            var r = $(h).attr("my_sel")
        }
        get_option_from_value(h, r).attr("selected", "selected");
        UNblockAllUI()
    });
    var p = $(c).find("select[name=wincor_product_group]").attr("my_sel");
    var b = $(c).find("select[name=wincor_error_cause]").attr("my_sel");
    if (p > 0) {
        var m = "wincor_elim_activities";
        blockAllUI();
        var f = $(c).find("select[name=" + m + "]");
        f.load("interventions/load_wincor_codes_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
            rootId: p,
            codeType: "ERROR_ELIM_ACTI"
        }, function(v, q, u) {
            chkRes(f, q, v);
            if ($(f).attr("my_sel") != "") {
                var r = $(f).attr("my_sel");
                get_option_from_value(f, r).attr("selected", "selected")
            }
            UNblockAllUI()
        });
        var m = "wincor_error_cause";
        blockAllUI();
        var e = $(c).find("select[name=" + m + "]");
        e.load("interventions/load_wincor_codes_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
            rootId: p,
            codeType: "ERROR_CAUSE"
        }, function(v, q, u) {
            chkRes(e, q, v);
            if ($(e).attr("my_sel") != "") {
                var r = $(e).attr("my_sel");
                get_option_from_value(e, r).attr("selected", "selected")
            }
            UNblockAllUI()
        })
    }
    if (b > 0) {
        var m = "wincor_error_location";
        blockAllUI();
        var d = $(c).find("select[name=" + m + "]");
        d.load("interventions/load_wincor_codes_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
            rootId: b,
            codeType: "ERROR_LOC"
        }, function(v, q, u) {
            chkRes(d, q, v);
            if ($(d).attr("my_sel") != "") {
                var r = $(d).attr("my_sel");
                get_option_from_value(d, r).attr("selected", "selected")
            }
            UNblockAllUI()
        })
    }
    $("#formwincor_ws_inter_complement").submit(function(r) {
        r.stopImmediatePropagation();
        var q = {
            target: "#dummy_container",
            url: "interventions/reject_wincor_intervention",
            type: "post",
            beforeSubmit: function(z, v, u) {
                var w = v[0];
                if (w.wincor_motif_tana.value == "") {
                    $.MyDLG("Pour valider la demande de rejet, merci de renseigner un motif.", dlg_button_ok, "", function() {}, function() {});
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(v, u) {
                tabs_delimiter_height();
                UNblockAllUI();
                idInter = $(c).find("input[name=sub_id]").val();
                idClient = $(c).find("input[name=client_id]").val();
                RefreshInterventionIfItsOpened(idClient, idInter)
            }
        };
        $("#formwincor_ws_inter_complement").ajaxSubmit(q);
        return false
    })
}

function wincor_code_change(g, e, d) {
    var c = $(g).children("option:eq(" + $(g).get(0).selectedIndex + ")");
    var b = c.attr("value");
    if (e == "wincor_product_group") {
        var f = "wincor_elim_activities";
        var m = $(d).find("select[name=" + f + "]");
        m.load("interventions/load_wincor_codes_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
            rootId: b,
            codeType: "ERROR_ELIM_ACTI"
        }, function(p, n, o) {
            chkRes(m, n, p);
            UNblockAllUI()
        });
        var f = "wincor_error_cause";
        var h = $(d).find("select[name=" + f + "]");
        h.load("interventions/load_wincor_codes_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
            rootId: b,
            codeType: "ERROR_CAUSE"
        }, function(p, n, o) {
            chkRes(m, n, p);
            UNblockAllUI()
        });
        var f = "wincor_error_location";
        var m = $(d).find("select[name=" + f + "]");
        m.load("interventions/load_wincor_codes_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
            rootId: b,
            codeType: "ERROR_LOC"
        }, function(p, n, o) {
            chkRes(m, n, p);
            UNblockAllUI()
        })
    } else {
        if (e == "wincor_error_cause") {
            var f = "wincor_error_location";
            var m = $(d).find("select[name=" + f + "]");
            m.load("interventions/load_wincor_codes_list/" + default_language + "/0/0/0/0/0/0/dummy.html", {
                rootId: b,
                codeType: "ERROR_LOC"
            }, function(p, n, o) {
                chkRes(m, n, p);
                UNblockAllUI()
            })
        }
    }
}

function init_Intervention_Add_42(c, d, e, b) {
    LoadSelectFromHiddenStorage(d, "bp2i_code_panne", "#bp2i_code_panne")
}

function init_Intervention_Add_51(g, e, m, q, n, h, p, c, d, b) {
    blockAllUI();
    var f = $("#form" + b).find("[name=kabel_select_prestation]");
    f.load("interventions/common_kabel_prestation/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        partner_id: n
    }, function(v, r, u) {
        chkRes(f, r, v);
        UNblockAllUI()
    });
    var o = "#form" + d + "_add";
    $("#form" + b).submit(function(u) {
        u.stopImmediatePropagation();
        var r = {
            target: o,
            url: "interventions/save_kabel_prestation",
            type: "post",
            beforeSubmit: function(C, w, v) {
                var z = w[0];
                if (z.kabel_prestation_quantites.value == "" || z.kabel_prestation_quantites.value == "0") {
                    return false
                }
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(w, v) {
                UNblockAllUI()
            }
        };
        $("#form" + b).ajaxSubmit(r);
        return false
    })
}

function DeleteKabelPrestation(c, f, e, h, q, m, g, p, b, d, o) {
    var n = "#form" + d + "_add";
    $(n).load("interventions/delete_kabel_prestation", {
        id_prestation: c,
        client_id: f,
        sub_id: e,
        arch: h,
        additional_id: q,
        partner_id: m,
        tabindex_cnt: g,
        form_id: p,
        addon_container_id: b,
        IDs_suff: d
    }, function(v, r, u) {
        chkRes($(n), r, v);
        UNblockAllUI()
    })
}

function init_Intervention_Add_54(d, e, g, c) {
    var f = $("#form" + e).find('select[name="anovo_philips_condition"]');
    if ($(f).attr("my_sel") != "") {
        var b = $(f).attr("my_sel");
        $(f).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var f = $("#form" + e).find('select[name="anovo_philips_symptom"]');
    if ($(f).attr("my_sel") != "") {
        var b = $(f).attr("my_sel");
        $(f).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var f = $("#form" + e).find('select[name="anovo_philips_section"]');
    if ($(f).attr("my_sel") != "") {
        var b = $(f).attr("my_sel");
        $(f).children("option[value=" + b + "]").attr("selected", "selected")
    }
    var f = $("#form" + e).find('select[name="anovo_philips_soft"]');
    if ($(f).attr("my_sel") != "") {
        var b = $(f).attr("my_sel");
        $(f).children("option[value=" + b + "]").attr("selected", "selected")
    }
}

function init_Intervention_Add_74(e, d, h, u, m, f, p, c, g, b) {
    var n = $("#form" + g + "_add");
    var v = "#form" + g + "_add_materialslide";
    var r = "#form" + g + "_add_prestationsslide";
    var q = $("#form" + g + "_add_material_table");
    var o = $("#form" + g + "_add_prestations_table");
    $(v).bind("click", function() {
        $(n.val() + " div.divopen_material_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_material_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Materialdaten...</div>';
                $(q).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("stock/get_stock_tech_from_inter_DE", {
                    sub_id: d,
                    IDs_suff: g
                }, function(w) {
                    $(q).hide().html(w).fadeIn("fast")
                })
            }
            $(v).next("div").slideToggle("fast")
        })
    });
    $(r).bind("click", function() {
        $(n.val() + " div.divopen_prestations_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_prestations_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(o).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_ista_prestation_add", {
                    sub_id: d,
                    IDs_suff: g,
                    IDs_suff1: b,
                    partner_id: m
                }, function(w) {
                    $(o).hide().html(w).fadeIn("fast")
                })
            }
            $(r).next("div").slideToggle("fast")
        })
    })
}

function init_Intervention_Add_76(e, d, m, p, n, g, o, c, h, b) {
    LoadSelectFromHiddenStorage(h, "ik_statusTechniker", "#vodafone_de_status_techniker");
    LoadSelectFromHiddenStorage(h, "ik_statusBauakte", "#vodafone_de_status_bauakte");
    LoadSelectFromHiddenStorage(h, "ik_escalationKunde", "#vodafone_de_eskalation_kunde");
    LoadSelectFromHiddenStorage(h, "togs_tip", "#yesNoCode");
    LoadSelectFromHiddenStorage(h, "togs_hardwaretausch", "#yesNoCode");
    LoadSelectFromHiddenStorage(h, "togs_smb", "#yesNoCode");
    LoadSelectFromHiddenStorage(h, "togs_vertragsart", "#vodafone_de_vertragsart");
    LoadSelectFromHiddenStorage(h, "togs_abschluss_durch", "#vodafone_de_togo_abschluss");
    LoadSelectFromHiddenStorage(h, "togs_vertrags_status", "#vodafone_de_vertragsstatus");
    LoadSelectFromHiddenStorage(h, "togs_gemeldet", "#vodafone_de_ksc_gemeldet");
    LoadSelectFromHiddenStorage(h, "togs_kundenkontakt", "#vodafone_de_kundenkontakt");
    LoadSelectFromHiddenStorage(h, "togs_beratungFuer", "#vodafone_de_togo_beratung");
    var f = $("#" + o).find("select[name=partner_id]");
    $(f).attr("class", "disabled_inf");
    $(f).find(":not(:selected)").remove();
    var f = $("#" + o).find("select[name=type_inter_todo_id]");
    $(f).attr("class", "disabled_inf");
    $(f).find(":not(:selected)").remove();
    if ($("#client_id_" + e + " div span").eq(1).text() == "Neuer Auftrag") {
        $("#client_id_" + e + " div span").eq(1).remove()
    }
    etat = parseInt($("#" + o + " #inter_stat").val());
    if (etat == 0) {
        $("#" + o + " #inter_stat option[value='11']").remove();
        $("#" + o + " #inter_stat option[value='13']").remove()
    }
    $("textarea", "#form" + h).tooltip({
        bodyHandler: function() {
            var r = "<b>" + $(this).prev().html() + "</b><hr/>" + $(this).html();
            r = r.replace(/([^>\r\n]?)(\r\n|\n\r|\r|\n)/g, "$1<br/>$2");
            var q = "<span class=''>" + r + "</span>";
            return q
        },
        track: true,
        delay: 0,
        showURL: false,
        fade: 0
    });
    $("#" + o).find("[name=unterauftrag]").bind("click", function() {
        $("#intervention_add_sub_interventionC_" + h).html('<div id="intervention_add_sub_intervention_' + h + '">Unterauftrag</div>');
        $("#intervention_add_sub_intervention_" + h).load("interventions/load_vodafone_de_interventionAddSubIntervention", {
            sub_id: d,
            id_suff: h
        }, function() {
            UNblockAllUI()
        });
        vodafone_de_interventionAddSubIntervention(d, e, h)
    });
    ClientDetails_Common_set_On_Change($(c));
    DisableAllForParthers($("#" + o));
    tabs_delimiter_height()
}

function vodafone_de_interventionAddSubIntervention(b, d, c) {
    $("#intervention_add_sub_intervention_" + c).dialog({
        autoOpen: true,
        modal: true,
        resizable: false,
        draggable: false,
        open: function(e, f) {
            $(this).dialog("option", "height", 445);
            $(this).dialog("option", "width", 836);
            $(this).dialog("option", "position", "center");
            $("#intervention_add_sub_intervention_" + c).css("overflow", "hidden");
            $(".ui-dialog-titlebar").hide()
        },
        close: function(e, f) {
            $("#intervention_add_sub_intervention_" + c).dialog("destroy").remove()
        },
        buttons: {
            Abbrechen: function() {
                $(this).dialog("close")
            },
            Speichern: function() {
                var e = $("#formVfDeAddSubInt_" + c).serializeArray();
                $.ajax({
                    url: "/interventions/save_vodafone_de_interventionAddSubIntervention",
                    type: "POST",
                    data: e,
                    dataType: "json",
                    once: false,
                    success: function(f) {
                        UNblockAllUI();
                        if (f.success == "ok") {
                            $("#intervention_add_sub_intervention_" + c).dialog("close");
                            $("#intervention_add_sub_intervention_" + c).dialog("destroy").remove();
                            client_details_refresh_internal2(d, f.new_id)
                        } else {
                            alert("ERROR:\n\n" + f.success)
                        }
                    },
                    error: function(h, f, g) {
                        if (h.status == 200) {
                            alert(f)
                        } else {
                            alert(h.status);
                            alert(g)
                        }
                    }
                })
            }
        }
    });
    $("#intervention_add_sub_intervention_" + c).removeClass("ui-dialog-content")
}

function init_Intervention_Add_55(O, e, R, J, L, P, H, Q, n, p) {
    var G = n + "_add";
    var C = $("#form" + n + "_add");
    var o = "#form" + n + "_logistic";
    var K = "#form" + n + "_add_materialslide";
    var u = "#form" + n + "_add_prestationsslide";
    var v = "#form" + n + "_add_activitieslide";
    var c = $("#form" + n + "_add_material_table");
    var E = $("#form" + n + "_add_prestations_table");
    var m = "#form" + n + "_add_history_uep_slide";
    var f = $("#form" + n + "_add_history_uep_table");
    var D = "#form" + n + "_add_history_fibre_slide";
    var d = $("#form" + n + "_add_history_fibre_table");
    var r = "#form" + n + "_add_history_clinie_slide";
    var b = $("#form" + n + "_add_history_clinie_table");
    var z = "#form" + n + "_add_history_client_slide";
    var h = $("#form" + n + "_add_history_client_table");
    var N = "#form" + n + "_add_history_adress_slide";
    var g = $("#form" + n + "_add_history_adress_table");
    var M = "#form" + n + "_add_abbruch_code_slide";
    var q = $("#form" + n + "_add_abbruch_code_table");
    $("#form" + n + "_abbruch_code_button").bind("click", function() {
        $.ajax({
            url: "interventions/unitymedia_create_cancelation_code",
            type: "POST",
            data: {
                sub_id: e,
                IDs_suff: n
            },
            dataType: "json",
            once: false,
            success: function(S) {
                txt = '<br /><br /><b><font size="24" color="red">' + S.code + "</font></b></br /></br />";
                txt += "erstellt: " + S.emp + " " + S.time;
                $("#form" + n + " #abbruch_code").val(S.code);
                $("#form" + n + " #abbruch_code_emp").val(S.emp);
                $("#form" + n + " #abbruch_code_time").val(S.time);
                $(q).hide().html(txt).fadeIn("fast")
            },
            error: function(U, S, T) {
                if (U.status == 200) {
                    alert(S)
                } else {
                    alert(U.status);
                    alert(T)
                }
            }
        })
    });
    $(K).bind("click", function() {
        $(C.val() + " div.divopen_material_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_material_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Materialdaten...</div>';
                $(c).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("stock/get_stock_tech_from_inter_DE", {
                    sub_id: e,
                    IDs_suff: n
                }, function(S) {
                    $(c).hide().html(S).fadeIn("fast")
                })
            }
            $(K).next("div").slideToggle("fast")
        })
    });
    $(u).bind("click", function() {
        $(C.val() + " div.divopen_prestations_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_prestations_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(E).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_unitymedia_prestation_add", {
                    sub_id: e,
                    IDs_suff: n,
                    IDs_suff1: p,
                    partner_id: L
                }, function(S) {
                    $(E).hide().html(S).fadeIn("fast")
                })
            }
            $(u).next("div").slideToggle("fast")
        })
    });
    $(m).bind("click", function() {
        $(C.val() + " div.divopen_history_uep_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_history_uep_slide" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(f).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_unitymedia_history_add", {
                    type: "uep",
                    sub_id: e,
                    IDs_suff: n,
                    IDs_suff1: p,
                    partner_id: L
                }, function(S) {
                    $(f).hide().html(S).fadeIn("fast")
                })
            }
            $(m).next("div").slideToggle("fast")
        })
    });
    $(D).bind("click", function() {
        $(C.val() + " div.divopen_history_fibre_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_history_fibre_slide" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(d).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_unitymedia_history_add", {
                    type: "fibre",
                    sub_id: e,
                    IDs_suff: n,
                    IDs_suff1: p,
                    partner_id: L
                }, function(S) {
                    $(d).hide().html(S).fadeIn("fast")
                })
            }
            $(D).next("div").slideToggle("fast")
        })
    });
    $(r).bind("click", function() {
        $(C.val() + " div.divopen_history_clinie_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_history_clinie_slide" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(b).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_unitymedia_history_add", {
                    type: "clinie",
                    sub_id: e,
                    IDs_suff: n,
                    IDs_suff1: p,
                    partner_id: L
                }, function(S) {
                    $(b).hide().html(S).fadeIn("fast")
                })
            }
            $(r).next("div").slideToggle("fast")
        })
    });
    $(z).bind("click", function() {
        $(C.val() + " div.divopen_history_client_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_history_client_slide" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(h).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_unitymedia_history_add", {
                    type: "client",
                    sub_id: e,
                    IDs_suff: n,
                    IDs_suff1: p,
                    partner_id: L
                }, function(S) {
                    $(h).hide().html(S).fadeIn("fast")
                })
            }
            $(z).next("div").slideToggle("fast")
        })
    });
    $(N).bind("click", function() {
        $(C.val() + " div.divopen_history_adress_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_history_adress_slide" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(g).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_unitymedia_history_add", {
                    type: "adress",
                    sub_id: e,
                    IDs_suff: n,
                    IDs_suff1: p,
                    partner_id: L
                }, function(S) {
                    $(g).hide().html(S).fadeIn("fast")
                })
            }
            $(N).next("div").slideToggle("fast")
        })
    });
    $(M).bind("click", function() {
        $(C.val() + " div.divopen_abbruch_code_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif"
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif"
            }
            $(M).next("div").slideToggle("fast")
        })
    });
    $(v).bind("click", function() {
        $(v).next("div").slideToggle("fast")
    });
    var w = new Date();
    $("#wisp_form" + n + "_5").find("[name=termin]").datepicker();
    $("#form" + n).find("[name=interv_begin_hour]").timepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        minDate: new Date(w.getTime() - CalendarDeltaMin),
        maxDate: new Date(w.getTime() + CalendarDeltaMax),
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#formclient" + n).find("[name=ende]").timepicker({});
    $("div[name=unitymedia_object_information_" + n).load("interventions/get_unitymedia_object_information", {
        suff: n
    }, function(U, S, T) {
        UNblockAllUI()
    });
    LoadSelectFromHiddenStorage(n, "unitymedia_faultCode", "#unitymedia_faultCode");
    LoadSelectFromHiddenStorage(n, "unitymedia_fixCode", "#unitymedia_fixCode");
    LoadSelectFromHiddenStorage(n, "unitymedia_solutionCode", "#unitymedia_solutionCode");
    LoadSelectFromHiddenStorage(n, "unitymedia_ingressmessung", "#yesNoCode");
    LoadSelectFromHiddenStorage(n, "unitymedia_modem_location", "#unitymedia_modem_location");
    var I = $("#form" + n).find("select[name=inter_stat]");
    if ($(I).attr("my_sel") != "") {
        if ((user_group_id == 5) || (user_group_id == 15) || (user_group_id == 16)) {
            if ($(I).val() != 1) {
                $(".btn_tech_assign").hide();
                $(".btn_tech_unassign").hide();
                $(".span_suprim").attr("onclick", "").unbind("click");
                $("#submitCode_prestation" + n).hide();
                $("#submit" + n).hide();
                $("[id^=unitymedia_prestation_quantites]").hide()
            }
        }
    }
}

function init_Intervention_Prestation_Add_55(c, d, f) {
    blockAllUI();
    var b = $("#form" + c + "_add_prestations_table");
    var e = $("#form" + d).find("[name=unitymedia_select_prestation]");
    e.load("interventions/common_unitymedia_prestation/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        partner_id: f
    }, function(m, g, h) {
        chkRes(e, g, m);
        UNblockAllUI()
    });
    $("#form" + d).submit(function(h) {
        h.stopImmediatePropagation();
        blockAllUI();
        var g = {
            target: b,
            url: "interventions/save_unitymedia_prestation",
            type: "post",
            beforeSubmit: function(p, n, m) {
                var o = n[0];
                if (o.unitymedia_prestation_quantites.value == "" || o.unitymedia_prestation_quantites.value == "0") {
                    return false
                }
                UNblockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(n, m) {
                UNblockAllUI()
            }
        };
        $("#form" + d).ajaxSubmit(g);
        return false
    });
    $("#form_spin_" + d).submit(function(h) {
        h.stopImmediatePropagation();
        blockAllUI();
        var g = {
            target: b,
            url: "interventions/save_unitymedia_spin",
            type: "post",
            error: function() {
                UNblockAllUI()
            },
            success: function(n, m) {
                UNblockAllUI();
                client_details_close(this)
            }
        };
        $("#form_spin_" + d).ajaxSubmit(g);
        return false
    })
}

function init_Intervention_Prestation_Add_72(c, d, f) {
    blockAllUI();
    var b = $("#form" + c + "_add_prestations_table");
    var e = $("#form" + d).find("[name=vodafone_select_prestation]");
    e.load("interventions/common_vodafone_prestation/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        partner_id: f
    }, function(m, g, h) {
        chkRes(e, g, m);
        UNblockAllUI()
    });
    $("#form" + d).submit(function(h) {
        h.stopImmediatePropagation();
        blockAllUI();
        var g = {
            target: b,
            url: "interventions/save_vodafone_prestation",
            type: "post",
            beforeSubmit: function(p, n, m) {
                var o = n[0];
                if (o.vodafone_prestation_quantites.value == "" || o.vodafone_prestation_quantites.value == "0") {
                    return false
                }
                UNblockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(n, m) {
                UNblockAllUI()
            }
        };
        $("#form" + d).ajaxSubmit(g);
        return false
    });
    $("#form_spin_" + d).submit(function(h) {
        h.stopImmediatePropagation();
        blockAllUI();
        var g = {
            target: b,
            url: "interventions/save_vodafone_spin",
            type: "post",
            error: function() {
                UNblockAllUI()
            },
            success: function(n, m) {
                UNblockAllUI();
                client_details_close(this)
            }
        };
        $("#form_spin_" + d).ajaxSubmit(g);
        return false
    })
}

function init_Intervention_Prestation_Add_74(c, d, f) {
    blockAllUI();
    var b = $("#form" + c + "_add_prestations_table");
    var e = $("#form" + d).find("[name=ista_select_prestation]");
    e.load("interventions/common_ista_prestation/" + default_language + "/0/0/0/0/0/0/dummy.html", {
        partner_id: f
    }, function(m, g, h) {
        chkRes(e, g, m);
        UNblockAllUI()
    });
    $("#form" + d).submit(function(h) {
        h.stopImmediatePropagation();
        blockAllUI();
        var g = {
            target: b,
            url: "interventions/save_ista_prestation",
            type: "post",
            beforeSubmit: function(p, n, m) {
                var o = n[0];
                if (o.ista_prestation_quantites.value == "" || o.ista_prestation_quantites.value == "0") {
                    return false
                }
                UNblockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(n, m) {
                UNblockAllUI()
            }
        };
        $("#form" + d).ajaxSubmit(g);
        return false
    })
}

function init_Intervention_Stock_Add_55(d) {
    var c = $("#form" + d + "_add");
    var b = "#form" + d + "_logistic";
    var e = $("select[name=partner_id]", "#client_" + d).val();
    $("#formclient" + d).find("[name=ende]").timepicker({});
    c.find("input[type=button].btn_tech_assign").click(function() {
        var n = $(this).parents("#row").attr("data-id_piece");
        var f = $(this).parents("#row").attr("data-id_inter");
        var m = parseInt($(this).parents("#row").attr("data-qt"));
        var h = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            var g = 1;
            if (m > 1) {
                g = parseInt(prompt("Please select a quantity (max=" + m + ")", "1"))
            }
            if (g < 1) {
                g = 1
            }
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: n,
                id_inter: f,
                qt: g
            }, function() {
                if (m > 1) {
                    $(b).load("logistics/get_parts_by_inter", {
                        inside: "yes",
                        sub_id: f,
                        partner_id: e
                    }, function(q, o, p) {
                        h.remove();
                        UNblockAllUI()
                    });
                    UNblockAllUI()
                } else {
                    $(b).load("logistics/get_parts_by_inter", {
                        inside: "yes",
                        sub_id: f,
                        partner_id: e
                    }, function(q, o, p) {
                        h.remove();
                        UNblockAllUI()
                    })
                }
            })
        }
    })
}

function DeleteUnityMediaPrestation(d, b, e, g, f) {
    blockAllUI();
    var c = "#form" + e + "_add_prestations_table";
    $.post("interventions/delete_unitymedia_prestation", {
        id_prestation: d,
        sub_id: b,
        IDs_suff: e,
        IDs_suff1: g,
        partner_id: f
    }, function(h) {
        $(c).hide().html(h).fadeIn("fast");
        UNblockAllUI()
    })
}

function DeleteVodafonePrestation(d, b, e, g, f) {
    blockAllUI();
    var c = "#form" + e + "_add_prestations_table";
    $.post("interventions/delete_vodafone_prestation", {
        id_prestation: d,
        sub_id: b,
        IDs_suff: e,
        IDs_suff1: g,
        partner_id: f
    }, function(h) {
        $(c).hide().html(h).fadeIn("fast");
        UNblockAllUI()
    })
}

function DeleteIstaPrestation(d, b, e, g, f) {
    blockAllUI();
    var c = "#form" + e + "_add_prestations_table";
    $.post("interventions/delete_ista_prestation", {
        id_prestation: d,
        sub_id: b,
        IDs_suff: e,
        IDs_suff1: g,
        partner_id: f
    }, function(h) {
        $(c).hide().html(h).fadeIn("fast");
        UNblockAllUI()
    })
}

function init_Intervention_Add_56(c, g, h, e, b) {
    var d = "#" + b;
    var o = new Date(SRVtime * 1000);
    $("#form" + g).find("[name=sgtul_date_deb_inter]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        minDate: new Date(o.getTime() - CalendarDeltaMin),
        maxDate: new Date(o.getTime() + CalendarDeltaMax),
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form" + g).find("[name=sgtul_date_fin_inter]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        minDate: new Date(o.getTime() - CalendarDeltaMin),
        maxDate: new Date(o.getTime() + CalendarDeltaMax),
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form" + g).find("[name=sgtul_heure_deb_inter]").timepicker({});
    $("#form" + g).find("[name=sgtul_heure_fin_inter]").timepicker({});
    var f = $("#form" + g).find('select[name="sgtul_sec_ecran"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="sgtul_imp_perso_ded"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="sgtul_ouv_tul"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="sgtul_usg_office"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="sgtul_scan_desk"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="sgtul_autres"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="sgtul_caisse_geskes"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="sgtul_caisse_kegk7"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="sgtul_caisse_oce"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="sgtul_caisse_ick"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="sgtul_recette_tech"]');
    if ($(f).attr("my_sel") != "") {
        var n = $(f).attr("my_sel");
        $(f).children("option[value=" + n + "]").attr("selected", "selected")
    }
    var m = "#form" + g + "_add";
    $("#form" + b).submit(function(q) {
        q.stopImmediatePropagation();
        var p = {
            target: m,
            url: "interventions/reset_inter_tul",
            type: "post",
            beforeSubmit: function(v, u, r) {
                blockAllUI();
                return true
            },
            error: function() {
                UNblockAllUI()
            },
            success: function(u, r) {
                UNblockAllUI()
            }
        };
        $("#form" + b).ajaxSubmit(p);
        return false
    })
}

function init_Intervention_Add_59(c, g, h, e, b) {
    var d = "#" + b;
    var n = new Date(SRVtime * 1000);
    $("#form" + g).find("[name=date_deb]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        minDate: new Date(n.getTime() - CalendarDeltaMin),
        maxDate: new Date(n.getTime() + CalendarDeltaMax),
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form" + g).find("[name=date_fin]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeYear: false,
        yearRange: "-1:+1",
        minDate: new Date(n.getTime() - CalendarDeltaMin),
        maxDate: new Date(n.getTime() + CalendarDeltaMax),
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form" + g).find("[name=heure_deb]").timepicker({});
    $("#form" + g).find("[name=heure_fin]").timepicker({});
    var f = $("#form" + g).find('select[name="test"]');
    if ($(f).attr("my_sel") != "") {
        var m = $(f).attr("my_sel");
        $(f).children("option[value=" + m + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="recette"]');
    if ($(f).attr("my_sel") != "") {
        var m = $(f).attr("my_sel");
        $(f).children("option[value=" + m + "]").attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="mod_install_peri"]');
    if ($(f).attr("my_sel") != "") {
        var m = $(f).attr("my_sel");
        $(f).children('option[value="' + m + '"]').attr("selected", "selected")
    }
    $("select[name='mod_install_peri']").change(function() {
        var p = $(this).val();
        p = p.replace(/\s+/g, "");
        switch (p) {
            case "MS510":
                data_option = {
                    "": "",
                    "M2000 Epson": "M2000 Epson",
                    "P2015 HP": "P2015 HP",
                    "EPL-6200 Epson": "EPL-6200 Epson",
                    "EPL-N3000 Epson": "EPL-N3000 Epson"
                };
                break;
            case "MS610":
                data_option = {
                    "": "",
                    "FS-3800 Kyocera": "FS-3800 Kyocera",
                    "EPL-N3000 Epson": "EPL-N3000 Epson",
                    "EPL-N2050 Epson": "EPL-N2050 Epson",
                    "FS-3820 Kyocera": "FS-3820 Kyocera",
                    "M2000 Epson": "M2000 Epson"
                };
                break;
            case "CS510":
                data_option = {
                    "": "",
                    "D120 Epson": "D120 Epson",
                    "K550 HP": "K550 HP"
                };
                break;
            case "SCUNISYS":
                data_option = {
                    "": "Votre choix",
                    ScanCheck: "ScanCheck"
                };
                break;
            default:
                data_option = {
                    "": ""
                };
                break
        }
        var o = $("select[name='mod_repris_peri']");
        o.empty();
        $.each(data_option, function(r, q) {
            o.append(new Option(q, r))
        })
    });
    var f = $("#form" + g).find('select[name="mod_repris_peri"]');
    if ($(f).attr("my_sel") != "") {
        var m = $(f).attr("my_sel");
        $(f).children('option[value="' + m + '"]').attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="mod_install_tul"]');
    if ($(f).attr("my_sel") != "") {
        var m = $(f).attr("my_sel");
        $(f).children('option[value="' + m + '"]').attr("selected", "selected")
    }
    var f = $("#form" + g).find('select[name="mod_repris_tul"]');
    if ($(f).attr("my_sel") != "") {
        var m = $(f).attr("my_sel");
        $(f).children('option[value="' + m + '"]').attr("selected", "selected")
    }
}

function init_Intervention_Add_61(d, e, m, c, h) {
    var g = "#" + h;
    var b = new Date(SRVtime * 1000);
    var f = $("#form" + e).find('select[name="inter_stat"]');
    $(f).children('option[value="9"]').hide()
}

function init_Intervention_Add_63(c, g, h, e, b) {
    var d = "#" + b;
    var n = new Date(SRVtime * 1000);
    LoadSelectFromHiddenStorage(g, "causale_ingaggio_babysitting", "#causale_ingaggio_babysitting");
    var f = $("#form" + g).find('select[name="causale_ingaggio_babysitting"]');
    if ($(f).attr("my_sel") != "") {
        var m = $(f).attr("my_sel");
        $(f).children("option[value=" + m + "]").attr("selected", "selected")
    }
}

function init_Intervention_Add_64(d, e, h, c, g) {
    var f = "#" + g;
    var b = new Date(SRVtime * 1000)
}

function init_Intervention_Add_72(v, c, C, q, u, w, o, z, d, f) {
    var m = d + "_add";
    var h = $("#form" + d + "_add");
    var e = "#form" + d + "_logistic";
    var r = "#form" + d + "_add_materialslide";
    var g = "#form" + d + "_add_prestationsslide";
    var b = $("#form" + d + "_add_material_table");
    var n = $("#form" + d + "_add_prestations_table");
    $(r).bind("click", function() {
        $(h.val() + " div.divopen_material_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_material_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Materialdaten...</div>';
                $(b).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("stock/get_stock_tech_from_inter_DE", {
                    sub_id: c,
                    IDs_suff: d
                }, function(D) {
                    $(b).hide().html(D).fadeIn("fast")
                })
            }
            $(r).next("div").slideToggle("fast")
        })
    });
    $(g).bind("click", function() {
        $(h.val() + " div.divopen_prestations_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_prestations_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(n).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_vodafone_prestation_add", {
                    sub_id: c,
                    IDs_suff: d,
                    IDs_suff1: f,
                    partner_id: u
                }, function(D) {
                    $(n).hide().html(D).fadeIn("fast")
                })
            }
            $(g).next("div").slideToggle("fast")
        })
    });
    var p = $("#form" + d).find("select[name=inter_stat]");
    if ($(p).attr("my_sel") != "") {
        if ((user_group_id == 5) || (user_group_id == 15) || (user_group_id == 16)) {
            if ($(p).val() != 1) {
                $(".btn_tech_assign").hide();
                $(".btn_tech_unassign").hide();
                $(".span_suprim").attr("onclick", "").unbind("click");
                $("#submitCode_prestation" + d).hide();
                $("#submit" + d).hide();
                $("[id^=unitymedia_prestation_quantites]").hide()
            }
        }
    }
}

function check_form_pm2s(d, f, v, m, w) {
    var o = "";
    if (m) {
        if (f == undefined || f == "") {
            o = "Le champ " + v + " est obligatoire"
        }
    } else {
        if (f.substring(0, 1) == " ") {
            o = "Le champ " + v + " ne doit pas commencer par des espaces"
        } else {
            if (w != "") {
                var C = w.split("=");
                var g = C[0];
                var e = C[1];
                var c = g;
                var b = "";
                if (f == undefined || f == "") {
                    if ($("input[name=" + c + "]").is("input:radio")) {
                        b = $("input[name=" + c + "]:checked").val()
                    } else {
                        if ($("input[name=" + c + "]").is("input:checkbox")) {
                            b = $("input[name=" + c + "]:checked").val()
                        } else {
                            b = $("#" + c).val()
                        }
                    }
                    if (b == e) {
                        var h = c;
                        if ($("input[name=" + c + "]").is("input:radio")) {
                            h = $("input[name=" + c + "]").attr("title")
                        } else {
                            h = $("#" + c).attr("title")
                        }
                        if ($("input[name=" + d + "]").is("input:checkbox")) {
                            var r = $("input[name=" + d + "]").attr("class");
                            var u = 0;
                            var p = r.split(" ");
                            for (var n = 0; n < p.length; n++) {
                                if (p[n] != "checkbox") {
                                    r = p[n];
                                    $("." + p[n]).each(function() {
                                        if ($("#" + $(this).attr("id")).is(":checked")) {
                                            u++
                                        }
                                    })
                                }
                            }
                            if (u == 0) {
                                var q = r.split("_");
                                var z = q[1];
                                o = "Vous devez renseigner au moin un (" + z + ") car le champ " + h + " Ã©gale Ã  " + b;
                                if ($("input[name=" + c + "]").is("input:checkbox")) {
                                    if (b == 1) {
                                        o = "Vous devez renseigner au moin un (" + z + ")  car le champ " + h + " est validÃ©"
                                    }
                                } else {
                                    o = "Vous devez renseigner au moin un (" + z + ")  car le champ " + h + " Ã©gale Ã  " + b
                                }
                            }
                        } else {
                            if ($("input[name=" + c + "]").is("input:checkbox")) {
                                if (b == 1) {
                                    o = "Le champ " + v + " est obligatoire (car le champ " + h + " est validÃ©)"
                                }
                            } else {
                                if ($("input[name=" + c + "]").is("input:radio")) {
                                    o = "Le champ " + v + " est obligatoire (car le champ " + h + " Ã©gale Ã  " + b + ")"
                                } else {
                                    o = "Le champ " + v + " est obligatoire (car le champ " + c + "--" + h + " Ã©gale Ã  " + b + ")"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return o
}

function init_Intervention_Add_65(e, d, h, v, m, f, q, c, g, b) {
    var z = g + "_add";
    var o = $("#form" + g + "_add");
    var n = "#form" + g + "_logistic";
    var w = "#form" + g + "_add_materialslide";
    var u = "#form" + g + "_add_prestationsslide";
    var r = $("#form" + g + "_add_material_table");
    var p = $("#form" + g + "_add_prestations_table");
    $(w).bind("click", function() {
        $(o.val() + " div.divopen_material_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_material_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Materialdaten...</div>';
                $(r).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("stock/get_stock_tech_from_inter_DE", {
                    sub_id: d,
                    IDs_suff: g
                }, function(C) {
                    $(r).hide().html(C).fadeIn("fast")
                })
            }
            $(w).next("div").slideToggle("fast")
        })
    });
    $(u).bind("click", function() {
        $(o.val() + " div.divopen_prestations_table img").die("click").live("click", function() {
            if (this.src.match("elbow-minus-nl")) {
                this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
                data = '<div id="' + "form".suff + '_add_prestations_table" align=center><img src="/var/themes/default/img/my_anim_idx.gif">&nbsp;Lade Daten...</div>';
                $(p).hide().html(data).fadeIn("fast")
            } else {
                this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
                $.post("interventions/get_unitymedia_prestation_add", {
                    sub_id: d,
                    IDs_suff: g,
                    IDs_suff1: b,
                    partner_id: m
                }, function(C) {
                    $(p).hide().html(C).fadeIn("fast")
                })
            }
            $(u).next("div").slideToggle("fast")
        })
    })
}

function init_Intervention_Add_68(c, m, o, e, b) {
    var d = "#" + b;
    var u = new Date(SRVtime * 1000);
    var r = $("#form" + m).find('select[name="echange_std"]');
    if ($(r).attr("my_sel") != "") {
        var h = $(r).attr("my_sel");
        $(r).children('option[value="' + h + '"]').attr("selected", "selected")
    }
    var q = $("#form" + m).find('select[name="mat_panne"]');
    if ($(q).attr("my_sel") != "") {
        var g = $(q).attr("my_sel");
        $(q).children('option[value="' + g + '"]').attr("selected", "selected");
        var p = $("#form" + m).find('select[name="code_panne"]');
        var n = load_select_code_panne(g);
        p.empty();
        $.each(n, function(w, v) {
            p.append(new Option(v, w))
        });
        if ($(p).attr("my_sel") != "") {
            var f = $(p).attr("my_sel");
            $(p).children('option[value="' + f + '"]').attr("selected", "selected")
        }
    }
    $("select[name='mat_panne']").change(function() {
        var w = $(this).val();
        w = w.replace(/\s+/g, "");
        var z = load_select_code_panne(w);
        var v = $("select[name='code_panne']");
        v.empty();
        $.each(z, function(D, C) {
            v.append(new Option(C, D))
        })
    })
}

function load_select_code_panne(b) {
    switch (b) {
        case "1":
            data_option = {
                "": "",
                ALIM: "ProblÃ¨me d'alimentation",
                MASSICOT: "ProblÃ¨me de massicot",
                MECANISME: "Pb matÃ©riel",
                TETE: "ProblÃ¨me sur tÃªte d'impression",
                NETTOYAGE: "Nettoyage effectuÃ©",
                CASSE: "Casse constatÃ©e",
                PASDEPANNE: "Pas de panne constatÃ©e",
                AUTRE: "Autre problÃ¨me"
            };
            break;
        case "2":
            data_option = {
                "": "",
                CONNECT: "ProblÃ¨me de connectique",
                MECA: "ProblÃ¨me dans mÃ©canisme",
                NETTOYAGE: "Nettoyage effectuÃ©",
                CASSE: "Casse constatÃ©e",
                PASDEPANN: "Pas de panne constatÃ©e",
                AUTRE: "Autre problÃ¨me"
            };
            break;
        case "3":
            data_option = {
                "": "",
                ALIM: "Pb Alimentation",
                ALLUME_PAS: "Ne s'allume pas",
                SE_BLOQUE: "Se bloque",
                PB_AFFICH: "ProblÃ¨me d'affichage",
                LAZ_SCAN: "ProblÃ¨me de Laser / Faisceau / Scanner",
                TON_BRUIT: "ProblÃ¨me de tonalitÃ© / bruit",
                LIAIS_BAS: "ProblÃ¨me de liaison avec la base RF",
                MISE_TENS: "ProblÃ¨me de mise sous tension",
                TRANSMISS: "ProblÃ¨me de transmission",
                BUT_TOUCH: "ProblÃ¨me de boutons / touches",
                PARAM: "ProblÃ¨me de paramÃ©trage",
                CASSE: "Casse constatÃ©e",
                PASDEPANNE: "Pas de panne constatÃ©e",
                CARTEMERE: "Carte mÃ¨re HS",
                AUTRE: "Autre problÃ¨me"
            };
            break;
        case "4":
            data_option = {
                "": "",
                ALIM: "Pb Alimentation",
                ALLUME_PAS: "Ne s'allume pas",
                SE_BLOQUE: "Se bloque",
                PB_AFFICH: "ProblÃ¨me d'affichage",
                LAZ_SCAN: "ProblÃ¨me de Laser / Faisceau / Scanner",
                TON_BRUIT: "ProblÃ¨me de tonalitÃ© / bruit",
                LIAIS_BAS: "ProblÃ¨me de liaison avec la base RF",
                MISE_TENS: "ProblÃ¨me de mise sous tension",
                TRANSMISS: "ProblÃ¨me de transmission",
                BUT_TOUCH: "ProblÃ¨me de boutons / touches",
                PARAM: "ProblÃ¨me de paramÃ©trage",
                CASSE: "Casse constatÃ©e",
                PASDEPANNE: "Pas de panne constatÃ©e",
                AUTRE: "Autre problÃ¨me"
            };
            break;
        case "5":
            data_option = {
                "": "",
                CALIBRAGE: "ProblÃ¨me de calibrage",
                ALIM: "Pb Alimentation",
                RETROHS: "Pb rÃ©troÃ©clairage HS",
                CASSE: "Casse constatÃ©e",
                PASDEPANN: "Pas de panne constatÃ©e",
                AUTRE: "Autre problÃ¨me"
            };
            break;
        case "6":
            data_option = {
                "": "",
                HDD: "ProblÃ¨me disque dur",
                RAM: "ProblÃ¨me mÃ©moire RAM",
                CARTEMERE: "ProblÃ¨me carte mÃ¨re",
                ALIM: "ProblÃ¨me d'alimentation",
                PORTS: "ProblÃ¨mes sur ports (pÃ©riphÃ©riques)",
                CASSE: "Casse constatÃ©e",
                PASDEPANNE: "Pas de panne constatÃ©e",
                LOGICIEL: "Pb Logciel",
                AUTRE: "Autre problÃ¨me non connu"
            };
            break;
        case "7":
            data_option = {
                "": "",
                HDD: "ProblÃ¨me disque dur",
                RAM: "ProblÃ¨me mÃ©moire RAM",
                CARTEMERE: "ProblÃ¨me carte mÃ¨re",
                ALIM: "ProblÃ¨me d'alimentation",
                PORTS: "ProblÃ¨mes sur ports (pÃ©riphÃ©riques)",
                CASSE: "Casse constatÃ©e",
                PASDEPANN: "Pas de panne constatÃ©e",
                AUTRE: "Autre problÃ¨me Pb non conu"
            };
            break;
        case "8":
            data_option = {
                "": "",
                HDD: "ProblÃ¨me disque dur",
                RAM: "ProblÃ¨me mÃ©moire RAM",
                CARTEMERE: "ProblÃ¨me carte mÃ¨re",
                LOGICIEL: "Pb logiciel",
                ALIM: "ProblÃ¨me d'alimentation",
                PORTS: "ProblÃ¨mes sur ports (pÃ©riphÃ©riques)",
                CASSE: "Casse constatÃ©e",
                PASDEPANNE: "Pas de panne constatÃ©e",
                AUTRE: "Autre problÃ¨me"
            };
            break;
        case "9":
            data_option = {
                "": "",
                PARAM: "ParamÃ©trage",
                AFFICH: "Pas d'affichage",
                RESEAU: "ProblÃ¨me rÃ©seau magasin",
                AUTRE: "Autre"
            };
            break;
        default:
            data_option = {
                "": ""
            };
            break
    }
    return data_option
}

function init_Intervention_Add_69(c, m, n, f, b) {
    var v = m + "_add";
    var p = $("#form" + m + "_add");
    var o = "#form" + m + "_logistic";
    p.find("input[type=button].btn_tech_assign").click(function() {
        var C = $(this).parents("#row").attr("data-id_piece");
        var w = $(this).parents("#row").attr("data-id_inter");
        var z = $(this).parents("#row");
        if (confirm(lang_logi_assign_confirm)) {
            blockAllUI();
            $.post("stock/assign_part_to_inter", {
                id_piece: C,
                id_inter: w
            }, function() {
                $(o).load("logistics/get_parts_by_inter", {
                    inside: "yes",
                    sub_id: w,
                    partner_id: n
                }, function(G, D, E) {
                    z.remove();
                    UNblockAllUI()
                })
            })
        }
    });
    var d = "#" + b;
    var u = new Date(SRVtime * 1000);
    LoadSelectFromHiddenStorage(m, "vru_tipo_dispositivo", "#vru_tipo_dispositivo");
    var h = ["vru_tipo_dispositivo", "swth_conf_12p", "swth_conf_24p", "swth_conf_48p", "swth_conf_98p", "punto_10mt", "punto_20mt", "fornit_metro_20mt", "fornit_ethernet_10mt", "fornit_adsl_10mt", "fornit_adsl_15mt", "bonifica_config_idevman", "ip_phone_installati", "ata_installati", "num_trunk_config"];
    for (var g = 0; g < h.length; g++) {
        var e = h[g];
        var r = $(c).find("select[name=" + e + "]");
        if ($(r).attr("my_sel") != "") {
            var q = $(r).attr("my_sel");
            get_option_from_value(r, q).attr("selected", "selected")
        }
    }
}

function wispSend(h, m) {
    blockAllUI();
    var n = $(h).parents("form");
    var b = $(n).find("input[name=IDs_suff]").val();
    var o = $("#" + b).find("input[name=inter_id]").val();
    var g = $("#" + b).find("input[name=partner_ref]").val();
    var d = $(h).parents("div.ui-tabs-panel").attr("client_id");
    var c = $("#wisp_form" + m).serializeArray();
    var f = $.post("index.php/EDI/unitymedia_wisp/sendFromAdditional", c);
    var e = $("input[name=wisp_action]", "#wisp_form" + m).val();
    f.done(function(p) {
        if (e.substring(0, 9) == "WO_RETURN" && e != "WO_RETURN_CANCEL") {
            $.post("interventions/create_intervention_relog", {
                id_inter: o,
                etat: 0,
                date1: "",
                id_tech: 0,
                partner_ref: g
            }, function(q) {
                $("#inter_stat", "#" + b).val("11");
                $("#form" + b).submit();
                UNblockAllUI();
                client_details_refresh_internal2(d, o)
            })
        } else {
            UNblockAllUI();
            $("#wisp_error" + b).empty().append(p)
        }
    });
    return false
}

function calcISOdate(d, g, f) {
    var h = (d || d === 0) ? (typeof d == "string" ? d.replace(/(\d{1,2})\.(\d{1,2})\./, "$2/$1/") : d) : "";
    h = h instanceof Date ? new Date(h - 0) : (h === "" ? new Date() : new Date(h));
    var e = {
        y: [1, "FullYear"],
        m: [1, "Month"],
        w: [7, "Date"],
        d: [1, "Date"],
        h: [3600000],
        n: [60000],
        s: [1000],
        ms: [1]
    };
    var c = e[f] || [1, "Date"];
    var b = c[1] || "Time";
    h["set" + b](h["get" + b]() + parseInt(g || 0, 10) * c[0]);
    return h.toISOString().substr(0, 10)
}

function init_Intervention_dialog_View(d, c, e, o, f) {
    var b = new Date();
    var g = b.getMonth() + 1;
    var n = b.getDate();
    var h = b.getFullYear();
    var m = h + "-" + g + "-" + n;
    $("#planningContainerC_" + c).hide();
    if ($("#form" + f + ' select[name="inter_stat"]').val() === "1") {
        $("#form" + f + ' input[name="req_date_any"]').attr("onclick", "return false;");
        $("#form" + f + ' input[name="req_date_certain"]').attr("onclick", "return false;");
        $("#form" + f + ' input[name="req_date_any"]').attr("onkeydown", "return false;");
        $("#form" + f + ' input[name="req_date_certain"]').attr("onkeydown", "return false;")
    }
    a = '<div id="planningContainer_' + c + '" style="display: none;overflow:hidden;"><div id="timeBarContainer">';
    a += '<table id="timeBarTable_' + c + '" class="ui-widget-header" >';
    a += "<tbody>";
    a += "<tr>";
    a += '<td><div id="goLeft_' + c + '" class="inner" style="Width:272px;"><button type="submit" class="ui-widget-header" style="Width:272px;border:none;" onClick="return false;">&lt Ein Tag frÃ¼her</button></div></td>';
    a += '<td><div id ="actualDateA_' + c + '" class="inner" style="Width:272px;text-align:center;"><input type="text" id="actualDate_' + c + '"  maxlength="10" value="' + m + '"></div></td>';
    a += '<td><div id="goRight_' + c + '" class="inner" style="Width:272px;"><button type="submit" class="ui-widget-header" style="Width:272px;border:none;" onClick="return false;">Ein Tag spÃ¤ter &gt</button></div></td>';
    a += "</tr>";
    a += "</tbody>";
    a += "</table>";
    a += "</div>";
    a += '<div id="planningTableContainer_' + c + '" style="width:820px;height:565px;overflow-y:auto;overflow-x:hidden;"></div>';
    a += "</div>";
    $("#planningContainer_" + c).dialog("destroy").remove();
    $("#planningInterventionsContainer_" + c).dialog("destroy").remove();
    $("#planningContainerC_" + c).html(a);
    $("#actualDate_" + c).datepicker({
        firstDay: 1,
        changeFirstDay: true,
        changeYear: true,
        yearRange: "-1:+1",
        changeMonth: true,
        numberOfMonths: 1,
        dateFormat: "yy-mm-dd",
        duration: "",
        onSelect: function() {
            blockAllUI();
            $("#planningInterventionsContainer_" + c).dialog("destroy").remove();
            var w = $("#form" + f + ' input[name="req_date_certain"]').is(":checked");
            $("#planningTableContainer_" + c).hide();
            var q = $("#form" + f + ' input[name="partner_id"]').val();
            var u = $("#actualDate_" + c).datepicker("getDate");
            var p = u.getDate();
            var r = u.getMonth() + 1;
            var v = u.getFullYear();
            if (p < 10) {
                p = "0" + p
            }
            if (r < 10) {
                r = "0" + r
            }
            u = v + "-" + r + "-" + p;
            $("#actualDate_" + c).val(v + "-" + r + "-" + p);
            $("#planningTableContainer_" + c).hide();
            $("#planningTableContainer_" + c).load("interventions/get_list_of_technicians", {
                inter_id: c,
                planning_date: u.toString(),
                partenaire_id: q,
                is_checked: w,
                id_suff: f
            }, function() {
                UNblockAllUI();
                $("#planningTableContainer_" + c).show()
            });
            $(":focus").blur()
        }
    });
    $("#saveBasicInfo_" + c).click(function() {
        blockAllUI();
        var v = $("#form" + f + ' input[name="partner_id"]').val();
        var p = $("#form" + f + ' select[name="inter_stat"]').val();
        var z = $("#form" + f + ' input[name="inter_name"]').val();
        var D = $("#form" + f + ' select[name="inter_duration"]').val();
        var q = $("#form" + f + ' input[name="requst_details"]').val();
        var C = $("#form" + f + ' input[name="req_garantie"]').is(":checked");
        var w = $("#form" + f + ' input[name="req_date_certain"]').is(":checked");
        var u = $("#form" + f + ' input[name="req_date_any"]').is(":checked");
        var r = parseInt($("#form" + f + ' select[name="req_date_certain"]').val());
        if (w == undefined || !w || w == "") {
            w = ""
        }
        $("#saving").load("interventions/save_basic_info", {
            inter_id: c,
            partner_id: v,
            etat: p,
            title: z,
            garantie: C,
            desc_panne: q,
            prevision_duree: D,
            isCheckedFestes: w,
            isCheckedAny: u,
            contrainte_date: r
        }, function() {
            $("#form" + f).submit()
        })
    });
    $("#goLeft_" + c).click(function() {
        blockAllUI();
        $("#planningInterventionsContainer_" + c).dialog("destroy").remove();
        var w = $("#form" + f + ' input[name="req_date_certain"]').is(":checked");
        $("#planningTableContainer_" + c).hide();
        var q = $("#form" + f + ' input[name="partner_id"]').val();
        var u = $("#actualDate_" + c).datepicker("getDate");
        u.setDate(u.getDate() - 1);
        var p = u.getDate();
        var r = u.getMonth() + 1;
        var v = u.getFullYear();
        if (p < 10) {
            p = "0" + p
        }
        if (r < 10) {
            r = "0" + r
        }
        u = v + "-" + r + "-" + p;
        $("#actualDate_" + c).val(v + "-" + r + "-" + p);
        $("#planningTableContainer_" + c).hide();
        $("#planningTableContainer_" + c).load("interventions/get_list_of_technicians", {
            inter_id: c,
            planning_date: u,
            partenaire_id: q,
            is_checked: w,
            id_suff: f
        }, function() {
            UNblockAllUI();
            $("#planningTableContainer_" + c).show()
        })
    });
    $("#goRight_" + c).click(function() {
        blockAllUI();
        $("#planningInterventionsContainer_" + c).dialog("destroy").remove();
        var w = $("#form<" + f + ' input[name="req_date_certain"]').is(":checked");
        $("#planningTableContainer").hide();
        var q = $("#form" + f + ' input[name="partner_id"]').val();
        var u = $("#actualDate_" + c).datepicker("getDate");
        u.setDate(u.getDate() + 1);
        var p = u.getDate();
        var r = u.getMonth() + 1;
        var v = u.getFullYear();
        if (p < 10) {
            p = "0" + p
        }
        if (r < 10) {
            r = "0" + r
        }
        u = v + "-" + r + "-" + p;
        $("#actualDate_" + c).val(v + "-" + r + "-" + p);
        $("#planningTableContainer_" + c).hide();
        $("#planningTableContainer_" + c).load("interventions/get_list_of_technicians", {
            inter_id: c,
            planning_date: u,
            partenaire_id: q,
            is_checked: w,
            id_suff: f
        }, function() {
            UNblockAllUI();
            $("#planningTableContainer_" + c).show()
        })
    })
}

function openInterventionDialogFormulario(b, c) {
    $("#planningContainerFormulario_" + c).dialog({
        autoOpen: false,
        modal: true,
        resizable: false,
        draggable: false,
        open: function(d, e) {
            $(this).dialog("option", "height", 645);
            $(this).dialog("option", "width", 836);
            $(this).dialog("option", "position", "center");
            $("#planningContainerFormulario_" + c).css("overflow", "hidden");
            $(".ui-dialog-titlebar").hide()
        },
        close: function(d, e) {
            $("#planningInterventionsContainer_" + b).dialog("destroy").remove();
            console.log("#planningInterventionsContainer_" + b + " removed")
        },
        buttons: {
            Close: function() {
                $(this).dialog("close")
            }
        }
    });
    $("#planningContainerFormulario_" + c).dialog("open");
    $("#planningContainerFormulario_" + c).removeClass("ui-dialog-content")
}

function flex_del_appointment(c, b) {
    blockAllUI();
    $.ajax({
        url: "interventions/del_flex_appointment",
        type: "post",
        data: {
            id: c,
            id_inter: b
        },
        success: function(d) {
            $("#flex_table_" + b).html(d);
            UNblockAllUI()
        },
        error: function(d) {
            $("#flex_table_" + b).html(d);
            UNblockAllUI()
        }
    })
}

function init_planning_interventions_timetables(f, q, g, c, m, d, h) {
    execute_tool_tip_for_ShowToolTipT = true;
    var p = "";
    var b;
    var e;
    var o = "";
    $("#flex_from_date_" + f).datepicker({
        minDate: new Date(),
        dateFormat: "yy-mm-dd"
    });
    $("#flex_to_date_" + f).datepicker({
        minDate: new Date(),
        dateFormat: "yy-mm-dd"
    });
    $("#flex_" + f).change(function() {
        if ($(this).is(":checked")) {
            $("#planningInterventionsContainer_" + f).attr("style", "width: 801px !important; height: 555px !important;");
            $("#flex_area_" + f).show()
        } else {
            $("#planningInterventionsContainer_" + f).attr("style", "width: 801px !important; height: 305px !important;");
            $("#flex_area_" + f).hide()
        }
    });
    $("#flex_add_" + f).click(function() {
        if ($("#flex_from_date_" + f).val() == "" || $("#flex_to_date_" + f).val() == "") {
            alert(call_planning_no_date)
        } else {
            from_date_arr = $("#flex_from_date_" + f).val().split("-");
            to_date_arr = $("#flex_to_date_" + f).val().split("-");
            from_hour = parseInt($("#flex_from_hour_" + f).val());
            to_hour = parseInt($("#flex_to_hour_" + f).val());
            from_minute = parseInt($("#flex_from_minute_" + f).val());
            to_minute = parseInt($("#flex_to_minute_" + f).val());
            fd = new Date(from_date_arr[0], from_date_arr[1] - 1, from_date_arr[2], from_hour + 2, from_minute);
            td = new Date(to_date_arr[0], to_date_arr[1] - 1, to_date_arr[2], to_hour + 2, to_minute);
            if (td > fd && from_hour < to_hour) {
                $.ajax({
                    url: "interventions/add_flex_appointment",
                    type: "post",
                    data: {
                        id_inter: f,
                        from_date_time: fd.toISOString().slice(0, 16).replace(/T/g, " "),
                        to_date_time: td.toISOString().slice(0, 16).replace(/T/g, " "),
                        comment: $("#flex_information_" + f).val()
                    },
                    success: function(r) {
                        $("#flex_table_" + f).html(r);
                        $("#flex_from_date_" + f).val("");
                        $("#flex_to_date_" + f).val("");
                        h = "x"
                    },
                    error: function(r) {
                        $("#flex_table_" + f).html(r)
                    }
                })
            } else {
                alert(call_planning_end_not_behind_start)
            }
        }
    });
    $("#planningInterventionsContainer_" + f).dialog({
        autoOpen: false,
        height: 555,
        width: 800,
        modal: true,
        resizable: false,
        draggable: false,
        buttons: {
            Close: function() {
                $(this).dialog("close")
            }
        }
    });
    window.termine = function n(v, w, r, u) {
        p = w;
        b = v.split(":");
        o = v;
        e = $("#actualDateFormulario_" + c).val().split("-");
        console.log("window.termine");
        console.log(v, typeof(v));
        console.log(w, typeof(w));
        console.log(r, typeof(r));
        console.log(u, typeof(u));
        $("input[name=inter_planned_date]", "#planningInterventionsContainer_" + f).val($("#actualDateFormulario_" + c).val());
        $("input[name=inter_planned_time]", "#planningInterventionsContainer_" + f).val(v);
        if (m) {
            $("div[name=timeslot_checked]", "#planningInterventionsContainer_" + f).hide()
        } else {
            $("div[name=timeslot_checked]", "#planningInterventionsContainer_" + f).show()
        }
        if (d <= -12) {
            $("div[name=grund]", "#planningInterventionsContainer_" + f).show()
        } else {
            $("div[name=grund]", "#planningInterventionsContainer_" + f).hide()
        }
        $("#planningInterventionsContainer_" + f).dialog("option", "position", {
            my: "center",
            at: "top",
            of: window,
            collision: "none"
        });
        $(".ui-dialog-titlebar").hide();
        $("#planningInterventionsContainer_" + f).removeClass("ui-dialog-content");
        $("#planningInterventionsContainer_" + f).dialog("open");
        if (h != "") {
            $("#planningInterventionsContainer_" + f).attr("style", "width: 801px !important; height: 555px !important;");
            $("#flex_area_" + f).show();
            $("#flex_" + f).prop("checked", true)
        } else {
            $("#planningInterventionsContainer_" + f).attr("style", "width: 801px !important; height: 305px !important;");
            $("#flex_area_" + f).hide();
            $("#flex_" + f).prop("checked", false)
        }
    };
    $("#Saving_" + f).click(function() {
        var I = $("#fromHour_" + f).find(":selected").text();
        var E = $("#fromMinute_" + f).find(":selected").text();
        var C = $("#toHour_" + f).find(":selected").text();
        var K = $("#toMinute_" + f).find(":selected").text();
        var u = $("#grund_" + f).find(":selected").text();
        var H = $("#information_" + f).val().trim();
        var L = I.concat(":", E);
        var G = C.concat(":", K);
        var J = $("#form" + c + ' select[name="inter_duration"]').val();
        var w = $("#form" + c + ' select[name="req_date_certain_select"]').val();
        var D = "";
        var v = g / 60;
        if (parseInt(I) >= parseInt(C) && !m) {
            alert("Bitte den Timeslot korrekt wÃ¤hlen!")
        } else {
            if (d <= -12 && u == "" && regional_version == "DE01") {
                alert("Der Auftrag liegt in der Zukunft. Bitte einen Grund angeben!")
            } else {
                if (u == "Sonstiges" && H == "" && regional_version == "DE01") {
                    alert("Der Auftrag liegt in der Zukunft. Bitte im Informationsfeld begrÃ¼nden!")
                } else {
                    if (v % 1 === 0) {
                        D = (parseInt(b[0]) + v).toString().concat(":", b[1])
                    } else {
                        var z = v.toString().split(".");
                        if (parseInt(b[1]) === 30) {
                            D = (parseInt(b[0]) + (parseInt(z[0]) + 1)).toString().concat(":", "00")
                        } else {
                            if (parseInt(b[1]) === 45) {
                                D = (parseInt(b[0]) + (parseInt(z[0]) + 1)).toString().concat(":", "15")
                            } else {
                                if (parseInt(b[1]) === 15) {
                                    D = (parseInt(b[0]) + (parseInt(z[0]))).toString().concat(":", "45")
                                } else {
                                    D = (parseInt(b[0]) + parseInt(z[0])).toString().concat(":", (parseInt(b[1]) + 30).toString())
                                }
                            }
                        }
                    }
                    var r = D.toString().split(":");
                    $("#form" + c + ' select[name="inter_stat"]').val(1);
                    $("#form" + c + ' input[name="tech_id"]').val(p);
                    $("#form" + c + ' select[name="inter_prevision_beginning_hh"]').val(b[0]);
                    $("#form" + c + ' select[name="inter_prevision_beginning_mm"]').val(b[1]);
                    $("#form" + c + ' select[name="inter_prevision_date_y"]').val(e[0]);
                    $("#form" + c + ' select[name="inter_prevision_date_m"]').val(e[1]);
                    $("#form" + c + ' select[name="inter_prevision_date_d"]').val(e[2]);
                    $("#form" + c + ' select[name="inter_date_y"]').val(e[0]);
                    $("#form" + c + ' select[name="inter_date_m"]').val(e[1]);
                    $("#form" + c + ' select[name="inter_date_d"]').val(e[2]);
                    $("#form" + c + ' select[name="inter_beginning_hh"]').val(b[0]);
                    $("#form" + c + ' select[name="inter_beginning_mm"]').val(b[1]);
                    $("#form" + c + ' select[name="inter_finish_hh"]').val(r[0]);
                    $("#form" + c + ' select[name="inter_finish_mm"]').val(r[1]);
                    $("#form" + c + ' input[name="req_date_any"]').attr("checked");
                    $("#form" + c + ' input[name="req_date_certain"]').removeAttr("checked");
                    $.ajax({
                        url: "interventions/saveDataForStartingIntervention",
                        type: "post",
                        data: {
                            start_time: L,
                            end_time: G,
                            planning_date: $("input[name=inter_planned_date]", "#planningInterventionsContainer_" + f).val(),
                            hour_selected: o,
                            tech_id: p,
                            intervention_id: f,
                            heure_fin: D,
                            contrainte_date: w,
                            grund: u,
                            information: H,
                            is_checked: m
                        },
                        success: function(M) {
                            $("#planningInterventionsContainer_" + f).dialog("close");
                            $("#planningInterventionsContainer_" + f).dialog("destroy").remove();
                            $("#planningContainerFormulario_" + c).dialog("close");
                            $("#form" + c).submit()
                        }
                    })
                }
            }
        }
    })
}

function init_Intervention_call_dialog_View(d, c, e, f, p, g) {
    var b = new Date();
    var h = b.getMonth() + 1;
    var o = b.getDate();
    var m = b.getFullYear();
    var n = m + "-" + h + "-" + o;
    if ($("#form" + g + ' select[name="inter_stat"]').val() === "1") {
        $("#form" + g + ' input[name="req_date_any_formulario"]').attr("onclick", "return false;");
        $("#form" + g + ' input[name="req_date_certain_formulario"]').attr("onclick", "return false;");
        $("#form" + g + ' input[name="req_date_any_formulario"]').attr("onkeydown", "return false;");
        $("#form" + g + ' input[name="req_date_certain_formulario"]').attr("onkeydown", "return false;")
    } else {
        $("#form" + g + ' input[name="req_date_any_formulario"]').attr("checked", "checked;")
    }
    a = '<div id="planningContainerFormulario_' + g + '" style="display: none;overflow:hidden;"><div id="timeBarContainerFormulario_' + g + '">';
    a += '<table id="timeBarTableFormulario_' + g + '" class="ui-widget-header" >';
    a += "<tbody>";
    a += "<tr>";
    a += '<td><div id="goLeftFormulario_' + g + '" class="inner" style="Width:272px;"><button type="submit" class="ui-widget-header" style="Width:272px;border:none;" onClick="return false;">&lt Ein Tag frÃ¼her</button></div></td>';
    a += '<td><div id ="actualDateFormularioA_' + g + '" class="inner" style="Width:272px;text-align:center;"><input type="text" id="actualDateFormulario_' + g + '"  maxlength="10" value="' + n + '"></div></td>';
    a += '<td><div id="goRightFormulario_' + g + '" class="inner" style="Width:272px;"><button type="submit" class="ui-widget-header" style="Width:272px;border:none;" onClick="return false;">Ein Tag spÃ¤ter &gt</button></div></td>';
    a += "</tr>";
    a += "</tbody>";
    a += "</table>";
    a += "</div>";
    a += '<div id="planningTableContainerFormulario_' + g + '" style="width:820px;height:565px;overflow-y:auto;overflow-x:hidden;"></div>';
    a += "</div>";
    $("#planningContainerFormulario_" + g).dialog("destroy").remove();
    $("#planningContainerFormularioC_" + g).html(a);
    $("#actualDateFormulario_" + g).datepicker({
        firstDay: 1,
        changeFirstDay: true,
        changeYear: true,
        yearRange: "-1:+1",
        changeMonth: true,
        numberOfMonths: 1,
        dateFormat: "yy-mm-dd",
        duration: "",
        onSelect: function() {
            blockAllUI();
            var z = $("#form" + g + ' input[name="req_date_certain_formulario"]').is(":checked");
            var r = $("#form" + g + ' input[name="partner_id"]').val();
            $("#planningInterventionsContainer_" + e).dialog("destroy").remove();
            console.log("#planningInterventionsContainer_" + e + " removed");
            $("#planningTableContainerFormulario_" + g).hide();
            var v = $("#actualDateFormulario_" + g).datepicker("getDate");
            var q = v.getDate();
            var u = v.getMonth() + 1;
            var w = v.getFullYear();
            if (q < 10) {
                q = "0" + q
            }
            if (u < 10) {
                u = "0" + u
            }
            v = w + "-" + u + "-" + q;
            $("#actualDateFormulario_" + g).val(w + "-" + u + "-" + q);
            $("#planningTableContainerFormulario_" + g).load("interventions/get_list_of_technicians", {
                inter_id: e,
                planning_date: v,
                partenaire_id: r,
                is_checked: z,
                id_suff: g,
                sub_id: c
            }, function() {
                UNblockAllUI();
                $("#planningTableContainerFormulario_" + g).show()
            });
            $(":focus").blur()
        }
    });
    $("#calendarPlanningFormulario_" + g).click(function() {
        blockAllUI();
        var q = c;
        var u = $("#form" + g + ' input[name="req_date_certain_formulario"]').is(":checked");
        var r = $("#form" + g + ' input[name="partner_id"]').val();
        if (q == -1 || q == "") {
            q = c
        }
        $("#actualDateFormulario_" + g).val(n);
        $("#planningTableContainerFormulario_" + g).html("").load("interventions/get_list_of_technicians", {
            inter_id: e,
            planning_date: n,
            partenaire_id: r,
            is_checked: u,
            id_suff: g,
            sub_id: c
        }, function() {
            UNblockAllUI()
        });
        openInterventionDialogFormulario(e, g)
    });
    $("#goLeftFormulario_" + g).click(function() {
        blockAllUI();
        var z = $("#form" + g + ' input[name="req_date_certain_formulario"]').is(":checked");
        var r = $("#form" + g + ' input[name="partner_id"]').val();
        $("#planningInterventionsContainer_" + e).dialog("destroy").remove();
        console.log("#planningInterventionsContainer_" + e + " removed");
        $("#planningTableContainerFormulario_" + g).hide();
        var v = $("#actualDateFormulario_" + g).datepicker("getDate");
        v.setDate(v.getDate() - 1);
        var q = v.getDate();
        var u = v.getMonth() + 1;
        var w = v.getFullYear();
        if (q < 10) {
            q = "0" + q
        }
        if (u < 10) {
            u = "0" + u
        }
        v = w + "-" + u + "-" + q;
        $("#actualDateFormulario_" + g).val(w + "-" + u + "-" + q);
        $("#planningTableContainerFormulario_" + g).load("interventions/get_list_of_technicians", {
            inter_id: e,
            planning_date: v,
            partenaire_id: r,
            is_checked: z,
            id_suff: g,
            sub_id: c
        }, function() {
            UNblockAllUI();
            $("#planningTableContainerFormulario_" + g).show()
        })
    });
    $("#goRightFormulario_" + g).click(function() {
        blockAllUI();
        var z = $("#form" + g + ' input[name="req_date_certain_formulario"]').is(":checked");
        $("#planningInterventionsContainer_" + e).dialog("destroy").remove();
        console.log("#planningInterventionsContainer_" + e + " removed");
        $("#planningTableContainerFormulario_" + g).hide();
        var r = $("#form" + g + ' input[name="partner_id"]').val();
        var v = $("#actualDateFormulario_" + g).datepicker("getDate");
        v.setDate(v.getDate() + 1);
        var q = v.getDate();
        var u = v.getMonth() + 1;
        var w = v.getFullYear();
        if (q < 10) {
            q = "0" + q
        }
        if (u < 10) {
            u = "0" + u
        }
        v = w + "-" + u + "-" + q;
        $("#actualDateFormulario_" + g).val(w + "-" + u + "-" + q);
        $("#planningTableContainerFormulario_" + g).hide();
        $("#planningTableContainerFormulario_" + g).load("interventions/get_list_of_technicians", {
            inter_id: e,
            planning_date: v,
            partenaire_id: r,
            is_checked: z,
            id_suff: g,
            sub_id: c
        }, function() {
            UNblockAllUI();
            $("#planningTableContainerFormulario_" + g).show()
        })
    });
    $("#form" + g + ' input[name="req_date_certain_formulario"]').change(function() {
        if ($("#form" + g + ' input[name="req_date_certain_formulario"]').is(":checked")) {
            $("#form" + g + ' input[name="req_date_any_formulario"]').attr("checked", false)
        } else {
            $("#form" + g + ' input[name="req_date_any_formulario"]').attr("checked", true)
        }
    });
    $("#form" + g + ' input[name="req_date_any_formulario"]').change(function() {
        if ($("#form" + g + ' input[name="req_date_any_formulario"]').is(":checked")) {
            $("#form" + g + ' input[name="req_date_certain_formulario"]').attr("checked", false)
        } else {
            $("#form" + g + ' input[name="req_date_certain_formulario"]').attr("checked", true)
        }
    });
    $("#form" + g + ' select[name="call_res_combobox"]').change(function() {
        if ($("#form" + g + ' select[name="call_res_combobox"]').val() == 1) {
            $("#form" + g + " #calendarPlanningFormulario_" + g).show()
        } else {
            $("#form" + g + " #calendarPlanningFormulario_" + g).hide()
        }
    })
}

function findMeeting(f, c, g) {
    var b = new Date();
    var h = new Date();
    var d = $("#reschedule_slider_" + f).slider("value");
    var e = "";
    b.setDate(b.getDate() + 1);
    h.setDate(h.getDate() + (d == 1 ? 1 : (d + 1)));
    blockAllUI();
    $.ajax({
        type: "GET",
        url: pc30_core_ws_url + "/core_ws/rest/Pc30CoreWS/findMeetingByIdInter/" + f + "/" + $.datepicker.formatDate("yy-mm-dd", b) + "/" + $.datepicker.formatDate("yy-mm-dd", h),
        success: function(n) {
            if (n.success == true) {
                if (n.data.length > 0) {
                    for (var m = 0; m < n.data.length; m++) {
                        e += "<tr><td>" + $.datepicker.formatDate("yy-mm-dd", new Date(n.data[m].slot.day)) + "</td><td>" + n.data[m].slot.start + "</td><td>" + n.data[m].slot.end + "</td><td>" + n.data[m].employe.nom + " " + n.data[m].employe.prenom + "(" + n.data[m].employe.id + ")</td><td>" + n.data[m].distance + '</td><td><input 	type="button"  value="' + g + '" class="button"  onclick="rescheduleIntervention(' + f + "," + n.data[m].slot.id + "," + c + ')" /></td></tr>'
                    }
                }
                $("#reschedule_table_" + f + " tbody").html(e);
                UNblockAllUI()
            } else {
                UNblockAllUI();
                alert(n.message)
            }
        }
    })
}

function other_partner_qualification(e, c, b, d, f) {
    $(".btn_open_qual", f).unbind("click").bind("click", function() {
        GoToTopOfPage(false);
        if (TopRightTabs) {
            TopRightTabs.tabs("select", "#RQualification")
        }
        var g = c;
        g = g.replace("|0|", e);
        g = g.replace("|1|", b);
        g = g.replace("|2|", d);
        $("#frameQualification").attr("src", g)
    })
}

function other_partner_qualnote(d, e, b, c) {
    if (regional_version === "IT01" || regional_version === "IB01") {
        $("#generalmodal_qualnote_tab").hide();
        $("#generalmodal_qualnote_send").unbind("click").bind("click", function() {
            var D = "#generalmodal_qualnote_tab";
            var g = "";
            var E = $("#generalselect-problemType option:selected").val();
            var v = $("#generalselect-when option:selected").val();
            var p = $("#generalselect-where option:selected").val();
            var h = $("#generalselect-s30-internal-code option:selected").val();
            var u = $("#generalmodal_se_note_autocomplete").val();
            d = $("#general_inter_id").val();
            var m = [];
            $.each($(".generalmodal_qualnote_modal_qa_codes option:selected"), function() {
                if (($(this).text()) === "[...]") {} else {
                    m.push($(this).val())
                }
            });
            var r = JSON.stringify(m);
            var C = $("textarea#generalmodal_qualnote_description").val();
            var w = $("textarea[name='generaltroubleshooting']").val();
            var G = $("textarea[name='generaldiagnosy']").val();
            var z = $("#generalhistory_case_found_checkbox").is(":checked");
            if (z) {
                g = $("#generalhistory_case_note").val()
            }
            var f = $("#generaloverwrite_request_insert_checkbox").is(":checked");
            $.ajax({
                type: "POST",
                url: "interventions/qualification_note_save",
                data: {
                    inter_id: d,
                    problem_type: E,
                    history_case_note: g,
                    when: v,
                    where: p,
                    s30_internal_code: h,
                    se: u,
                    qa_codes: r,
                    description: C,
                    troubleshooting: w,
                    diagnosys: G,
                    history_checkbox: z,
                    overwrite_checkbox: f
                },
                dataType: "JSON",
                success: function(H) {}
            });
            var n = $("#generalmodal_qualnote_msgtype").val();
            var o = $("#general_si").val();
            var q = 0;
            if ($("#general_client_id").val() > 0) {
                client_details_refresh_internal2($("#general_client_id").val(), $("#general_inter_id").val())
            }
            $.modal.close()
        })
    } else {
        $("#generalmodal_qualnote_tab").hide();
        $("#generalmodal_qualnote_send").unbind("click").bind("click", function() {
            var h = "#generalmodal_qualnote_tab";
            var f = $("#generalmodal_qualnote_msgtype").val();
            var g = $("#general_si").val();
            var n = $("textarea", h).val();
            var m = 0;
            if (n == "") {
                alert("Please enter a comment !");
                return false
            }
            blockAllUI();
            UNblockAllUI();
            $.modal.close()
        })
    }
    if (regional_version === "IT01" || regional_version === "IB01") {
        $(".btn_add_qual", c).unbind("click").bind("click", function() {
            $("#general_si").val($(this).parent().attr("data-service_incident_id"));
            $("#general_inter_id").val($(this).parent().attr("data-inter_id"));
            $("#general_client_id").val($(this).parent().attr("data-client_id"));
            d = $(this).parent().attr("data-inter_id");
            var f = "generalmodal_qualnote_tab";
            $("#generalmodal_qualnote").modal({
                autoResize: true,
                minWidth: 600,
                minHeight: 600,
                containerCss: {
                    height: $("#" + f).height() + 40,
                    width: $("#" + f).width() + 40,
                    "-moz-border-radius": "4em 1em 4em 1em"
                },
                overlayClose: true,
                onClose: function(g) {
                    g.data.fadeOut("fast", function() {
                        g.container.slideUp("fast", function() {
                            g.overlay.fadeOut("fast", function() {
                                $.modal.close();
                                $("#" + f).hide()
                            })
                        })
                    })
                },
                onOpen: function(g) {
                    var h = this;
                    g.overlay.fadeIn("fast", function() {
                        g.container.slideDown("fast", function() {
                            g.data.fadeIn("fast");
                            $("#" + f).fadeIn("fast");
                            $("#generalmodal_qualnote_msgtype").val("qualnote");
                            $("#" + f + " h1").text("S30 Qualification Note (InterID: " + $("#general_inter_id").val() + ")");
                            $("#generalid_qa_codes").html($("#general_qacode").html());
                            $("#generalselect-s30-internal-code").html($("#general_internal_code").html());
                            $("#generalmodal_se_note_autocomplete").autocomplete("interventions/qualification_note_se_autocomplete", {
                                minChars: 3,
                                max: 100,
                                scrollHeight: 360,
                                scrollWidth: 360,
                                dataType: "json",
                                parse: function(o) {
                                    var m = [];
                                    if (o !== null) {
                                        o = o.result;
                                        for (var n = 0; n < o.length; n++) {
                                            m[m.length] = {
                                                data: o[n],
                                                result: o[n].se
                                            }
                                        }
                                    }
                                    return m
                                },
                                formatItem: function(m) {
                                    return "<div class='result_autocomplete'><b>" + m.se + "</b></div>"
                                }
                            });
                            $("#generalhistory_case_found_checkbox").click(function() {
                                $("#generalhistory_case_found_text").toggle(this.checked)
                            });
                            $("#generaloverwrite_request_insert_checkbox").attr("checked", "checked");
                            g.container.height($("#" + f).height() + 40);
                            h.setPosition();
                            $.ajax({
                                type: "POST",
                                url: "interventions/qualification_note_getData",
                                data: {
                                    inter_id: d
                                },
                                dataType: "JSON",
                                success: function(n) {
                                    fillGeneralSelect(n.qualificationProblemType, "generalselect-problemType", false);
                                    fillGeneralSelect(n.qualificationWhen, "generalselect-when", false);
                                    fillGeneralSelect(n.qualificationWhere, "generalselect-where", false);
                                    if (n.qualificationNoteData !== null) {
                                        $("#generalselect-problemType").val(n.qualificationNoteData.problem_type);
                                        $("#generalselect-when").val(n.qualificationNoteData.when);
                                        $("#generalselect-where").val(n.qualificationNoteData.where);
                                        $("#generalmodal_se_note_autocomplete").val(n.qualificationNoteData.se);
                                        $("#generalmodal_qualnote_description").val(n.qualificationNoteData.description);
                                        $("#generalmodal_qualnote_troubleshooting").val(n.qualificationNoteData.troubleshooting);
                                        $("#generalmodal_qualnote_diagnosy").val(n.qualificationNoteData.diagnosys);
                                        $("#generalselect-s30-internal-code").val(n.qualificationNoteData.s30_internal_code);
                                        if (parseInt(n.qualificationNoteData.checkbox_history_case_found_note) === 1) {
                                            $("#generalhistory_case_found_checkbox").attr("checked", "checked");
                                            $("#generalhistory_case_note").val(n.qualificationNoteData.history_case_found_note);
                                            $("#generalhistory_case_found_text").show()
                                        }
                                        if (parseInt(n.qualificationNoteData.checkbox_overwrite) === 0) {
                                            $("#generaloverwrite_request_insert_checkbox").attr("checked", false)
                                        }
                                        if (n.qualificationNoteData.qa_codes.length > 0) {
                                            var m = [];
                                            m = n.qualificationNoteData.qa_codes.split(",");
                                            $("#generalid_qa_codes").val(m)
                                        }
                                    }
                                }
                            })
                        })
                    })
                },
                onShow: function(g) {
                    $("a", g.data).click(function() {
                        return false
                    })
                }
            })
        })
    } else {
        $(".btn_add_qual", c).unbind("click").bind("click", function() {
            $("#general_si").val($(this).parent().attr("data-service_incident_id"));
            $("#general_inter_id").val($(this).parent().attr("data-inter_id"));
            $("#general_client_id").val($(this).parent().attr("data-client_id"));
            var f = "generalmodal_qualnote_tab";
            $("#generalmodal_qualnote").modal({
                autoResize: true,
                minWidth: 600,
                minHeight: 600,
                containerCss: {
                    height: $("#" + f).height() + 20,
                    width: $("#" + f).width() + 20,
                    "-moz-border-radius": "4em 1em 4em 1em"
                },
                overlayClose: true,
                onClose: function(g) {
                    g.data.fadeOut("fast", function() {
                        g.container.slideUp("fast", function() {
                            g.overlay.fadeOut("fast", function() {
                                $.modal.close();
                                $("#" + f).hide()
                            })
                        })
                    })
                },
                onOpen: function(g) {
                    var h = this;
                    g.overlay.fadeIn("fast", function() {
                        g.container.slideDown("fast", function() {
                            g.data.fadeIn("fast");
                            $("#" + f).fadeIn("fast");
                            $("#generalmodal_qualnote_msgtype").val("qualnote");
                            $("#" + f + " h1").text("S30 Qualification Note");
                            g.container.height($("#" + f).height() + 20);
                            h.setPosition()
                        })
                    })
                },
                onShow: function(g) {
                    $("a", g.data).click(function() {
                        return false
                    })
                }
            })
        })
    }
}

function fillGeneralSelect(c, b, e) {
    var d = $("#" + b);
    $("#" + b + " option").remove();
    if (e) {
        d.append($("<option/>").attr("value", "").text(""))
    }
    if (c != null) {
        $.each(c, function(f, g) {
            d.append($("<option/>").attr("value", g.id).text(g.name))
        })
    }
}

function rescheduleIntervention(c, d, b) {
    $.ajax({
        type: "POST",
        data: {
            interId: c,
            slotId: d,
            userName: getCookie("pc30net_u")
        },
        url: pc30_core_ws_url + "/core_ws/rest/Pc30CoreWS/rescheduleIntervention/",
        success: function(e) {
            if (e.success == true) {
                RefreshInterventionIfItsOpened(b, c)
            } else {
                alert(e.message)
            }
        }
    })
}

function init_user_global_variables() {
    $.ajax({
        url: "lists/pc30_core_ws_url/fr/0/0/0/0/0/0/dummy.html",
        type: "GET",
        success: function(b) {
            pc30_core_ws_url = b
        },
        failure: function(b) {
            alert(b)
        }
    })
}

function check_covid_config() {
    var b;
    var c = false;
    $.ajax({
        url: "covid/get_covid_config",
        type: "post",
        data: "",
        datatype: "json",
        async: false
    }).done(function(d) {
        d = JSON.parse(d);
        if (d.status == 1 && d.data != "") {
            b = JSON.parse(d.data);
            c = b.actif
        } else {
            c = false
        }
    });
    return c
}
init_user_global_variables();

function MyPopUpFormBlock() {
    var d = $("#my_popup_form_blocker");
    var c = $(document).width() - 20;
    if (c < 10) {
        c = 10
    }
    var b = $(document).height() - 10;
    if (b < 10) {
        b = 10
    }
    $(d).css({
        display: "block",
        width: c,
        height: b
    });
    if (wk_mode) {
        $(d).css({
            display: "absolute",
            width: c,
            height: b,
            top: $(window).scrollLeft(),
            left: 0
        })
    }
}

function MyPopUpFormUnBlock() {
    $("#my_popup_form_blocker").css({
        display: "none"
    })
}

function RealEvnEmplMoveMe(d) {
    var c = $(d).parent().attr("Sid");
    var b = $(d).attr("soc_id");
    var e = $(d).attr("emp_id");
    if (c == 1) {
        if ((b >= 0) && (e == -1)) {
            $("#evn_empl_src_div").find("div[soc_id=" + b + "]").each(function(h, g) {
                var f = $(g).attr("emp_id");
                if (f > 0) {
                    ManipulateEmployeInList(f, $(g))
                }
            })
        }
        if ((b >= 0) && (e > 0)) {
            ManipulateEmployeInList(e, $(d))
        }
    }
    if (c == 2) {
        ManipulateEmployeInList(e, null)
    }
    MyPopUpFormUnBlock()
}

function EvnEmplMoveMe(b) {
    MyPopUpFormBlock();
    setTimeout(function() {
        RealEvnEmplMoveMe(b)
    }, 10)
}

function ManipulateEmployeInList(e, d) {
    var c = $("#evn_empl_dst_div").find("div[emp_id=" + e + "]");
    if ((c != null) && $(c).length) {
        if (d == null) {
            $("#evn_empl_src_div").find("div[emp_id=" + e + "]").show();
            $(c).remove()
        }
    } else {
        if (d != null) {
            var b = $(d).clone();
            $(b).click(function() {
                EvnEmplMoveMe(this)
            });
            $("#evn_empl_dst_div").append(b);
            $(d).hide()
        }
    }
}

function evn_date_customRange(b) {
    b = $(b);
    if (b.attr("id") == "evn_end_date") {
        return {
            minDate: $("#evn_begin_date").datepicker("getDate"),
            maxDate: "+1Y"
        }
    } else {
        if (b.attr("id") == "evn_begin_date") {
            return {
                minDate: null,
                maxDate: $("#evn_end_date").datepicker("getDate")
            }
        } else {
            return {
                minDate: null,
                maxDate: null
            }
        }
    }
}

function events_popupReportFormError() {
    $("#popup_frm_msg").html(message_you_must_fill_fields)
}

function EvnRepeat_set_fields() {
    var d = $("#evn_repeat").get(0).selectedIndex;
    var c = $("#evn_repeat_frequency");
    var b = $("#evn_repeat_end_date");
    var e = $("#evn_repeat_count");
    if (d != 0) {
        $(c).removeAttr("disabled");
        $(c).removeClass("disabled");
        $(b).removeAttr("disabled");
        $(b).removeClass("disabled");
        $(e).removeAttr("disabled");
        $(e).removeClass("disabled")
    } else {
        $(c).addClass("disabled");
        $(c).attr("disabled", "disabled");
        $(b).addClass("disabled");
        $(b).attr("disabled", "disabled");
        $(e).addClass("disabled");
        $(e).attr("disabled", "disabled")
    }
}

function EvnRepeat_Change_sel(b) {
    EvnRepeat_set_fields();
    chg_evn_repeat_count()
}

function chg_evn_repeat_frequency() {
    chg_evn_repeat_count()
}

function chg_evn_repeat_count() {
    var d = $("#evn_repeat").get(0).selectedIndex;
    var e = $("#evn_repeat_frequency").val();
    var c = $("#evn_repeat_count").val();
    var f = $("#evn_begin_date").val();
    d = d == 1 ? "d" : d == 2 ? "w" : d == 3 ? "m" : "y";
    var b = calcISOdate(f, c * e, d);
    $("#evn_repeat_end_date").val(b)
}

function my_popupform_delete(b) {
    if (confirm(qustion_del_rec)) {
        $("#form_events_popup").find("[name=delete_me]").val(1);
        $("#form_events_popup").submit()
    }
}

function init_events_popup_view() {
    MyPopUpFormBlock();
    $("#color1").click(function() {
        iColorShow(this)
    });
    $("#form_events_popup").find("[name=evn_begin_date]").datepicker({
        beforeShow: evn_date_customRange,
        firstDay: 1,
        changeFirstDay: false,
        changeMonth: true,
        changeYear: true,
        yearRange: "-1:+3",
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form_events_popup").find("[name=evn_end_date]").datepicker({
        beforeShow: evn_date_customRange,
        firstDay: 1,
        changeFirstDay: false,
        changeMonth: true,
        changeYear: true,
        yearRange: "-1:+3",
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form_events_popup").find("[name=evn_repeat_end_date]").datepicker({
        firstDay: 1,
        changeFirstDay: false,
        changeMonth: true,
        changeYear: true,
        yearRange: "-0:+10",
        minDate: StartTime,
        maxDate: "+1Y",
        dateFormat: "yy-mm-dd",
        duration: ""
    });
    $("#form_events_popup").find("[name=evn_begin_time]").timepicker({});
    $("#form_events_popup").find("[name=evn_end_time]").timepicker({});
    var h = $("#form_events_popup").find("#evnicon");
    if ($(h).attr("my_sel") != "") {
        var m = $(h).attr("my_sel");
        get_option_from_value(h, m).attr("selected", "selected")
    }
    MSDropDown.init("#evnicon");
    document.getElementById("evnicon").refresh();
    $("#evn_empl_src_div").find("div").each(function(p, o) {
        $(o).click(function() {
            EvnEmplMoveMe(this)
        })
    });
    $("#evn_empl_dst_div").find("div").each(function(p, o) {
        $(o).click(function() {
            EvnEmplMoveMe(this)
        })
    });
    $("#evn_empl_dst_div").find("div").each(function(q, p) {
        var o = $(p).attr("emp_id");
        if (o > 0) {
            $("#evn_empl_src_div").find("div[emp_id=" + o + "]").hide()
        }
    });
    var f = $("#form_events_popup").find("select[name=evn_repeat]");
    $(f).bind("change", function() {
        EvnRepeat_Change_sel(this)
    });
    if ($(f).attr("my_sel") != "") {
        var m = $(f).attr("my_sel");
        get_option_from_value(f, m).attr("selected", "selected")
    }
    EvnRepeat_set_fields();
    var c = $("#evn_repeat").get(0).selectedIndex;
    if (c) {
        var g = $("#evn_begin_date").val();
        var b = $("#evn_repeat_frequency").val();
        var d = $("#evn_repeat_end_date").val();
        var n = ((new Date(d)).getTime() - (new Date(g)).getTime()) / 24 / 60 / 60 / 1000;
        switch (c) {
            case 4:
                n = d.substr(0, 4) - g.substr(0, 4);
                break;
            case 3:
                ydiff = d.substr(0, 4) - g.substr(0, 4);
                mdiff = d.substr(5, 2) - g.substr(5, 2);
                n = ydiff * 12 + mdiff;
                break;
            case 2:
                n /= 7;
            case 1:
        }
        $("#evn_repeat_count").val((n / b) | 0)
    }
    var e = $("#form_events_popup").find("[name=evn_categorie]");
    e.load("lists/evenement_categorie_list/" + default_language + "/0/0/0/0/0/0/dummy.html", function(r, o, q) {
        chkRes(e, o, r);
        if ($(e).attr("my_sel") != "") {
            var p = $(e).attr("my_sel");
            $(e).children("option[value=" + p + "]").attr("selected", "selected")
        }
    });
    MyPopUpFormUnBlock();
    $("#form_events_popup").submit(function() {
        var p = "";
        var q = true;
        $("#evn_empl_dst_div").find("div").each(function(v, u) {
            var r = $(u).attr("emp_id");
            if (r > 0) {
                if (q) {
                    q = false;
                    p = r
                } else {
                    p = p + "," + r
                }
            }
        });
        $("#form_events_popup").find("[name=employes_ids]").val(p);
        MyPopUpFormUnBlock();
        var o = {
            url: "events/js_cnt_inters_on_event",
            type: "post",
            async: false,
            forceSync: true,
            beforeSubmit: function(w, v, r) {
                var u = v[0];
                if (u.delete_me.value != 1) {
                    if (u.evn_categorie.value == "") {
                        events_popupReportFormError();
                        return false
                    }
                    if (u.evn_label.value == "") {
                        events_popupReportFormError();
                        return false
                    }
                    if (u.evn_begin_date.value == "") {
                        events_popupReportFormError();
                        return false
                    }
                    if (u.evn_begin_time.value == "") {
                        events_popupReportFormError();
                        return false
                    }
                    if (u.evn_end_date.value == "") {
                        events_popupReportFormError();
                        return false
                    }
                    if (u.evn_end_time.value == "") {
                        events_popupReportFormError();
                        return false
                    }
                    if (u.color1.value == "") {
                        events_popupReportFormError();
                        return false
                    }
                    if (u.employes_ids.value == "") {
                        events_popupReportFormError();
                        return false
                    }
                    if (u.evn_repeat.value != 0) {
                        if (u.evn_repeat_frequency.value == "") {
                            events_popupReportFormError();
                            return false
                        }
                        if (u.evn_repeat_end_date.value == "") {
                            events_popupReportFormError();
                            return false
                        }
                    }
                }
                return true
            },
            error: ajaxerror,
            success: function(u, r) {
                if (u > 0) {
                    $.wkDLG(u + evn_found_interventions_to_move, dlg_button_yes, function() {
                        save_event(true)
                    }, dlg_button_no, function() {
                        save_event(false)
                    })
                } else {
                    if (u != "0") {
                        alert(wk_mode ? u : lang_action_failed)
                    } else {
                        save_event(false);
                        LoadTimeTables(0)
                    }
                }
                return false
            }
        };
        $("#form_events_popup").ajaxSubmit(o);
        return false
    })
}

function popup_my_form(c, b) {
    $("#my_popup_form").load(c, {
        html: b
    }, function() {
        show_my_popupform($(document).scrollLeft(), $(document).scrollTop() + 50)
    })
}

function save_event(c) {
    var b = {
        url: "events/save_event",
        type: "post",
        data: {
            new_tech_yes: c
        },
        async: false,
        forceSync: true,
        error: ajaxerror,
        success: function(e) {
            var d = e.indexOf("\n");
            var f = d > -1 ? e.substr(0, d) : e;
            if (f > 0) {
                alert(f + evn_moved_interventions)
            }
            if (d > -1) {
                popup_my_form("planning/get_placeholders4techs", e.substr(++d))
            } else {
                LoadTimeTables(0)
            }
        }
    };
    $("#form_events_popup").ajaxSubmit(b)
}

function isInteger(b) {
    if (b == "") {
        return false
    }
    for (i = 0; i < b.length; i++) {
        if ((b.charAt(i) < "0") || (b.charAt(i) > "9")) {
            return false
        }
    }
    return true
}

function GoToEventsForm(f, c, g, d, b, e, h) {
    blockAllUI();
    $("#my_popup_form").load("events/events_popup_form", {
        inside: "yes",
        evn_id: f,
        emp_id: c,
        soc_id: g,
        age_id: d,
        p_date: b,
        time_id: e
    }, function(o, m, n) {
        if (chkRes($("#my_popup_form"), m, o)) {}
        UNblockAllUI();
        if (wk_mode) {
            show_my_popupform($(document).scrollLeft(), $(document).scrollTop() + 50, true)
        } else {
            show_my_popupform(h.docX, h.docY, true)
        }
    })
}

function Create_New_Event(c, e) {
    var d = -1;
    if (($(c).attr("id") >= 0) && isInteger($(c).attr("id"))) {
        d = $(c).attr("id")
    }
    var b = -1;
    if (($(c).attr("tc") >= 0) && isInteger($(c).attr("tc"))) {
        b = $(c).attr("tc")
    }
    GoToEventsForm(-1, b, Planning_soc_id, Planning_age_id, Planning_date, d, e)
}

function Edit_Event(c, e) {
    if ($(c).attr("evn_id") > 0) {
        var d = -1;
        if (($(c).attr("id") >= 0) && isInteger($(c).attr("id"))) {
            d = $(c).attr("id")
        }
        var b = -1;
        if (($(c).attr("tc") >= 0) && isInteger($(c).attr("tc"))) {
            b = $(c).attr("tc")
        }
        GoToEventsForm($(c).attr("evn_id"), b, Planning_soc_id, Planning_age_id, Planning_date, d, e)
    }
}

function my_popupform_keys_hook(b) {
    if (b.keyCode == 27) {
        b.preventDefault();
        hide_my_popupform();
        return false
    }
}

function Real_hide_my_popupform() {
    $(document).unbind("keydown");
    iColorHide();
    $("#my_popup_form").html("");
    MyPopUpFormUnBlock();
    jQuery.unblockUI()
}

function hide_my_popupform() {
    MyPopUpFormBlock();
    setTimeout(function() {
        Real_hide_my_popupform()
    }, 10)
}

function show_my_popupform(m, h, b) {
    var e = m;
    var c = h - 9;
    var g = m + 9;
    var f = h - 18;
    jQuery.blockUI({
        message: $("#my_popup_form"),
        css: {
            left: g,
            top: f,
            position: "absolute"
        },
        focusInput: false,
        overlayCSS: {
            cursor: "default"
        }
    });
    $(document).bind("keydown", my_popupform_keys_hook);
    var d = $("#my_popup_form").find("form").find("[tabindex]:not(.disabled_inf):visible:enabled:first").get(0);
    if (d != null) {
        d.focus()
    }
}

function my_popupform_cancel(b) {
    hide_my_popupform()
}

function Edit_Client_Address_Details(e, d, b, f, c) {
    blockAllUI();
    $("#my_popup_form").load("clients/get_address_details_popup_form", {
        inside: "yes",
        cli_id: e,
        int_id: d
    }, function(m, g, h) {
        if (chkRes($("#my_popup_form"), g, m)) {}
        UNblockAllUI();
        show_my_popupform(f.docX, f.docY, true)
    })
}

function init_client_address_details_popup_view(c, b) {
    $("#form_client_address_details_popup").submit(function() {
        var d = {
            target: "#dummy_container",
            url: "clients/save_address_details_popup_form",
            type: "post",
            beforeSubmit: function(g, f, e) {
                TempStorageA = f[0].cli_address_detail.value;
                MyPopUpFormBlock();
                return true
            },
            error: function() {
                hide_my_popupform()
            },
            success: function(f, e) {
                hide_my_popupform();
                blockAllUI();
                RefreshClientIfItsOpened(c);
                LoadTimeTables(0);
                RefreshInterventionListCellToolTipIfItExists(b);
                UNblockAllUI()
            }
        };
        $("#form_client_address_details_popup").ajaxSubmit(d);
        return false
    })
}

function get_option_from_value(c, d) {
    var b = d;
    if (typeof b != "undefined") {
        b = b.toString().replace(/'/g, "\\'")
    }
    return $(c).find('option[value="' + b + '"]')
}
var my_extGrid;
var my_tabs;
var curReqid = 0;

function showReq(b) {
    $("#scheduler_container").hide().appendTo("#scheduler_protector");
    if (curReqid == b) {
        my_extGrid.store.baseParams.filters = ca_getFilterValues();
        my_extGrid.store.load()
    } else {
        curReqid = b;
        $.post("conduite_activite/js_get_reqinfo/fr/" + b, {
            reqid: b
        }, function(c) {
            $("#ca_container").html(c.view);
            buildGrid(c.reqinfo, ca_getFilterValues())
        }, "json")
    }
}

function ca_getFilterValues() {
    var b = "";
    $("[filter]").each(function(c) {
        b += ",{filter:'" + $(this).attr("filter") + "' , value:'" + $(this).val() + "'}"
    });
    b = "[" + b.substring(1) + "]";
    return b
}

function buildGrid(reqinfo, filters) {
    colDefArray = eval(reqinfo.grid_cols);
    recModel = [];
    for (col in colDefArray) {
        recModel.push({
            name: colDefArray[col].dataIndex
        })
    }
    var dataRecord = new Ext.data.Record.create(recModel);
    var dataReader = new Ext.data.JsonReader({
        root: "rows"
    }, dataRecord);
    var dataProxy = new Ext.data.HttpProxy({
        url: "conduite_activite/js_get_reqdata/fr/" + reqinfo.id,
        method: "POST"
    });
    var dataStore = new Ext.data.Store({
        proxy: dataProxy,
        reader: dataReader,
        baseParams: {
            reqid: reqinfo.id,
            filters: filters
        }
    });
    var colModel = new Ext.grid.ColumnModel(colDefArray);
    my_extGrid = new Ext.grid.GridPanel({
        renderTo: "ca_container",
        store: dataStore,
        id: "grid",
        height: 400,
        viewConfig: {
            forceFit: true
        },
        cm: colModel,
        sm: new Ext.grid.RowSelectionModel({
            singleSelect: true,
            listeners: {
                rowselect: {
                    fn: ca_grid_rowSel,
                    buffer: 500
                }
            }
        }),
        title: reqinfo.title_long
    });
    if (reqinfo.tabs instanceof Array) {
        var tabitems = [];
        for (i in reqinfo.tabs) {
            if (reqinfo.tabs[i].header) {
                var tabCols = eval(eval("reqinfo.tab" + (parseInt(i) + 1) + "_cols"));
                var tab_fields = [];
                for (col in tabCols) {
                    tab_fields.push(tabCols[col].dataIndex)
                }
                var tab_store = new Ext.data.JsonStore({
                    url: "conduite_activite/js_get_reqdetail/fr/" + reqinfo.id,
                    root: "data",
                    fields: tab_fields,
                    baseParams: {
                        reqid: reqinfo.id,
                        tabIndex: parseInt(i) + 1,
                        rowData: {
                            dummy: ""
                        }
                    }
                });
                switch (reqinfo.tabs[i].content) {
                    case "grid":
                        var tab_content = new Ext.ListView({
                            title: reqinfo.tabs[i].header,
                            tabNum: parseInt(i) + 1,
                            gridRecId: -1,
                            store: tab_store,
                            columns: tabCols,
                            listeners: {
                                activate: ca_detail_activate
                            },
                        });
                        break;
                    case "form":
                        var tab_content = new Ext.form.FormPanel({
                            title: reqinfo.tabs[i].header,
                            tabNum: parseInt(i) + 1,
                            gridRecId: -1,
                            store: tab_store,
                            items: tabCols,
                            listeners: {
                                activate: ca_detail_activate
                            },
                        });
                        break
                }
                tabitems.push(tab_content)
            }
        }
        my_tabs = new Ext.TabPanel({
            renderTo: "ca_details",
            activeTab: 0,
            width: 400,
            height: 400,
            plain: false,
            defaults: {
                autoScroll: true
            },
            items: tabitems,
        })
    }
    dataStore.load()
}

function ca_grid_rowSel(f, e, d) {
    try {
        var b = my_tabs.getActiveTab();
        ca_load_detail(b, d)
    } catch (c) {}
}

function ca_detail_activate(b) {
    if (my_extGrid.rendered) {
        var c = my_extGrid.getSelectionModel().getSelected();
        ca_load_detail(b, c)
    }
}

function ca_load_detail(b, c) {
    if (c) {
        if (b.gridRecId != c.id) {
            b.gridRecId = c.id;
            b.store.baseParams.rowData = Ext.encode(c.data);
            b.store.baseParams.tabIndex = b.tabNum;
            b.store.load({
                curTab: b,
                callback: function(f, d, e) {
                    if (d.curTab instanceof Ext.form.FormPanel) {
                        d.curTab.getForm().loadRecord(f[0])
                    }
                }
            })
        }
    }
}

function showSuiviDBS() {
    blockAllUI();
    $("#scheduler_container").hide().appendTo("#scheduler_protector");
    $("#ca_container").load("conduite_activite/get_suivi_dbs_select_view", {
        inside: "yes"
    }, function(d, b, c) {
        UNblockAllUI()
    })
}

function showFullCalendar() {
    blockAllUI();
    $("#scheduler_container").hide().appendTo("#scheduler_protector");
    $("#ca_container").load("conduite_activite/get_fullcalendar_select_view", {
        inside: "yes"
    }, function(d, b, c) {
        UNblockAllUI()
    })
}

function showTimeline() {
    blockAllUI();
    if ($("#scheduler_here").length) {
        $("#scheduler_container").fadeOut("fast").appendTo("#scheduler_protector");
        $("#ca_container").html("");
        $("#scheduler_container").appendTo("#ca_container").show("fast");
        UNblockAllUI()
    } else {
        $("#scheduler_container").hide().load("conduite_activite/get_timeline_result", {
            inside: "yes"
        }, function(d, b, c) {
            $("#ca_container").html("");
            $("#scheduler_container").appendTo("#ca_container").show("fast");
            UNblockAllUI()
        })
    }
}

function init_Conduite_CA_View() {
    $("#scheduler_container").appendTo("#scheduler_protector");
    LoadSelectFromHiddenStorage("conduite_ca_filters", "conduite_ca_telima", "#society_all");
    var d = $("#formconduite_ca_filters").find("select[name=conduite_ca_telima]");
    d.prepend("<option value='*'>(Toutes)</option>");
    var c = $("#conduite_ca_filters").find("[name=my_id_request]").val();
    var b = $("#conduite_ca_filters").find("[name=conduite_ca_telima]").val()
}

function LoadSuiviDBSView(c, b) {
    switch_div(c, b);
    blockAllUI();
    $("#suivi_dbs_display").load("conduite_activite/get_suivi_dbs_select_view", {
        inside: "yes"
    }, function(f, d, e) {
        if (chkRes($("#suivi_dbs_display"), d, f)) {}
        UNblockAllUI()
    })
}

function init_fullcalendar_view() {
    var b = "#fullcalendar_select";
    var c = $("#fullcalendar_select").find("[name=fullcalendar_society]");
    c.load("conduite_activite/society_by_profile/" + default_language + "/0/0/0/0/0/0/dummy.html", function(f, d, e) {
        chkRes(c, d, f);
        load_Techs_jerome($(c).get(0));
        UNblockAllUI()
    });
    $(c).bind("change", function() {
        load_Techs_jerome(this)
    });
    blockAllUI()
}

function init_timeline_view() {
    blockAllUI();
    var b = "#timeline_select";
    var c = $("#timeline_select").find("[name=timeline_society]");
    c.load("conduite_activite/society_by_profile/" + default_language + "/0/0/0/0/0/0/dummy.html", function(f, d, e) {
        chkRes(c, d, f);
        load_Techs_jerome2($(c).get(0));
        UNblockAllUI()
    });
    $(c).bind("change", function() {
        load_Techs_jerome2(this)
    })
}

function load_Techs_jerome2(c) {
    var b = $("#timeline_select").find("[name=timeline_tech]");
    blockAllUI();
    $(b).load("employees/employees_by_id_societe/" + default_language + "/0/0/dummy.html", {
        inside: "yes",
        id_societe: $(c).attr("value")
    }, function(f, d, e) {
        chkRes($(b), d, f);
        $(b).removeAttr("disabled");
        $(b).find("option[value='-1']").remove();
        SetSelectedByOptionAndEnable(b, "", true);
        UNblockAllUI()
    })
}

function load_Techs_jerome(c) {
    var b = $("#fullcalendar_select").find("[name=fullcalendar_tech]");
    blockAllUI();
    $(b).load("employees/employees_by_id_societe/" + default_language + "/0/0/dummy.html", {
        inside: "yes",
        id_societe: $(c).attr("value")
    }, function(f, d, e) {
        chkRes($(b), d, f);
        $(b).removeAttr("disabled");
        $(b).find("option[value='-1']").remove();
        SetSelectedByOptionAndEnable(b, "", true);
        UNblockAllUI()
    })
}

function LoadTimelineResult() {
    var b = $("#timeline_select").find("[name=timeline_society]").val();
    var c = $("#timeline_select").find("[name=timeline_tech]").val();
    blockAllUI();
    $("#timeline_result").load("conduite_activite/get_timeline_result", {
        inside: "yes",
        id_employe: c,
        id_societe: b
    }, function(f, d, e) {
        if (chkRes($("#timeline_result"), d, f)) {}
        $("#timeline_export").show("slow");
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function LoadFullcalendarResult() {
    var b = $("#fullcalendar_select").find("[name=fullcalendar_society]").val();
    var c = $("#fullcalendar_select").find("[name=fullcalendar_tech]").val();
    blockAllUI();
    $("#fullcalendar_result").load("conduite_activite/get_fullcalendar_result", {
        inside: "yes",
        id_employe: c,
        id_societe: b
    }, function(f, d, e) {
        if (chkRes($("#fullcalendar_result"), d, f)) {}
        $("#fullcalendar_export").show("slow");
        tabs_delimiter_height();
        UNblockAllUI()
    })
}

function fullcalendar_get_events(b) {
    var c = $("#fullcalendar").fullCalendar("getView");
    var d = $("#fullcalendar_select").find("[name=fullcalendar_tech]").val();
    window.open("conduite_activite/fullcalendar_display_csv/" + default_language + "/" + d + "/" + $.fullCalendar.formatDate(c.visStart, "yyyy-MM-dd") + "/" + $.fullCalendar.formatDate(c.visEnd, "yyyy-MM-dd") + "/" + b + "/0/0/dummy.html")
}

function init_suivi_dbs_select_view() {
    var b = "#suivi_dbs_select";
    var d = $("#suivi_dbs_select").find("[name=suivi_dbs_society]");
    d.load("conduite_activite/society_by_profile/" + default_language + "/0/0/0/0/0/0/dummy.html", function(g, e, f) {
        chkRes(d, e, g);
        UNblockAllUI()
    });
    $(d).bind("change", function() {
        load_Techs(this)
    });
    load_Techs($(d).get(0));
    blockAllUI();
    var c = $("#suivi_dbs_select").find("[name=suivi_dbs_partenaire]");
    c.load("lists/partners_dbs/" + default_language + "/0/0/0/0/0/0/dummy.html", function(g, e, f) {
        chkRes(c, e, g);
        c.html('<option value="-1">Tous</option>' + c.html());
        UNblockAllUI()
    })
}

function load_Techs(c) {
    var b = $("#suivi_dbs_select").find("[name=suivi_dbs_tech]");
    blockAllUI();
    $(b).load("employees/employees_by_id_societe/" + default_language + "/0/0/dummy.html", {
        inside: "yes",
        id_societe: $(c).attr("value")
    }, function(f, d, e) {
        chkRes($(b), d, f);
        $(b).removeAttr("disabled");
        SetSelectedByOptionAndEnable(b, "", true);
        UNblockAllUI()
    })
}

function LoadDBSResult() {
    var c = $("#suivi_dbs_select").find("[name=suivi_dbs_society]").val();
    var d = $("#suivi_dbs_select").find("[name=suivi_dbs_tech]").val();
    var b = $("#suivi_dbs_select").find("[name=suivi_dbs_partenaire]").val();
    blockAllUI();
    $("#suivi_dbs_result").load("conduite_activite/get_suivi_dbs_result", {
        inside: "yes",
        id_employe: d,
        id_societe: c,
        id_partenaire: b
    }, function(g, e, f) {
        if (chkRes($("#suivi_dbs_result"), e, g)) {}
        tabs_delimiter_height();
        UNblockAllUI()
    })
}
/*
 * FullCalendar v1.4.2
 * http://arshaw.com/fullcalendar/
 *
 * Use fullcalendar.css for basic styling.
 * For event drag & drop, required jQuery UI draggable.
 * For event resizing, requires jQuery UI resizable.
 *
 * Copyright (c) 2009 Adam Shaw
 * Dual licensed under the MIT and GPL licenses:
 *   http://www.opensource.org/licenses/mit-license.php
 *   http://www.gnu.org/licenses/gpl.html
 *
 * Date: Wed Dec 2 22:03:57 2009 -0800
 *
 */
(function(L) {
    var R = L.fullCalendar = {};
    var f = R.views = {};
    var N = {
        defaultView: "month",
        aspectRatio: 1.35,
        header: {
            left: "title",
            center: "",
            right: "today prev,next"
        },
        weekends: true,
        allDayDefault: true,
        startParam: "start",
        endParam: "end",
        cacheParam: "_",
        titleFormat: {
            month: "MMMM yyyy",
            week: "MMM d[ yyyy]{ '&#8212;'[ MMM] d yyyy}",
            day: "dddd, MMM d, yyyy"
        },
        columnFormat: {
            month: "ddd",
            week: "ddd M/d",
            day: "dddd M/d"
        },
        timeFormat: {
            "": "h(:mm)t"
        },
        isRTL: false,
        firstDay: 0,
        monthNames: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        monthNamesShort: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
        dayNames: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        dayNamesShort: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
        buttonText: {
            prev: "&nbsp;&#9668;&nbsp;",
            next: "&nbsp;&#9658;&nbsp;",
            prevYear: "&nbsp;&lt;&lt;&nbsp;",
            nextYear: "&nbsp;&gt;&gt;&nbsp;",
            today: "today",
            month: "month",
            week: "week",
            day: "day"
        },
        theme: false,
        buttonIcons: {
            prev: "circle-triangle-w",
            next: "circle-triangle-e"
        }
    };
    var c = {
        header: {
            left: "next,prev today",
            center: "",
            right: "title"
        },
        buttonText: {
            prev: "&nbsp;&#9658;&nbsp;",
            next: "&nbsp;&#9668;&nbsp;",
            prevYear: "&nbsp;&gt;&gt;&nbsp;",
            nextYear: "&nbsp;&lt;&lt;&nbsp;"
        },
        buttonIcons: {
            prev: "circle-triangle-e",
            next: "circle-triangle-w"
        }
    };
    var U = R.setDefaults = function(ah) {
        L.extend(true, N, ah)
    };
    L.fn.fullCalendar = function(ak) {
        if (typeof ak == "string") {
            var aj = Array.prototype.slice.call(arguments, 1),
                al;
            this.each(function() {
                var am = L.data(this, "fullCalendar")[ak].apply(this, aj);
                if (al == q) {
                    al = am
                }
            });
            if (al != q) {
                return al
            }
            return this
        }
        var ai = ak.eventSources || [];
        delete ak.eventSources;
        if (ak.events) {
            ai.push(ak.events);
            delete ak.events
        }
        ai.unshift([]);
        ak = L.extend(true, {}, N, (ak.isRTL || ak.isRTL == q && N.isRTL) ? c : {}, ak);
        var ah = ak.theme ? "ui" : "fc";
        this.each(function() {
            var aC = this,
                ao = L(this).addClass("fc"),
                aN, aH = L("<div class='fc-content " + ah + "-widget-content' style='position:relative'/>").appendTo(this),
                aI;
            if (ak.isRTL) {
                ao.addClass("fc-rtl")
            }
            if (ak.theme) {
                ao.addClass("ui-widget")
            }
            var aO = new Date(),
                aF, aB, aw = {};
            if (ak.year != q && ak.year != aO.getFullYear()) {
                aO.setDate(1);
                aO.setMonth(0);
                aO.setFullYear(ak.year)
            }
            if (ak.month != q && ak.month != aO.getMonth()) {
                aO.setDate(1);
                aO.setMonth(ak.month)
            }
            if (ak.date != q) {
                aO.setDate(ak.date)
            }

            function aS(aT) {
                if (aT != aF) {
                    ar();
                    if (aB) {
                        if (aB.eventsChanged) {
                            aG(aB);
                            aB.eventsChanged = false
                        }
                        aB.element.hide()
                    }
                    if (aw[aT]) {
                        (aB = aw[aT]).element.show();
                        if (aB.shown) {
                            aB.shown()
                        }
                    } else {
                        aB = aw[aT] = L.fullCalendar.views[aT](L("<div class='fc-view fc-view-" + aT + "'/>").appendTo(aH), ak)
                    }
                    if (aJ) {
                        aJ.find("div.fc-button-" + aF).removeClass(ah + "-state-active");
                        aJ.find("div.fc-button-" + aT).addClass(ah + "-state-active")
                    }
                    aB.name = aF = aT;
                    aR();
                    aA()
                }
            }

            function aR(aV, aT) {
                if ((aN = aC.offsetWidth) !== 0) {
                    if (!aI) {
                        aI = aQ()
                    }
                    if (aV || !aB.date || +aB.date != +aO) {
                        ar();
                        aB.render(aO, aV || 0, aI, function(aW) {
                            if (!ap || aB.visStart < ap || aB.visEnd > aK) {
                                az(aW)
                            } else {
                                aW(an)
                            }
                        });
                        aA();
                        aB.date = Y(aO)
                    } else {
                        if (aB.sizeDirty || aT) {
                            aB.updateSize(aI);
                            aB.rerenderEvents()
                        } else {
                            if (aB.eventsDirty) {
                                aB.clearEvents();
                                aB.renderEvents(an)
                            }
                        }
                    }
                    if (aJ) {
                        aJ.find("h2.fc-header-title").html(aB.title);
                        var aU = new Date();
                        if (aU >= aB.start && aU < aB.end) {
                            aJ.find("div.fc-button-today").addClass(ah + "-state-disabled")
                        } else {
                            aJ.find("div.fc-button-today").removeClass(ah + "-state-disabled")
                        }
                    }
                    aB.sizeDirty = false;
                    aB.eventsDirty = false;
                    aB.trigger("viewDisplay", aC)
                }
            }

            function aG(aT) {
                L.each(aw, function() {
                    if (this != aT) {
                        this.eventsDirty = true
                    }
                })
            }

            function aq() {
                aB.clearEvents();
                aB.renderEvents(an);
                aG(aB)
            }

            function aE(aT) {
                L.each(aw, function() {
                    if (this != aT) {
                        this.sizeDirty = true
                    }
                })
            }

            function ay(aT) {
                aI = aQ();
                if (aT) {
                    ar()
                }
                aB.updateSize(aI);
                if (aT) {
                    aA()
                }
                aE(aB);
                aB.rerenderEvents(true)
            }

            function aQ() {
                if (ak.contentHeight) {
                    return ak.contentHeight
                } else {
                    if (ak.height) {
                        return ak.height - (aJ ? aJ.height() : 0) - ag(aH)
                    }
                }
                return aN / ak.aspectRatio
            }
            var an = [],
                ap, aK;

            function az(aW) {
                an = [];
                ap = Y(aB.visStart);
                aK = Y(aB.visEnd);
                var aV = ai.length,
                    aT = function() {
                        if (--aV == 0) {
                            if (aW) {
                                aW(an)
                            }
                        }
                    },
                    aU = 0;
                for (; aU < ai.length; aU++) {
                    au(ai[aU], aT)
                }
            }

            function au(aY, aZ) {
                var aU = aB.name,
                    aX = Y(aO),
                    aW = function(a0) {
                        if (aU == aB.name && +aX == +aO) {
                            for (var a1 = 0; a1 < a0.length; a1++) {
                                K(a0[a1], ak);
                                a0[a1].source = aY
                            }
                            an = an.concat(a0);
                            if (aZ) {
                                aZ(a0)
                            }
                        }
                    },
                    aT = function(a0) {
                        aW(a0);
                        aP()
                    };
                if (typeof aY == "string") {
                    var aV = {};
                    aV[ak.startParam] = Math.round(ap.getTime() / 1000);
                    aV[ak.endParam] = Math.round(aK.getTime() / 1000);
                    aV[ak.cacheParam] = (new Date()).getTime();
                    av();
                    L.getJSON(aY, aV, aT)
                } else {
                    if (L.isFunction(aY)) {
                        av();
                        aY(Y(ap), Y(aK), aT)
                    } else {
                        aW(aY)
                    }
                }
            }
            var aL = 0;

            function av() {
                if (!aL++) {
                    aB.trigger("loading", aC, true)
                }
            }

            function aP() {
                if (!--aL) {
                    aB.trigger("loading", aC, false)
                }
            }
            var aM = {
                render: function() {
                    aR(0, true)
                },
                changeView: aS,
                getView: function() {
                    return aB
                },
                getDate: function() {
                    return aO
                },
                option: function(aT, aU) {
                    if (aU == q) {
                        return ak[aT]
                    }
                    if (aT == "height" || aT == "contentHeight" || aT == "aspectRatio") {
                        if (!at) {
                            ak[aT] = aU;
                            ay()
                        }
                    }
                },
                prev: function() {
                    aR(-1)
                },
                next: function() {
                    aR(1)
                },
                prevYear: function() {
                    ae(aO, -1);
                    aR()
                },
                nextYear: function() {
                    ae(aO, 1);
                    aR()
                },
                today: function() {
                    aO = new Date();
                    aR()
                },
                gotoDate: function(aT, aV, aU) {
                    if (typeof aT == "object") {
                        aO = Y(aT)
                    } else {
                        if (aT != q) {
                            aO.setFullYear(aT)
                        }
                        if (aV != q) {
                            aO.setMonth(aV)
                        }
                        if (aU != q) {
                            aO.setDate(aU)
                        }
                    }
                    aR()
                },
                incrementDate: function(aU, aT, aV) {
                    if (aU != q) {
                        ae(aO, aU)
                    }
                    if (aT != q) {
                        u(aO, aT)
                    }
                    if (aV != q) {
                        H(aO, aV)
                    }
                    aR()
                },
                updateEvent: function(aX) {
                    var aV, aT = an.length,
                        aY, aW = aX.start - aX._start,
                        aU = aX.end ? (aX.end - (aX._end || aB.defaultEventEnd(aX))) : 0;
                    for (aV = 0; aV < aT; aV++) {
                        aY = an[aV];
                        if (aY._id == aX._id && aY != aX) {
                            aY.start = new Date(+aY.start + aW);
                            if (aX.end) {
                                if (aY.end) {
                                    aY.end = new Date(+aY.end + aU)
                                } else {
                                    aY.end = new Date(+aB.defaultEventEnd(aY) + aU)
                                }
                            } else {
                                aY.end = null
                            }
                            aY.title = aX.title;
                            aY.url = aX.url;
                            aY.allDay = aX.allDay;
                            aY.className = aX.className;
                            aY.editable = aX.editable;
                            K(aY, ak)
                        }
                    }
                    K(aX, ak);
                    aq()
                },
                renderEvent: function(aU, aT) {
                    K(aU, ak);
                    if (!aU.source) {
                        if (aT) {
                            (aU.source = ai[0]).push(aU)
                        }
                        an.push(aU)
                    }
                    aq()
                },
                removeEvents: function(aU) {
                    if (!aU) {
                        an = [];
                        for (var aT = 0; aT < ai.length; aT++) {
                            if (typeof ai[aT] == "object") {
                                ai[aT] = []
                            }
                        }
                    } else {
                        if (!L.isFunction(aU)) {
                            var aV = aU + "";
                            aU = function(aW) {
                                return aW._id == aV
                            }
                        }
                        an = L.grep(an, aU, true);
                        for (var aT = 0; aT < ai.length; aT++) {
                            if (typeof ai[aT] == "object") {
                                ai[aT] = L.grep(ai[aT], aU, true)
                            }
                        }
                    }
                    aq()
                },
                clientEvents: function(aT) {
                    if (L.isFunction(aT)) {
                        return L.grep(an, aT)
                    } else {
                        if (aT) {
                            aT += "";
                            return L.grep(an, function(aU) {
                                return aU._id == aT
                            })
                        }
                    }
                    return an
                },
                rerenderEvents: function() {
                    aB.rerenderEvents()
                },
                addEventSource: function(aT) {
                    ai.push(aT);
                    au(aT, function() {
                        aq()
                    })
                },
                removeEventSource: function(aT) {
                    ai = L.grep(ai, function(aU) {
                        return aU != aT
                    });
                    an = L.grep(an, function(aU) {
                        return aU.source != aT
                    });
                    aq()
                },
                refetchEvents: function() {
                    az(aq)
                }
            };
            L.data(this, "fullCalendar", aM);
            var aJ, aD = ak.header;
            if (aD) {
                aJ = L("<table class='fc-header'/>").append(L("<tr/>").append(L("<td class='fc-header-left'/>").append(ax(aD.left))).append(L("<td class='fc-header-center'/>").append(ax(aD.center))).append(L("<td class='fc-header-right'/>").append(ax(aD.right)))).prependTo(ao)
            }

            function ax(aT) {
                if (aT) {
                    var aU = L("<tr/>");
                    L.each(aT.split(" "), function(aW) {
                        if (aW > 0) {
                            aU.append("<td><span class='fc-header-space'/></td>")
                        }
                        var aV;
                        L.each(this.split(","), function(aZ, aY) {
                            if (aY == "title") {
                                aU.append("<td><h2 class='fc-header-title'>&nbsp;</h2></td>");
                                if (aV) {
                                    aV.addClass(ah + "-corner-right")
                                }
                                aV = null
                            } else {
                                var aX;
                                if (aM[aY]) {
                                    aX = aM[aY]
                                } else {
                                    if (f[aY]) {
                                        aX = function() {
                                            a0.removeClass(ah + "-state-hover");
                                            aS(aY)
                                        }
                                    }
                                }
                                if (aX) {
                                    if (aV) {
                                        aV.addClass(ah + "-no-right")
                                    }
                                    var a0, a1 = ak.theme ? n(ak.buttonIcons, aY) : null,
                                        a2 = n(ak.buttonText, aY);
                                    if (a1) {
                                        a0 = L("<div class='fc-button-" + aY + " ui-state-default'><a><span class='ui-icon ui-icon-" + a1 + "'/></a></div>")
                                    } else {
                                        if (a2) {
                                            a0 = L("<div class='fc-button-" + aY + " " + ah + "-state-default'><a><span>" + a2 + "</span></a></div>")
                                        }
                                    }
                                    if (a0) {
                                        a0.click(function() {
                                            if (!a0.hasClass(ah + "-state-disabled")) {
                                                aX()
                                            }
                                        }).mousedown(function() {
                                            a0.not("." + ah + "-state-active").not("." + ah + "-state-disabled").addClass(ah + "-state-down")
                                        }).mouseup(function() {
                                            a0.removeClass(ah + "-state-down")
                                        }).hover(function() {
                                            a0.not("." + ah + "-state-active").not("." + ah + "-state-disabled").addClass(ah + "-state-hover")
                                        }, function() {
                                            a0.removeClass(ah + "-state-hover").removeClass(ah + "-state-down")
                                        }).appendTo(L("<td/>").appendTo(aU));
                                        if (aV) {
                                            aV.addClass(ah + "-no-right")
                                        } else {
                                            a0.addClass(ah + "-corner-left")
                                        }
                                        aV = a0
                                    }
                                }
                            }
                        });
                        if (aV) {
                            aV.addClass(ah + "-corner-right")
                        }
                    });
                    return L("<table/>").append(aU)
                }
            }
            var at = false,
                am = 0;

            function ar() {
                if (!at) {
                    at = true;
                    aH.css({
                        overflow: "hidden",
                        height: aI
                    })
                }
            }

            function aA() {
                if (at) {
                    aH.css({
                        overflow: "visible",
                        height: ""
                    });
                    if (L.browser.msie && (L.browser.version == "6.0" || L.browser.version == "7.0")) {
                        aH[0].clientHeight;
                        aH.hide().show()
                    }
                    at = false
                }
            }
            L(window).resize(function() {
                if (!at) {
                    if (aB.date) {
                        var aT = ++am;
                        setTimeout(function() {
                            if (aT == am && !at) {
                                var aU = ao.width();
                                if (aU != aN) {
                                    aN = aU;
                                    ay(true);
                                    aB.trigger("windowResize", aC)
                                }
                            }
                        }, 200)
                    } else {
                        aR()
                    }
                }
            });
            aS(ak.defaultView);
            if (L.browser.msie && !L("body").width()) {
                setTimeout(function() {
                    aR();
                    aH.hide().show();
                    aB.rerenderEvents()
                }, 0)
            }
        });
        return this
    };
    var X = 0;

    function K(ai, ah) {
        ai._id = ai._id || (ai.id == q ? "_fc" + X++ : ai.id + "");
        if (ai.date) {
            if (!ai.start) {
                ai.start = ai.date
            }
            delete ai.date
        }
        ai._start = Y(ai.start = g(ai.start));
        ai.end = g(ai.end);
        if (ai.end && ai.end <= ai.start) {
            ai.end = null
        }
        ai._end = ai.end ? Y(ai.end) : null;
        if (ai.allDay == q) {
            ai.allDay = ah.allDayDefault
        }
        if (ai.className) {
            if (typeof ai.className == "string") {
                ai.className = ai.className.split(/\s+/)
            }
        } else {
            ai.className = []
        }
    }
    U({
        weekMode: "fixed"
    });
    f.month = function(ai, ah) {
        return new M(ai, ah, {
            render: function(al, ap, ar, ao) {
                if (ap) {
                    u(al, ap);
                    al.setDate(1)
                }
                var aj = this.start = Y(al, true);
                aj.setDate(1);
                this.end = u(Y(aj), 1);
                var aq = this.visStart = Y(aj),
                    am = this.visEnd = Y(this.end),
                    ak = ah.weekends ? 0 : 1;
                if (ak) {
                    af(aq);
                    af(am, -1, true)
                }
                H(aq, -((aq.getDay() - Math.max(ah.firstDay, ak) + 7) % 7));
                H(am, (7 - am.getDay() + Math.max(ah.firstDay, ak)) % 7);
                var an = Math.round((am - aq) / (aa * 7));
                if (ah.weekMode == "fixed") {
                    H(am, (6 - an) * 7);
                    an = 6
                }
                this.title = V(aj, this.option("titleFormat"), ah);
                this.renderGrid(an, ah.weekends ? 7 : 5, this.option("columnFormat"), true, ar, ao)
            }
        })
    };
    f.basicWeek = function(ai, ah) {
        return new M(ai, ah, {
            render: function(am, ao, aj, an) {
                if (ao) {
                    H(am, ao * 7)
                }
                var al = this.visStart = Y(this.start = H(Y(am), -((am.getDay() - ah.firstDay + 7) % 7))),
                    ak = this.visEnd = Y(this.end = H(Y(al), 7));
                if (!ah.weekends) {
                    af(al);
                    af(ak, -1, true)
                }
                this.title = C(al, H(Y(ak), -1), this.option("titleFormat"), ah);
                this.renderGrid(1, ah.weekends ? 7 : 5, this.option("columnFormat"), false, aj, an)
            }
        })
    };
    f.basicDay = function(ai, ah) {
        return new M(ai, ah, {
            render: function(ak, am, aj, al) {
                if (am) {
                    H(ak, am);
                    if (!ah.weekends) {
                        af(ak, am < 0 ? -1 : 1)
                    }
                }
                this.title = V(ak, this.option("titleFormat"), ah);
                this.start = this.visStart = Y(ak, true);
                this.end = this.visEnd = H(Y(this.start), 1);
                this.renderGrid(1, 1, this.option("columnFormat"), false, aj, al)
            }
        })
    };
    var P, w;

    function M(aj, am, aE) {
        var ak, au, an, ap, ay, ax, aq, aA, aF, aC, ai, ar, av = L.extend(this, p, aE, {
            renderGrid: az,
            renderEvents: al,
            rerenderEvents: aD,
            updateSize: aB,
            defaultEventEnd: function(aG) {
                return Y(aG.start)
            },
            visEventEnd: function(aH) {
                if (aH.end) {
                    var aG = Y(aH.end);
                    return (aH.allDay || aG.getHours() || aG.getMinutes()) ? H(aG, 1) : aG
                } else {
                    return H(Y(aH.start), 1)
                }
            }
        });
        av.init(aj, am);
        aj.addClass("fc-grid").css("position", "relative");
        if (aj.disableSelection) {
            aj.disableSelection()
        }

        function az(aG, aM, aJ, aP, aR, aO) {
            aq = aG;
            aA = aM;
            ak = am.theme ? "ui" : "fc";
            an = am.weekends ? 0 : 1;
            au = am.firstDay;
            if (ap = am.isRTL) {
                ay = -1;
                ax = aA - 1
            } else {
                ay = 1;
                ax = 0
            }
            var aK = av.start.getMonth(),
                aN = E(new Date()),
                aT, aI, aH, aL = Y(av.visStart);
            if (!ai) {
                var aS = L("<table/>").appendTo(aj);
                aT = "<thead><tr>";
                for (aI = 0; aI < aA; aI++) {
                    aT += "<th class='fc-" + ab[aL.getDay()] + " " + ak + "-state-default" + (aI == ax ? " fc-leftmost" : "") + "'>" + V(aL, aJ, am) + "</th>";
                    H(aL, 1);
                    if (an) {
                        af(aL)
                    }
                }
                aC = L(aT + "</tr></thead>").appendTo(aS);
                aT = "<tbody>";
                aL = Y(av.visStart);
                for (aI = 0; aI < aq; aI++) {
                    aT += "<tr class='fc-week" + aI + "'>";
                    for (aH = 0; aH < aA; aH++) {
                        aT += "<td class='fc-" + ab[aL.getDay()] + " " + ak + "-state-default fc-day" + (aI * aA + aH) + (aH == ax ? " fc-leftmost" : "") + (aq > 1 && aL.getMonth() != aK ? " fc-other-month" : "") + (+aL == +aN ? " fc-today " + ak + "-state-highlight" : " fc-not-today") + "'>" + (aP ? "<div class='fc-day-number'>" + aL.getDate() + "</div>" : "") + "<div class='fc-day-content'><div>&nbsp;</div></div></td>";
                        H(aL, 1);
                        if (an) {
                            af(aL)
                        }
                    }
                    aT += "</tr>"
                }
                ai = L(aT + "</tbody>").appendTo(aS);
                ai.find("td").click(ah)
            } else {
                av.clearEvents();
                var aQ = ai.find("tr").length;
                if (aq < aQ) {
                    ai.find("tr:gt(" + (aq - 1) + ")").remove()
                } else {
                    if (aq > aQ) {
                        aT = "";
                        for (aI = aQ; aI < aq; aI++) {
                            aT += "<tr class='fc-week" + aI + "'>";
                            for (aH = 0; aH < aA; aH++) {
                                aT += "<td class='fc-" + ab[aL.getDay()] + " " + ak + "-state-default fc-new fc-day" + (aI * aA + aH) + (aH == ax ? " fc-leftmost" : "") + "'>" + (aP ? "<div class='fc-day-number'></div>" : "") + "<div class='fc-day-content'><div>&nbsp;</div></div></td>";
                                H(aL, 1);
                                if (an) {
                                    af(aL)
                                }
                            }
                            aT += "</tr>"
                        }
                        ai.append(aT)
                    }
                }
                ai.find("td.fc-new").removeClass("fc-new").click(ah);
                aL = Y(av.visStart);
                ai.find("td").each(function() {
                    var aU = L(this);
                    if (aq > 1) {
                        if (aL.getMonth() == aK) {
                            aU.removeClass("fc-other-month")
                        } else {
                            aU.addClass("fc-other-month")
                        }
                    }
                    if (+aL == +aN) {
                        aU.removeClass("fc-not-today").addClass("fc-today").addClass(ak + "-state-highlight")
                    } else {
                        aU.addClass("fc-not-today").removeClass("fc-today").removeClass(ak + "-state-highlight")
                    }
                    aU.find("div.fc-day-number").text(aL.getDate());
                    H(aL, 1);
                    if (an) {
                        af(aL)
                    }
                });
                if (aq == 1) {
                    aL = Y(av.visStart);
                    aC.find("th").each(function() {
                        L(this).text(V(aL, aJ, am));
                        this.className = this.className.replace(/^fc-\w+(?= )/, "fc-" + ab[aL.getDay()]);
                        H(aL, 1);
                        if (an) {
                            af(aL)
                        }
                    });
                    aL = Y(av.visStart);
                    ai.find("td").each(function() {
                        this.className = this.className.replace(/^fc-\w+(?= )/, "fc-" + ab[aL.getDay()]);
                        H(aL, 1);
                        if (an) {
                            af(aL)
                        }
                    })
                }
            }
            aB(aR);
            aO(al)
        }

        function ah(aH) {
            var aI = parseInt(this.className.match(/fc\-day(\d+)/)[1]),
                aG = H(Y(av.visStart), Math.floor(aI / aA) * 7 + aI % aA);
            av.trigger("dayClick", this, aG, true, aH)
        }

        function aB(aG) {
            var aH = ai.find("tr td:first-child"),
                aM = aG - aC.height(),
                aK, aJ;
            if (am.weekMode == "variable") {
                aK = aJ = Math.floor(aM / (aq == 1 ? 2 : 6))
            } else {
                aK = Math.floor(aM / aq);
                aJ = aM - aK * (aq - 1)
            }
            O(ai);
            if (P == q) {
                var aI = ai.find("tr:first"),
                    aL = aI.find("td:first");
                aL.height(aK);
                P = aK != aL.height()
            }
            if (P) {
                aH.slice(0, -1).height(aK);
                aH.slice(-1).height(aJ)
            } else {
                m(aH.slice(0, -1), aK);
                m(aH.slice(-1), aJ)
            }
            ac(aC.find("th").slice(0, -1), aF = Math.floor(aj.width() / aA))
        }

        function al(aG) {
            av.reportEvents(aG);
            ao(ar = at(aG))
        }

        function aD(aG) {
            av.clearEvents();
            if (aG) {
                ao(ar)
            } else {
                al(av.cachedEvents)
            }
        }

        function at(aH) {
            var aK = Y(av.visStart),
                aI = H(Y(aK), aA),
                aJ = [],
                aG = 0;
            for (; aG < aq; aG++) {
                aJ.push(Q(av.sliceSegs(aH, aK, aI)));
                H(aK, 7);
                H(aI, 7)
            }
            return aJ
        }

        function ao(aR) {
            var aW, aY = aR.length,
                aM, aI, aN, a2, aO, aQ, aU, aP, a0, aT, aZ, aV, aJ, aG, aS, aK, a1, aX, aH, aL;
            for (aW = 0; aW < aY; aW++) {
                aM = aR[aW];
                aI = ai.find("tr:eq(" + aW + ")");
                aN = aI.find("td:first");
                a2 = aN.find("div.fc-day-content div").css("position", "relative");
                aO = T(a2, aN, aI, ai).top;
                aQ = 0;
                for (aU = 0; aU < aM.length; aU++) {
                    aP = aM[aU];
                    a0 = 0;
                    for (aT = 0; aT < aP.length; aT++) {
                        aZ = aP[aT];
                        aV = aZ.event;
                        aJ = "fc-event fc-event-hori ";
                        aG = aZ.isStart ? aI.find("td:eq(" + ((aZ.start.getDay() - Math.max(au, an) + aA) % aA) + ") div div") : ai;
                        aS = aZ.isEnd ? aI.find("td:eq(" + ((aZ.end.getDay() - Math.max(au, an) + aA - 1) % aA) + ") div div") : ai;
                        if (ap) {
                            aK = aS.position().left;
                            a1 = aG.position().left + aG.width();
                            if (aZ.isStart) {
                                aJ += "fc-corner-right "
                            }
                            if (aZ.isEnd) {
                                aJ += "fc-corner-left "
                            }
                        } else {
                            aK = aG.position().left;
                            a1 = aS.position().left + aS.width();
                            if (aZ.isStart) {
                                aJ += "fc-corner-left "
                            }
                            if (aZ.isEnd) {
                                aJ += "fc-corner-right "
                            }
                        }
                        aX = L("<div class='" + aJ + aV.className.join(" ") + "'/>").append(aH = L("<a/>").append(aV.allDay || !aZ.isStart ? null : L("<span class='fc-event-time'/>").html(C(aV.start, aV.end, av.option("timeFormat"), am))).append(L("<span class='fc-event-title'/>").text(aV.title)));
                        if (aV.url) {
                            aH.attr("href", aV.url)
                        }
                        aL = av.trigger("eventRender", aV, aV, aX);
                        if (aL !== false) {
                            if (aL && typeof aL != "boolean") {
                                aX = L(aL)
                            }
                            aX.css({
                                position: "absolute",
                                top: aO,
                                left: aK + (w || 0),
                                zIndex: 8
                            }).appendTo(aj);
                            ac(aX, a1 - aK, true);
                            if (ap && w == q) {
                                w = aK - aX.position().left;
                                if (w) {
                                    aX.css("left", aK + w)
                                }
                            }
                            av.eventElementHandlers(aV, aX);
                            if (aV.editable || aV.editable == q && am.editable) {
                                aw(aV, aX);
                                if (aZ.isEnd) {
                                    av.resizableDayEvent(aV, aX, aF)
                                }
                            }
                            av.reportEventElement(aV, aX);
                            av.trigger("eventAfterRender", aV, aV, aX);
                            a0 = Math.max(a0, aX.outerHeight(true))
                        }
                    }
                    aQ += a0;
                    aO += a0
                }
                a2.height(aQ)
            }
        }

        function aw(aI, aH) {
            if (!am.disableDragging && aH.draggable) {
                var aG;
                aH.draggable({
                    zIndex: 9,
                    delay: 50,
                    opacity: av.option("dragOpacity"),
                    revertDuration: am.dragRevertDuration,
                    start: function(aK, aL) {
                        av.hideEvents(aI, aH);
                        av.trigger("eventDragStart", aH, aI, aK, aL);
                        aG = new e(function(aM) {
                            aH.draggable("option", "revert", !aM || !aM.rowDelta && !aM.colDelta);
                            if (aM) {
                                av.showOverlay(aM)
                            } else {
                                av.hideOverlay()
                            }
                        });
                        ai.find("tr").each(function() {
                            aG.row(this)
                        });
                        var aJ = ai.find("tr:first td");
                        if (ap) {
                            aJ = L(aJ.get().reverse())
                        }
                        aJ.each(function() {
                            aG.col(this)
                        });
                        aG.mouse(aK.pageX, aK.pageY)
                    },
                    drag: function(aJ) {
                        aG.mouse(aJ.pageX, aJ.pageY)
                    },
                    stop: function(aK, aL) {
                        av.hideOverlay();
                        av.trigger("eventDragStop", aH, aI, aK, aL);
                        var aJ = aG.cell;
                        if (!aJ || !aJ.rowDelta && !aJ.colDelta) {
                            if (L.browser.msie) {
                                aH.css("filter", "")
                            }
                            av.showEvents(aI, aH)
                        } else {
                            aH.find("a").removeAttr("href");
                            av.eventDrop(this, aI, aJ.rowDelta * 7 + aJ.colDelta * ay, 0, aI.allDay, aK, aL)
                        }
                    }
                })
            }
        }
    }
    U({
        allDaySlot: true,
        allDayText: "all-day",
        firstHour: 6,
        slotMinutes: 30,
        defaultEventMinutes: 120,
        axisFormat: "h(:mm)tt",
        timeFormat: {
            agenda: "h:mm{ - h:mm}"
        },
        dragOpacity: {
            agenda: 0.5
        },
        minTime: 0,
        maxTime: 24
    });
    f.agendaWeek = function(ai, ah) {
        return new D(ai, ah, {
            render: function(am, ao, aj, an) {
                if (ao) {
                    H(am, ao * 7)
                }
                var al = this.visStart = Y(this.start = H(Y(am), -((am.getDay() - ah.firstDay + 7) % 7))),
                    ak = this.visEnd = Y(this.end = H(Y(al), 7));
                if (!ah.weekends) {
                    af(al);
                    af(ak, -1, true)
                }
                this.title = C(al, H(Y(ak), -1), this.option("titleFormat"), ah);
                this.renderAgenda(ah.weekends ? 7 : 5, this.option("columnFormat"), aj, an)
            }
        })
    };
    f.agendaDay = function(ai, ah) {
        return new D(ai, ah, {
            render: function(ak, am, aj, al) {
                if (am) {
                    H(ak, am);
                    if (!ah.weekends) {
                        af(ak, am < 0 ? -1 : 1)
                    }
                }
                this.title = V(ak, this.option("titleFormat"), ah);
                this.start = this.visStart = Y(ak, true);
                this.end = this.visEnd = H(Y(this.start), 1);
                this.renderAgenda(1, this.option("columnFormat"), aj, al)
            }
        })
    };

    function D(aw, aG, aL) {
        var av, aF, an, ay, aQ, ap, am, aH, aB, ah, aC, ar, aS, aD, aA, aN, aR, aP, aK, aj, ak = L.extend(this, p, aL, {
            renderAgenda: aI,
            renderEvents: ao,
            rerenderEvents: al,
            updateSize: az,
            shown: at,
            defaultEventEnd: function(aT) {
                var aU = Y(aT.start);
                if (aT.allDay) {
                    return aU
                }
                return r(aU, aG.defaultEventMinutes)
            },
            visEventEnd: function(aU) {
                if (aU.allDay) {
                    if (aU.end) {
                        var aT = Y(aU.end);
                        return (aU.allDay || aT.getHours() || aT.getMinutes()) ? H(aT, 1) : aT
                    } else {
                        return H(Y(aU.start), 1)
                    }
                }
                if (aU.end) {
                    return Y(aU.end)
                } else {
                    return r(Y(aU.start), aG.defaultEventMinutes)
                }
            }
        });
        ak.init(aw, aG);
        aw.addClass("fc-agenda").css("position", "relative");
        if (aw.disableSelection) {
            aw.disableSelection()
        }

        function aI(a0, aW, a3, a2) {
            ap = a0;
            aS = aG.theme ? "ui" : "fc";
            aA = aG.weekends ? 0 : 1;
            aD = aG.firstDay;
            if (aN = aG.isRTL) {
                aR = -1;
                aP = ap - 1
            } else {
                aR = 1;
                aP = 0
            }
            aK = b(aG.minTime);
            aj = b(aG.maxTime);
            var aT = aN ? H(Y(ak.visEnd), -1) : Y(ak.visStart),
                aY = Y(aT),
                a1 = E(new Date());
            if (!av) {
                var aV, aU, aZ = aG.slotMinutes % 15 == 0,
                    a4 = "<div class='fc-agenda-head' style='position:relative;z-index:4'><table style='width:100%'><tr class='fc-first" + (aG.allDaySlot ? "" : " fc-last") + "'><th class='fc-leftmost " + aS + "-state-default'>&nbsp;</th>";
                for (aV = 0; aV < ap; aV++) {
                    a4 += "<th class='fc-" + ab[aY.getDay()] + " " + aS + "-state-default'>" + V(aY, aW, aG) + "</th>";
                    H(aY, aR);
                    if (aA) {
                        af(aY, aR)
                    }
                }
                a4 += "<th class='" + aS + "-state-default'>&nbsp;</th></tr>";
                if (aG.allDaySlot) {
                    a4 += "<tr class='fc-all-day'><th class='fc-axis fc-leftmost " + aS + "-state-default'>" + aG.allDayText + "</th><td colspan='" + ap + "' class='" + aS + "-state-default'><div class='fc-day-content'><div>&nbsp;</div></div></td><th class='" + aS + "-state-default'>&nbsp;</th></tr><tr class='fc-divider fc-last'><th colspan='" + (ap + 2) + "' class='" + aS + "-state-default fc-leftmost'><div/></th></tr>"
                }
                a4 += "</table></div>";
                av = L(a4).appendTo(aw);
                av.find("td").click(ai);
                aY = d();
                var aX = r(Y(aY), aj);
                r(aY, aK);
                a4 = "<table>";
                for (aV = 0; aY < aX; aV++) {
                    aU = aY.getMinutes();
                    a4 += "<tr class='" + (aV == 0 ? "fc-first" : (aU == 0 ? "" : "fc-minor")) + "'><th class='fc-axis fc-leftmost " + aS + "-state-default'>" + ((!aZ || aU == 0) ? V(aY, aG.axisFormat) : "&nbsp;") + "</th><td class='fc-slot" + aV + " " + aS + "-state-default'><div>&nbsp;</div></td></tr>";
                    r(aY, aG.slotMinutes)
                }
                a4 += "</table>";
                aF = L("<div class='fc-agenda-body' style='position:relative;z-index:2;overflow:auto'/>").append(an = L("<div style='position:relative;overflow:hidden'>").append(ay = L(a4))).appendTo(aw);
                aF.find("td").click(ai);
                aY = Y(aT);
                a4 = "<div class='fc-agenda-bg' style='position:absolute;z-index:1'><table style='width:100%;height:100%'><tr class='fc-first'>";
                for (aV = 0; aV < ap; aV++) {
                    a4 += "<td class='fc-" + ab[aY.getDay()] + " " + aS + "-state-default " + (aV == 0 ? "fc-leftmost " : "") + (+aY == +a1 ? aS + "-state-highlight fc-today" : "fc-not-today") + "'><div class='fc-day-content'><div>&nbsp;</div></div></td>";
                    H(aY, aR);
                    if (aA) {
                        af(aY, aR)
                    }
                }
                a4 += "</tr></table></div>";
                aQ = L(a4).appendTo(aw)
            } else {
                ak.clearEvents();
                av.find("tr:first th").slice(1, -1).each(function() {
                    L(this).text(V(aY, aW, aG));
                    this.className = this.className.replace(/^fc-\w+(?= )/, "fc-" + ab[aY.getDay()]);
                    H(aY, aR);
                    if (aA) {
                        af(aY, aR)
                    }
                });
                aY = Y(aT);
                aQ.find("td").each(function() {
                    this.className = this.className.replace(/^fc-\w+(?= )/, "fc-" + ab[aY.getDay()]);
                    if (+aY == +a1) {
                        L(this).removeClass("fc-not-today").addClass("fc-today").addClass(aS + "-state-highlight")
                    } else {
                        L(this).addClass("fc-not-today").removeClass("fc-today").removeClass(aS + "-state-highlight")
                    }
                    H(aY, aR);
                    if (aA) {
                        af(aY, aR)
                    }
                })
            }
            az(a3);
            at();
            a2(ao)
        }

        function at() {
            var aV = d(),
                aT = Y(aV);
            aT.setHours(aG.firstHour);
            var aU = function() {
                aF.scrollTop(aq(aV, aT) + 1)
            };
            if (L.browser.opera) {
                setTimeout(aU, 0)
            } else {
                aU()
            }
        }

        function az(aT) {
            ar = aT;
            ay.width("");
            aF.height(aT - av.height());
            aF[0].clientWidth;
            var aW = av.find("tr:first th"),
                aV = aQ.find("td"),
                aU = aF[0].clientWidth;
            ay.width(aU);
            am = 0;
            ac(av.find("tr:lt(2) th:first").add(aF.find("tr:first th")).width("").each(function() {
                am = Math.max(am, L(this).outerWidth())
            }), am);
            aH = Math.floor((aU - am) / ap);
            ac(aV.slice(0, -1), aH);
            ac(aW.slice(1, -2), aH);
            ac(aW.slice(-2, -1), aU - am - aH * (ap - 1));
            aQ.css({
                top: av.find("tr").height(),
                left: am,
                width: aU - am,
                height: aT
            });
            aB = aF.find("tr:first div").height() + 1
        }

        function ai(aX) {
            var aV = Math.floor((aX.pageX - aQ.offset().left) / aH),
                aU = H(Y(ak.visStart), aP + aR * aV),
                aY = this.className.match(/fc-slot(\d+)/);
            if (aY) {
                var aW = parseInt(aY[1]) * aG.slotMinutes,
                    aT = Math.floor(aW / 60);
                aU.setHours(aT);
                aU.setMinutes(aW % 60 + aK);
                ak.trigger("dayClick", this, aU, false, aX)
            } else {
                ak.trigger("dayClick", this, aU, true, aX)
            }
        }

        function ao(aW) {
            ak.reportEvents(aW);
            var aV, aU = aW.length,
                aX = [],
                aT = [];
            for (aV = 0; aV < aU; aV++) {
                if (aW[aV].allDay) {
                    aX.push(aW[aV])
                } else {
                    aT.push(aW[aV])
                }
            }
            aM(ah = Q(ak.sliceSegs(aX, ak.visStart, ak.visEnd)));
            au(aC = aE(aT))
        }

        function al(aT) {
            ak.clearEvents();
            if (aT) {
                aM(ah);
                au(aC)
            } else {
                ao(ak.cachedEvents)
            }
        }

        function aE(aV) {
            var aX = r(Y(ak.visStart), aK),
                aW, aT = [],
                aU = 0;
            for (; aU < ap; aU++) {
                aW = Q(ak.sliceSegs(aV, aX, r(Y(aX), aj - aK)));
                S(aW);
                aT.push(aW);
                H(aX, 1, true)
            }
            return aT
        }

        function aM(a3) {
            if (aG.allDaySlot) {
                var a2 = av.find("td"),
                    be = a2.find("div div"),
                    aU = a2.parent(),
                    a4 = T(be, a2, aU, aU.parent()).top,
                    a5 = 0,
                    a8, ba = a3.length,
                    aT, bc, a6, bb, a7, aV, aW, bf, aZ, a1, aY, bd, a9, aX, a0;
                for (a8 = 0; a8 < ba; a8++) {
                    aT = a3[a8];
                    bc = 0;
                    for (a6 = 0; a6 < aT.length; a6++) {
                        bb = aT[a6];
                        a7 = bb.event;
                        aV = "fc-event fc-event-hori ";
                        if (aN) {
                            aW = bb.end.getDay() - 1;
                            bf = bb.isEnd;
                            aZ = bb.start.getDay();
                            a1 = bb.isStart
                        } else {
                            aW = bb.start.getDay();
                            bf = bb.isStart;
                            aZ = bb.end.getDay() - 1;
                            a1 = bb.isEnd
                        }
                        if (bf) {
                            aV += "fc-corner-left ";
                            aY = aQ.find("td:eq(" + (((aW - Math.max(aD, aA) + ap) % ap) * aR + aP) + ") div div").position().left + am
                        } else {
                            aY = am
                        }
                        if (a1) {
                            aV += "fc-corner-right ";
                            bd = aQ.find("td:eq(" + (((aZ - Math.max(aD, aA) + ap) % ap) * aR + aP) + ") div div");
                            bd = bd.position().left + bd.width() + am
                        } else {
                            bd = am + aQ.width()
                        }
                        a9 = L("<div class='" + aV + a7.className.join(" ") + "'/>").append(aX = L("<a/>").append(L("<span class='fc-event-title' />").text(a7.title)));
                        if (a7.url) {
                            aX.attr("href", a7.url)
                        }
                        a0 = ak.trigger("eventRender", a7, a7, a9);
                        if (a0 !== false) {
                            if (a0 && typeof a0 != "boolean") {
                                a9 = L(a0)
                            }
                            a9.css({
                                position: "absolute",
                                top: a4,
                                left: aY,
                                zIndex: 8
                            }).appendTo(av);
                            ac(a9, bd - aY, true);
                            ak.eventElementHandlers(a7, a9);
                            if (a7.editable || a7.editable == q && aG.editable) {
                                ax(a7, a9, bb.isStart);
                                if (bb.isEnd) {
                                    ak.resizableDayEvent(a7, a9, aH)
                                }
                            }
                            ak.reportEventElement(a7, a9);
                            ak.trigger("eventAfterRender", a7, a7, a9);
                            bc = Math.max(bc, a9.outerHeight(true))
                        }
                    }
                    a4 += bc;
                    a5 += bc
                }
                be.height(a5);
                az(ar)
            }
        }

        function au(a8) {
            var a1, a9 = a8.length,
                aZ, aX, aT, a4, bc, a3, ba, a5, a2, bd, a7, aY, aU, bb, aW, aV, a6, a0;
            for (a1 = 0; a1 < a9; a1++) {
                aZ = a8[a1];
                for (aX = 0; aX < aZ.length; aX++) {
                    aT = aZ[aX];
                    for (a4 = 0; a4 < aT.length; a4++) {
                        bc = aT[a4];
                        a3 = bc.forward || 0;
                        ba = bc.event;
                        a5 = aq(bc.start, bc.start);
                        a2 = aq(bc.start, bc.end);
                        bd = aQ.find("td:eq(" + (a1 * aR + aP) + ") div div");
                        availWidth = bd.width();
                        availWidth = Math.min(availWidth - 6, availWidth * 0.95);
                        if (aX) {
                            a7 = availWidth / (aX + a3 + 1)
                        } else {
                            if (a3) {
                                a7 = ((availWidth / (a3 + 1)) - (12 / 2)) * 2
                            } else {
                                a7 = availWidth
                            }
                        }
                        aY = am + bd.position().left + (availWidth / (aX + a3 + 1) * aX) * aR + (aN ? availWidth - a7 : 0);
                        aU = "fc-event fc-event-vert ";
                        if (bc.isStart) {
                            aU += "fc-corner-top "
                        }
                        if (bc.isEnd) {
                            aU += "fc-corner-bottom "
                        }
                        bb = L("<div class='" + aU + ba.className.join(" ") + "' />").append(aW = L("<a><span class='fc-event-bg'/></a>").append(aV = L("<span class='fc-event-time'/>").text(C(ba.start, ba.end, ak.option("timeFormat")))).append(a6 = L("<span class='fc-event-title'/>").text(ba.title)));
                        if (ba.url) {
                            aW.attr("href", ba.url)
                        }
                        a0 = ak.trigger("eventRender", ba, ba, bb);
                        if (a0 !== false) {
                            if (a0 && typeof a0 != "boolean") {
                                bb = L(a0)
                            }
                            bb.css({
                                position: "absolute",
                                zIndex: 8,
                                top: a5,
                                left: aY
                            }).appendTo(an);
                            ac(bb, a7, true);
                            m(bb, a2 - a5, true);
                            if (bb.height() - a6.position().top < 10) {
                                aV.text(V(ba.start, ak.option("timeFormat")) + " - " + ba.title);
                                a6.remove()
                            }
                            ak.eventElementHandlers(ba, bb);
                            if (ba.editable || ba.editable == q && aG.editable) {
                                aJ(ba, bb, aV);
                                if (bc.isEnd) {
                                    aO(ba, bb, aV)
                                }
                            }
                        }
                        ak.reportEventElement(ba, bb);
                        ak.trigger("eventAfterRender", ba, ba, bb)
                    }
                }
            }
        }

        function ax(aY, aV, aT) {
            if (!aG.disableDragging && aV.draggable) {
                var aX, a0, aW, aZ = true,
                    aU;
                aV.draggable({
                    zIndex: 9,
                    opacity: ak.option("dragOpacity", "month"),
                    revertDuration: aG.dragRevertDuration,
                    start: function(a1, a2) {
                        ak.hideEvents(aY, aV);
                        ak.trigger("eventDragStart", aV, aY, a1, a2);
                        aX = aV.position();
                        a0 = aV.width();
                        aW = function() {
                            if (!aZ) {
                                aV.width(a0).height("").draggable("option", "grid", null);
                                aZ = true
                            }
                        };
                        aU = new e(function(a3) {
                            aV.draggable("option", "revert", !a3 || !a3.rowDelta && !a3.colDelta);
                            if (a3) {
                                if (!a3.row) {
                                    aW();
                                    ak.showOverlay(a3)
                                } else {
                                    if (aT && aZ) {
                                        m(aV.width(aH - 10), aB * Math.round((aY.end ? ((aY.end - aY.start) / ad) : aG.defaultEventMinutes) / aG.slotMinutes));
                                        aV.draggable("option", "grid", [aH, 1]);
                                        aZ = false
                                    }
                                    ak.hideOverlay()
                                }
                            } else {
                                ak.hideOverlay()
                            }
                        });
                        aU.row(av.find("td"));
                        aQ.find("td").each(function() {
                            aU.col(this)
                        });
                        aU.row(aF);
                        aU.mouse(a1.pageX, a1.pageY)
                    },
                    drag: function(a1, a2) {
                        aU.mouse(a1.pageX, a1.pageY)
                    },
                    stop: function(a3, a4) {
                        ak.hideOverlay();
                        ak.trigger("eventDragStop", aV, aY, a3, a4);
                        var a1 = aU.cell,
                            a2 = aR * (aZ ? (a1 ? a1.colDelta : 0) : Math.floor((a4.position.left - aX.left) / aH));
                        if (!a1 || !a2 && !a1.rowDelta) {
                            aW();
                            if (L.browser.msie) {
                                aV.css("filter", "")
                            }
                            ak.showEvents(aY, aV)
                        } else {
                            aV.find("a").removeAttr("href");
                            ak.eventDrop(this, aY, a2, aZ ? 0 : Math.round((aV.offset().top - an.offset().top) / aB) * aG.slotMinutes + aK - (aY.start.getHours() * 60 + aY.start.getMinutes()), aZ, a3, a4)
                        }
                    }
                })
            }
        }

        function aJ(aT, aX, aZ) {
            if (!aG.disableDragging && aX.draggable) {
                var aU, aV, aW, a0, a1 = false,
                    aY;
                aX.draggable({
                    zIndex: 9,
                    scroll: false,
                    grid: [aH, aB],
                    axis: ap == 1 ? "y" : false,
                    opacity: ak.option("dragOpacity"),
                    revertDuration: aG.dragRevertDuration,
                    start: function(a2, a3) {
                        ak.hideEvents(aT, aX);
                        ak.trigger("eventDragStart", aX, aT, a2, a3);
                        if (L.browser.msie) {
                            aX.find("span.fc-event-bg").hide()
                        }
                        aU = aX.position();
                        aV = function() {
                            if (a1) {
                                aZ.css("display", "");
                                aX.draggable("option", "grid", [aH, aB]);
                                a1 = false
                            }
                        };
                        aW = 0;
                        aY = new e(function(a4) {
                            aX.draggable("option", "revert", !a4);
                            if (a4) {
                                if (!a4.row && aG.allDaySlot) {
                                    if (!a1) {
                                        a1 = true;
                                        aZ.hide();
                                        aX.draggable("option", "grid", null)
                                    }
                                    ak.showOverlay(a4)
                                } else {
                                    aV();
                                    ak.hideOverlay()
                                }
                            } else {
                                ak.hideOverlay()
                            }
                        });
                        if (aG.allDaySlot) {
                            aY.row(av.find("td"))
                        }
                        aQ.find("td").each(function() {
                            aY.col(this)
                        });
                        aY.row(aF);
                        aY.mouse(a2.pageX, a2.pageY)
                    },
                    drag: function(a5, a6) {
                        a0 = Math.round((a6.position.top - aU.top) / aB);
                        if (a0 != aW) {
                            if (!a1) {
                                var a3 = a0 * aG.slotMinutes,
                                    a2 = r(Y(aT.start), a3),
                                    a4;
                                if (aT.end) {
                                    a4 = r(Y(aT.end), a3)
                                }
                                aZ.text(C(a2, a4, ak.option("timeFormat")))
                            }
                            aW = a0
                        }
                        aY.mouse(a5.pageX, a5.pageY)
                    },
                    stop: function(a4, a5) {
                        ak.hideOverlay();
                        ak.trigger("eventDragStop", aX, aT, a4, a5);
                        var a2 = aY.cell,
                            a3 = aR * (a1 ? (a2 ? a2.colDelta : 0) : Math.floor((a5.position.left - aU.left) / aH));
                        if (!a2 || !a0 && !a3) {
                            aV();
                            if (L.browser.msie) {
                                aX.css("filter", "").find("span.fc-event-bg").css("display", "")
                            }
                            aX.css(aU);
                            ak.showEvents(aT, aX)
                        } else {
                            ak.eventDrop(this, aT, a3, a1 ? 0 : a0 * aG.slotMinutes, a1, a4, a5)
                        }
                    }
                })
            }
        }

        function aO(aV, aU, aW) {
            if (!aG.disableResizing && aU.resizable) {
                var aX, aT;
                aU.resizable({
                    handles: "s",
                    grid: aB,
                    start: function(aY, aZ) {
                        aX = aT = 0;
                        ak.hideEvents(aV, aU);
                        if (L.browser.msie && L.browser.version == "6.0") {
                            aU.css("overflow", "hidden")
                        }
                        aU.css("z-index", 9);
                        ak.trigger("eventResizeStart", this, aV, aY, aZ)
                    },
                    resize: function(aY, aZ) {
                        aX = Math.round((Math.max(aB, aU.height()) - aZ.originalSize.height) / aB);
                        if (aX != aT) {
                            aW.text(C(aV.start, (!aX && !aV.end) ? null : r(ak.eventEnd(aV), aG.slotMinutes * aX), ak.option("timeFormat")));
                            aT = aX
                        }
                    },
                    stop: function(aY, aZ) {
                        ak.trigger("eventResizeStop", this, aV, aY, aZ);
                        if (aX) {
                            ak.eventResize(this, aV, 0, aG.slotMinutes * aX, aY, aZ)
                        } else {
                            aU.css("z-index", 8);
                            ak.showEvents(aV, aU)
                        }
                    }
                }).find("div.ui-resizable-s").text("=")
            }
        }

        function aq(aU, aZ) {
            aU = Y(aU, true);
            if (aZ < r(Y(aU), aK)) {
                return 0
            }
            if (aZ >= r(Y(aU), aj)) {
                return an.height()
            }
            var aT = aG.slotMinutes,
                aW = aZ.getHours() * 60 + aZ.getMinutes() - aK,
                aV = Math.floor(aW / aT),
                aY = aF.find("tr:eq(" + aV + ")"),
                a0 = aY.find("td"),
                aX = a0.find("div");
            return Math.max(0, Math.round(T(aX, a0, aY, aY.parent()).top - 1 + aB * ((aW % aT) / aT)))
        }
    }

    function S(al) {
        var aj, ai, ah, an, am, ak;
        for (aj = al.length - 1; aj > 0; aj--) {
            an = al[aj];
            for (ai = 0; ai < an.length; ai++) {
                am = an[ai];
                for (ah = 0; ah < al[aj - 1].length; ah++) {
                    ak = al[aj - 1][ah];
                    if (G(am, ak)) {
                        ak.forward = Math.max(ak.forward || 0, (am.forward || 0) + 1)
                    }
                }
            }
        }
    }
    var p = {
        init: function(ai, ah) {
            this.element = ai;
            this.options = ah;
            this.cachedEvents = [];
            this.eventsByID = {};
            this.eventElements = [];
            this.eventElementsByID = {}
        },
        trigger: function(ah, ai) {
            if (this.options[ah]) {
                return this.options[ah].apply(ai || this, Array.prototype.slice.call(arguments, 2).concat([this]))
            }
        },
        eventEnd: function(ah) {
            return ah.end ? Y(ah.end) : this.defaultEventEnd(ah)
        },
        reportEvents: function(ak) {
            var aj, ah = ak.length,
                al, ai = this.eventsByID = {},
                am = this.cachedEvents = [];
            for (aj = 0; aj < ah; aj++) {
                al = ak[aj];
                if (ai[al._id]) {
                    ai[al._id].push(al)
                } else {
                    ai[al._id] = [al]
                }
                am.push(al)
            }
        },
        reportEventElement: function(ai, ah) {
            this.eventElements.push(ah);
            var aj = this.eventElementsByID;
            if (aj[ai._id]) {
                aj[ai._id].push(ah)
            } else {
                aj[ai._id] = [ah]
            }
        },
        clearEvents: function() {
            L.each(this.eventElements, function() {
                this.remove()
            });
            this.eventElements = [];
            this.eventElementsByID = {}
        },
        showEvents: function(ai, ah) {
            this._eee(ai, ah, "show")
        },
        hideEvents: function(ai, ah) {
            this._eee(ai, ah, "hide")
        },
        _eee: function(ak, aj, am) {
            var al = this.eventElementsByID[ak._id],
                ai, ah = al.length;
            for (ai = 0; ai < ah; ai++) {
                if (al[ai] != aj) {
                    al[ai][am]()
                }
            }
        },
        eventDrop: function(aj, ah, ai, ak, ap, am, al) {
            var an = this,
                ao = ah.allDay;
            an.moveEvents(an.eventsByID[ah._id], ai, ak, ap);
            an.trigger("eventDrop", aj, ah, ai, ak, ap, function() {
                an.moveEvents(an.eventsByID[ah._id], -ai, -ak, ao);
                an.rerenderEvents()
            }, am, al);
            an.eventsChanged = true;
            an.rerenderEvents()
        },
        eventResize: function(an, al, aj, ai, ak, am) {
            var ah = this;
            ah.elongateEvents(ah.eventsByID[al._id], aj, ai);
            ah.trigger("eventResize", an, al, aj, ai, function() {
                ah.elongateEvents(ah.eventsByID[al._id], -aj, -ai);
                ah.rerenderEvents()
            }, ak, am);
            ah.eventsChanged = true;
            ah.rerenderEvents()
        },
        moveEvents: function(al, aj, ai, am) {
            ai = ai || 0;
            for (var an, ah = al.length, ak = 0; ak < ah; ak++) {
                an = al[ak];
                if (am != q) {
                    an.allDay = am
                }
                r(H(an.start, aj, true), ai);
                if (an.end) {
                    an.end = r(H(an.end, aj, true), ai)
                }
                K(an, this.options)
            }
        },
        elongateEvents: function(al, aj, ai) {
            ai = ai || 0;
            for (var am, ah = al.length, ak = 0; ak < ah; ak++) {
                am = al[ak];
                am.end = r(H(this.eventEnd(am), aj, true), ai);
                K(am, this.options)
            }
        },
        showOverlay: function(ah) {
            if (!this.dayOverlay) {
                this.dayOverlay = L("<div class='fc-cell-overlay' style='position:absolute;z-index:3;display:none'/>").appendTo(this.element)
            }
            var ai = this.element.offset();
            this.dayOverlay.css({
                top: ah.top - ai.top,
                left: ah.left - ai.left,
                width: ah.width,
                height: ah.height
            }).show()
        },
        hideOverlay: function() {
            if (this.dayOverlay) {
                this.dayOverlay.hide()
            }
        },
        resizableDayEvent: function(ak, ai, aj) {
            var ah = this;
            if (!ah.options.disableResizing && ai.resizable) {
                ai.resizable({
                    handles: ah.options.isRTL ? "w" : "e",
                    grid: aj,
                    minWidth: aj / 2,
                    containment: ah.element.parent().parent(),
                    start: function(al, am) {
                        ai.css("z-index", 9);
                        ah.hideEvents(ak, ai);
                        ah.trigger("eventResizeStart", this, ak, al, am)
                    },
                    stop: function(am, an) {
                        ah.trigger("eventResizeStop", this, ak, am, an);
                        var al = Math.round((ai.width() - an.originalSize.width) / aj);
                        if (al) {
                            ah.eventResize(this, ak, al, 0, am, an)
                        } else {
                            ai.css("z-index", 8);
                            ah.showEvents(ak, ai)
                        }
                    }
                })
            }
        },
        eventElementHandlers: function(aj, ai) {
            var ah = this;
            ai.click(function(ak) {
                if (!ai.hasClass("ui-draggable-dragging") && !ai.hasClass("ui-resizable-resizing")) {
                    return ah.trigger("eventClick", this, aj, ak)
                }
            }).hover(function(ak) {
                ah.trigger("eventMouseover", this, aj, ak)
            }, function(ak) {
                ah.trigger("eventMouseout", this, aj, ak)
            })
        },
        option: function(ai, aj) {
            var ah = this.options[ai];
            if (typeof ah == "object") {
                return n(ah, aj || this.name)
            }
            return ah
        },
        sliceSegs: function(at, aj, am) {
            var ak = [],
                an, ap = at.length,
                ai, aq, ao, ar, au, ah, al;
            for (an = 0; an < ap; an++) {
                ai = at[an];
                aq = ai.start;
                ao = this.visEventEnd(ai);
                if (ao > aj && aq < am) {
                    if (aq < aj) {
                        ar = Y(aj);
                        ah = false
                    } else {
                        ar = aq;
                        ah = true
                    }
                    if (ao > am) {
                        au = Y(am);
                        al = false
                    } else {
                        au = ao;
                        al = true
                    }
                    ak.push({
                        event: ai,
                        start: ar,
                        end: au,
                        isStart: ah,
                        isEnd: al,
                        msLength: au - ar
                    })
                }
            }
            return ak.sort(I)
        }
    };

    function Q(aj) {
        var an = [],
            am, ah = aj.length,
            ai, al, ao, ak;
        for (am = 0; am < ah; am++) {
            ai = aj[am];
            al = 0;
            while (true) {
                ao = false;
                if (an[al]) {
                    for (ak = 0; ak < an[al].length; ak++) {
                        if (G(an[al][ak], ai)) {
                            ao = true;
                            break
                        }
                    }
                }
                if (ao) {
                    al++
                } else {
                    break
                }
            }
            if (an[al]) {
                an[al].push(ai)
            } else {
                an[al] = [ai]
            }
        }
        return an
    }

    function I(ai, ah) {
        return (ah.msLength - ai.msLength) * 100 + (ai.event.start - ah.event.start)
    }

    function G(ai, ah) {
        return ai.end > ah.start && ai.start < ah.end
    }
    var aa = 86400000,
        v = 3600000,
        ad = 60000;

    function ae(ai, aj, ah) {
        ai.setFullYear(ai.getFullYear() + aj);
        if (!ah) {
            E(ai)
        }
        return ai
    }

    function u(ak, al, aj) {
        if (+ak) {
            var ah = ak.getMonth() + al,
                ai = Y(ak);
            ai.setDate(1);
            ai.setMonth(ah);
            ak.setMonth(ah);
            if (!aj) {
                E(ak)
            }
            while (ak.getMonth() != ai.getMonth()) {
                ak.setDate(ak.getDate() + (ak < ai ? 1 : -1))
            }
        }
        return ak
    }

    function H(ak, al, aj) {
        if (+ak) {
            var ah = ak.getDate() + al,
                ai = Y(ak);
            ai.setHours(12);
            ai.setDate(ah);
            ak.setDate(ah);
            if (!aj) {
                E(ak)
            }
            while (ak.getDate() != ai.getDate()) {
                ak.setTime(+ak + (ak < ai ? 1 : -1) * v)
            }
        }
        return ak
    }
    R.addDays = H;

    function r(ah, ai) {
        ah.setMinutes(ah.getMinutes() + ai);
        return ah
    }

    function E(ah) {
        ah.setHours(0);
        ah.setMinutes(0);
        ah.setSeconds(0);
        ah.setMilliseconds(0);
        return ah
    }

    function Y(ah, ai) {
        if (ai) {
            return E(new Date(+ah))
        }
        return new Date(+ah)
    }

    function d() {
        var ah = 0,
            ai;
        do {
            ai = new Date(1970, ah++, 1)
        } while (ai.getHours() != 0);
        return ai
    }

    function af(ah, ai, aj) {
        ai = ai || 1;
        while (ah.getDay() == 0 || (aj && ah.getDay() == 1 || !aj && ah.getDay() == 6)) {
            H(ah, ai)
        }
        return ah
    }
    var g = R.parseDate = function(ah) {
        if (typeof ah == "object") {
            return ah
        }
        if (typeof ah == "number") {
            return new Date(ah * 1000)
        }
        if (typeof ah == "string") {
            if (ah.match(/^\d+$/)) {
                return new Date(parseInt(ah) * 1000)
            }
            return o(ah, true) || new Date(ah) || null
        }
        return null
    };
    var o = R.parseISO8601 = function(aj, ah) {
        var al = aj.match(/^([0-9]{4})(-([0-9]{2})(-([0-9]{2})([T ]([0-9]{2}):([0-9]{2})(:([0-9]{2})(\.([0-9]+))?)?(Z|(([-+])([0-9]{2}):([0-9]{2})))?)?)?)?$/);
        if (!al) {
            return null
        }
        var ak = 0;
        var ai = new Date(al[1], 0, 1);
        if (al[3]) {
            ai.setMonth(al[3] - 1)
        }
        if (al[5]) {
            ai.setDate(al[5])
        }
        if (al[7]) {
            ai.setHours(al[7])
        }
        if (al[8]) {
            ai.setMinutes(al[8])
        }
        if (al[10]) {
            ai.setSeconds(al[10])
        }
        if (al[12]) {
            ai.setMilliseconds(Number("0." + al[12]) * 1000)
        }
        if (!ah) {
            if (al[14]) {
                ak = (Number(al[16]) * 60) + Number(al[17]);
                ak *= ((al[15] == "-") ? 1 : -1)
            }
            ak -= ai.getTimezoneOffset()
        }
        return new Date(Number(ai) + (ak * 60 * 1000))
    };
    var b = R.parseTime = function(aj) {
        if (typeof aj == "number") {
            return aj * 60
        }
        if (typeof aj == "object") {
            return aj.getHours() * 60 + aj.getMinutes()
        }
        var ah = aj.match(/(\d+)(?::(\d+))?\s*(\w+)?/);
        if (ah) {
            var ai = parseInt(ah[1]);
            if (ah[3]) {
                ai %= 12;
                if (ah[3].toLowerCase().charAt(0) == "p") {
                    ai += 12
                }
            }
            return ai * 60 + (ah[2] ? parseInt(ah[2]) : 0)
        }
    };
    var V = R.formatDate = function(ai, aj, ah) {
        return C(ai, null, aj, ah)
    };
    var C = R.formatDates = function(au, at, ar, av) {
        av = av || N;
        var ai = au,
            ak = at,
            al, am = ar.length,
            ao, aj, aq, an = "";
        for (al = 0; al < am; al++) {
            ao = ar.charAt(al);
            if (ao == "'") {
                for (aj = al + 1; aj < am; aj++) {
                    if (ar.charAt(aj) == "'") {
                        if (ai) {
                            if (aj == al + 1) {
                                an += "'"
                            } else {
                                an += ar.substring(al + 1, aj)
                            }
                            al = aj
                        }
                        break
                    }
                }
            } else {
                if (ao == "(") {
                    for (aj = al + 1; aj < am; aj++) {
                        if (ar.charAt(aj) == ")") {
                            var ah = V(ai, ar.substring(al + 1, aj), av);
                            if (parseInt(ah.replace(/\D/, ""))) {
                                an += ah
                            }
                            al = aj;
                            break
                        }
                    }
                } else {
                    if (ao == "[") {
                        for (aj = al + 1; aj < am; aj++) {
                            if (ar.charAt(aj) == "]") {
                                var ap = ar.substring(al + 1, aj);
                                var ah = V(ai, ap, av);
                                if (ah != V(ak, ap, av)) {
                                    an += ah
                                }
                                al = aj;
                                break
                            }
                        }
                    } else {
                        if (ao == "{") {
                            ai = at;
                            ak = au
                        } else {
                            if (ao == "}") {
                                ai = au;
                                ak = at
                            } else {
                                for (aj = am; aj > al; aj--) {
                                    if (aq = z[ar.substring(al, aj)]) {
                                        if (ai) {
                                            an += aq(ai, av)
                                        }
                                        al = aj - 1;
                                        break
                                    }
                                }
                                if (aj == al) {
                                    if (ai) {
                                        an += ao
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
        return an
    };
    var z = {
        s: function(ah) {
            return ah.getSeconds()
        },
        ss: function(ah) {
            return Z(ah.getSeconds())
        },
        m: function(ah) {
            return ah.getMinutes()
        },
        mm: function(ah) {
            return Z(ah.getMinutes())
        },
        h: function(ah) {
            return ah.getHours() % 12 || 12
        },
        hh: function(ah) {
            return Z(ah.getHours() % 12 || 12)
        },
        H: function(ah) {
            return ah.getHours()
        },
        HH: function(ah) {
            return Z(ah.getHours())
        },
        d: function(ah) {
            return ah.getDate()
        },
        dd: function(ah) {
            return Z(ah.getDate())
        },
        ddd: function(ai, ah) {
            return ah.dayNamesShort[ai.getDay()]
        },
        dddd: function(ai, ah) {
            return ah.dayNames[ai.getDay()]
        },
        M: function(ah) {
            return ah.getMonth() + 1
        },
        MM: function(ah) {
            return Z(ah.getMonth() + 1)
        },
        MMM: function(ai, ah) {
            return ah.monthNamesShort[ai.getMonth()]
        },
        MMMM: function(ai, ah) {
            return ah.monthNames[ai.getMonth()]
        },
        yy: function(ah) {
            return (ah.getFullYear() + "").substring(2)
        },
        yyyy: function(ah) {
            return ah.getFullYear()
        },
        t: function(ah) {
            return ah.getHours() < 12 ? "a" : "p"
        },
        tt: function(ah) {
            return ah.getHours() < 12 ? "am" : "pm"
        },
        T: function(ah) {
            return ah.getHours() < 12 ? "A" : "P"
        },
        TT: function(ah) {
            return ah.getHours() < 12 ? "AM" : "PM"
        },
        u: function(ah) {
            return V(ah, "yyyy-MM-dd'T'HH:mm:ss'Z'")
        },
        S: function(ai) {
            var ah = ai.getDate();
            if (ah > 10 && ah < 20) {
                return "th"
            }
            return ["st", "nd", "rd"][ah % 10 - 1] || "th"
        }
    };

    function ac(ai, aj, ah) {
        ai.each(function() {
            var al = L(this);
            var ak = aj - ag(al);
            if (ah) {
                ak -= (parseInt(al.css("margin-left")) || 0) + (parseInt(al.css("margin-right")) || 0)
            }
            al.width(ak)
        })
    }

    function ag(ah) {
        return (parseInt(ah.css("border-left-width")) || 0) + (parseInt(ah.css("padding-left")) || 0) + (parseInt(ah.css("padding-right")) || 0) + (parseInt(ah.css("border-right-width")) || 0)
    }

    function m(aj, ah, ai) {
        aj.each(function() {
            var al = L(this);
            var ak = ah - h(al);
            if (ai) {
                ak -= (parseInt(al.css("margin-top")) || 0) + (parseInt(al.css("margin-bottom")) || 0)
            }
            al.height(ak)
        })
    }

    function h(ah) {
        return (parseInt(ah.css("border-top-width")) || 0) + (parseInt(ah.css("padding-top")) || 0) + (parseInt(ah.css("padding-bottom")) || 0) + (parseInt(ah.css("border-bottom-width")) || 0)
    }
    var J;

    function O(ah) {
        if (J == q) {
            J = ah.position().top != ah.find("tr").position().top
        }
    }

    function T(aj, al, ak, ai) {
        var ah = aj.position();
        if (J) {
            ah.top += ai.position().top + ak.position().top - al.position().top
        }
        return ah
    }

    function e(aj) {
        var ao = [],
            ah = [],
            an, am, ak, al, ap, ai;
        this.row = function(ar, aq) {
            an = L(ar);
            ao.push(an.offset().top + ((J && an.is("tr")) ? an.parent().position().top : 0))
        };
        this.col = function(aq) {
            am = L(aq);
            ah.push(am.offset().left)
        };
        this.mouse = function(aq, au) {
            if (ak == q) {
                ao.push(ao[ao.length - 1] + an.outerHeight());
                ah.push(ah[ah.length - 1] + am.outerWidth());
                ap = ai = -1
            }
            var ar, at;
            for (ar = 0; ar < ao.length && au >= ao[ar]; ar++) {}
            for (at = 0; at < ah.length && aq >= ah[at]; at++) {}
            ar = ar >= ao.length ? -1 : ar - 1;
            at = at >= ah.length ? -1 : at - 1;
            if (ar != ap || at != ai) {
                ap = ar;
                ai = at;
                if (ar == -1 || at == -1) {
                    this.cell = null
                } else {
                    if (ak == q) {
                        ak = ar;
                        al = at
                    }
                    this.cell = {
                        row: ar,
                        col: at,
                        top: ao[ar],
                        left: ah[at],
                        width: ah[at + 1] - ah[at],
                        height: ao[ar + 1] - ao[ar],
                        isOrig: ar == ak && at == al,
                        rowDelta: ar - ak,
                        colDelta: at - al
                    }
                }
                aj(this.cell)
            }
        }
    }
    var q, ab = ["sun", "mon", "tue", "wed", "thu", "fri", "sat"];

    function Z(ah) {
        return (ah < 10 ? "0" : "") + ah
    }

    function n(al, ah) {
        if (al[ah] != q) {
            return al[ah]
        }
        var ak = ah.split(/(?=[A-Z])/),
            aj = ak.length - 1,
            ai;
        for (; aj >= 0; aj--) {
            ai = al[ak[aj].toLowerCase()];
            if (ai != q) {
                return ai
            }
        }
        return al[""]
    }
})(jQuery);
(function(d) {
    var c = d.browser.msie && parseInt(d.browser.version) == 6 && typeof window.XMLHttpRequest != "object",
        e = null,
        b = [];
    d.modal = function(g, f) {
        return d.modal.impl.init(g, f)
    };
    d.modal.close = function() {
        d.modal.impl.close()
    };
    d.fn.modal = function(f) {
        return d.modal.impl.init(this, f)
    };
    d.modal.defaults = {
        appendTo: "body",
        focus: true,
        opacity: 50,
        overlayId: "simplemodal-overlay",
        overlayCss: {},
        containerId: "simplemodal-container",
        containerCss: {},
        dataId: "simplemodal-data",
        dataCss: {},
        minHeight: null,
        minWidth: null,
        maxHeight: null,
        maxWidth: null,
        autoResize: false,
        autoPosition: true,
        zIndex: 1000,
        close: true,
        closeHTML: '<a class="modalCloseImg" title="Close"></a>',
        closeClass: "simplemodal-close",
        escClose: true,
        overlayClose: false,
        position: null,
        persist: false,
        modal: true,
        onOpen: null,
        onShow: null,
        onClose: null
    };
    d.modal.impl = {
        o: null,
        d: {},
        init: function(h, f) {
            var g = this;
            if (g.d.data) {
                return false
            }
            e = d.browser.msie && !d.boxModel;
            g.o = d.extend({}, d.modal.defaults, f);
            g.zIndex = g.o.zIndex;
            g.occb = false;
            if (typeof h == "object") {
                h = h instanceof jQuery ? h : d(h);
                g.d.placeholder = false;
                if (h.parent().parent().size() > 0) {
                    h.before(d("<span></span>").attr("id", "simplemodal-placeholder").css({
                        display: "none"
                    }));
                    g.d.placeholder = true;
                    g.display = h.css("display");
                    if (!g.o.persist) {
                        g.d.orig = h.clone(true)
                    }
                }
            } else {
                if (typeof h == "string" || typeof h == "number") {
                    h = d("<div></div>").html(h)
                } else {
                    alert("SimpleModal Error: Unsupported data type: " + typeof h);
                    return g
                }
            }
            g.create(h);
            h = null;
            g.open();
            if (d.isFunction(g.o.onShow)) {
                g.o.onShow.apply(g, [g.d])
            }
            return g
        },
        create: function(g) {
            var f = this;
            b = f.getDimensions();
            if (f.o.modal && c) {
                f.d.iframe = d('<iframe src="javascript:false;"></iframe>').css(d.extend(f.o.iframeCss, {
                    display: "none",
                    opacity: 0,
                    position: "fixed",
                    height: b[0],
                    width: b[1],
                    zIndex: f.o.zIndex,
                    top: 0,
                    left: 0
                })).appendTo(f.o.appendTo)
            }
            f.d.overlay = d("<div></div>").attr("id", f.o.overlayId).addClass("simplemodal-overlay").css(d.extend(f.o.overlayCss, {
                display: "none",
                opacity: f.o.opacity / 100,
                height: f.o.modal ? b[0] : 0,
                width: f.o.modal ? b[1] : 0,
                position: "fixed",
                left: 0,
                top: 0,
                zIndex: f.o.zIndex + 1
            })).appendTo(f.o.appendTo);
            f.d.container = d("<div></div>").attr("id", f.o.containerId).addClass("simplemodal-container").css(d.extend(f.o.containerCss, {
                display: "none",
                position: "fixed",
                zIndex: f.o.zIndex + 2
            })).append(f.o.close && f.o.closeHTML ? d(f.o.closeHTML).addClass(f.o.closeClass) : "").appendTo(f.o.appendTo);
            f.d.wrap = d("<div></div>").attr("tabIndex", -1).addClass("simplemodal-wrap").css({
                height: "100%",
                outline: 0,
                width: "100%"
            }).appendTo(f.d.container);
            f.d.data = g.attr("id", g.attr("id") || f.o.dataId).addClass("simplemodal-data").css(d.extend(f.o.dataCss, {
                display: "none"
            })).appendTo("body");
            g = null;
            f.setContainerDimensions();
            f.d.data.appendTo(f.d.wrap);
            if (c || e) {
                f.fixIE()
            }
        },
        bindEvents: function() {
            var f = this;
            d("." + f.o.closeClass).bind("click.simplemodal", function(g) {
                g.preventDefault();
                f.close()
            });
            if (f.o.modal && f.o.close && f.o.overlayClose) {
                f.d.overlay.bind("click.simplemodal", function(g) {
                    g.preventDefault();
                    f.close()
                })
            }
            d(document).bind("keydown.simplemodal", function(g) {
                if (f.o.modal && f.o.focus && g.keyCode == 9) {
                    f.watchTab(g)
                } else {
                    if ((f.o.close && f.o.escClose) && g.keyCode == 27) {
                        g.preventDefault();
                        f.close()
                    }
                }
            });
            d(window).bind("resize.simplemodal", function() {
                b = f.getDimensions();
                f.setContainerDimensions(true);
                if (c || e) {
                    f.fixIE()
                } else {
                    if (f.o.modal) {
                        f.d.iframe && f.d.iframe.css({
                            height: b[0],
                            width: b[1]
                        });
                        f.d.overlay.css({
                            height: b[0],
                            width: b[1]
                        })
                    }
                }
            })
        },
        unbindEvents: function() {
            d("." + this.o.closeClass).unbind("click.simplemodal");
            d(document).unbind("keydown.simplemodal");
            d(window).unbind("resize.simplemodal");
            this.d.overlay.unbind("click.simplemodal")
        },
        fixIE: function() {
            var f = this,
                g = f.o.position;
            d.each([f.d.iframe || null, !f.o.modal ? null : f.d.overlay, f.d.container], function(z, o) {
                if (o) {
                    var v = "document.body.clientHeight",
                        D = "document.body.clientWidth",
                        G = "document.body.scrollHeight",
                        C = "document.body.scrollLeft",
                        r = "document.body.scrollTop",
                        n = "document.body.scrollWidth",
                        m = "document.documentElement.clientHeight",
                        w = "document.documentElement.clientWidth",
                        u = "document.documentElement.scrollLeft",
                        H = "document.documentElement.scrollTop",
                        I = o[0].style;
                    I.position = "absolute";
                    if (z < 2) {
                        I.removeExpression("height");
                        I.removeExpression("width");
                        I.setExpression("height", "" + G + " > " + v + " ? " + G + " : " + v + ' + "px"');
                        I.setExpression("width", "" + n + " > " + D + " ? " + n + " : " + D + ' + "px"')
                    } else {
                        var q, h;
                        if (g && g.constructor == Array) {
                            var E = g[0] ? typeof g[0] == "number" ? g[0].toString() : g[0].replace(/px/, "") : o.css("top").replace(/px/, "");
                            q = E.indexOf("%") == -1 ? E + " + (t = " + H + " ? " + H + " : " + r + ') + "px"' : parseInt(E.replace(/%/, "")) + " * ((" + m + " || " + v + ") / 100) + (t = " + H + " ? " + H + " : " + r + ') + "px"';
                            if (g[1]) {
                                var p = typeof g[1] == "number" ? g[1].toString() : g[1].replace(/px/, "");
                                h = p.indexOf("%") == -1 ? p + " + (t = " + u + " ? " + u + " : " + C + ') + "px"' : parseInt(p.replace(/%/, "")) + " * ((" + w + " || " + D + ") / 100) + (t = " + u + " ? " + u + " : " + C + ') + "px"'
                            }
                        } else {
                            q = "(" + m + " || " + v + ") / 2 - (this.offsetHeight / 2) + (t = " + H + " ? " + H + " : " + r + ') + "px"';
                            h = "(" + w + " || " + D + ") / 2 - (this.offsetWidth / 2) + (t = " + u + " ? " + u + " : " + C + ') + "px"'
                        }
                        I.removeExpression("top");
                        I.removeExpression("left");
                        I.setExpression("top", q);
                        I.setExpression("left", h)
                    }
                }
            })
        },
        focus: function(m) {
            var g = this,
                h = m || "first";
            var f = d(":input:enabled:visible:" + h, g.d.wrap);
            f.length > 0 ? f.focus() : g.d.wrap.focus()
        },
        getDimensions: function() {
            var g = d(window);
            var f = d.browser.opera && d.browser.version > "9.5" && d.fn.jquery <= "1.2.6" ? document.documentElement.clientHeight : d.browser.opera && d.browser.version < "9.5" && d.fn.jquery > "1.2.6" ? window.innerHeight : g.height();
            return [f, g.width()]
        },
        getVal: function(f) {
            return f == "auto" ? 0 : f.indexOf("%") > 0 ? f : parseInt(f.replace(/px/, ""))
        },
        setContainerDimensions: function(m) {
            var o = this;
            if (!m || (m && o.o.autoResize)) {
                var n = d.browser.opera ? o.d.container.height() : o.getVal(o.d.container.css("height")),
                    f = d.browser.opera ? o.d.container.width() : o.getVal(o.d.container.css("width")),
                    p = o.d.data.outerHeight(true),
                    h = o.d.data.outerWidth(true);
                var g = o.o.maxHeight && o.o.maxHeight < b[0] ? o.o.maxHeight : b[0],
                    q = o.o.maxWidth && o.o.maxWidth < b[1] ? o.o.maxWidth : b[1];
                if (!n) {
                    if (!p) {
                        n = o.o.minHeight
                    } else {
                        if (p > g) {
                            n = g
                        } else {
                            if (p < o.o.minHeight) {
                                n = o.o.minHeight
                            } else {
                                n = p
                            }
                        }
                    }
                } else {
                    n = n > g ? g : n
                }
                if (!f) {
                    if (!h) {
                        f = o.o.minWidth
                    } else {
                        if (h > q) {
                            f = q
                        } else {
                            if (h < o.o.minWidth) {
                                f = o.o.minWidth
                            } else {
                                f = h
                            }
                        }
                    }
                } else {
                    f = f > q ? q : f
                }
                o.d.container.css({
                    height: n,
                    width: f
                });
                if (p > n || h > f) {
                    o.d.wrap.css({
                        overflow: "auto"
                    })
                }
            }
            if (o.o.autoPosition) {
                o.setPosition()
            }
        },
        setPosition: function() {
            var g = this,
                m, h, n = (b[0] / 2) - (g.d.container.outerHeight(true) / 2),
                f = (b[1] / 2) - (g.d.container.outerWidth(true) / 2);
            if (g.o.position && Object.prototype.toString.call(g.o.position) === "[object Array]") {
                m = g.o.position[0] || n;
                h = g.o.position[1] || f
            } else {
                m = n;
                h = f
            }
            g.d.container.css({
                left: h,
                top: m
            })
        },
        watchTab: function(g) {
            var f = this;
            if (d(g.target).parents(".simplemodal-container").length > 0) {
                f.inputs = d(":input:enabled:visible:first, :input:enabled:visible:last", f.d.data[0]);
                if ((!g.shiftKey && g.target == f.inputs[f.inputs.length - 1]) || (g.shiftKey && g.target == f.inputs[0]) || f.inputs.length == 0) {
                    g.preventDefault();
                    var h = g.shiftKey ? "last" : "first";
                    setTimeout(function() {
                        f.focus(h)
                    }, 10)
                }
            } else {
                g.preventDefault();
                setTimeout(function() {
                    f.focus()
                }, 10)
            }
        },
        open: function() {
            var f = this;
            f.d.iframe && f.d.iframe.show();
            if (d.isFunction(f.o.onOpen)) {
                f.o.onOpen.apply(f, [f.d])
            } else {
                f.d.overlay.show();
                f.d.container.show();
                f.d.data.show()
            }
            f.focus();
            f.bindEvents()
        },
        close: function() {
            var f = this;
            if (!f.d.data) {
                return false
            }
            f.unbindEvents();
            if (d.isFunction(f.o.onClose) && !f.occb) {
                f.occb = true;
                f.o.onClose.apply(f, [f.d])
            } else {
                if (f.d.placeholder) {
                    var g = d("#simplemodal-placeholder");
                    if (f.o.persist) {
                        g.replaceWith(f.d.data.removeClass("simplemodal-data").css("display", f.display))
                    } else {
                        f.d.data.hide().remove();
                        g.replaceWith(f.d.orig)
                    }
                } else {
                    f.d.data.hide().remove()
                }
                f.d.container.hide().remove();
                f.d.overlay.hide().remove();
                f.d.iframe && f.d.iframe.hide().remove();
                f.d = {}
            }
        }
    }
})(jQuery);
(function(g) {
    var f = [],
        q = [],
        o = activeItem = null,
        d = g('<div class="menu-div outerbox" style="position:absolute;top:0;left:0;display:none;"><div class="shadowbox1"></div><div class="shadowbox2"></div><div class="shadowbox3"></div></div>')[0],
        c = g('<ul class="menu-ul innerbox"></ul>')[0],
        p = g('<li style="position:relative;"><div class="menu-item"></div></li>')[0],
        n = g('<img class="menu-item-arrow" />')[0],
        m = g('<div id="root-menu-div" style="position:absolute;top:0;left:0;"></div>'),
        e = {
            showDelay: 200,
            hideDelay: 200,
            hoverOpenDelay: 0,
            offsetTop: 0,
            offsetLeft: 0,
            minWidth: 0,
            onOpen: null,
            onClose: null,
            onClick: null,
            arrowSrc: null,
            addExpando: false,
            copyClassAttr: false
        };
    g(function() {
        m.appendTo("body")
    });
    g.extend({
        MenuCollection: function(r) {
            this.menus = [];
            this.init(r)
        }
    });
    g.extend(g.MenuCollection, {
        prototype: {
            init: function(r) {
                if (r && r.length) {
                    for (var u = 0; u < r.length; u++) {
                        this.addMenu(r[u]);
                        r[u].menuCollection = this
                    }
                }
            },
            addMenu: function(u) {
                if (u instanceof g.Menu) {
                    this.menus.push(u)
                }
                u.menuCollection = this;
                var r = this;
                g(u.target).hover(function() {
                    if (u.visible) {
                        return
                    }
                    for (var v = 0; v < r.menus.length; v++) {
                        if (r.menus[v].visible) {
                            r.menus[v].hide();
                            u.show();
                            return
                        }
                    }
                }, function() {})
            }
        }
    });
    g.extend({
        Menu: function(v, r, u) {
            this.menuItems = [];
            this.subMenus = [];
            this.visible = false;
            this.active = false;
            this.parentMenuItem = null;
            this.settings = g.extend({}, e, u);
            this.target = v;
            this.$eDIV = null;
            this.$eUL = null;
            this.timer = null;
            this.menuCollection = null;
            this.openTimer = null;
            this.init();
            if (r && r.constructor == Array) {
                this.addItems(r)
            }
        }
    });
    g.extend(g.Menu, {
        checkMouse: function(u) {
            var r = u.target;
            if (q.length && r == q[0].target) {
                return
            }
            while (r.parentNode && r.parentNode != m[0]) {
                r = r.parentNode
            }
            if (!g(q).filter(function() {
                    return this.$eDIV[0] == r
                }).length) {
                g.Menu.closeAll()
            }
        },
        checkKey: function(C) {
            switch (C.keyCode) {
                case 13:
                    if (activeItem) {
                        activeItem.click(C, activeItem.$eLI[0])
                    }
                    break;
                case 27:
                    g.Menu.closeAll();
                    break;
                case 37:
                    if (!o) {
                        o = q[0]
                    }
                    var u = o;
                    if (u && u.parentMenuItem) {
                        var w = u.parentMenuItem;
                        w.$eLI.unbind("mouseout").unbind("mouseover");
                        u.hide();
                        w.hoverIn(true);
                        setTimeout(function() {
                            w.bindHover()
                        })
                    } else {
                        if (u && u.menuCollection) {
                            var D, v = u.menuCollection.menus;
                            if ((D = g.inArray(u, v)) > -1) {
                                if (--D < 0) {
                                    D = v.length - 1
                                }
                                g.Menu.closeAll();
                                v[D].show();
                                v[D].setActive();
                                if (v[D].menuItems.length) {
                                    v[D].menuItems[0].hoverIn(true)
                                }
                            }
                        }
                    }
                    break;
                case 38:
                    if (o) {
                        o.selectNextItem(-1)
                    }
                    break;
                case 39:
                    if (!o) {
                        o = q[0]
                    }
                    var r, u = o,
                        z = activeItem ? activeItem.subMenu : null;
                    if (u) {
                        if (z && z.menuItems.length) {
                            z.show();
                            z.menuItems[0].hoverIn()
                        } else {
                            if ((u = u.inMenuCollection())) {
                                var D, v = u.menuCollection.menus;
                                if ((D = g.inArray(u, v)) > -1) {
                                    if (++D >= v.length) {
                                        D = 0
                                    }
                                    g.Menu.closeAll();
                                    v[D].show();
                                    v[D].setActive();
                                    if (v[D].menuItems.length) {
                                        v[D].menuItems[0].hoverIn(true)
                                    }
                                }
                            }
                        }
                    }
                    break;
                case 40:
                    if (!o) {
                        if (q.length && q[0].menuItems.length) {
                            q[0].menuItems[0].hoverIn()
                        }
                    } else {
                        o.selectNextItem()
                    }
                    break
            }
            if (C.keyCode > 36 && C.keyCode < 41) {
                return false
            }
        },
        closeAll: function() {
            while (q.length) {
                q[0].hide()
            }
        },
        setDefaults: function(r) {
            g.extend(e, r)
        },
        prototype: {
            init: function() {
                var r = this;
                if (!this.target) {
                    return
                } else {
                    if (this.target instanceof g.MenuItem) {
                        this.parentMenuItem = this.target;
                        this.target.addSubMenu(this);
                        this.target = this.target.$eLI
                    }
                }
                f.push(this);
                this.$eDIV = g(d.cloneNode(1));
                this.$eUL = g(c.cloneNode(1));
                this.$eDIV[0].appendChild(this.$eUL[0]);
                m[0].appendChild(this.$eDIV[0]);
                if (!this.parentMenuItem) {
                    g(this.target).click(function(u) {
                        r.onClick(u)
                    }).hover(function(u) {
                        r.setActive();
                        if (r.settings.hoverOpenDelay) {
                            r.openTimer = setTimeout(function() {
                                if (!r.visible) {
                                    r.onClick(u)
                                }
                            }, r.settings.hoverOpenDelay)
                        }
                    }, function() {
                        if (!r.visible) {
                            g(this).removeClass("activetarget")
                        }
                        if (r.openTimer) {
                            clearTimeout(r.openTimer)
                        }
                    })
                } else {
                    this.$eDIV.hover(function() {
                        r.setActive()
                    }, function() {})
                }
            },
            setActive: function() {
                if (!this.parentMenuItem) {
                    g(this.target).addClass("activetarget")
                } else {
                    this.active = true
                }
            },
            addItem: function(r) {
                if (r instanceof g.MenuItem) {
                    if (g.inArray(r, this.menuItems) == -1) {
                        this.$eUL.append(r.$eLI);
                        this.menuItems.push(r);
                        r.parentMenu = this;
                        if (r.subMenu) {
                            this.subMenus.push(r.subMenu)
                        }
                    }
                } else {
                    this.addItem(new g.MenuItem(r, this.settings))
                }
            },
            addItems: function(r) {
                for (var u = 0; u < r.length; u++) {
                    this.addItem(r[u])
                }
            },
            removeItem: function(r) {
                var u = g.inArray(r, this.menuItems);
                if (u > -1) {
                    this.menuItems.splice(u, 1)
                }
                r.parentMenu = null
            },
            hide: function() {
                if (!this.visible) {
                    return
                }
                var r, u = g.inArray(this, q);
                this.$eDIV.hide();
                if (u >= 0) {
                    q.splice(u, 1)
                }
                this.visible = this.active = false;
                g(this.target).removeClass("activetarget");
                for (r = 0; r < this.subMenus.length; r++) {
                    this.subMenus[r].hide()
                }
                for (r = 0; r < this.menuItems.length; r++) {
                    if (this.menuItems[r].active) {
                        this.menuItems[r].setInactive()
                    }
                }
                if (!q.length) {
                    g(document).unbind("mousedown", g.Menu.checkMouse).unbind("keydown", g.Menu.checkKey)
                }
                if (o == this) {
                    o = null
                }
                if (this.settings.onClose) {
                    this.settings.onClose.call(this)
                }
            },
            show: function(v) {
                if (this.visible) {
                    return
                }
                var u, r = this.parentMenuItem;
                if (this.menuItems.length) {
                    if (r) {
                        u = parseInt(r.parentMenu.$eDIV.css("z-index"));
                        this.$eDIV.css("z-index", (isNaN(u) ? 1 : u + 1))
                    }
                    this.$eDIV.css({
                        visibility: "hidden",
                        display: "block"
                    });
                    if (this.settings.minWidth) {
                        if (this.$eDIV.width() < this.settings.minWidth) {
                            this.$eDIV.css("width", this.settings.minWidth)
                        }
                    }
                    this.setPosition();
                    this.$eDIV.css({
                        display: "none",
                        visibility: ""
                    }).show();
                    if (g.browser.msie) {
                        this.$eUL.css("width", parseInt(g.browser.version) == 6 ? this.$eDIV.width() - 7 : this.$eUL.width())
                    }
                    if (this.settings.onOpen) {
                        this.settings.onOpen.call(this)
                    }
                }
                if (q.length == 0) {
                    g(document).bind("mousedown", g.Menu.checkMouse).bind("keydown", g.Menu.checkKey)
                }
                this.visible = true;
                q.push(this)
            },
            setPosition: function() {
                var D, z, v, r, H, I, C, E = g(window).width(),
                    u = g(window).height(),
                    J = this.parentMenuItem,
                    K = this.$eDIV[0].clientHeight,
                    w = this.$eDIV[0].clientWidth,
                    G;
                if (J) {
                    z = J.$eLI.offset();
                    v = z.left + J.$eLI.width();
                    r = z.top
                } else {
                    D = g(this.target);
                    z = D.offset();
                    v = z.left + this.settings.offsetLeft;
                    r = z.top + D.height() + this.settings.offsetTop
                }
                if (g.fn.scrollTop) {
                    I = g(window).scrollTop();
                    if (u < K) {
                        r = I
                    } else {
                        if (u + I < r + K) {
                            if (J) {
                                H = J.parentMenu.$eDIV.offset();
                                G = J.parentMenu.$eDIV[0].clientHeight;
                                if (K <= G) {
                                    r = H.top + G - K
                                } else {
                                    r = H.top
                                }
                                if (u + I < r + K) {
                                    r -= r + K - (u + I)
                                }
                            } else {
                                r -= r + K - (u + I)
                            }
                        }
                    }
                }
                if (g.fn.scrollLeft) {
                    C = g(window).scrollLeft();
                    if (E + C < v + w) {
                        if (J) {
                            v -= J.$eLI.width() + w;
                            if (v < C) {
                                v = C
                            }
                        } else {
                            v -= v + w - (E + C)
                        }
                    }
                }
                this.$eDIV.css({
                    left: v,
                    top: r
                })
            },
            onClick: function(r) {
                if (this.visible) {
                    this.hide();
                    this.setActive()
                } else {
                    g.Menu.closeAll();
                    this.show(r)
                }
            },
            addTimer: function(v, u) {
                var r = this;
                this.timer = setTimeout(function() {
                    v.call(r);
                    r.timer = null
                }, u)
            },
            removeTimer: function() {
                if (this.timer) {
                    clearTimeout(this.timer);
                    this.timer = null
                }
            },
            selectNextItem: function(w) {
                var r, z = 0,
                    u = this.menuItems.length,
                    v = w || 1;
                for (r = 0; r < u; r++) {
                    if (this.menuItems[r].active) {
                        z = r;
                        break
                    }
                }
                this.menuItems[z].hoverOut();
                do {
                    z += v;
                    if (z >= u) {
                        z = 0
                    } else {
                        if (z < 0) {
                            z = u - 1
                        }
                    }
                } while (this.menuItems[z].separator);
                this.menuItems[z].hoverIn(true)
            },
            inMenuCollection: function() {
                var r = this;
                while (r.parentMenuItem) {
                    r = r.parentMenuItem.parentMenu
                }
                return r.menuCollection ? r : null
            },
            destroy: function() {
                var u, r;
                this.hide();
                if (!this.parentMenuItem) {
                    g(this.target).unbind("click").unbind("mouseover").unbind("mouseout")
                } else {
                    this.$eDIV.unbind("mouseover").unbind("mouseout")
                }
                while (this.menuItems.length) {
                    r = this.menuItems[0];
                    r.destroy();
                    delete r
                }
                if ((u = g.inArray(this, f)) > -1) {
                    f.splice(u, 1)
                }
                if (this.menuCollection) {
                    if ((u = g.inArray(this, this.menuCollection.menus)) > -1) {
                        this.menuCollection.menus.splice(u, 1)
                    }
                }
                this.$eDIV.remove()
            }
        }
    });
    g.extend({
        MenuItem: function(u, r) {
            if (typeof u == "string") {
                u = {
                    src: u
                }
            }
            this.src = u.src || "";
            this.url = u.url || null;
            this.urlTarget = u.target || null;
            this.addClass = u.addClass || null;
            this.data = u.data || null;
            this.$eLI = null;
            this.parentMenu = null;
            this.subMenu = null;
            this.settings = g.extend({}, e, r);
            this.active = false;
            this.enabled = true;
            this.separator = false;
            this.init();
            if (u.subMenu) {
                new g.Menu(this, u.subMenu, r)
            }
        }
    });
    g.extend(g.MenuItem, {
        prototype: {
            init: function() {
                var v, u, w = this.src,
                    r = this;
                this.$eLI = g(p.cloneNode(1));
                if (this.addClass) {
                    this.$eLI[0].setAttribute("class", this.addClass)
                }
                if (this.settings.addExpando && this.data) {
                    this.$eLI[0].menuData = this.data
                }
                if (w == "") {
                    this.$eLI.addClass("menu-separator");
                    this.separator = true
                } else {
                    u = typeof w == "string";
                    if (u && this.url) {
                        w = g('<a href="' + this.url + '"' + (this.urlTarget ? 'target="' + this.urlTarget + '"' : "") + ">" + w + "</a>")
                    } else {
                        if (u || !w.length) {
                            w = [w]
                        }
                    }
                    for (v = 0; v < w.length; v++) {
                        if (typeof w[v] == "string") {
                            elem = document.createElement("span");
                            elem.innerHTML = w[v];
                            this.$eLI[0].firstChild.appendChild(elem)
                        } else {
                            this.$eLI[0].firstChild.appendChild(w[v].cloneNode(1))
                        }
                    }
                }
                this.$eLI.click(function(z) {
                    r.click(z, this)
                });
                this.bindHover()
            },
            click: function(u, r) {
                if (this.enabled && this.settings.onClick) {
                    this.settings.onClick.call(r, u, this)
                }
            },
            bindHover: function() {
                var r = this;
                this.$eLI.hover(function() {
                    r.hoverIn()
                }, function() {
                    r.hoverOut()
                })
            },
            hoverIn: function(u) {
                this.removeTimer();
                var v, z = this.parentMenu.subMenus,
                    w = this.parentMenu.menuItems,
                    r = this;
                if (this.parentMenu.timer) {
                    this.parentMenu.removeTimer()
                }
                if (!this.enabled) {
                    return
                }
                for (v = 0; v < w.length; v++) {
                    if (w[v].active) {
                        w[v].setInactive()
                    }
                }
                this.setActive();
                o = this.parentMenu;
                for (v = 0; v < z.length; v++) {
                    if (z[v].visible && z[v] != this.subMenu && !z[v].timer) {
                        z[v].addTimer(function() {
                            this.hide()
                        }, z[v].settings.hideDelay)
                    }
                }
                if (this.subMenu && !u) {
                    this.subMenu.addTimer(function() {
                        this.show()
                    }, this.subMenu.settings.showDelay)
                }
            },
            hoverOut: function() {
                this.removeTimer();
                if (!this.enabled) {
                    return
                }
                if (!this.subMenu || !this.subMenu.visible) {
                    this.setInactive()
                }
            },
            removeTimer: function() {
                if (this.subMenu) {
                    this.subMenu.removeTimer()
                }
            },
            setActive: function() {
                this.active = true;
                this.$eLI.addClass("active");
                var r = this.parentMenu.parentMenuItem;
                if (r && !r.active) {
                    r.setActive()
                }
                activeItem = this
            },
            setInactive: function() {
                this.active = false;
                this.$eLI.removeClass("active");
                if (this == activeItem) {
                    activeItem = null
                }
            },
            enable: function() {
                this.$eLI.removeClass("disabled");
                this.enabled = true
            },
            disable: function() {
                this.$eLI.addClass("disabled");
                this.enabled = false
            },
            destroy: function() {
                this.removeTimer();
                this.$eLI.remove();
                this.$eLI.unbind("mouseover").unbind("mouseout").unbind("click");
                if (this.subMenu) {
                    this.subMenu.destroy();
                    delete this.subMenu
                }
                this.parentMenu.removeItem(this)
            },
            addSubMenu: function(u) {
                if (this.subMenu) {
                    return
                }
                this.subMenu = u;
                if (this.parentMenu && g.inArray(u, this.parentMenu.subMenus) == -1) {
                    this.parentMenu.subMenus.push(u)
                }
                if (this.settings.arrowSrc) {
                    var r = n.cloneNode(0);
                    r.setAttribute("src", this.settings.arrowSrc);
                    this.$eLI[0].firstChild.appendChild(r)
                }
            }
        }
    });
    g.extend(g.fn, {
        menuFromElement: function(u, w, v) {
            var r = function(J) {
                var E = [],
                    H, D, M, K, G, L, C, I, z = null;
                M = h(J, "LI");
                for (G = 0; G < M.length; G++) {
                    H = [];
                    if (!M[G].childNodes.length) {
                        E.push(new g.MenuItem("", u));
                        continue
                    }
                    if ((L = b(M[G], "UL"))) {
                        H = r(L);
                        g(L).remove()
                    }
                    K = g(M[G]);
                    if (K[0].childNodes.length == 1 && K[0].childNodes[0].nodeType == 3) {
                        I = K[0].childNodes[0].nodeValue
                    } else {
                        I = K[0].childNodes
                    }
                    if (u && u.copyClassAttr) {
                        z = K.attr("class")
                    }
                    D = new g.MenuItem({
                        src: I,
                        addClass: z
                    }, u);
                    E.push(D);
                    if (H.length) {
                        new g.Menu(D, H, u)
                    }
                }
                return E
            };
            return this.each(function() {
                var C, z;
                if (w || (C = b(this, "UL"))) {
                    C = w ? g(w).clone(true)[0] : C;
                    menuItems = r(C);
                    if (menuItems.length) {
                        z = new g.Menu(this, menuItems, u);
                        if (v) {
                            v.addMenu(z)
                        }
                    }
                    g(C).hide()
                }
            })
        },
        menuBarFromUL: function(r) {
            return this.each(function() {
                var v, u = h(this, "LI");
                if (u.length) {
                    bar = new g.MenuCollection();
                    for (v = 0; v < u.length; v++) {
                        g(u[v]).menuFromElement(r, null, bar)
                    }
                }
            })
        },
        xmenu: function(u, r) {
            return this.each(function() {
                if (r && r.constructor == Array) {
                    new g.Menu(this, r, u)
                } else {
                    if (this.nodeName.toUpperCase() == "UL") {
                        g(this).menuBarFromUL(u)
                    } else {
                        g(this).menuFromElement(u, r)
                    }
                }
            })
        }
    });
    var b = function(u, r) {
        if (!u) {
            return null
        }
        var v = u.firstChild;
        for (; v; v = v.nextSibling) {
            if (v.nodeType == 1 && v.nodeName.toUpperCase() == r) {
                return v
            }
        }
        return null
    };
    var h = function(w, u) {
        if (!w) {
            return []
        }
        var v = [],
            z = w.firstChild;
        for (; z; z = z.nextSibling) {
            if (z.nodeType == 1 && z.nodeName.toUpperCase() == u && z.style.display != "none") {
                v[v.length] = z
            }
        }
        return v
    }
})(jQuery);

function init_parts_actions(b) {
    $(".btnactions").bind("click mousedown", function() {
        var d = $(this).parents("#row");
        $("#logi_id_inter").val($(this).parents("#row").attr("data-id_inter"));
        $("#logi_id_piece").val($(this).parents("#row").attr("data-id_piece"));
        $("#logi_id_piece_inter").val($(this).parents("#row").attr("data-id_piece_inter"));
        $("#logi_id_employe").val($(this).parents("#row").attr("data-id_employe"));
        $("#logi_nom_employe").val($(this).parents("#row").attr("data-nom_employe"));
        $("#logi_refbl").val($(this).parents("#row").attr("data-bl"));
        var c = {
            minWidth: 120,
            arrowSrc: "menu/arrow_right.gif",
            copyClassAttr: true,
            onClick: function(g, f) {
                switch ($(this).find("span").attr("id")) {
                    case "logi_mnu_part_receive":
                        var h = "logi_tab_receive";
                        $("#logi_part_receive").modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + h).height() + 20,
                                width: $("#" + h).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + h).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(e) {
                                e.overlay.fadeIn("fast", function() {
                                    e.container.slideDown("fast", function() {
                                        e.data.fadeIn("fast");
                                        $("#" + h).fadeIn("fast");
                                        $("#logi_bl_aller").val($("#logi_refbl").val())
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_confirm":
                        var h = "logi_tab_confirm";
                        $("#logi_part_confirm").modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + h).height() + 20,
                                width: $("#" + h).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + h).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(e) {
                                e.overlay.fadeIn("fast", function() {
                                    e.container.slideDown("fast", function() {
                                        e.data.fadeIn("fast");
                                        $("#" + h).fadeIn("fast");
                                        $("#logi_confirm_bl").val($("#logi_refbl").val())
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_send":
                        var h = "logi_tab_send";
                        $("#logi_part_send").modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + h).height() + 20,
                                width: $("#" + h).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + h).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(e) {
                                var m = this;
                                e.overlay.fadeIn("fast", function() {
                                    e.container.slideDown("fast", function() {
                                        e.data.fadeIn("fast");
                                        e.container.height($("#" + h).height() + 20);
                                        m.setPosition();
                                        $("#" + h).fadeIn("fast");
                                        $("#logi_send_bl").val($("#logi_refbl").val());
                                        $("#logi_send_seltypedepot").load("logistics/get_types_depot", function() {
                                            $(this).val(6);
                                            $("#logi_send_seliddepot").load("logistics/get_id_depot2", {
                                                type_depot: $(this).val(),
                                                id_employe: d.attr("data-id_employe"),
                                                id_depot: d.attr("data-id_depot"),
                                                src_type_depot: d.attr("data-type_depot")
                                            }, function() {
                                                $(this).val(6)
                                            });
                                            $("#logi_send_seltypedepot").change(function() {
                                                $("#logi_send_seliddepot").load("logistics/get_id_depot2", {
                                                    type_depot: $(this).val(),
                                                    id_employe: d.attr("data-id_employe"),
                                                    id_depot: d.attr("data-id_depot"),
                                                    src_type_depot: d.attr("data-type_depot")
                                                }, function() {
                                                    $(this).val(0)
                                                })
                                            })
                                        })
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_pickup":
                        var h = "logi_tab_pickup";
                        $("#logi_part_pickup").modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + h).height() + 20,
                                width: $("#" + h).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + h).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(e) {
                                var m = this;
                                e.overlay.fadeIn("fast", function() {
                                    e.container.slideDown("fast", function() {
                                        e.data.fadeIn("fast");
                                        e.container.height($("#" + h).height() + 20);
                                        m.setPosition();
                                        $("#" + h).fadeIn("fast");
                                        $("#logi_pickup_bl").val("PICKUP");
                                        $("#logi_pickup_seltypedepot").load("logistics/get_types_depot", function() {
                                            $(this).val(2);
                                            $("#logi_pickup_seliddepot").load("logistics/get_id_depot2", {
                                                type_depot: $(this).val(),
                                                id_employe: d.attr("data-id_employe"),
                                                id_depot: d.attr("data-id_depot"),
                                                src_type_depot: d.attr("data-type_depot")
                                            }, function() {
                                                $(this).val(2)
                                            });
                                            $("#logi_pickup_seltypedepot").change(function() {
                                                $("#logi_pickup_seliddepot").load("logistics/get_id_depot2", {
                                                    type_depot: $(this).val(),
                                                    id_employe: d.attr("data-id_employe"),
                                                    id_depot: d.attr("data-id_depot"),
                                                    src_type_depot: d.attr("data-type_depot")
                                                }, function() {
                                                    $(this).val(0)
                                                })
                                            })
                                        })
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_return":
                        var h = "logi_tab_return";
                        $("#logi_part_return").modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + h).height() + 20,
                                width: $("#" + h).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + h).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(m) {
                                var e = $("#logi_part_return tr[name=info]");
                                e.after("<tr><td>" + lang_logi_observation + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_comment") + "</td></tr>");
                                e.after("<tr><td>" + lang_logi_documents_to_return + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_documents") + "</td></tr>");
                                e.after("<tr><td>" + lang_logi_sent_to + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_dst_location") + "</td></tr>");
                                e.after("<tr><td>" + lang_logi_return_location + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_location") + "</td></tr>");
                                e.after("<tr><td>" + lang_logi_carrier_account + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_compte_transport") + "</td></tr>");
                                e.after("<tr><td>" + lang_logi_carrier + " " + lang_logi_backward + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_transport") + "</td></tr>");
                                var n = this;
                                m.overlay.fadeIn("fast", function() {
                                    m.container.slideDown("fast", function() {
                                        m.data.fadeIn("fast");
                                        m.container.height($("#" + h).height() + 20);
                                        n.setPosition();
                                        $("#" + h).fadeIn("fast");
                                        $("#logi_bl_retour").val($("#logi_refbl").val());
                                        $("#logi_seltypedepot").load("logistics/get_types_depot_retour", function() {
                                            $(this).val(d.attr("data-retour_src_type_depot"));
                                            $("#logi_seliddepot").load("logistics/get_id_depot", {
                                                type_depot: $(this).val(),
                                                id_employe: d.attr("data-id_employe")
                                            }, function() {
                                                $(this).val(d.attr("data-retour_src_id_depot"))
                                            });
                                            $("#logi_seltypedepot").change(function() {
                                                $("#logi_seliddepot").load("logistics/get_id_depot", {
                                                    type_depot: $(this).val(),
                                                    id_employe: d.attr("data-id_employe")
                                                }, function() {
                                                    $(this).val(0)
                                                })
                                            })
                                        })
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_history":
                        $("#view_mvts").load("logistics/get_mvts", {
                            id_piece: $("#logi_id_piece").val(),
                            id_piece_inter: $("#logi_id_piece_inter").val()
                        }, function() {
                            $("#view_mvts").modal({
                                autoResize: true,
                                minWidth: 800,
                                minHeight: 600,
                                containerCss: {
                                    height: $("#tab_view_mvts").height() + 20,
                                    width: $("#tab_view_mvts").width() + 20,
                                    "-moz-border-radius": "2em 0em 2em 0em"
                                },
                                overlayClose: true,
                                onClose: function(e) {
                                    e.data.fadeOut("fast", function() {
                                        e.container.slideUp("fast", function() {
                                            e.overlay.fadeOut("fast", function() {
                                                $.modal.close();
                                                $("#tab_view_mvts").hide()
                                            })
                                        })
                                    })
                                },
                                onOpen: function(e) {
                                    e.overlay.fadeIn("fast", function() {
                                        e.container.slideDown("fast", function() {
                                            e.data.fadeIn("fast");
                                            $("#tab_view_mvts").fadeIn("fast")
                                        })
                                    })
                                },
                                onShow: function(e) {
                                    $("a", e.data).click(function() {
                                        return false
                                    })
                                }
                            })
                        });
                        break;
                    default:
                }
            }
        };
        switch (parseInt(b)) {
            case 0:
                $("#mnureception").show();
                $("#mnuretour").add("#mnuconfirm").add("#mnusend").add("#mnupickup").hide();
                break;
            case 1:
                $("#mnuretour").show();
                $("#mnureception").add("#mnuconfirm").add("#mnusend").add("#mnupickup").hide();
                break;
            case 2:
                $("#mnureception").add("#mnuretour").add("#mnuconfirm").add("#mnusend").add("#mnupickup").hide();
                switch (parseInt(d.attr("data-code_action"))) {
                    case 100:
                        $("#mnusend").show();
                        break;
                    default:
                }
                break;
            case 3:
                $("#mnureception").add("#mnuretour").add("#mnuconfirm").add("#mnusend").add("#mnupickup").hide();
                switch (parseInt(d.attr("data-code_action"))) {
                    case 1:
                        $("#mnuconfirm").show();
                        break;
                    case 2:
                    case 3:
                        $("#mnusend").show();
                        $("#mnupickup").show();
                        break;
                    case 4:
                        $("#mnusend").show();
                        break;
                    case 100:
                        $("#mnusend").show();
                        break;
                    default:
                }
                break;
            default:
                $("#mnureception").add("#mnuretour").add("#mnuconfirm").add("#mnusend").add("#mnupickup").hide()
        }
        $(this).xmenu(c, "#menu-items")
    });
    logi_action_links()
}

function logi_action_links() {
    $(".btninfo").tooltip({
        bodyHandler: function() {
            var b = "<span class=''>" + $(this).attr("tip") + "</span>";
            return b
        },
        track: true,
        delay: 0,
        showURL: false,
        fade: 0
    });
    $(".btninfo").click(function() {
        $.modal($(this).attr("tip"), {
            opacity: 30,
            overlayCss: {
                backgroundColor: "#000"
            },
            minHeight: 200,
            minWidth: 400,
            containerCss: {
                padding: 2,
                "-moz-border-radius": "0em 1em 4em 1em"
            },
            overlayClose: true,
            onOpen: function(b) {
                b.overlay.fadeIn("fast", function() {
                    b.data.hide();
                    b.container.fadeIn("fast", function() {
                        b.data.fadeIn("fast")
                    })
                })
            },
            onClose: function(b) {
                b.data.hide();
                b.container.fadeOut("fast", function() {
                    b.overlay.fadeOut("fast", function() {
                        $.modal.close()
                    })
                })
            }
        })
    });
    $("a.show_inter").click(function(b) {
        OpenClientTab($(this).parents("#row").attr("data-id_client"), "", $(this).parents("#row").attr("data-id_inter"), -1);
        b.preventDefault()
    });
    $("a.show_bl").click(function(c) {
        c.preventDefault();
        var b = $(this).parents("#row");
        $.modal('<a href="' + b.attr("data-url") + '" target="_blank">Open in a new tab</a><br><iframe src="' + b.attr("data-url") + '" height="400" width="750" style="border:0">', {
            opacity: 30,
            overlayCss: {
                backgroundColor: "#000"
            },
            minHeight: 200,
            minWidth: 200,
            containerCss: {
                height: 400,
                padding: 2,
                width: 750
            },
            overlayClose: true,
            onOpen: function(d) {
                d.overlay.fadeIn("fast", function() {
                    d.data.hide();
                    d.container.fadeIn("fast", function() {
                        d.data.fadeIn("fast")
                    })
                })
            },
            onClose: function(d) {
                d.data.hide();
                d.container.fadeOut("fast", function() {
                    d.overlay.fadeOut("fast", function() {
                        $.modal.close()
                    })
                })
            }
        })
    })
}

function logi_init_interface_tab() {
    $("#logi_btn_confirm").click(function() {
        $.Menu.closeAll();
        blockAllUI();
        $.post("logistics/set_part_confirmed", {
            id_piece: $("#logi_id_piece").val(),
            bl: $("#logi_confirm_bl").val()
        }, function() {
            $("#logi_result_stock").hide("fast", function() {
                $("#logi_btn_telima").click();
                UNblockAllUI()
            })
        });
        $.modal.close()
    });
    $("#logi_btn_send").click(function() {
        $.Menu.closeAll();
        blockAllUI();
        $.post("logistics/set_part_sent", {
            id_piece: $("#logi_id_piece").val(),
            type_depot: $("#logi_send_seltypedepot").val(),
            id_depot: $("#logi_send_seliddepot").val(),
            bl: $("#logi_send_bl").val()
        }, function() {
            $("#logi_result_stock").hide("fast", function() {
                $("#logi_btn_telima").click();
                UNblockAllUI()
            })
        });
        $.modal.close()
    });
    $("#logi_btn_pickup").click(function() {
        $.Menu.closeAll();
        blockAllUI();
        $.post("logistics/ask_part_pickup", {
            id_piece: $("#logi_id_piece").val(),
            type_depot: $("#logi_pickup_seltypedepot").val(),
            id_depot: $("#logi_pickup_seliddepot").val(),
            bl: "PICKUP"
        }, function() {
            $("#logi_result_stock").hide("fast", function() {
                $("#logi_btn_telima").click();
                UNblockAllUI()
            })
        });
        $.modal.close()
    });
    $("#logi_btn_receive").click(function() {
        $.Menu.closeAll();
        blockAllUI();
        $.post("logistics/set_part_received", {
            id_piece: $("#logi_id_piece").val(),
            id_piece_inter: $("#logi_id_piece_inter").val(),
            id_employe: $("#logi_id_employe").val(),
            bl: $("#logi_bl_aller").val()
        }, function() {
            $("#logi_result_tech").hide("fast").load("logistics/get_parts_to_receive", {
                id_employe: $("#logi_id_employe").val(),
                nom_employe: $("#logi_nom_employe").val()
            }, function() {
                init_parts_actions(0);
                $(this).show("fast");
                UNblockAllUI()
            })
        });
        $.modal.close()
    });
    $("#logi_btn_return").click(function() {
        var b = 0;
        if (parseInt($("#logi_seltypedepot").val()) == 3) {
            b = 1
        }
        var d = $("#logi_seltypedepot").val();
        var c = $("#logi_seliddepot").val();
        if (c == null || d == null) {
            alert(lang_stk_error_destination)
        } else {
            if (b != 1 || $("#logi_bl_retour").val() != "") {
                $.Menu.closeAll();
                blockAllUI();
                $.post("logistics/set_part_return", {
                    id_piece: $("#logi_id_piece").val(),
                    id_piece_inter: $("#logi_id_piece_inter").val(),
                    id_employe: $("#logi_id_employe").val(),
                    type_depot: $("#logi_seltypedepot").val(),
                    id_depot: $("#logi_seliddepot").val(),
                    bl: $("#logi_bl_retour").val()
                }, function() {
                    $("#logi_result_tech").slideUp("fast").load("logistics/get_parts_to_return", {
                        id_employe: $("#logi_id_employe").val(),
                        nom_employe: $("#logi_nom_employe").val()
                    }, function() {
                        init_parts_actions(1);
                        $(this).slideDown("fast");
                        UNblockAllUI()
                    })
                });
                $.modal.close()
            } else {
                alert(lang_logi_mandatory_bl_back);
                $("#logi_bl_retour").focus()
            }
        }
    })
}

function logi_init_interface_tech(b) {
    $("#logi_select_tech").slideUp("fast").load("logistics/get_logistics_resume", {
        id_employe: $("#logi_id_employe").val(),
        is_update: b
    }, function() {
        $("#logi_btn_view_receive").bind("click mousedown", function() {
            blockAllUI();
            $("#logi_result_tech").fadeOut("fast").load("logistics/get_parts_to_receive", {
                id_employe: $("#logi_id_employe").val(),
                nom_employe: $("#logi_nom_employe").val()
            }, function() {
                init_parts_actions(0);
                $(this).slideDown("fast");
                UNblockAllUI()
            })
        });
        $("#logi_btn_view_return").bind("click mousedown", function() {
            blockAllUI();
            $("#logi_result_tech").fadeOut("fast").load("logistics/get_parts_to_return", {
                id_employe: $("#logi_id_employe").val(),
                nom_employe: $("#logi_nom_employe").val()
            }, function() {
                init_parts_actions(1);
                $(this).slideDown("fast");
                UNblockAllUI()
            })
        });
        $("#btn_ddt_tech_view").bind("click mousedown", function() {
            blockAllUI();
            $("#result_ddt_tech").fadeOut("fast");
            $("#result_old_ddt").fadeOut("fast");
            $("#result_ddt_return").fadeOut("fast");
            $("#result_ddt_returning").fadeOut("fast");
            $("#result_ddt_tech").load("logistics/get_logistics_ddt_tech", {
                id_employe: $("#logi_id_employe").val(),
                nom_employe: $("#logi_nom_employe").val()
            }, function() {
                init_parts_actions(1);
                $(this).slideDown("fast");
                UNblockAllUI()
            })
        });
        $("#btn_ddt_tech_view").tooltip({
            bodyHandler: function() {
                var c = "<span class=''>" + lang_logi_btn_tt_display_parts_to_return + "</span>";
                return c
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 0
        });
        $("#btn_ddt_returning_parts_to_confirmed").bind("click mousedown", function() {
            blockAllUI();
            $("#result_ddt_tech").fadeOut("fast");
            $("#result_old_ddt").fadeOut("fast");
            $("#result_ddt_return").fadeOut("fast");
            $("#result_ddt_returning").fadeOut("fast");
            $("#result_ddt_returning").load("logistics/get_logistics_ddt_returning", {
                id_employe: $("#logi_id_employe").val(),
                nom_employe: $("#logi_nom_employe").val()
            }, function() {
                init_parts_actions(1);
                $(this).slideDown("fast");
                UNblockAllUI()
            })
        });
        $("#btn_ddt_returning_parts_to_confirmed").tooltip({
            bodyHandler: function() {
                var c = "<span class=''>" + lang_logi_btn_tt_returning_parts_to_be_confirmed + "</span>";
                return c
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 0
        });
        $("#btn_ddt_returning_parts_confirmed").bind("click mousedown", function() {
            blockAllUI();
            $("#result_ddt_tech").fadeOut("fast");
            $("#result_old_ddt").fadeOut("fast");
            $("#result_ddt_return").fadeOut("fast");
            $("#result_ddt_returning").fadeOut("fast");
            $("#result_ddt_return").load("logistics/get_logistics_ddt_return", {
                id_employe: $("#logi_id_employe").val(),
                nom_employe: $("#logi_nom_employe").val()
            }, function() {
                init_parts_actions(1);
                $(this).slideDown("fast");
                UNblockAllUI()
            })
        });
        $("#btn_ddt_returning_parts_confirmed").tooltip({
            bodyHandler: function() {
                var c = "<span class=''>" + lang_logi_btn_tt_returning_parts_confirmed + "</span>";
                return c
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 0
        });
        $("#btn_old_ddt_view").bind("click mousedown", function() {
            blockAllUI();
            $("#result_ddt_tech").fadeOut("fast");
            $("#result_old_ddt").fadeOut("fast");
            $("#result_ddt_return").fadeOut("fast");
            $("#result_ddt_returning").fadeOut("fast");
            $("#result_old_ddt").load("logistics/get_logistics_old_ddt", {
                id_employe: $("#logi_id_employe").val(),
                nom_employe: $("#logi_nom_employe").val()
            }, function() {
                init_parts_actions(1);
                $(this).slideDown("fast");
                UNblockAllUI()
            })
        });
        $("#btn_old_ddt_view").tooltip({
            bodyHandler: function() {
                var c = "<span class=''>" + lang_logi_btn_tt_print_old_ddt + "</span>";
                return c
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 0
        });
        $("a.logi_refresh_tech").unbind("click mousedown").bind("click mousedown", function() {
            logi_init_interface_tech(1)
        });
        $(this).slideDown("fast")
    })
}

function logi_init_interface_telima() {
    $("#logi_select_telima").load("logistics/logistics_select_telima", function() {
        $("#logi_btn_telima").click(function() {
            blockAllUI();
            $("#logi_result_tech").fadeOut("fast");
            $("#logi_result_telima").fadeOut("fast");
            $("#logi_result_stock").fadeOut("fast");
            $("#logi_result_telima").load("logistics/get_telima_parts_resume", {
                id_societe: $("#logi_sel_telima option:selected").val()
            }, function() {
                $("a.show_receive_tech").click(function() {
                    blockAllUI();
                    $("#logi_result_stock").fadeOut("fast");
                    $("#logi_result_tech").slideUp("fast").load("logistics/get_parts_to_receive", {
                        id_employe: $(this).parents("#row").attr("data-id_employe"),
                        nom_employe: $(this).parents("#row").attr("data-nom_employe")
                    }, function() {
                        init_parts_actions(0);
                        $(this).slideDown("fast");
                        UNblockAllUI()
                    })
                });
                $("a.show_stock_tech").click(function() {
                    blockAllUI();
                    $("#logi_result_tech").fadeOut("fast");
                    $("#logi_result_stock").slideUp("fast").load("logistics/get_stock_tech", {
                        id_employe: $(this).parents("#row").attr("data-id_employe"),
                        nom_employe: $(this).parents("#row").attr("data-nom_employe")
                    }, function() {
                        init_parts_actions(2);
                        $(this).slideDown("fast");
                        UNblockAllUI()
                    })
                });
                $("a.show_stock_entrepot").click(function() {
                    blockAllUI();
                    $("#logi_result_tech").fadeOut("fast");
                    $("#logi_result_stock").slideUp("fast").load("logistics/get_stock_entrepot", {
                        id_depot: $(this).parents("#row").attr("data-id_depot"),
                        type_depot: $(this).parents("#row").attr("data-type_depot"),
                        depot: $(this).parents("#row").attr("data-depot"),
                        nom_depot: $(this).parents("#row").attr("data-nom_depot"),
                        id_societe: $(this).parents("#row").attr("data-id_societe")
                    }, function() {
                        init_parts_actions(3);
                        $(this).slideDown("fast");
                        UNblockAllUI()
                    })
                });
                $("a.show_return_tech").click(function() {
                    blockAllUI();
                    $("#logi_result_stock").fadeOut("fast");
                    $("#logi_result_tech").slideUp("fast").load("logistics/get_parts_to_return", {
                        id_employe: $(this).parents("#row").attr("data-id_employe"),
                        nom_employe: $(this).parents("#row").attr("data-nom_employe")
                    }, function() {
                        init_parts_actions(1);
                        $(this).slideDown("fast");
                        UNblockAllUI()
                    })
                });
                $(this).slideDown("fast");
                UNblockAllUI()
            })
        })
    })
}

function logi_init_interface(b) {
    $("#logi_btn_change_dest_" + b).click(function() {
        $.Menu.closeAll();
        var c = $("#logi_seliddepot_change_dest_" + b).val();
        if (confirm("Etes-vous sÃ»r(e) de vouloir changer le point de livraison pour " + $("#logi_seliddepot_change_dest_" + b + " option:selected").text() + " ?")) {
            blockAllUI();
            $.post("stock/change_part_destination", {
                id_piece: $("#logi_id_piece_" + b).val(),
                id_dest: c
            }, function() {
                $("#tabparts_" + b).hide("fast").load("logistics/refresh_parts_by_inter", {
                    inter_id: b
                }, function() {
                    $(this).show("fast");
                    UNblockAllUI();
                    init_parts_inter(b)
                })
            });
            $.modal.close()
        }
    });
    $("#logi_btn_order_" + b).click(function() {
        $.Menu.closeAll();
        if ($("#logi_type_order_" + b).val() == "sap") {
            var o = $("#logi_order_do_" + b).val(),
                n = $("#logi_order_idf_" + b).val(),
                h = $("#logi_order_tf_" + b).val(),
                e = $("#logi_order_idn_" + b).val(),
                c = $("#logi_order_ref_" + b).val(),
                g = $("#logi_order_libelle_" + b).val(),
                d = $("#logi_seliddepot_order_" + b).val();
            if (parseInt(e) == 0 && c == "") {
                alert("DÃ©solÃ©, cette piÃ¨ce ne peut pas Ãªtre transformÃ©e en commande Goussainville actuellement !")
            } else {
                blockAllUI();
                $.post("stock/gouss_transform_order", {
                    id_piece: $("#logi_id_piece_" + b).val(),
                    id_nomenclature: e,
                    ref: c,
                    libelle: g,
                    id_fournisseur: n,
                    type_flux: h,
                    id_dest: d
                }, function() {
                    $("#tabparts_" + b).hide("fast").load("logistics/refresh_parts_by_inter", {
                        inter_id: b
                    }, function() {
                        $(this).show("fast");
                        UNblockAllUI();
                        init_parts_inter(b)
                    })
                });
                $.modal.close()
            }
        } else {
            if ($("#logi_order_number_" + b).val() == "") {
                alert("Veuillez indiquer un numÃ©ro de commande !");
                $("#logi_order_number_" + b).focus();
                return
            }
            var m = $("#logi_order_number_" + b).val();
            var d = $("#logi_seliddepot_order_" + b).val();
            var f = $("#logi_order_serial_" + b).val();
            var p = $("#logi_bl_aller_order_" + b).val();
            if (confirm("Etes-vous sÃ»r(e) de vouloir marquer la piÃ¨ce comme commandÃ©e Ã  destination de " + $("#logi_seliddepot_order_" + b + " option:selected").text() + " ?")) {
                blockAllUI();
                $.post("stock/set_part_order_confirm", {
                    id_piece: $("#logi_id_piece_" + b).val(),
                    num_commande: m,
                    num_serie: f,
                    bl: p,
                    id_dest: d
                }, function() {
                    $("#tabparts_" + b).hide("fast").load("logistics/refresh_parts_by_inter", {
                        inter_id: b
                    }, function() {
                        $(this).show("fast");
                        UNblockAllUI();
                        init_parts_inter(b)
                    })
                });
                $.modal.close()
            }
        }
    });
    $("#logi_btn_order_cancel_" + b).click(function() {
        $.Menu.closeAll();
        blockAllUI();
        $.post("stock/set_part_cancel", {
            id_piece: $("#logi_id_piece_" + b).val()
        }, function() {
            $("#tabparts_" + b).hide("fast").load("logistics/refresh_parts_by_inter", {
                inter_id: b
            }, function() {
                $(this).show("fast");
                UNblockAllUI();
                init_parts_inter(b)
            })
        });
        $.modal.close()
    });
    $("#logi_btn_receive_" + b).click(function() {
        $.Menu.closeAll();
        blockAllUI();
        $.post("logistics/set_part_received", {
            id_piece: $("#logi_id_piece_" + b).val(),
            id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
            id_employe: $("#logi_id_employe_" + b).val(),
            bl: $("#logi_bl_aller_" + b).val()
        }, function() {
            $("#tabparts_" + b).hide("fast").load("logistics/refresh_parts_by_inter", {
                inter_id: b
            }, function() {
                $(this).show("fast");
                UNblockAllUI();
                init_parts_inter(b)
            })
        });
        $.modal.close()
    });
    $("#logi_btn_no_receive_" + b).click(function() {
        if ($("#logi_part_no_receive_note_" + b).val() == "") {
            alert(lang_logi_mandatory_note_left_customer);
            $("#logi_part_no_receive_note_" + b).focus()
        } else {
            $.Menu.closeAll();
            blockAllUI();
            var c = 1;
            $.post("logistics/set_part_usage", {
                id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
                etat_utilisation: c,
                observation: $("#logi_part_no_receive_note_" + b).val()
            }, function() {
                $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                    inter_id: b
                }, function() {
                    $(this).slideDown("fast");
                    UNblockAllUI();
                    init_parts_inter(b)
                })
            });
            $.modal.close()
        }
    });
    $("#logi_btn_no_receive2_" + b).click(function() {
        if ($("#logi_part_no_receive2_note_" + b).val() == "") {
            alert(lang_logi_mandatory_note_left_customer);
            $("#logi_part_no_receive2_note_" + b).focus()
        } else {
            $.Menu.closeAll();
            blockAllUI();
            var c = 7;
            $.post("logistics/set_part_usage", {
                id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
                etat_utilisation: c,
                observation: $("#logi_part_no_receive2_note_" + b).val()
            }, function() {
                $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                    inter_id: b
                }, function() {
                    $(this).slideDown("fast");
                    UNblockAllUI();
                    init_parts_inter(b)
                })
            });
            $.modal.close()
        }
    });
    $("#logi_btn_return_" + b).click(function() {
        var c = 0;
        if (parseInt($("#logi_seltypedepot_" + b).val()) == 3) {
            c = 1
        }
        var e = $("#logi_seltypedepot_" + b).val();
        var d = $("#logi_seliddepot_" + b).val();
        if (d == null || e == null) {
            alert(lang_stk_error_destination)
        } else {
            if (c != 1 || $("#logi_bl_retour_" + b).val() != "") {
                $.Menu.closeAll();
                blockAllUI();
                $.post("logistics/set_part_return", {
                    id_piece: $("#logi_id_piece_" + b).val(),
                    id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
                    id_employe: $("#logi_id_employe_" + b).val(),
                    type_depot: $("#logi_seltypedepot_" + b).val(),
                    id_depot: $("#logi_seliddepot_" + b).val(),
                    bl: $("#logi_bl_retour_" + b).val()
                }, function() {
                    $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                        inter_id: b
                    }, function() {
                        $(this).slideDown("fast");
                        UNblockAllUI();
                        init_parts_inter(b)
                    })
                });
                $.modal.close()
            } else {
                alert(lang_logi_mandatory_bl_back);
                $("#logi_bl_retour_" + b).focus()
            }
        }
    });
    $("#btn_part_usage_" + b).click(function() {
        $.Menu.closeAll();
        blockAllUI();
        if (parseInt($("#logi_selpartusage_" + b).val()) == 1 && parseInt($("input[name=add_bad_" + b + "]:checked").val()) == 0) {
            if ($("#logi_part_serie_" + b).val() == "") {
                UNblockAllUI();
                alert(lang_logi_mandatory_bad_serial)
            } else {
                $.post("logistics/add_part_from_parent", {
                    id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
                    num_serie: $("#logi_part_serie_" + b).val()
                }, function() {
                    $.post("logistics/set_part_usage", {
                        id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
                        etat_utilisation: $("#logi_selpartusage_" + b).val(),
                        observation: $("#logi_part_note_" + b).val()
                    }, function() {
                        $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                            inter_id: b
                        }, function() {
                            $(this).slideDown("fast");
                            UNblockAllUI();
                            init_parts_inter(b)
                        })
                    })
                });
                $.modal.close()
            }
        } else {
            $.post("logistics/set_part_usage", {
                id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
                etat_utilisation: $("#logi_selpartusage_" + b).val(),
                observation: $("#logi_part_note_" + b).val()
            }, function() {
                $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                    inter_id: b
                }, function() {
                    $(this).slideDown("fast");
                    UNblockAllUI();
                    init_parts_inter(b)
                })
            });
            $.modal.close()
        }
    });
    $("#btn_part_usage2_" + b).click(function() {
        $.Menu.closeAll();
        var m = $(this).attr("data-id_piece_inter"),
            p = $(this).attr("data-id_piece"),
            r = $("#logi_usage_" + b + " input[name=part_serie_good]").val(),
            f = $("#logi_usage_" + b + " input[name=part_inv_good]").val(),
            e = $(this).attr("data-sn"),
            q = $(this).attr("data-cb");
        if (r != e) {
            $.post("/index.php/stock/update_sn", {
                id_piece: p,
                sn: r,
                old_sn: e
            })
        }
        if (f != q) {
            $.post("/index.php/stock/update_cb", {
                id_piece_inter: m,
                cb: f,
                old_cb: q
            })
        }
        blockAllUI();
        var d = $("#part_usage_validate2_" + b).find("input[name=part_usage_validation_type]").val();
        var h = "";
        switch (d) {
            case "BAD_NO":
            case "BAD_NO_CREATE":
                h = "1";
                break;
            case "BAD_CREATE":
                var o = $(this).attr("data-id_part");
                var v = $(this).attr("data-id_fournisseur");
                if (o == "100" || o == "102" || (o == "101" && v == "250")) {
                    if ($("#logi_usage_laissee_creer_" + b + " input[name=part_ref]").val() == "" || $("#logi_usage_laissee_creer_" + b + " input[name=part_libelle]").val() === "") {
                        UNblockAllUI();
                        alert(lang_logi_mandatory_ref)
                    } else {
                        $.post("logistics/add_part_by_flux", {
                            id_inter: b,
                            ref: $("#logi_usage_laissee_creer_" + b + " input[name=part_ref]").val(),
                            libelle: $("#logi_usage_laissee_creer_" + b + " input[name=part_libelle]").val(),
                            id_generique: $("#logi_usage_laissee_creer_" + b).find("select[name=selgenerique]").val(),
                            id_fournisseur: $("#logi_usage_laissee_creer_" + b).find("select[name=selfournisseur]").val(),
                            num_serie: $("#logi_usage_laissee_creer_" + b + " input[name=part_serie]").val(),
                            bl_aller: $("#logi_bl1_" + b).val(),
                            bl_retour: $("#logi_bl2_" + b).val(),
                            etat: 2,
                            id_type_flux: $("#logi_type_flux_" + b).val(),
                            id_parent: $("#logi_id_piece_inter_" + b).val()
                        }, function() {
                            $.post("logistics/set_part_usage", {
                                id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
                                etat_utilisation: 1,
                                observation: $("#logi_part_note2_" + b).val()
                            }, function() {
                                $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                                    inter_id: b
                                }, function() {
                                    $(this).slideDown("fast");
                                    UNblockAllUI();
                                    init_parts_inter(b)
                                })
                            })
                        });
                        $.modal.close()
                    }
                } else {
                    if ($("#logi_usage_laissee_creer_" + b + " input[name=part_ref]").val() == "" || $("#logi_usage_laissee_creer_" + b + " input[name=part_libelle]").val() === "" || $("#logi_usage_laissee_creer_" + b + " input[name=part_serie]").val() === "" || $("#logi_usage_laissee_creer_simple_" + b + " input[name=part_serie]").val() === r) {
                        UNblockAllUI();
                        alert(lang_logi_mandatory_ref)
                    } else {
                        $.post("logistics/add_part_by_flux", {
                            id_inter: b,
                            ref: $("#logi_usage_laissee_creer_" + b + " input[name=part_ref]").val(),
                            libelle: $("#logi_usage_laissee_creer_" + b + " input[name=part_libelle]").val(),
                            id_generique: $("#logi_usage_laissee_creer_" + b).find("select[name=selgenerique]").val(),
                            id_fournisseur: $("#logi_usage_laissee_creer_" + b).find("select[name=selfournisseur]").val(),
                            num_serie: $("#logi_usage_laissee_creer_" + b + " input[name=part_serie]").val(),
                            bl_aller: $("#logi_bl1_" + b).val(),
                            bl_retour: $("#logi_bl2_" + b).val(),
                            etat: 2,
                            id_type_flux: $("#logi_type_flux_" + b).val(),
                            id_parent: $("#logi_id_piece_inter_" + b).val()
                        }, function() {
                            $.post("logistics/set_part_usage", {
                                id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
                                etat_utilisation: 1,
                                observation: $("#logi_part_note2_" + b).val()
                            }, function() {
                                $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                                    inter_id: b
                                }, function() {
                                    $(this).slideDown("fast");
                                    UNblockAllUI();
                                    init_parts_inter(b)
                                })
                            })
                        });
                        $.modal.close()
                    }
                }
                break;
            case "BAD_CREATE_SIMPLE":
                if (regional_version == "IT01" || regional_version == "IB01" || regional_version == "BN01") {
                    var o = $(this).attr("data-id_part");
                    var v = $(this).attr("data-id_fournisseur");
                    if ($("#logi_usage_laissee_creer_simple_" + b + " input[name=part_serie]").val() === "" || $("#logi_usage_laissee_creer_simple_" + b + " input[name=part_serie]").val() === r) {
                        if (o == "100" || o == "102" || (o == "101" && v == "250")) {} else {
                            UNblockAllUI();
                            alert(lang_stk_no_serial_alert);
                            return
                        }
                    }
                }
                var w = $(this).attr("data-part"),
                    u = $("#logi_usage_laissee_creer_simple_" + b + " input[name=part_ref_from_parent]").val(),
                    g = $("#logi_usage_laissee_creer_simple_" + b + " input[name=part_id_from_parent]").val(),
                    c = $("#logi_usage_laissee_creer_simple_" + b + " input[name=part_serie]").val(),
                    n = $("#logi_usage_laissee_creer_simple_" + b + " input[name=part_inv]").val();
                if (w == u) {
                    $.post("logistics/add_part_from_parent", {
                        id_piece_inter: m,
                        num_serie: c,
                        num_inventaire: n
                    }, function() {
                        $.post("logistics/set_part_usage", {
                            id_piece_inter: m,
                            etat_utilisation: 1,
                            observation: $("#logi_part_note2_" + b).val()
                        }, function() {
                            $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                                inter_id: b
                            }, function() {
                                $(this).slideDown("fast");
                                UNblockAllUI();
                                init_parts_inter(b)
                            })
                        })
                    })
                } else {
                    if (g != "") {
                        $.post("logistics/add_part_from_parent", {
                            id_piece_inter: m,
                            num_serie: c,
                            num_inventaire: n,
                            id_nom: g
                        }, function() {
                            $.post("logistics/set_part_usage", {
                                id_piece_inter: m,
                                etat_utilisation: 1,
                                observation: $("#logi_part_note2_" + b).val()
                            }, function() {
                                $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                                    inter_id: b
                                }, function() {
                                    $(this).slideDown("fast");
                                    UNblockAllUI();
                                    init_parts_inter(b)
                                })
                            })
                        })
                    } else {
                        $.post("logistics/add_part_from_parent", {
                            id_piece_inter: m,
                            num_serie: c,
                            num_inventaire: n,
                            new_ref: u
                        }, function() {
                            $.post("logistics/set_part_usage", {
                                id_piece_inter: m,
                                etat_utilisation: 1,
                                observation: $("#logi_part_note2_" + b).val()
                            }, function() {
                                $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                                    inter_id: b
                                }, function() {
                                    $(this).slideDown("fast");
                                    UNblockAllUI();
                                    init_parts_inter(b)
                                })
                            })
                        })
                    }
                }
                $.modal.close();
                break;
            case "UNUSED":
                h = $("#logi_usage_unused_select_" + b).val();
                break;
            case "USED_NOT_CONSUMED":
                h = $("#logi_usage_laissee_NON_select_" + b).val();
                break
        }
        if (h != "") {
            $.post("logistics/set_part_usage", {
                id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
                etat_utilisation: h,
                observation: $("#logi_part_note2_" + b).val()
            }, function() {
                $("#tabparts_" + b).slideUp("fast").load("logistics/refresh_parts_by_inter", {
                    inter_id: b
                }, function() {
                    $(this).slideDown("fast");
                    UNblockAllUI();
                    init_parts_inter(b)
                })
            });
            $.modal.close()
        }
    })
}

function init_parts_inter(b) {
    $(".btnactions_" + b).bind("click mousedown", function() {
        var d = $(this).parents("#row-part");
        $("#logi_id_inter_" + b).val(d.attr("data-id_inter"));
        $("#logi_id_piece_" + b).val(d.attr("data-id_piece"));
        $("#logi_id_piece_inter_" + b).val(d.attr("data-id_piece_inter"));
        $("#logi_id_nomenclature_" + b).val(d.attr("data-id_nomenclature"));
        $("#logi_type_flux_" + b).val(d.attr("data-type_flux"));
        $("#logi_id_employe_" + b).val(d.attr("data-id_employe"));
        $("#logi_nom_employe_" + b).val(d.attr("data-nom_employe"));
        $("#logi_bl1_" + b).val(d.attr("data-bl_aller"));
        $("#logi_bl2_" + b).val(d.attr("data-bl_retour"));
        $("#logi_refbl_" + b).val(d.attr("data-bl"));
        $("#logi_BAD_recuperer_" + b).val(d.attr("data-BAD_recuperer"));
        $("#logi_BAD_creer_" + b).val(d.attr("data-BAD_creer"));
        var c = {
            minWidth: 120,
            arrowSrc: "menu/arrow_right.gif",
            copyClassAttr: true,
            onClick: function(m, h) {
                switch ($(this).find("span").attr("id")) {
                    case "logi_mnu_part_receive":
                        var n = "logi_tab_receive_" + b;
                        $("#logi_part_receive_" + b).modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + n).height() + 20,
                                width: $("#" + n).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + n).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(e) {
                                var o = this;
                                e.overlay.fadeIn("fast", function() {
                                    e.container.slideDown("fast", function() {
                                        e.data.fadeIn("fast");
                                        $("#" + n).fadeIn("fast");
                                        $("#logi_bl_aller_" + b).val($("#logi_refbl_" + b).val());
                                        if (d.attr("data-etat") == "BAD") {
                                            $("#logi_tab_receive_" + b + " tr").slice(0).hide().end().slice(-1).show()
                                        } else {
                                            $("#logi_tab_receive_" + b + " tr").slice(0).show()
                                        }
                                        e.container.height($("#" + n).height() + 20);
                                        o.setPosition()
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_no_receive":
                        var n = "logi_tab_no_receive_" + b;
                        $("#logi_part_no_receive_" + b).modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + n).height() + 20,
                                width: $("#" + n).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + n).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(e) {
                                var o = this;
                                e.overlay.fadeIn("fast", function() {
                                    e.container.slideDown("fast", function() {
                                        e.data.fadeIn("fast");
                                        $("#" + n).fadeIn("fast");
                                        $("#logi_bl_aller_" + b).val($("#logi_bl1_" + b).val());
                                        e.container.height($("#" + n).height() + 20);
                                        o.setPosition()
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_no_receive2":
                        var n = "logi_tab_no_receive2_" + b;
                        $("#logi_part_no_receive2_" + b).modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + n).height() + 20,
                                width: $("#" + n).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + n).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(e) {
                                var o = this;
                                e.overlay.fadeIn("fast", function() {
                                    e.container.slideDown("fast", function() {
                                        e.data.fadeIn("fast");
                                        $("#" + n).fadeIn("fast");
                                        $("#logi_bl_aller_" + b).val($("#logi_bl1_" + b).val());
                                        e.container.height($("#" + n).height() + 20);
                                        o.setPosition()
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_return":
                        var n = "logi_tab_return_" + b;
                        $("#logi_part_return_" + b).modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + n).height() + 20,
                                width: $("#" + n).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + n).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(o) {
                                var e = $("#logi_part_return_" + b + " tr[name=info]");
                                e.after("<tr><td>" + lang_logi_observation + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_comment") + "</td></tr>");
                                e.after("<tr><td>" + lang_logi_documents_to_return + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_documents") + "</td></tr>");
                                e.after("<tr><td>" + lang_logi_sent_to + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_dst_location") + "</td></tr>");
                                e.after("<tr><td>" + lang_logi_return_location + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_location") + "</td></tr>");
                                e.after("<tr><td>" + lang_logi_carrier_account + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_compte_transport") + "</td></tr>");
                                e.after("<tr><td>" + lang_logi_carrier + " " + lang_logi_backward + " :</td><td style='font-weight: bold'>" + d.attr("data-retour_transport") + "</td></tr>");
                                var p = this;
                                o.overlay.fadeIn("fast", function() {
                                    o.container.slideDown("fast", function() {
                                        $("#logi_seltypedepot_" + b).load("logistics/get_types_depot_retour", function() {
                                            var r = parseInt(d.attr("data-origin_type")),
                                                q = d.attr("data-retour_src_type_depot");
                                            if (r > 0) {
                                                $(this).val(r)
                                            } else {
                                                $(this).val(q)
                                            }
                                            var u = parseInt(d.attr("data-origin_id")),
                                                v = d.attr("data-etat");
                                            $("#logi_seliddepot_" + b).load("logistics/get_id_depot", {
                                                type_depot: $(this).val(),
                                                id_employe: d.attr("data-id_employe")
                                            }, function() {
                                                if (u > 0) {
                                                    if (r > 0 && v != "GOOD") {
                                                        $(this).val(d.attr("data-retour_src_id_depot"))
                                                    } else {
                                                        $(this).val(u)
                                                    }
                                                } else {
                                                    $(this).val(d.attr("data-retour_src_id_depot"))
                                                }
                                            });
                                            $("#logi_seltypedepot_" + b).change(function() {
                                                $("#logi_seliddepot_" + b).load("logistics/get_id_depot", {
                                                    type_depot: $(this).val(),
                                                    id_employe: d.attr("data-id_employe")
                                                }, function() {
                                                    $(this).val(0)
                                                })
                                            });
                                            o.data.fadeIn("fast");
                                            o.container.height($("#" + n).height() + 20);
                                            p.setPosition();
                                            $("#" + n).fadeIn("fast");
                                            $("#logi_bl_retour_" + b).val($("#logi_bl2_" + b).val())
                                        })
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_usage":
                        var n = "logi_tab_part_usage2_" + b;
                        $("#logi_usage_unused_" + b).hide();
                        $("#logi_usage_laissee_" + b).hide();
                        $("#logi_usage_bad_" + b).hide();
                        $("#logi_usage_laissee_NON_" + b).hide();
                        $("#logi_usage_laissee_creer_" + b).hide();
                        $("#logi_usage_laissee_creer_simple_" + b).hide();
                        $("#part_usage_validate2_" + b).hide();
                        $("#logi_part_usage2_" + b).find("input[type=radio]").removeAttr("checked");
                        $("#logi_part_usage2_" + b).modal({
                            autoResize: true,
                            minWidth: 600,
                            containerCss: {
                                height: $("#logi_part_usage2_" + b).height() + 20,
                                width: $("#logi_part_usage2_" + b).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + n).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(e) {
                                switch (parseInt(d.attr("data-flag_sn"))) {
                                    case 1:
                                        $("#logi_usage_laissee_creer_simple_" + b + " input[name=part_serie]").val(d.attr("data-gen_sn"));
                                        if (regional_version == "IT01" || regional_version == "IB01" || regional_version == "BN01") {
                                            $("#logi_usage_laissee_creer_simple_" + b + " input[name=part_serie]").attr("readonly", true)
                                        }
                                        break;
                                    default:
                                        if (regional_version == "IT01" || regional_version == "IB01" || regional_version == "BN01") {
                                            $("#logi_usage_laissee_creer_simple_" + b + " input[name=part_serie]").attr("readonly", false)
                                        }
                                }
                                $("#logi_usage_" + b + " input[name=part_serie_good]").val(d.attr("data-sn"));
                                $("#btn_part_usage2_" + b).attr("data-sn", d.attr("data-sn"));
                                $("#logi_usage_" + b + " input[name=part_inv_good]").val(d.attr("data-cb"));
                                $("#btn_part_usage2_" + b).attr("data-part", d.attr("data-part"));
                                $("#btn_part_usage2_" + b).attr("data-id_part", d.attr("data-id_part"));
                                $("#btn_part_usage2_" + b).attr("data-id_fournisseur", d.attr("data-id_fournisseur"));
                                $("#btn_part_usage2_" + b).attr("data-cb", d.attr("data-cb"));
                                $("#btn_part_usage2_" + b).attr("data-id_piece", d.attr("data-id_piece"));
                                $("#btn_part_usage2_" + b).attr("data-id_piece_inter", d.attr("data-id_piece_inter"));
                                var o = this;
                                e.overlay.fadeIn("fast", function() {
                                    e.container.slideDown("fast", function() {
                                        $("input[name=logi_usage_used_" + b + "]").change(function() {
                                            switch (parseInt($(this).val())) {
                                                case 1:
                                                    $("#logi_usage_bad_" + b).hide("fast");
                                                    $("#logi_usage_laissee_NON_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_simple_" + b).hide("fast");
                                                    $("#part_usage_validate2_" + b).hide("fast");
                                                    $("#logi_usage_unused_" + b).hide("fast");
                                                    $("#logi_usage_laissee_" + b).show("fast", function() {
                                                        e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                        o.setPosition()
                                                    }).find("select").val("").end().find("input[type=radio]").removeAttr("checked");
                                                    break;
                                                default:
                                                    $("#logi_usage_bad_" + b).hide("fast");
                                                    $("#logi_usage_laissee_NON_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_simple_" + b).hide("fast");
                                                    $("#part_usage_validate2_" + b).hide("fast");
                                                    $("#logi_usage_laissee_" + b).hide("fast");
                                                    $("#logi_usage_unused_" + b).show("fast", function() {
                                                        e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                        o.setPosition()
                                                    }).find("select").val("").end().find("input[type=radio]").removeAttr("checked")
                                            }
                                        });
                                        $("input[name=logi_usage_laissee_yesno_" + b + "]").change(function() {
                                            switch (parseInt($(this).val())) {
                                                case 1:
                                                    $("#logi_usage_laissee_NON_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_simple_" + b).hide("fast");
                                                    $("#logi_usage_bad_" + b).hide("fast");
                                                    $("#logi_part_note2_" + b).val("");
                                                    var p = parseInt($("#logi_BAD_recuperer_" + b).val());
                                                    if (parseInt(d.attr("data-is_supply")) == 1) {
                                                        $("#part_usage_validate2_" + b).show("fast", function() {
                                                            $(this).find("input[name=part_usage_validation_type]").val("BAD_NO");
                                                            e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                            o.setPosition()
                                                        })
                                                    } else {
                                                        if (p == 2) {
                                                            $("#logi_usage_bad_" + b).show("fast", function() {
                                                                e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                                o.setPosition()
                                                            }).find("select").val("").end().find("input[type=radio]").removeAttr("checked")
                                                        } else {
                                                            if (p == 1) {
                                                                if ($("#logi_BAD_creer_" + b).val() == "1") {
                                                                    $("#logi_usage_laissee_creer_" + b).find("select[name=selgenerique]").load("logistics/get_generiques", function() {
                                                                        $(this).val(0)
                                                                    });
                                                                    $("#logi_usage_laissee_creer_" + b).find("select[name=selfournisseur]").load("logistics/get_fournisseurs", function() {
                                                                        $(this).val(0)
                                                                    });
                                                                    $("#part_usage_validate2_" + b).show("fast", function() {
                                                                        $(this).find("input[name=part_usage_validation_type]").val("BAD_CREATE")
                                                                    });
                                                                    $("#logi_usage_laissee_creer_" + b).show("fast", function() {
                                                                        e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                                        o.setPosition()
                                                                    })
                                                                } else {
                                                                    if ($("#logi_BAD_creer_" + b).val() == "2") {
                                                                        $("#part_usage_validate2_" + b).show("fast", function() {
                                                                            $(this).find("input[name=part_usage_validation_type]").val("BAD_CREATE_SIMPLE")
                                                                        });
                                                                        $("#logi_usage_laissee_creer_simple_" + b).show("fast", function() {
                                                                            e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                                            o.setPosition()
                                                                        })
                                                                    } else {
                                                                        $("#part_usage_validate2_" + b).show("fast", function() {
                                                                            $(this).find("input[name=part_usage_validation_type]").val("BAD_NO_CREATE");
                                                                            e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                                            o.setPosition()
                                                                        })
                                                                    }
                                                                }
                                                            } else {
                                                                $("#part_usage_validate2_" + b).show("fast", function() {
                                                                    $(this).find("input[name=part_usage_validation_type]").val("BAD_NO");
                                                                    e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                                    o.setPosition()
                                                                })
                                                            }
                                                        }
                                                    }
                                                    break;
                                                default:
                                                    $("#logi_usage_bad_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_simple_" + b).hide("fast");
                                                    $("#part_usage_validate2_" + b).hide("fast");
                                                    $("#logi_usage_laissee_NON_" + b).show("fast", function() {
                                                        e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                        o.setPosition()
                                                    }).find("select").val("").end().find("input[type=radio]").removeAttr("checked")
                                            }
                                        });
                                        $("input[name=logi_usage_bad_yesno_" + b + "]").change(function() {
                                            switch (parseInt($(this).val())) {
                                                case 1:
                                                    $("#logi_usage_laissee_NON_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_simple_" + b).hide("fast");
                                                    $("#logi_part_note2_" + b).val("");
                                                    if ($("#logi_BAD_creer_" + b).val() == "1") {
                                                        $("#logi_usage_laissee_creer_" + b).find("select[name=selgenerique]").load("logistics/get_generiques", function() {
                                                            $(this).val(0)
                                                        });
                                                        $("#logi_usage_laissee_creer_" + b).find("select[name=selfournisseur]").load("logistics/get_fournisseurs", function() {
                                                            $(this).val(0)
                                                        });
                                                        $("#part_usage_validate2_" + b).show("fast", function() {
                                                            $(this).find("input[name=part_usage_validation_type]").val("BAD_CREATE")
                                                        });
                                                        $("#logi_usage_laissee_creer_" + b).show("fast", function() {
                                                            e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                            o.setPosition()
                                                        })
                                                    } else {
                                                        if ($("#logi_BAD_creer_" + b).val() == "2") {
                                                            $("#part_usage_validate2_" + b).show("fast", function() {
                                                                $(this).find("input[name=part_usage_validation_type]").val("BAD_CREATE_SIMPLE")
                                                            });
                                                            $("#logi_usage_laissee_creer_simple_" + b).show("fast", function() {
                                                                e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                                o.setPosition()
                                                            })
                                                        } else {
                                                            $("#part_usage_validate2_" + b).show("fast", function() {
                                                                $(this).find("input[name=part_usage_validation_type]").val("BAD_NO_CREATE");
                                                                e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                                o.setPosition()
                                                            })
                                                        }
                                                    }
                                                    break;
                                                default:
                                                    $("#logi_usage_laissee_creer_" + b).hide("fast");
                                                    $("#logi_usage_laissee_creer_simple_" + b).hide("fast");
                                                    $("#part_usage_validate2_" + b).hide("fast");
                                                    $("#logi_part_note2_" + b).val("");
                                                    $("#part_usage_validate2_" + b).show("fast", function() {
                                                        $(this).find("input[name=part_usage_validation_type]").val("BAD_NO_CREATE");
                                                        e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                        o.setPosition()
                                                    })
                                            }
                                        });
                                        $("#logi_usage_unused_select_" + b).change(function() {
                                            if (parseInt($(this).val()) > 0) {
                                                $("#logi_part_note2_" + b).val($(this).find("option:selected").text() + " : ");
                                                $("#part_usage_validate2_" + b).show("fast", function() {
                                                    $(this).find("input[name=part_usage_validation_type]").val("UNUSED");
                                                    e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                    o.setPosition()
                                                })
                                            } else {
                                                $("#part_usage_validate2_" + b).hide("fast", function() {
                                                    e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                    o.setPosition()
                                                })
                                            }
                                        });
                                        $("#logi_usage_laissee_NON_select_" + b).change(function() {
                                            if (parseInt($(this).val()) > 0) {
                                                $("#logi_part_note2_" + b).val($(this).find("option:selected").text() + " : ");
                                                $("#part_usage_validate2_" + b).show("fast", function() {
                                                    $(this).find("input[name=part_usage_validation_type]").val("USED_NOT_CONSUMED");
                                                    e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                    o.setPosition()
                                                })
                                            } else {
                                                $("#part_usage_validate2_" + b).hide("fast", function() {
                                                    e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                                    o.setPosition()
                                                })
                                            }
                                        });
                                        $("#logi_tab_part_usage2_" + b + " input[name=part_ref]").autocomplete("logistics/get_catalog_item", {
                                            minChars: 3,
                                            max: 100,
                                            scrollHeight: 360,
                                            scrollWidth: 360,
                                            dataType: "json",
                                            extraParams: {
                                                format: "json",
                                                id_partenaire: d.attr("data-id_part"),
                                                id_flux: d.attr("data-type_flux"),
                                                nation: d.attr("data-nation")
                                            },
                                            parse: function(r) {
                                                var p = [];
                                                r = r.result;
                                                for (var q = 0; q < r.length; q++) {
                                                    p[p.length] = {
                                                        data: r[q],
                                                        value: r[q].label,
                                                        result: r[q].value
                                                    }
                                                }
                                                if (r.length === 0) {
                                                    $("#logi_tab_part_usage2_" + b + " input[name=part_ref]").val("");
                                                    $("#logi_tab_part_usage2_" + b + " input[name=part_libelle]").add($("#logi_tab_part_usage2_" + b + " select[name=selgenerique]")).add($("#logi_tab_part_usage2_" + b + " select[name=selfournisseur]")).attr("disabled", "disabled")
                                                }
                                                return p
                                            },
                                            formatItem: function(p) {
                                                return "<b>" + p.value + "</b><br>" + p.libelle + "<br><font size=1>[" + p.fournisseur + "] " + p.generique + "</font>"
                                            }
                                        }).result(function(q, p) {
                                            $("#logi_tab_part_usage2_" + b + " input[name=part_libelle]").val(p.libelle);
                                            $("#logi_tab_part_usage2_" + b + " select[name=selgenerique]").val(p.id_generique);
                                            $("#logi_tab_part_usage2_" + b + " select[name=selfournisseur]").val(p.id_fournisseur)
                                        }).keyup(function(q, p) {
                                            $("#logi_tab_part_usage2_" + b + " input[name=part_libelle]").add($("#logi_tab_part_usage2_" + b + " select[name=selgenerique]")).add($("#logi_tab_part_usage2_" + b + " select[name=selfournisseur]")).val("")
                                        });
                                        $("#logi_tab_part_usage2_" + b + " input[name=part_ref_from_parent]").val($("td:eq(1)", d).text());
                                        $("#logi_tab_part_usage2_" + b + " input[name=part_ref_from_parent]").autocomplete("logistics/get_catalog_item_from_piece", {
                                            minChars: 3,
                                            max: 100,
                                            scrollHeight: 360,
                                            scrollWidth: 360,
                                            dataType: "json",
                                            extraParams: {
                                                format: "json",
                                                id_piece: d.attr("data-id_piece")
                                            },
                                            parse: function(r) {
                                                var p = [];
                                                r = r.result;
                                                for (var q = 0; q < r.length; q++) {
                                                    p[p.length] = {
                                                        data: r[q],
                                                        value: r[q].label,
                                                        result: r[q].value
                                                    }
                                                }
                                                return p
                                            },
                                            formatItem: function(p) {
                                                return "<b>" + p.value + "</b><br>" + p.libelle + "<br><font size=1>[" + p.fournisseur + "] " + p.generique + "</font>"
                                            }
                                        }).result(function(q, p) {
                                            $("#logi_tab_part_usage2_" + b + " input[name=part_id_from_parent]").val(p.id)
                                        }).keyup(function() {
                                            $("#logi_tab_part_usage2_" + b + " input[name=part_id_from_parent]").val("");
                                            if ($(this).val() != "") {
                                                $("#btn_part_usage2_" + b).removeAttr("disabled")
                                            } else {
                                                $("#btn_part_usage2_" + b).attr("disabled", "disabled")
                                            }
                                        });
                                        e.data.fadeIn("fast");
                                        e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                        $("#" + n).fadeIn("fast");
                                        $("#bl_retour").val($("#curbl2").val());
                                        e.container.height($("#logi_part_usage2_" + b).height() + 20);
                                        o.setPosition()
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_change_dest":
                        var n = "logi_tab_change_dest_" + b;
                        $("#logi_part_change_dest_" + b).modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + n).height() + 20,
                                width: $("#" + n).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + n).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(e) {
                                var o = this;
                                e.overlay.fadeIn("fast", function() {
                                    e.container.slideDown("fast", function() {
                                        e.data.fadeIn("fast");
                                        $("#" + n).fadeIn("fast");
                                        $("#logi_seliddepot_change_dest_" + b).load("stock/get_logistic_points_from_inter", {
                                            id_inter: b
                                        }, function() {
                                            $(this).prepend("<option value='0'>Chez le client</option>");
                                            var p = $(this).val(d.attr("data-src_id_depot"));
                                            if (parseInt(p) > 0) {
                                                $(this).val(p)
                                            } else {
                                                $(this).val(0)
                                            }
                                        });
                                        e.container.height($("#" + n).height() + 20);
                                        o.setPosition()
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_order":
                        function f() {
                            var e = "logi_tab_order_" + b;
                            $("#logi_part_order_" + b).modal({
                                autoResize: true,
                                minWidth: 800,
                                minHeight: 600,
                                containerCss: {
                                    height: $("#" + e).height() + 20,
                                    width: $("#" + e).width() + 20,
                                    "-moz-border-radius": "4em 1em 4em 1em"
                                },
                                overlayClose: true,
                                onClose: function(o) {
                                    o.data.fadeOut("fast", function() {
                                        o.container.slideUp("fast", function() {
                                            o.overlay.fadeOut("fast", function() {
                                                $.modal.close();
                                                $("#" + e).hide()
                                            })
                                        })
                                    })
                                },
                                onOpen: function(o) {
                                    var p = this;
                                    o.overlay.fadeIn("fast", function() {
                                        o.container.slideDown("fast", function() {
                                            o.data.fadeIn("fast");
                                            $("#logi_type_order_" + b).val("supplier");
                                            $("tr", "#" + e).show();
                                            $("tr:first > td > p:eq(1)", "#" + e).html("ExpÃ©dition directement par le fournisseur vers un dÃ©pÃ´t TNT.");
                                            $("#" + e).fadeIn("fast");
                                            $("#logi_seliddepot_order_" + b).load("stock/get_logistic_points_from_inter", {
                                                id_inter: b
                                            }, function() {
                                                $(this).val(0)
                                            });
                                            $("#logi_order_number_" + b).val(d.attr("data-order_number"));
                                            o.container.height($("#" + e).height() + 20);
                                            p.setPosition()
                                        })
                                    })
                                },
                                onShow: function(o) {
                                    $("a", o.data).click(function() {
                                        return false
                                    })
                                }
                            })
                        }

                        function g(p, o, e) {
                            var q = "logi_tab_order_" + b;
                            $("#logi_part_order_" + b).modal({
                                autoResize: true,
                                minWidth: 800,
                                minHeight: 600,
                                containerCss: {
                                    height: $("#" + q).height() + 20,
                                    width: $("#" + q).width() + 20,
                                    "-moz-border-radius": "4em 1em 4em 1em"
                                },
                                overlayClose: true,
                                onClose: function(r) {
                                    r.data.fadeOut("fast", function() {
                                        r.container.slideUp("fast", function() {
                                            r.overlay.fadeOut("fast", function() {
                                                $.modal.close();
                                                $("#" + q).hide()
                                            })
                                        })
                                    })
                                },
                                onOpen: function(r) {
                                    var u = this;
                                    r.overlay.fadeIn("fast", function() {
                                        r.container.slideDown("fast", function() {
                                            r.data.fadeIn("fast");
                                            $("#logi_type_order_" + b).val("sap");
                                            $("#logi_order_do_" + b).val(p.account);
                                            $("#logi_order_idn_" + b).val(p.id_nomenclature);
                                            $("#logi_order_ref_" + b).val(o);
                                            $("#logi_order_libelle_" + b).val(e);
                                            $("#logi_order_idf_" + b).val(p.id_fournisseur);
                                            $("#logi_order_tf_" + b).val(p.id_flux);
                                            $("tr:first > td > p:eq(1)", "#" + q).html("ExpÃ©dition via SAP (Goussainville) vers un dÃ©pÃ´t TNT.");
                                            $("tr:eq(1)", "#" + q).add("tr:eq(3)", "#" + q).add("tr:eq(4)", "#" + q).hide();
                                            $("#" + q).fadeIn("fast");
                                            $("#logi_seliddepot_order_" + b).load("stock/get_logistic_points_from_inter", {
                                                id_inter: b
                                            }, function() {
                                                $(this).val(d.attr("data-retour_src_id_depot"))
                                            });
                                            r.container.height($("#" + q).height() + 20);
                                            u.setPosition()
                                        })
                                    })
                                },
                                onShow: function(r) {
                                    $("a", r.data).click(function() {
                                        return false
                                    })
                                }
                            })
                        }
                        blockAllUI();
                        $.post("stock/gouss_detect_part_from_inter2", {
                            id_inter: b,
                            ref: $("td:eq(1)", d).text()
                        }, function(o) {
                            UNblockAllUI();
                            var e = o.result[0];
                            if (typeof e === "undefined") {
                                alert("RÃ©fÃ©rence piÃ¨ce inconnue dans le stock Goussainville PC30Net.\r\n\r\nVous pouvez continuer le processus pour un envoi direct du fournisseur vers un dÃ©pÃ´t.\r\nSinon, suivre la procÃ©dure d'ajout de piÃ¨ce dans SAP.");
                                f()
                            } else {
                                blockAllUI();
                                var p = encodeURIComponent($("td:eq(1)", d).text().replace(/\//g, "~~"));
                                $.post("EDI/sbo/stock_ref/" + p + "/" + e.account, function(r) {
                                    var u = 0;
                                    var v = "";
                                    var q = "";
                                    $(r).find("ROW").each(function() {
                                        var C = parseInt($(this).find("QUANTITY").text()),
                                            w = $(this).find("NAME").text(),
                                            z = $(this).find("NUMBER").text();
                                        if (C > 0) {
                                            u = C;
                                            v = w;
                                            q = z
                                        }
                                    });
                                    if (confirm(u + " piÃ¨ce(s) disponible(s) Ã  Goussainville.\r\n\r\nVoulez-vous transformer la prÃ©conisation en demande d'expÃ©dition SAP ?")) {
                                        g(e, q, v)
                                    } else {
                                        f()
                                    }
                                    UNblockAllUI()
                                }, "xml")
                            }
                        }, "json");
                        break;
                    case "logi_mnu_part_order_cancel":
                        var n = "logi_tab_order_cancel_" + b;
                        $("#logi_part_order_cancel_" + b).modal({
                            autoResize: true,
                            minWidth: 800,
                            minHeight: 600,
                            containerCss: {
                                height: $("#" + n).height() + 20,
                                width: $("#" + n).width() + 20,
                                "-moz-border-radius": "4em 1em 4em 1em"
                            },
                            overlayClose: true,
                            onClose: function(e) {
                                e.data.fadeOut("fast", function() {
                                    e.container.slideUp("fast", function() {
                                        e.overlay.fadeOut("fast", function() {
                                            $.modal.close();
                                            $("#" + n).hide()
                                        })
                                    })
                                })
                            },
                            onOpen: function(e) {
                                var o = this;
                                e.overlay.fadeIn("fast", function() {
                                    e.container.slideDown("fast", function() {
                                        e.data.fadeIn("fast");
                                        $("#" + n).fadeIn("fast");
                                        $("#logi_order_serial_" + b).val(d.attr("data-SN"));
                                        e.container.height($("#" + n).height() + 20);
                                        o.setPosition()
                                    })
                                })
                            },
                            onShow: function(e) {
                                $("a", e.data).click(function() {
                                    return false
                                })
                            }
                        });
                        break;
                    case "logi_mnu_part_detail":
                        $(".btninfo_" + b, d).click();
                        break;
                    case "logi_mnu_part_history":
                        $("#view_mvts_" + b).load("logistics/get_mvts", {
                            id_piece: $("#logi_id_piece_" + b).val(),
                            id_piece_inter: $("#logi_id_piece_inter_" + b).val(),
                            inter_id: b
                        }, function() {
                            $("#view_mvts_" + b).modal({
                                autoResize: true,
                                minWidth: 800,
                                minHeight: 600,
                                containerCss: {
                                    height: $("#tab_view_mvts_" + b).height() + 20,
                                    width: $("#tab_view_mvts_" + b).width() + 80,
                                    "-moz-border-radius": "2em 0em 2em 0em"
                                },
                                overlayClose: true,
                                onClose: function(e) {
                                    e.data.fadeOut("fast", function() {
                                        e.container.slideUp("fast", function() {
                                            e.overlay.fadeOut("fast", function() {
                                                $.modal.close();
                                                $("#tab_view_mvts_" + b).hide()
                                            })
                                        })
                                    })
                                },
                                onOpen: function(e) {
                                    e.overlay.fadeIn("fast", function() {
                                        e.container.slideDown("fast", function() {
                                            e.data.fadeIn("fast");
                                            $("#tab_view_mvts_" + b).fadeIn("fast")
                                        })
                                    })
                                },
                                onShow: function(e) {
                                    $("a", e.data).click(function() {
                                        return false
                                    })
                                }
                            })
                        });
                        break;
                    case "logi_mnu_part_rollback_receive":
                        if (confirm("This will cancel and rollback to previous state. Press OK to continue...")) {
                            console.info($("#logi_id_piece_" + b).val(), $("#logi_id_piece_inter_" + b).val());
                            $.Menu.closeAll();
                            blockAllUI();
                            $.post("stock/rollback_part_reception", {
                                id_piece: $("#logi_id_piece_" + b).val()
                            }, function() {
                                $("#tabparts_" + b).hide("fast").load("logistics/refresh_parts_by_inter", {
                                    inter_id: b
                                }, function() {
                                    $(this).show("fast");
                                    UNblockAllUI();
                                    init_parts_inter(b)
                                })
                            })
                        }
                        break;
                    case "logi_mnu_part_rollback_usage":
                        if (confirm("This will cancel and rollback to previous state. Press OK to continue...")) {
                            console.info($("#logi_id_piece_" + b).val(), $("#logi_id_piece_inter_" + b).val());
                            $.Menu.closeAll();
                            blockAllUI();
                            $.post("stock/rollback_part_usage", {
                                id_piece: $("#logi_id_piece_" + b).val()
                            }, function() {
                                $("#tabparts_" + b).hide("fast").load("logistics/refresh_parts_by_inter", {
                                    inter_id: b
                                }, function() {
                                    $(this).show("fast");
                                    UNblockAllUI();
                                    init_parts_inter(b)
                                })
                            })
                        }
                        break;
                    default:
                        alert('you clicked item "' + $(this).find("span").attr("id") + "-" + $(this).text() + '"')
                }
            }
        };
        $("#menu-items_" + b).find("#mnurollback_receive").hide();
        $("#menu-items_" + b).find("#mnurollback_usage").hide();
        $("#menu-items_" + b).find("#mnucommande").hide();
        $("#menu-items_" + b).find("#mnucommande_cancel").hide();
        $("#menu-items_" + b).find("#mnureception").hide();
        $("#menu-items_" + b).find("#mnunoreception").hide();
        $("#menu-items_" + b).find("#mnunoreception2").hide();
        $("#menu-items_" + b).find("#mnuretour").hide();
        $("#menu-items_" + b).find("#mnuutilisation").hide();
        $("#menu-items_" + b).find("#mnuchangedest").hide();
        if (parseInt(d.attr("data-code_etat_logistique")) == 0 && parseInt(d.attr("data-code")) == 0) {
            $("#menu-items_" + b).find("#mnucommande").show();
            $("#menu-items_" + b).find("#mnucommande_cancel").show()
        } else {
            if (parseInt(d.attr("data-code_etat_logistique")) == 1 && parseInt(d.attr("data-src_etat_mvt")) == 0) {
                $("#menu-items_" + b).find("#mnuchangedest").show()
            } else {
                if (parseInt(d.attr("data-code_etat_logistique")) == 24 && parseInt(d.attr("data-code")) == 0) {
                    console.info(bit_set_b, bit_set_b & 128, bit_set_b & 127, (bit_set_b & 128), (bit_set_b & 128) == 128);
                    if (regional_version == "IT01" || regional_version == "IB01" || regional_version == "BN01") {
                        if (parseInt(d.attr("data-state")) !== 3 && parseInt(d.attr("data-state")) !== 4) {
                            $("#menu-items_" + b).find("#mnurollback_usage").show()
                        }
                    } else {
                        if ((bit_set_b & 128) == 128) {
                            $("#menu-items_" + b).find("#mnurollback_usage").show()
                        }
                    }
                } else {
                    if ($("#logi_id_employe_" + b).val() > 0) {
                        switch (parseInt(d.attr("data-code"))) {
                            case 0:
                            case 1:
                                $("#menu-items_" + b).find("#mnureception").show();
                                if (d.attr("data-etat") == "BAD") {
                                    $("#menu-items_" + b).find("#mnunoreception").show()
                                }
                                break;
                            case 2:
                                console.info(bit_set_b, bit_set_b & 128, bit_set_b & 127, (bit_set_b & 128), (bit_set_b & 128) == 128);
                                if (regional_version == "IT01" || regional_version == "IB01" || regional_version == "BN01") {
                                    if (parseInt(d.attr("data-state")) !== 3 && parseInt(d.attr("data-state")) !== 4) {
                                        $("#menu-items_" + b).find("#mnurollback_receive").show()
                                    }
                                } else {
                                    if ((bit_set_b & 128) == 128) {
                                        $("#menu-items_" + b).find("#mnurollback_receive").show()
                                    }
                                }
                                $("#menu-items_" + b).find("#mnuutilisation").show();
                                break;
                            case 3:
                                if (d.attr("data-etat") != "BAD") {
                                    console.info(bit_set_b, bit_set_b & 128, bit_set_b & 127, (bit_set_b & 128), (bit_set_b & 128) == 128);
                                    if (regional_version == "IT01" || regional_version == "IB01" || regional_version == "BN01") {
                                        if (parseInt(d.attr("data-state")) !== 3 && parseInt(d.attr("data-state")) !== 4) {
                                            $("#menu-items_" + b).find("#mnurollback_usage").show()
                                        }
                                    } else {
                                        if ((bit_set_b & 128) == 128) {
                                            $("#menu-items_" + b).find("#mnurollback_usage").show()
                                        }
                                    }
                                }
                                $("#menu-items_" + b).find("#mnuretour").show();
                                break;
                            default:
                        }
                    } else {
                        if ((user_group_id == 1) || (user_group_id == 3)) {
                            if (parseInt(d.attr("data-code")) == 1) {
                                $("#menu-items_" + b).find("#mnunoreception2").show()
                            }
                        }
                    }
                }
            }
        }
        $(this).xmenu(c, "#menu-items_" + b)
    });
    $("#tabparts_" + b).find("a.show_bl").click(function(f) {
        f.preventDefault();
        var d = $(this).parents("#row-part");
        if (d.attr("data-order_tracking_enabled") && regional_version == "IT01") {
            var c = '<div>\n                                                    <table border="1" cellpadding="3" cellspacing="0" bordercolor="#FFFFFF" width="100%" >\n                                                        <thead class="ui-widget-header ui-state-default" style="font-variant:small-caps">\n                                                            <tr>\n                                                                <th style="text-align: center">LETTERA DI VETTURA</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                           <tr>\n                                                                <td style="text-align:center" >' + d.attr("data-order_ldv") + '</td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table><br><br><br><br>\n                                                    <table border="1" cellpadding="3" cellspacing="0" bordercolor="#FFFFFF" width="100%" >\n                                                        <thead class="ui-widget-header ui-state-default" style="font-variant:small-caps">\n                                                            <tr>\n                                                                <th style="text-align: center">SPEDITO A</th>\n                                                                <th style="text-align: center">RICEVUTO DA</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                           <tr>\n                                                                <td style="text-align:center" >' + d.attr("data-order_sender_city") + '</td>\n                                                                <td style="text-align:center" >' + d.attr("data-order_receiver_city") + '</td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table><br><br><br><br>\n                                                    <table border="1" cellpadding="3" cellspacing="0" bordercolor="#FFFFFF" width="100%" >\n                                                        <thead class="ui-widget-header ui-state-default" style="font-variant:small-caps">\n                                                            <tr>\n                                                                <th style="text-align: center">STATO SPEDIZIONE</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                           <tr>\n                                                                <td style="text-align:center" >' + d.attr("data-order_consignment_state") + "</td>\n                                                            </tr>\n                                                        </tbody>\n                                                    </table>\n                                                 </div>";
            $.modal("<a>" + c + "</a><br>", {
                opacity: 30,
                overlayCss: {
                    backgroundColor: "#000"
                },
                minHeight: 200,
                minWidth: 200,
                containerCss: {
                    height: 400,
                    padding: 2,
                    width: 750
                },
                overlayClose: true,
                onOpen: function(e) {
                    e.overlay.fadeIn("fast", function() {
                        e.data.hide();
                        e.container.fadeIn("fast", function() {
                            e.data.fadeIn("fast")
                        })
                    })
                },
                onClose: function(e) {
                    e.data.hide();
                    e.container.fadeOut("fast", function() {
                        e.overlay.fadeOut("fast", function() {
                            $.modal.close()
                        })
                    })
                }
            })
        } else {
            $.modal('<a href="' + d.attr("data-url") + '" target="_blank">Open in a new tab</a><br><iframe src="' + d.attr("data-url") + '" height="400" width="750" style="border:0">', {
                opacity: 30,
                overlayCss: {
                    backgroundColor: "#000"
                },
                minHeight: 200,
                minWidth: 200,
                containerCss: {
                    height: 400,
                    padding: 2,
                    width: 750
                },
                overlayClose: true,
                onOpen: function(e) {
                    e.overlay.fadeIn("fast", function() {
                        e.data.hide();
                        e.container.fadeIn("fast", function() {
                            e.data.fadeIn("fast")
                        })
                    })
                },
                onClose: function(e) {
                    e.data.hide();
                    e.container.fadeOut("fast", function() {
                        e.overlay.fadeOut("fast", function() {
                            $.modal.close()
                        })
                    })
                }
            })
        }
    });
    $("#tabparts_" + b).find("a.check_stock").click(function(f) {
        f.preventDefault();
        var d = $(this).parents("#row-part");
        var c = d.attr("data-id_nomenclature");
        blockAllUI();
        $.post("EDI/sbo/stock_ref_from_id/" + c, function(e) {
            $(e).find("PART").each(function() {
                var m = parseInt($(this).find("QUANTITY").text()),
                    g = $(this).find("NAME").text(),
                    h = $(this).find("NUMBER").text();
                $.jGrowl("<strong>" + m + " piÃ¨ce(s) disponible(s)</strong> pour :<hr>" + h + "<hr>[" + g + "]", {
                    life: 10000,
                    header: "RÃ©sultat dispo stock",
                    theme: "jGrowlInfo"
                })
            });
            UNblockAllUI()
        }, "xml")
    });
    $(".btninfo_" + b).tooltip({
        bodyHandler: function() {
            var c = "<span class=''>" + $(this).attr("tip") + "</span>";
            return c
        },
        track: true,
        delay: 0,
        showURL: false,
        fade: 0
    });
    $(".btninfo_" + b).click(function() {
        var c = $(this).attr("tip");
        var e = $(this).attr("data-map_add");
        var d = $(this).attr("data-map_address");
        $.modal(c, {
            opacity: 30,
            overlayCss: {
                backgroundColor: "#000"
            },
            minHeight: 250,
            minWidth: 400,
            containerCss: {
                padding: 2,
                "-moz-border-radius": "0em 1em 4em 1em"
            },
            overlayClose: true,
            onOpen: function(f) {
                f.overlay.fadeIn("fast", function() {
                    f.data.hide();
                    f.container.fadeIn("fast", function() {
                        f.data.fadeIn("fast");
                        if (parseInt(e) > 0) {
                            f.data.append("<div id='map_" + e + "' style='width: 100%; height: 300px; background-color: rgb(229, 227, 223);'>Carte en chargement</div>");
                            var n = new Array();
                            n = d.split(";");
                            var m = "";
                            try {
                                m = new GMap2(document.getElementById("map_" + e))
                            } catch (h) {
                                return false
                            }
                            var g = new GDirections(m);
                            g.loadFromWaypoints(n, {
                                locale: "fr"
                            })
                        }
                    })
                })
            },
            onClose: function(f) {
                f.data.hide();
                f.container.fadeOut("fast", function() {
                    f.overlay.fadeOut("fast", function() {
                        $.modal.close()
                    })
                })
            }
        })
    })
}

function isIPhone() {
    return (new RegExp("iPhone", "i")).test(navigator.userAgent)
}

function sig_clear(d, e) {
    var c = document.getElementById(d);
    var b = c.getContext("2d");
    b.clearRect(0, 0, c.width, c.height);
    if ($("#" + d).next().is("img")) {
        $("#" + d).next().hide("fast").remove()
    }
    $("#" + d).data("points", []);
    $("#" + d).attr("data-saved", false);
    $("#" + d).show().attr("width", "330");
    $("#sig_send_" + e).hide("fast")
}

function sig_save(b, c, d) {
    $.post("signature/save_signature", {
        ref_type: b,
        ref_id: d,
        img_type: "image/png",
        img_data: $("#" + c)[0].toDataURL("image/png"),
        img_points: JSON.stringify($("#" + c).data("points"))
    }, function() {
        $("#" + c).attr("data-saved", true);
        $("#" + c).hide().after($("<img></img>").attr("src", $("#" + c)[0].toDataURL("image/png")).attr("width", "330"));
        if ($("#sig_" + d).attr("data-saved") && $("#sig2_" + d).attr("data-saved")) {
            $("#sig_send_" + d).show("fast")
        }
    })
}

function sig_pdf(c) {
    var m = $(c).attr("data-client_id");
    var e = $(c).attr("data-inter_id");
    var d = $(c).attr("data-action");
    var h = $("#sig_email1_" + e).val().replace("@", "..");
    var g = ($("#sig_email2_" + e).length) ? $("#sig_email2_" + e).val().replace("@", "..") : "";
    if ($("#sig_" + e).attr("data-saved") && $("#sig2_" + e).attr("data-saved")) {
        var c = $("#formclient_" + m + "_intervention_" + e).find("select[name=partner_id]");
        var b = c.children("option:eq(" + c.get(0).selectedIndex + ")");
        var f = b.text() + " : " + e;
        f = f.replace(new RegExp("@", "g"), ".");
        f = f.replace(new RegExp("/", "g"), ".");
        f = f.replace(new RegExp("=", "g"), ".");
        f = f.replace(new RegExp('"', "g"), ".");
        if (d == "send") {
            if (h == "" || h == "NULL") {
                alert("Please enter a destination address");
                return false
            }
            OpenNewPDFWindow("signature/make_pdf/1/0/pdf/" + e + "/" + h + "/" + g + "/" + f)
        } else {
            OpenNewPDFWindow("signature/make_pdf/0/1/pdf/" + e + "///")
        }
    }
}

function sig_urlencode(h) {
    var d = "";
    var b = 0;
    h = h.toString();
    var g = /(^[a-zA-Z0-9_.]*)/;
    while (b < h.length) {
        var e = g.exec(h.substr(b));
        if (e != null && e.length > 1 && e[1] != "") {
            d += e[1];
            b += e[1].length
        } else {
            if (h[b] == " ") {
                d += "+"
            } else {
                var c = h.charCodeAt(b);
                var f = c.toString(16);
                d += "%" + (f.length < 2 ? "0" : "") + f.toUpperCase()
            }
            b++
        }
    }
    return d
}

function OpenNewPDFWindow(c) {
    pdfwindowv = window.open("printing/wait/" + c, "pdfwindown", "toolbar=0,location=0,directories=0,status=0,menubar=0,scrollbars=0,resizable=1,history=0,width=450,height=200", true);
    try {
        pdfwindowv.focus()
    } catch (b) {}
    try {
        pdfwindowv.scrollTo(0, 0)
    } catch (b) {}
    try {
        pdfwindowv.focus()
    } catch (b) {}
    try {
        pdfwindowv.scrollTo(0, 0)
    } catch (b) {}
    return false
}

function sig_addCommand(b) {}

function sig_getCanvasLocalCoordinates(c, e, d) {
    var b = $(c).offset();
    return ({
        x: (e - b.left),
        y: (d - b.top)
    })
}

function sig_getTouchEvent(b) {
    return (isIPhone() ? window.event.targetTouches[0] : b)
}

function sig_onTouchStart(d) {
    var e = sig_getTouchEvent(d);
    var b = sig_getCanvasLocalCoordinates(d.target, e.pageX, e.pageY);
    lastPenPoint = {
        x: b.x,
        y: b.y
    };
    var c = d.target.getContext("2d");
    c.beginPath();
    c.moveTo(lastPenPoint.x, lastPenPoint.y);
    sig_addCommand("start:" + (lastPenPoint.x + "," + lastPenPoint.y));
    $(d.target).bind((isIPhone() ? "touchmove" : "mousemove"), sig_onTouchMove);
    $(d.target).bind((isIPhone() ? "touchend" : "mouseup"), sig_onTouchEnd)
}

function sig_onTouchMove(e) {
    var f = sig_getTouchEvent(e);
    var b = sig_getCanvasLocalCoordinates(e.target, f.pageX, f.pageY);
    if (b.x > $(e.target).width() || b.x <= 5 || b.y > $(e.target).height() || b.y <= 5) {
        sig_onTouchEnd(e);
        return
    }
    var c = $(e.target).data("points");
    c.push({
        lx: b.x,
        ly: b.y,
        mx: lastPenPoint.x,
        my: lastPenPoint.y
    });
    lastPenPoint = {
        x: b.x,
        y: b.y
    };
    var d = e.target.getContext("2d");
    d.lineTo(lastPenPoint.x, lastPenPoint.y);
    d.stroke();
    sig_addCommand("lineTo:" + (lastPenPoint.x + "," + lastPenPoint.y))
}

function sig_onTouchEnd(b) {
    $(b.target).unbind((isIPhone() ? "touchmove" : "mousemove"));
    $(b.target).unbind((isIPhone() ? "touchend" : "mouseup"))
}
dhtmlx = function(c) {
    for (var b in c) {
        dhtmlx[b] = c[b]
    }
    return dhtmlx
};
dhtmlx.extend_api = function(b, e, d) {
    var c = window[b];
    if (!c) {
        return
    }
    window[b] = function(h) {
        if (h && typeof h == "object" && !h.tagName && !(h instanceof Array)) {
            var g = c.apply(this, (e._init ? e._init(h) : arguments));
            for (var f in dhtmlx) {
                if (e[f]) {
                    this[e[f]](dhtmlx[f])
                }
            }
            for (var f in h) {
                if (e[f]) {
                    this[e[f]](h[f])
                } else {
                    if (f.indexOf("on") == 0) {
                        this.attachEvent(f, h[f])
                    }
                }
            }
        } else {
            var g = c.apply(this, arguments)
        }
        if (e._patch) {
            e._patch(this)
        }
        return g || this
    };
    window[b].prototype = c.prototype;
    if (d) {
        dhtmlXHeir(window[b].prototype, d)
    }
};
dhtmlxAjax = {
    get: function(b, d) {
        var c = new dtmlXMLLoaderObject(true);
        c.async = (arguments.length < 3);
        c.waitCall = d;
        c.loadXML(b);
        return c
    },
    post: function(b, d, e) {
        var c = new dtmlXMLLoaderObject(true);
        c.async = (arguments.length < 4);
        c.waitCall = e;
        c.loadXML(b, true, d);
        return c
    },
    getSync: function(b) {
        return this.get(b, null, true)
    },
    postSync: function(b, c) {
        return this.post(b, c, null, true)
    }
};

function dtmlXMLLoaderObject(c, e, d, b) {
    this.xmlDoc = "";
    if (typeof(d) != "undefined") {
        this.async = d
    } else {
        this.async = true
    }
    this.onloadAction = c || null;
    this.mainObject = e || null;
    this.waitCall = null;
    this.rSeed = b || false;
    return this
}
dtmlXMLLoaderObject.prototype.waitLoadFunction = function(c) {
    var b = true;
    this.check = function() {
        if ((c) && (c.onloadAction != null)) {
            if ((!c.xmlDoc.readyState) || (c.xmlDoc.readyState == 4)) {
                if (!b) {
                    return
                }
                b = false;
                if (typeof c.onloadAction == "function") {
                    c.onloadAction(c.mainObject, null, null, null, c)
                }
                if (c.waitCall) {
                    c.waitCall.call(this, c);
                    c.waitCall = null
                }
            }
        }
    };
    return this.check
};
dtmlXMLLoaderObject.prototype.getXMLTopNode = function(d, b) {
    if (this.xmlDoc.responseXML) {
        var c = this.xmlDoc.responseXML.getElementsByTagName(d);
        if (c.length == 0 && d.indexOf(":") != -1) {
            var c = this.xmlDoc.responseXML.getElementsByTagName((d.split(":"))[1])
        }
        var f = c[0]
    } else {
        var f = this.xmlDoc.documentElement
    }
    if (f) {
        this._retry = false;
        return f
    }
    if ((_isIE) && (!this._retry)) {
        var e = this.xmlDoc.responseText;
        var b = this.xmlDoc;
        this._retry = true;
        this.xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
        this.xmlDoc.async = false;
        this.xmlDoc.loadXML(e);
        return this.getXMLTopNode(d, b)
    }
    dhtmlxError.throwError("LoadXML", "Incorrect XML", [(b || this.xmlDoc), this.mainObject]);
    return document.createElement("DIV")
};
dtmlXMLLoaderObject.prototype.loadXMLString = function(c) {
    try {
        var d = new DOMParser();
        this.xmlDoc = d.parseFromString(c, "text/xml")
    } catch (b) {
        this.xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
        this.xmlDoc.async = this.async;
        this.xmlDoc.loadXML(c)
    }
    this.onloadAction(this.mainObject, null, null, null, this);
    if (this.waitCall) {
        this.waitCall();
        this.waitCall = null
    }
};
dtmlXMLLoaderObject.prototype.loadXML = function(d, c, b, e) {
    if (this.rSeed) {
        d += ((d.indexOf("?") != -1) ? "&" : "?") + "a_dhx_rSeed=" + (new Date()).valueOf()
    }
    this.filePath = d;
    if ((!_isIE) && (window.XMLHttpRequest)) {
        this.xmlDoc = new XMLHttpRequest()
    } else {
        this.xmlDoc = new ActiveXObject("Microsoft.XMLHTTP")
    }
    if (this.async) {
        this.xmlDoc.onreadystatechange = new this.waitLoadFunction(this)
    }
    this.xmlDoc.open(c ? "POST" : "GET", d, this.async);
    if (e) {
        this.xmlDoc.setRequestHeader("User-Agent", "dhtmlxRPC v0.1 (" + navigator.userAgent + ")");
        this.xmlDoc.setRequestHeader("Content-type", "text/xml")
    } else {
        if (c) {
            this.xmlDoc.setRequestHeader("Content-type", "application/x-www-form-urlencoded")
        }
    }
    this.xmlDoc.setRequestHeader("X-Requested-With", "XMLHttpRequest");
    this.xmlDoc.send(null || b);
    if (!this.async) {
        (new this.waitLoadFunction(this))()
    }
};
dtmlXMLLoaderObject.prototype.destructor = function() {
    this.onloadAction = null;
    this.mainObject = null;
    this.xmlDoc = null;
    return null
};
dtmlXMLLoaderObject.prototype.xmlNodeToJSON = function(e) {
    var d = {};
    for (var c = 0; c < e.attributes.length; c++) {
        d[e.attributes[c].name] = e.attributes[c].value
    }
    d._tagvalue = e.firstChild ? e.firstChild.nodeValue : "";
    for (var c = 0; c < e.childNodes.length; c++) {
        var b = e.childNodes[c].tagName;
        if (b) {
            if (!d[b]) {
                d[b] = []
            }
            d[b].push(this.xmlNodeToJSON(e.childNodes[c]))
        }
    }
    return d
};

function callerFunction(b, c) {
    this.handler = function(d) {
        if (!d) {
            d = window.event
        }
        b(d, c);
        return true
    };
    return this.handler
}

function getAbsoluteLeft(b) {
    return getOffset(b).left
}

function getAbsoluteTop(b) {
    return getOffset(b).top
}

function getOffsetSum(b) {
    var d = 0,
        c = 0;
    while (b) {
        d = d + parseInt(b.offsetTop);
        c = c + parseInt(b.offsetLeft);
        b = b.offsetParent
    }
    return {
        top: d,
        left: c
    }
}

function getOffsetRect(e) {
    var h = e.getBoundingClientRect();
    var m = document.body;
    var c = document.documentElement;
    var b = window.pageYOffset || c.scrollTop || m.scrollTop;
    var f = window.pageXOffset || c.scrollLeft || m.scrollLeft;
    var g = c.clientTop || m.clientTop || 0;
    var n = c.clientLeft || m.clientLeft || 0;
    var o = h.top + b - g;
    var d = h.left + f - n;
    return {
        top: Math.round(o),
        left: Math.round(d)
    }
}

function getOffset(b) {
    if (b.getBoundingClientRect && !_isChrome) {
        return getOffsetRect(b)
    } else {
        return getOffsetSum(b)
    }
}

function convertStringToBoolean(b) {
    if (typeof(b) == "string") {
        b = b.toLowerCase()
    }
    switch (b) {
        case "1":
        case "true":
        case "yes":
        case "y":
        case 1:
        case true:
            return true;
            break;
        default:
            return false
    }
}

function getUrlSymbol(b) {
    if (b.indexOf("?") != -1) {
        return "&"
    } else {
        return "?"
    }
}

function dhtmlDragAndDropObject() {
    if (window.dhtmlDragAndDrop) {
        return window.dhtmlDragAndDrop
    }
    this.lastLanding = 0;
    this.dragNode = 0;
    this.dragStartNode = 0;
    this.dragStartObject = 0;
    this.tempDOMU = null;
    this.tempDOMM = null;
    this.waitDrag = 0;
    window.dhtmlDragAndDrop = this;
    return this
}
dhtmlDragAndDropObject.prototype.removeDraggableItem = function(b) {
    b.onmousedown = null;
    b.dragStarter = null;
    b.dragLanding = null
};
dhtmlDragAndDropObject.prototype.addDraggableItem = function(b, c) {
    b.onmousedown = this.preCreateDragCopy;
    b.dragStarter = c;
    this.addDragLanding(b, c)
};
dhtmlDragAndDropObject.prototype.addDragLanding = function(b, c) {
    b.dragLanding = c
};
dhtmlDragAndDropObject.prototype.preCreateDragCopy = function(b) {
    if ((b || event) && (b || event).button == 2) {
        return
    }
    if (window.dhtmlDragAndDrop.waitDrag) {
        window.dhtmlDragAndDrop.waitDrag = 0;
        document.body.onmouseup = window.dhtmlDragAndDrop.tempDOMU;
        document.body.onmousemove = window.dhtmlDragAndDrop.tempDOMM;
        return false
    }
    window.dhtmlDragAndDrop.waitDrag = 1;
    window.dhtmlDragAndDrop.tempDOMU = document.body.onmouseup;
    window.dhtmlDragAndDrop.tempDOMM = document.body.onmousemove;
    window.dhtmlDragAndDrop.dragStartNode = this;
    window.dhtmlDragAndDrop.dragStartObject = this.dragStarter;
    document.body.onmouseup = window.dhtmlDragAndDrop.preCreateDragCopy;
    document.body.onmousemove = window.dhtmlDragAndDrop.callDrag;
    window.dhtmlDragAndDrop.downtime = new Date().valueOf();
    if ((b) && (b.preventDefault)) {
        b.preventDefault();
        return false
    }
    return false
};
dhtmlDragAndDropObject.prototype.callDrag = function(d) {
    if (!d) {
        d = window.event
    }
    dragger = window.dhtmlDragAndDrop;
    if ((new Date()).valueOf() - dragger.downtime < 100) {
        return
    }
    if ((d.button == 0) && (_isIE)) {
        return dragger.stopDrag()
    }
    if (!dragger.dragNode && dragger.waitDrag) {
        dragger.dragNode = dragger.dragStartObject._createDragNode(dragger.dragStartNode, d);
        if (!dragger.dragNode) {
            return dragger.stopDrag()
        }
        dragger.dragNode.onselectstart = function() {
            return false
        };
        dragger.gldragNode = dragger.dragNode;
        document.body.appendChild(dragger.dragNode);
        document.body.onmouseup = dragger.stopDrag;
        dragger.waitDrag = 0;
        dragger.dragNode.pWindow = window;
        dragger.initFrameRoute()
    }
    if (dragger.dragNode.parentNode != window.document.body) {
        var b = dragger.gldragNode;
        if (dragger.gldragNode.old) {
            b = dragger.gldragNode.old
        }
        b.parentNode.removeChild(b);
        var c = dragger.dragNode.pWindow;
        if (_isIE) {
            var g = document.createElement("Div");
            g.innerHTML = dragger.dragNode.outerHTML;
            dragger.dragNode = g.childNodes[0]
        } else {
            dragger.dragNode = dragger.dragNode.cloneNode(true)
        }
        dragger.dragNode.pWindow = window;
        dragger.gldragNode.old = dragger.dragNode;
        document.body.appendChild(dragger.dragNode);
        c.dhtmlDragAndDrop.dragNode = dragger.dragNode
    }
    dragger.dragNode.style.left = d.clientX + 15 + (dragger.fx ? dragger.fx * (-1) : 0) + (document.body.scrollLeft || document.documentElement.scrollLeft) + "px";
    dragger.dragNode.style.top = d.clientY + 3 + (dragger.fy ? dragger.fy * (-1) : 0) + (document.body.scrollTop || document.documentElement.scrollTop) + "px";
    if (!d.srcElement) {
        var f = d.target
    } else {
        f = d.srcElement
    }
    dragger.checkLanding(f, d)
};
dhtmlDragAndDropObject.prototype.calculateFramePosition = function(f) {
    if (window.name) {
        var d = parent.frames[window.name].frameElement.offsetParent;
        var e = 0;
        var c = 0;
        while (d) {
            e += d.offsetLeft;
            c += d.offsetTop;
            d = d.offsetParent
        }
        if ((parent.dhtmlDragAndDrop)) {
            var b = parent.dhtmlDragAndDrop.calculateFramePosition(1);
            e += b.split("_")[0] * 1;
            c += b.split("_")[1] * 1
        }
        if (f) {
            return e + "_" + c
        } else {
            this.fx = e
        }
        this.fy = c
    }
    return "0_0"
};
dhtmlDragAndDropObject.prototype.checkLanding = function(c, b) {
    if ((c) && (c.dragLanding)) {
        if (this.lastLanding) {
            this.lastLanding.dragLanding._dragOut(this.lastLanding)
        }
        this.lastLanding = c;
        this.lastLanding = this.lastLanding.dragLanding._dragIn(this.lastLanding, this.dragStartNode, b.clientX, b.clientY, b);
        this.lastLanding_scr = (_isIE ? b.srcElement : b.target)
    } else {
        if ((c) && (c.tagName != "BODY")) {
            this.checkLanding(c.parentNode, b)
        } else {
            if (this.lastLanding) {
                this.lastLanding.dragLanding._dragOut(this.lastLanding, b.clientX, b.clientY, b)
            }
            this.lastLanding = 0;
            if (this._onNotFound) {
                this._onNotFound()
            }
        }
    }
};
dhtmlDragAndDropObject.prototype.stopDrag = function(c, d) {
    dragger = window.dhtmlDragAndDrop;
    if (!d) {
        dragger.stopFrameRoute();
        var b = dragger.lastLanding;
        dragger.lastLanding = null;
        if (b) {
            b.dragLanding._drag(dragger.dragStartNode, dragger.dragStartObject, b, (_isIE ? event.srcElement : c.target))
        }
    }
    dragger.lastLanding = null;
    if ((dragger.dragNode) && (dragger.dragNode.parentNode == document.body)) {
        dragger.dragNode.parentNode.removeChild(dragger.dragNode)
    }
    dragger.dragNode = 0;
    dragger.gldragNode = 0;
    dragger.fx = 0;
    dragger.fy = 0;
    dragger.dragStartNode = 0;
    dragger.dragStartObject = 0;
    document.body.onmouseup = dragger.tempDOMU;
    document.body.onmousemove = dragger.tempDOMM;
    dragger.tempDOMU = null;
    dragger.tempDOMM = null;
    dragger.waitDrag = 0
};
dhtmlDragAndDropObject.prototype.stopFrameRoute = function(d) {
    if (d) {
        window.dhtmlDragAndDrop.stopDrag(1, 1)
    }
    for (var b = 0; b < window.frames.length; b++) {
        try {
            if ((window.frames[b] != d) && (window.frames[b].dhtmlDragAndDrop)) {
                window.frames[b].dhtmlDragAndDrop.stopFrameRoute(window)
            }
        } catch (c) {}
    }
    try {
        if ((parent.dhtmlDragAndDrop) && (parent != window) && (parent != d)) {
            parent.dhtmlDragAndDrop.stopFrameRoute(window)
        }
    } catch (c) {}
};
dhtmlDragAndDropObject.prototype.initFrameRoute = function(d, f) {
    if (d) {
        window.dhtmlDragAndDrop.preCreateDragCopy({});
        window.dhtmlDragAndDrop.dragStartNode = d.dhtmlDragAndDrop.dragStartNode;
        window.dhtmlDragAndDrop.dragStartObject = d.dhtmlDragAndDrop.dragStartObject;
        window.dhtmlDragAndDrop.dragNode = d.dhtmlDragAndDrop.dragNode;
        window.dhtmlDragAndDrop.gldragNode = d.dhtmlDragAndDrop.dragNode;
        window.document.body.onmouseup = window.dhtmlDragAndDrop.stopDrag;
        window.waitDrag = 0;
        if (((!_isIE) && (f)) && ((!_isFF) || (_FFrv < 1.8))) {
            window.dhtmlDragAndDrop.calculateFramePosition()
        }
    }
    try {
        if ((parent.dhtmlDragAndDrop) && (parent != window) && (parent != d)) {
            parent.dhtmlDragAndDrop.initFrameRoute(window)
        }
    } catch (c) {}
    for (var b = 0; b < window.frames.length; b++) {
        try {
            if ((window.frames[b] != d) && (window.frames[b].dhtmlDragAndDrop)) {
                window.frames[b].dhtmlDragAndDrop.initFrameRoute(window, ((!d || f) ? 1 : 0))
            }
        } catch (c) {}
    }
};
var _isFF = false;
var _isIE = false;
var _isOpera = false;
var _isKHTML = false;
var _isMacOS = false;
var _isChrome = false;
if (navigator.userAgent.indexOf("Macintosh") != -1) {
    _isMacOS = true
}
if (navigator.userAgent.toLowerCase().indexOf("chrome") > -1) {
    _isChrome = true
}
if ((navigator.userAgent.indexOf("Safari") != -1) || (navigator.userAgent.indexOf("Konqueror") != -1)) {
    var _KHTMLrv = parseFloat(navigator.userAgent.substr(navigator.userAgent.indexOf("Safari") + 7, 5));
    if (_KHTMLrv > 525) {
        _isFF = true;
        var _FFrv = 1.9
    } else {
        _isKHTML = true
    }
} else {
    if (navigator.userAgent.indexOf("Opera") != -1) {
        _isOpera = true;
        _OperaRv = parseFloat(navigator.userAgent.substr(navigator.userAgent.indexOf("Opera") + 6, 3))
    } else {
        if (navigator.appName.indexOf("Microsoft") != -1) {
            _isIE = true;
            if (navigator.appVersion.indexOf("MSIE 8.0") != -1 && document.compatMode != "BackCompat") {
                _isIE = 8
            }
        } else {
            _isFF = true;
            var _FFrv = parseFloat(navigator.userAgent.split("rv:")[1])
        }
    }
}
dtmlXMLLoaderObject.prototype.doXPath = function(d, f, e, n) {
    if (_isKHTML || (!_isIE && !window.XPathResult)) {
        return this.doXPathOpera(d, f)
    }
    if (_isIE) {
        if (!f) {
            if (!this.xmlDoc.nodeName) {
                f = this.xmlDoc.responseXML
            } else {
                f = this.xmlDoc
            }
        }
        if (!f) {
            dhtmlxError.throwError("LoadXML", "Incorrect XML", [(f || this.xmlDoc), this.mainObject])
        }
        if (e != null) {
            f.setProperty("SelectionNamespaces", "xmlns:xsl='" + e + "'")
        }
        if (n == "single") {
            return f.selectSingleNode(d)
        } else {
            return f.selectNodes(d) || new Array(0)
        }
    } else {
        var b = f;
        if (!f) {
            if (!this.xmlDoc.nodeName) {
                f = this.xmlDoc.responseXML
            } else {
                f = this.xmlDoc
            }
        }
        if (!f) {
            dhtmlxError.throwError("LoadXML", "Incorrect XML", [(f || this.xmlDoc), this.mainObject])
        }
        if (f.nodeName.indexOf("document") != -1) {
            b = f
        } else {
            b = f;
            f = f.ownerDocument
        }
        var h = XPathResult.ANY_TYPE;
        if (n == "single") {
            h = XPathResult.FIRST_ORDERED_NODE_TYPE
        }
        var g = new Array();
        var c = f.evaluate(d, b, function(o) {
            return e
        }, h, null);
        if (h == XPathResult.FIRST_ORDERED_NODE_TYPE) {
            return c.singleNodeValue
        }
        var m = c.iterateNext();
        while (m) {
            g[g.length] = m;
            m = c.iterateNext()
        }
        return g
    }
};

function _dhtmlxError(c, b, d) {
    if (!this.catches) {
        this.catches = new Array()
    }
    return this
}
_dhtmlxError.prototype.catchError = function(c, b) {
    this.catches[c] = b
};
_dhtmlxError.prototype.throwError = function(c, b, d) {
    if (this.catches[c]) {
        return this.catches[c](c, b, d)
    }
    if (this.catches.ALL) {
        return this.catches.ALL(c, b, d)
    }
    alert("Error type: " + arguments[0] + "\nDescription: " + arguments[1]);
    return null
};
window.dhtmlxError = new _dhtmlxError();
dtmlXMLLoaderObject.prototype.doXPathOpera = function(d, b) {
    var f = d.replace(/[\/]+/gi, "/").split("/");
    var e = null;
    var c = 1;
    if (!f.length) {
        return []
    }
    if (f[0] == ".") {
        e = [b]
    } else {
        if (f[0] == "") {
            e = (this.xmlDoc.responseXML || this.xmlDoc).getElementsByTagName(f[c].replace(/\[[^\]]*\]/g, ""));
            c++
        } else {
            return []
        }
    }
    for (c; c < f.length; c++) {
        e = this._getAllNamedChilds(e, f[c])
    }
    if (f[c - 1].indexOf("[") != -1) {
        e = this._filterXPath(e, f[c - 1])
    }
    return e
};
dtmlXMLLoaderObject.prototype._filterXPath = function(e, d) {
    var g = new Array();
    var d = d.replace(/[^\[]*\[\@/g, "").replace(/[\[\]\@]*/g, "");
    for (var f = 0; f < e.length; f++) {
        if (e[f].getAttribute(d)) {
            g[g.length] = e[f]
        }
    }
    return g
};
dtmlXMLLoaderObject.prototype._getAllNamedChilds = function(e, d) {
    var h = new Array();
    if (_isKHTML) {
        d = d.toUpperCase()
    }
    for (var g = 0; g < e.length; g++) {
        for (var f = 0; f < e[g].childNodes.length; f++) {
            if (_isKHTML) {
                if (e[g].childNodes[f].tagName && e[g].childNodes[f].tagName.toUpperCase() == d) {
                    h[h.length] = e[g].childNodes[f]
                }
            } else {
                if (e[g].childNodes[f].tagName == d) {
                    h[h.length] = e[g].childNodes[f]
                }
            }
        }
    }
    return h
};

function dhtmlXHeir(e, d) {
    for (var f in d) {
        if (typeof(d[f]) == "function") {
            e[f] = d[f]
        }
    }
    return e
}

function dhtmlxEvent(c, d, b) {
    if (c.addEventListener) {
        c.addEventListener(d, b, false)
    } else {
        if (c.attachEvent) {
            c.attachEvent("on" + d, b)
        }
    }
}
dtmlXMLLoaderObject.prototype.xslDoc = null;
dtmlXMLLoaderObject.prototype.setXSLParamValue = function(c, d, e) {
    if (!e) {
        e = this.xslDoc
    }
    if (e.responseXML) {
        e = e.responseXML
    }
    var b = this.doXPath("/xsl:stylesheet/xsl:variable[@name='" + c + "']", e, "http://www.w3.org/1999/XSL/Transform", "single");
    if (b != null) {
        b.firstChild.nodeValue = d
    }
};
dtmlXMLLoaderObject.prototype.doXSLTransToObject = function(f, c) {
    if (!f) {
        f = this.xslDoc
    }
    if (f.responseXML) {
        f = f.responseXML
    }
    if (!c) {
        c = this.xmlDoc
    }
    if (c.responseXML) {
        c = c.responseXML
    }
    if (!_isIE) {
        if (!this.XSLProcessor) {
            this.XSLProcessor = new XSLTProcessor();
            this.XSLProcessor.importStylesheet(f)
        }
        var b = this.XSLProcessor.transformToDocument(c)
    } else {
        var b = new ActiveXObject("Msxml2.DOMDocument.3.0");
        try {
            c.transformNodeToObject(f, b)
        } catch (d) {
            b = c.transformNode(f)
        }
    }
    return b
};
dtmlXMLLoaderObject.prototype.doXSLTransToString = function(d, c) {
    var b = this.doXSLTransToObject(d, c);
    if (typeof(b) == "string") {
        return b
    }
    return this.doSerialization(b)
};
dtmlXMLLoaderObject.prototype.doSerialization = function(c) {
    if (!c) {
        c = this.xmlDoc
    }
    if (c.responseXML) {
        c = c.responseXML
    }
    if (!_isIE) {
        var b = new XMLSerializer();
        return b.serializeToString(c)
    } else {
        return c.xml
    }
};
dhtmlxEventable = function(obj) {
    obj.dhx_SeverCatcherPath = "";
    obj.attachEvent = function(name, catcher, callObj) {
        name = "ev_" + name.toLowerCase();
        if (!this[name]) {
            this[name] = new this.eventCatcher(callObj || this)
        }
        return (name + ":" + this[name].addEvent(catcher))
    };
    obj.callEvent = function(name, arg0) {
        name = "ev_" + name.toLowerCase();
        if (this[name]) {
            return this[name].apply(this, arg0)
        }
        return true
    };
    obj.checkEvent = function(name) {
        return (!!this["ev_" + name.toLowerCase()])
    };
    obj.eventCatcher = function(obj) {
        var dhx_catch = [];
        var z = function() {
            var res = true;
            for (var i = 0; i < dhx_catch.length; i++) {
                if (dhx_catch[i] != null) {
                    var zr = dhx_catch[i].apply(obj, arguments);
                    res = res && zr
                }
            }
            return res
        };
        z.addEvent = function(ev) {
            if (typeof(ev) != "function") {
                ev = eval(ev)
            }
            if (ev) {
                return dhx_catch.push(ev) - 1
            }
            return false
        };
        z.removeEvent = function(id) {
            dhx_catch[id] = null
        };
        return z
    };
    obj.detachEvent = function(id) {
        if (id != false) {
            var list = id.split(":");
            this[list[0]].removeEvent(list[1])
        }
    }
};

function dataProcessor(b) {
    this.serverProcessor = b;
    this.action_param = "!nativeeditor_status";
    this.object = null;
    this.updatedRows = [];
    this.autoUpdate = true;
    this.updateMode = "cell";
    this._tMode = "GET";
    this.post_delim = "_";
    this._waitMode = 0;
    this._in_progress = {};
    this._invalid = {};
    this.mandatoryFields = [];
    this.messages = [];
    this.styles = {
        updated: "font-weight:bold;",
        inserted: "font-weight:bold;",
        deleted: "text-decoration : line-through;",
        invalid: "background-color:FFE0E0;",
        invalid_cell: "border-bottom:2px solid red;",
        error: "color:red;",
        clear: "font-weight:normal;text-decoration:none;"
    };
    this.enableUTFencoding(true);
    dhtmlxEventable(this);
    return this
}
dataProcessor.prototype = {
    setTransactionMode: function(c, b) {
        this._tMode = c;
        this._tSend = b
    },
    escape: function(b) {
        if (this._utf) {
            return encodeURIComponent(b)
        } else {
            return escape(b)
        }
    },
    enableUTFencoding: function(b) {
        this._utf = convertStringToBoolean(b)
    },
    setDataColumns: function(b) {
        this._columns = (typeof b == "string") ? b.split(",") : b
    },
    getSyncState: function() {
        return !this.updatedRows.length
    },
    enableDataNames: function(b) {
        this._endnm = convertStringToBoolean(b)
    },
    enablePartialDataSend: function(b) {
        this._changed = convertStringToBoolean(b)
    },
    setUpdateMode: function(c, b) {
        this.autoUpdate = (c == "cell");
        this.updateMode = c;
        this.dnd = b
    },
    ignore: function(c, b) {
        this._silent_mode = true;
        c.call(b || window);
        this._silent_mode = false
    },
    setUpdated: function(e, d, f) {
        if (this._silent_mode) {
            return
        }
        var c = this.findRow(e);
        f = f || "updated";
        var b = this.obj.getUserData(e, this.action_param);
        if (b && f == "updated") {
            f = b
        }
        if (d) {
            this.set_invalid(e, false);
            this.updatedRows[c] = e;
            this.obj.setUserData(e, this.action_param, f);
            if (this._in_progress[e]) {
                this._in_progress[e] = "wait"
            }
        } else {
            if (!this.is_invalid(e)) {
                this.updatedRows.splice(c, 1);
                this.obj.setUserData(e, this.action_param, "")
            }
        }
        if (!d) {
            this._clearUpdateFlag(e)
        }
        this.markRow(e, d, f);
        if (d && this.autoUpdate) {
            this.sendData(e)
        }
    },
    _clearUpdateFlag: function(b) {},
    markRow: function(g, d, f) {
        var e = "";
        var c = this.is_invalid(g);
        if (c) {
            e = this.styles[c];
            d = true
        }
        if (this.callEvent("onRowMark", [g, d, f, c])) {
            e = this.styles[d ? f : "clear"] + e;
            this.obj[this._methods[0]](g, e);
            if (c && c.details) {
                e += this.styles[c + "_cell"];
                for (var b = 0; b < c.details.length; b++) {
                    if (c.details[b]) {
                        this.obj[this._methods[1]](g, b, e)
                    }
                }
            }
        }
    },
    getState: function(b) {
        return this.obj.getUserData(b, this.action_param)
    },
    is_invalid: function(b) {
        return this._invalid[b]
    },
    set_invalid: function(d, c, b) {
        if (b) {
            c = {
                value: c,
                details: b,
                toString: function() {
                    return this.value.toString()
                }
            }
        }
        this._invalid[d] = c
    },
    checkBeforeUpdate: function(b) {
        return true
    },
    sendData: function(b) {
        if (this._waitMode && (this.obj.mytype == "tree" || this.obj._h2)) {
            return
        }
        if (this.obj.editStop) {
            this.obj.editStop()
        }
        if (typeof b == "undefined" || this._tSend) {
            return this.sendAllData()
        }
        if (this._in_progress[b]) {
            return false
        }
        this.messages = [];
        if (!this.checkBeforeUpdate(b) && this.callEvent("onValidatationError", [b, this.messages])) {
            return false
        }
        this._beforeSendData(this._getRowData(b), b)
    },
    _beforeSendData: function(b, c) {
        if (!this.callEvent("onBeforeUpdate", [c, this.getState(c), b])) {
            return false
        }
        this._sendData(b, c)
    },
    serialize: function(e, f) {
        if (typeof e == "string") {
            return e
        }
        if (typeof f != "undefined") {
            return this.serialize_one(e, "")
        } else {
            var b = [];
            var d = [];
            for (var c in e) {
                if (e.hasOwnProperty(c)) {
                    b.push(this.serialize_one(e[c], c + this.post_delim));
                    d.push(c)
                }
            }
            b.push("ids=" + this.escape(d.join(",")));
            return b.join("&")
        }
    },
    serialize_one: function(e, c) {
        if (typeof e == "string") {
            return e
        }
        var b = [];
        for (var d in e) {
            if (e.hasOwnProperty(d)) {
                b.push(this.escape((c || "") + d) + "=" + this.escape(e[d]))
            }
        }
        return b.join("&")
    },
    _sendData: function(c, d) {
        if (!c) {
            return
        }
        if (!this.callEvent("onBeforeDataSending", d ? [d, this.getState(d), c] : [null, null, c])) {
            return false
        }
        if (d) {
            this._in_progress[d] = (new Date()).valueOf()
        }
        var b = new dtmlXMLLoaderObject(this.afterUpdate, this, true);
        var e = this.serverProcessor + (this._user ? (getUrlSymbol(this.serverProcessor) + ["dhx_user=" + this._user, "dhx_version=" + this.obj.getUserData(0, "version")].join("&")) : "");
        if (this._tMode != "POST") {
            b.loadXML(e + ((e.indexOf("?") != -1) ? "&" : "?") + this.serialize(c, d))
        } else {
            b.loadXML(e, true, this.serialize(c, d))
        }
        this._waitMode++
    },
    sendAllData: function() {
        if (!this.updatedRows.length) {
            return
        }
        this.messages = [];
        var c = true;
        for (var b = 0; b < this.updatedRows.length; b++) {
            c &= this.checkBeforeUpdate(this.updatedRows[b])
        }
        if (!c && !this.callEvent("onValidatationError", ["", this.messages])) {
            return false
        }
        if (this._tSend) {
            this._sendData(this._getAllData())
        } else {
            for (var b = 0; b < this.updatedRows.length; b++) {
                if (!this._in_progress[this.updatedRows[b]]) {
                    if (this.is_invalid(this.updatedRows[b])) {
                        continue
                    }
                    this._beforeSendData(this._getRowData(this.updatedRows[b]), this.updatedRows[b]);
                    if (this._waitMode && (this.obj.mytype == "tree" || this.obj._h2)) {
                        return
                    }
                }
            }
        }
    },
    _getAllData: function(e) {
        var c = {};
        var b = false;
        for (var d = 0; d < this.updatedRows.length; d++) {
            var f = this.updatedRows[d];
            if (this._in_progress[f] || this.is_invalid(f)) {
                continue
            }
            if (!this.callEvent("onBeforeUpdate", [f, this.getState(f)])) {
                continue
            }
            c[f] = this._getRowData(f, f + this.post_delim);
            b = true;
            this._in_progress[f] = (new Date()).valueOf()
        }
        return b ? c : null
    },
    setVerificator: function(c, b) {
        this.mandatoryFields[c] = b || (function(d) {
            return (d != "")
        })
    },
    clearVerificator: function(b) {
        this.mandatoryFields[b] = false
    },
    findRow: function(c) {
        var b = 0;
        for (b = 0; b < this.updatedRows.length; b++) {
            if (c == this.updatedRows[b]) {
                break
            }
        }
        return b
    },
    defineAction: function(b, c) {
        if (!this._uActions) {
            this._uActions = []
        }
        this._uActions[b] = c
    },
    afterUpdateCallback: function(c, h, g, f) {
        var b = c;
        var e = (g != "error" && g != "invalid");
        if (!e) {
            this.set_invalid(c, g)
        }
        if ((this._uActions) && (this._uActions[g]) && (!this._uActions[g](f))) {
            return (delete this._in_progress[b])
        }
        if (this._in_progress[b] != "wait") {
            this.setUpdated(c, false)
        }
        var d = c;
        switch (g) {
            case "inserted":
            case "insert":
                if (h != c) {
                    this.obj[this._methods[2]](c, h);
                    c = h
                }
                break;
            case "delete":
            case "deleted":
                this.obj.setUserData(c, this.action_param, "true_deleted");
                this.obj[this._methods[3]](c);
                delete this._in_progress[b];
                return this.callEvent("onAfterUpdate", [c, g, h, f]);
                break
        }
        if (this._in_progress[b] != "wait") {
            if (e) {
                this.obj.setUserData(c, this.action_param, "")
            }
            delete this._in_progress[b]
        } else {
            delete this._in_progress[b];
            this.setUpdated(h, true, this.obj.getUserData(c, this.action_param))
        }
        this.callEvent("onAfterUpdate", [c, g, h, f])
    },
    afterUpdate: function(o, u, q, p, n) {
        n.getXMLTopNode("data");
        if (!n.xmlDoc.responseXML) {
            return
        }
        var r = n.doXPath("//data/action");
        for (var h = 0; h < r.length; h++) {
            var m = r[h];
            var g = m.getAttribute("type");
            var e = m.getAttribute("sid");
            var f = m.getAttribute("tid");
            o.afterUpdateCallback(e, f, g, m)
        }
        o.finalizeUpdate()
    },
    finalizeUpdate: function() {
        if (this._waitMode) {
            this._waitMode--
        }
        if ((this.obj.mytype == "tree" || this.obj._h2) && this.updatedRows.length) {
            this.sendData()
        }
        this.callEvent("onAfterUpdateFinish", []);
        if (!this.updatedRows.length) {
            this.callEvent("onFullSync", [])
        }
    },
    init: function(b) {
        this.obj = b;
        if (this.obj._dp_init) {
            this.obj._dp_init(this)
        }
    },
    setOnAfterUpdate: function(b) {
        this.attachEvent("onAfterUpdate", b)
    },
    enableDebug: function(b) {},
    setOnBeforeUpdateHandler: function(b) {
        this.attachEvent("onBeforeDataSending", b)
    },
    /* starts autoupdate mode
    		@param interval
    			time interval for sending update requests
    	*/
    setAutoUpdate: function(d, c) {
        d = d || 2000;
        this._user = c || (new Date()).valueOf();
        this._need_update = false;
        this._loader = null;
        this._update_busy = false;
        this.attachEvent("onAfterUpdate", function(e, g, h, f) {
            this.afterAutoUpdate(e, g, h, f)
        });
        this.attachEvent("onFullSync", function() {
            this.fullSync()
        });
        var b = this;
        window.setInterval(function() {
            b.loadUpdate()
        }, d)
    },
    /* process updating request answer
    		if status == collision version is depricated
    		set flag for autoupdating immidiatly
    	*/
    afterAutoUpdate: function(b, d, e, c) {
        if (d == "collision") {
            this._need_update = true;
            return false
        } else {
            return true
        }
    },
    /* callback function for onFillSync event
    		call update function if it's need
    	*/
    fullSync: function() {
        if (this._need_update == true) {
            this._need_update = false;
            this.loadUpdate()
        }
        return true
    },
    /* sends query to the server and call callback function
     */
    getUpdates: function(b, c) {
        if (this._update_busy) {
            return false
        } else {
            this._update_busy = true
        }
        this._loader = this._loader || new dtmlXMLLoaderObject(true);
        this._loader.async = true;
        this._loader.waitCall = c;
        this._loader.loadXML(b)
    },
    /* returns xml node value
    		@param node
    			xml node
    	*/
    _v: function(b) {
        if (b.firstChild) {
            return b.firstChild.nodeValue
        }
        return ""
    },
    /* returns values array of xml nodes array
    		@param arr
    			array of xml nodes
    	*/
    _a: function(b) {
        var d = [];
        for (var c = 0; c < b.length; c++) {
            d[c] = this._v(b[c])
        }
        return d
    },
    /* loads updates and processes them
     */
    loadUpdate: function() {
        var c = this;
        var b = this.obj.getUserData(0, "version");
        var d = this.serverProcessor + getUrlSymbol(this.serverProcessor) + ["dhx_user=" + this._user, "dhx_version=" + b].join("&");
        d = d.replace("editing=true&", "");
        this.getUpdates(d, function() {
            var g = c._loader.doXPath("//userdata");
            c.obj.setUserData(0, "version", c._v(g[0]));
            var e = c._loader.doXPath("//update");
            if (e.length) {
                c._silent_mode = true;
                for (var h = 0; h < e.length; h++) {
                    var f = e[h].getAttribute("status");
                    var n = e[h].getAttribute("id");
                    var m = e[h].getAttribute("parent");
                    switch (f) {
                        case "inserted":
                            c.callEvent("insertCallback", [e[h], n, m]);
                            break;
                        case "updated":
                            c.callEvent("updateCallback", [e[h], n, m]);
                            break;
                        case "deleted":
                            c.callEvent("deleteCallback", [e[h], n, m]);
                            break
                    }
                }
                c._silent_mode = false
            }
            c._update_busy = false;
            c = null
        })
    }
};
dataProcessor.prototype._o_init = dataProcessor.prototype.init;
dataProcessor.prototype.init = function(b) {
    this._console = this._console || this._createConsole();
    this.attachEvent("onValidatationError", function(c) {
        this._log("Validation error for ID=" + (c || "[multiple]"));
        return true
    });
    return this._o_init(b)
};
dataProcessor.prototype._createConsole = function() {
    var b = document.createElement("DIV");
    b.style.cssText = "width:450px; height:420px; overflow:auto; position:absolute; z-index:99999; background-color:white; top:0px; right:0px; border:1px dashed black; font-family:Tahoma; Font-size:10pt;";
    b.innerHTML = "<div style='width:100%; background-color:gray; font-weight:bold; color:white;'><span style='cursor:pointer;float:right;' onclick='this.parentNode.parentNode.style.display=\"none\"'><sup>[close]&nbsp;</sup></span><span style='cursor:pointer;float:right;' onclick='this.parentNode.parentNode.childNodes[2].innerHTML=\"\"'><sup>[clear]&nbsp;</sup></span>&nbsp;DataProcessor</div><div style='width:100%; height:200px; overflow-Y:scroll;'>&nbsp;Current state</div><div style='width:100%; height:200px; overflow-Y:scroll;'>&nbsp;Log:</div>";
    if (document.body) {
        document.body.insertBefore(b, document.body.firstChild)
    } else {
        dhtmlxEvent(window, "load", function() {
            document.body.insertBefore(b, document.body.firstChild)
        })
    }
    dhtmlxEvent(window, "dblclick", function() {
        b.style.display = ""
    });
    return b
};
dataProcessor.prototype._error = function(b) {
    this._log("<span style='color:red'>" + b + "</span>")
};
dataProcessor.prototype._log = function(c) {
    var d = document.createElement("DIV");
    d.innerHTML = c;
    var b = this._console.childNodes[2];
    b.appendChild(d);
    b.scrollTop = b.scrollHeight;
    if (window.console && window.console.log) {
        window.console.log("DataProcessor :: " + c.replace("&nbsp;", " ").replace("<b>", "").replace("</b>", ""))
    }
};
dataProcessor.prototype._updateStat = function(c) {
    var c = ["&nbsp;Current state"];
    for (var b = 0; b < this.updatedRows.length; b++) {
        c.push("&nbsp;ID:" + this.updatedRows[b] + " Status: " + (this.obj.getUserData(this.updatedRows[b], "!nativeeditor_status") || "updated") + ", " + (this.is_invalid(this.updatedRows[b]) || "valid"))
    }
    this._console.childNodes[1].innerHTML = c.join("<br/>") + "<hr/>Current mode: " + this.updateMode
};
dataProcessor.prototype.xml_analize = function(b) {
    if (_isFF) {
        if (!b.xmlDoc.responseXML) {
            this._error("Not an XML, probably incorrect content type specified ( must be text/xml ), or some text output was started before XML data")
        } else {
            if (b.xmlDoc.responseXML.firstChild.tagName == "parsererror") {
                this._error(b.xmlDoc.responseXML.firstChild.textContent)
            } else {
                return true
            }
        }
    } else {
        if (_isIE) {
            if (b.xmlDoc.responseXML.parseError.errorCode) {
                this._error("XML error : " + b.xmlDoc.responseXML.parseError.reason)
            } else {
                if (!b.xmlDoc.responseXML.documentElement) {
                    this._error("Not an XML, probably incorrect content type specified ( must be text/xml ), or some text output was started before XML data")
                } else {
                    return true
                }
            }
        }
    }
    return false
};
dataProcessor.wrap = function(b, c, f) {
    var e = dataProcessor.prototype;
    if (!e._wrap) {
        e._wrap = {}
    }
    e._wrap[b] = e[b];
    e[b] = function() {
        if (c) {
            c.apply(this, arguments)
        }
        var d = e._wrap[b].apply(this, arguments);
        if (f) {
            f.apply(this, [arguments, d])
        }
        return d
    }
};
dataProcessor.wrap("setUpdated", function(c, b, d) {
    this._log("&nbsp;row <b>" + c + "</b> " + (b ? "marked" : "unmarked") + " [" + (d || "updated") + "," + (this.is_invalid(c) || "valid") + "]")
}, function() {
    this._updateStat()
});
dataProcessor.wrap("sendData", function(b) {
    if (b) {
        this._log("&nbsp;Initiating data sending for <b>" + b + "</b>");
        if (this.obj.mytype == "tree") {
            if (!this.obj._idpull[b]) {
                this._log("&nbsp;Error! item with such ID not exists <b>" + b + "</b>")
            }
        } else {
            if (!this.obj.rowsAr[b]) {
                this._log("&nbsp;Error! row with such ID not exists <b>" + b + "</b>")
            }
        }
    }
}, function() {});
dataProcessor.wrap("sendAllData", function() {
    this._log("&nbsp;Initiating data sending for <b>all</b> rows ")
}, function() {});
dataProcessor.logSingle = function(e, h) {
    var g = {};
    if (h) {
        g[h] = e
    } else {
        g = e
    }
    var c = [];
    for (var d in g) {
        c.push("<fieldset><legend>" + d + "</legend>");
        var b = [];
        for (var f in g[d]) {
            b.push(f + " = " + g[d][f])
        }
        c.push(b.join("<br>"));
        c.push("</fieldset>")
    }
    return c.join("")
};
dataProcessor.wrap("_sendData", function(c, d) {
    if (d) {
        this._log("&nbsp;Sending in one-by-one mode, current ID = " + d)
    } else {
        this._log("&nbsp;Sending all data at once")
    }
    this._log("&nbsp;Server url: " + this.serverProcessor + " <a onclick='this.parentNode.nextSibling.firstChild.style.display=\"block\"' href='#'>parameters</a>");
    var b = [];
    this._log("<blockquote style='display:none;'>" + dataProcessor.logSingle(c, d) + "<blockquote>")
}, function() {});
dataProcessor.wrap("afterUpdate", function(h, e, n, m, f) {
    h._log("&nbsp;Server response received <a onclick='this.nextSibling.style.display=\"block\"' href='#'>details</a><blockquote style='display:none'><code>" + (f.xmlDoc.responseText || "").replace(/\&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;") + "</code></blockquote>");
    if (!h.xml_analize(f)) {
        return
    }
    var g = f.doXPath("//data/action");
    if (!g) {
        h._log("&nbsp;No actions found");
        var g = f.getXMLTopNode("data");
        if (!g) {
            h._log("&nbsp;XML not valid")
        } else {
            h._log("&nbsp;Incorrect content type - need to be text/xml")
        }
    }
}, function() {});
dataProcessor.wrap("afterUpdateCallback", function(b, d, c) {
    if (this.obj.mytype == "tree") {
        if (!this.obj._idpull[b]) {
            this._log("Incorrect SID, item with such ID not exists in grid")
        }
    } else {
        if (!this.obj.rowsAr[b]) {
            this._log("Incorrect SID, row with such ID not exists in grid")
        }
    }
    this._log("&nbsp;Action: " + c + " SID:" + b + " TID:" + d)
}, function() {});
if (window.dhtmlXGridObject) {
    dhtmlXGridObject.prototype._init_point_connector = dhtmlXGridObject.prototype._init_point;
    dhtmlXGridObject.prototype._init_point = function() {
        var b = function(f) {
            f = f.replace(/(\?|\&)connector[^\f]*/g, "");
            return f + (f.indexOf("?") != -1 ? "&" : "?") + "connector=true" + (mygrid.hdr.rows.length > 0 ? "&dhx_no_header=1" : "")
        };
        var e = function(f) {
            return b(f) + (this._connector_sorting || "") + (this._connector_filter || "")
        };
        var d = function(g, h, f) {
            this._connector_sorting = "&dhx_sort[" + h + "]=" + f;
            return e.call(this, g)
        };
        var c = function(g, f, m) {
            for (var h = 0; h < f.length; h++) {
                f[h] = "dhx_filter[" + f[h] + "]=" + encodeURIComponent(m[h])
            }
            this._connector_filter = "&" + f.join("&");
            return e.call(this, g)
        };
        this.attachEvent("onCollectValues", function(f) {
            if (this._con_f_used[f]) {
                if (typeof(this._con_f_used[f]) == "object") {
                    return this._con_f_used[f]
                } else {
                    return false
                }
            }
            return true
        });
        this.attachEvent("onDynXLS", function() {
            this.xmlFileUrl = e.call(this, this.xmlFileUrl);
            return true
        });
        this.attachEvent("onBeforeSorting", function(m, h, g) {
            if (h == "connector") {
                var f = this;
                this.clearAndLoad(d.call(this, this.xmlFileUrl, m, g), function() {
                    f.setSortImgState(true, m, g)
                });
                return false
            }
            return true
        });
        this.attachEvent("onFilterStart", function(g, f) {
            if (this._con_f_used.length) {
                this.clearAndLoad(c.call(this, this.xmlFileUrl, g, f));
                return false
            }
            return true
        });
        this.attachEvent("onXLE", function(g, f, m, h) {
            if (!h) {
                return
            }
        });
        if (this._init_point_connector) {
            this._init_point_connector()
        }
    };
    dhtmlXGridObject.prototype._con_f_used = [];
    dhtmlXGridObject.prototype._in_header_connector_text_filter = function(c, b) {
        if (!this._con_f_used[b]) {
            this._con_f_used[b] = 1
        }
        return this._in_header_text_filter(c, b)
    };
    dhtmlXGridObject.prototype._in_header_connector_select_filter = function(c, b) {
        if (!this._con_f_used[b]) {
            this._con_f_used[b] = 2
        }
        return this._in_header_select_filter(c, b)
    };
    dhtmlXGridObject.prototype.load_connector = dhtmlXGridObject.prototype.load;
    dhtmlXGridObject.prototype.load = function(c, f, e) {
        if (!this._colls_loaded && this.cellType) {
            var b = [];
            for (var d = 0; d < this.cellType.length; d++) {
                if (this.cellType[d].indexOf("co") == 0 || this._con_f_used[d] == 2) {
                    b.push(d)
                }
            }
            if (b.length) {
                arguments[0] += (arguments[0].indexOf("?") != -1 ? "&" : "?") + "connector=true&dhx_colls=" + b.join(",")
            }
        }
        return this.load_connector.apply(this, arguments)
    };
    dhtmlXGridObject.prototype._parseHead_connector = dhtmlXGridObject.prototype._parseHead;
    dhtmlXGridObject.prototype._parseHead = function(b, r, o) {
        this._parseHead_connector.apply(this, arguments);
        if (!this._colls_loaded) {
            var p = this.xmlLoader.doXPath("./coll_options", arguments[0]);
            for (var h = 0; h < p.length; h++) {
                var n = p[h].getAttribute("for");
                var q = [];
                var d = null;
                if (this.cellType[n] == "combo") {
                    d = this.getColumnCombo(n)
                }
                if (this.cellType[n].indexOf("co") == 0) {
                    d = this.getCombo(n)
                }
                var g = this.xmlLoader.doXPath("./item", p[h]);
                for (var e = 0; e < g.length; e++) {
                    var c = g[e].getAttribute("value");
                    if (d) {
                        var m = g[e].getAttribute("label") || c;
                        if (d.addOption) {
                            d.addOption([
                                [c, m]
                            ])
                        } else {
                            d.put(c, m)
                        }
                        q[q.length] = m
                    } else {
                        q[q.length] = c
                    }
                }
                if (this._con_f_used[n * 1]) {
                    this._con_f_used[n * 1] = q
                }
            }
            this._colls_loaded = true
        }
    }
}
if (window.dataProcessor) {
    dataProcessor.prototype.init_original = dataProcessor.prototype.init;
    dataProcessor.prototype.init = function(b) {
        this.init_original(b);
        b._dataprocessor = this;
        this.setTransactionMode("POST", true);
        this.serverProcessor += (this.serverProcessor.indexOf("?") != -1 ? "&" : "?") + "editing=true"
    }
}
dhtmlxError.catchError("LoadXML", function(e, d, f) {
    alert(f[0].responseText)
});
window.dhtmlXScheduler = window.scheduler = {
    version: 2.2
};
dhtmlxEventable(scheduler);
scheduler.init = function(d, b, c) {
    b = b || (new Date());
    c = c || "week";
    this._obj = (typeof d == "string") ? document.getElementById(d) : d;
    this._els = [];
    this._scroll = true;
    this._quirks = (_isIE && document.compatMode == "BackCompat");
    this._quirks7 = (_isIE && navigator.appVersion.indexOf("MSIE 8") == -1);
    this.get_elements();
    this.init_templates();
    this.set_actions();
    dhtmlxEvent(window, "resize", function() {
        window.clearTimeout(scheduler._resize_timer);
        scheduler._resize_timer = window.setTimeout(function() {
            if (scheduler.callEvent("onSchedulerResize", [])) {
                scheduler.update_view()
            }
        }, 100)
    });
    this.set_sizes();
    this.setCurrentView(b, c)
};
scheduler.xy = {
    nav_height: 22,
    min_event_height: 40,
    scale_width: 50,
    bar_height: 20,
    scroll_width: 18,
    scale_height: 20,
    month_scale_height: 20,
    menu_width: 25,
    margin_top: 0,
    margin_left: 0,
    editor_width: 140
};
scheduler.keys = {
    edit_save: 13,
    edit_cancel: 27
};
scheduler.set_sizes = function() {
    var c = this._x = this._obj.clientWidth - this.xy.margin_left;
    var e = this._y = this._obj.clientHeight - this.xy.margin_top;
    var f = this._table_view ? 0 : (this.xy.scale_width + this.xy.scroll_width);
    var b = this._table_view ? -1 : this.xy.scale_width;
    this.set_xy(this._els.dhx_cal_navline[0], c, this.xy.nav_height, 0, 0);
    this.set_xy(this._els.dhx_cal_header[0], c - f, this.xy.scale_height, b, this.xy.nav_height + (this._quirks ? -1 : 1));
    var g = this._els.dhx_cal_navline[0].offsetHeight;
    if (g > 0) {
        this.xy.nav_height = g
    }
    var d = this.xy.scale_height + this.xy.nav_height + (this._quirks ? -2 : 0);
    this.set_xy(this._els.dhx_cal_data[0], c, e - (d + 2), 0, d + 2)
};
scheduler.set_xy = function(e, c, d, b, f) {
    e.style.width = Math.max(0, c) + "px";
    e.style.height = Math.max(0, d) + "px";
    if (arguments.length > 3) {
        e.style.left = b + "px";
        e.style.top = f + "px"
    }
};
scheduler.get_elements = function() {
    var e = this._obj.getElementsByTagName("DIV");
    for (var d = 0; d < e.length; d++) {
        var b = e[d].className;
        if (!this._els[b]) {
            this._els[b] = []
        }
        this._els[b].push(e[d]);
        var c = scheduler.locale.labels[e[d].getAttribute("name") || b];
        if (c) {
            e[d].innerHTML = c
        }
    }
};
scheduler.set_actions = function() {
    for (var b in this._els) {
        if (this._click[b]) {
            for (var c = 0; c < this._els[b].length; c++) {
                this._els[b][c].onclick = scheduler._click[b]
            }
        }
    }
    this._obj.onselectstart = function(d) {
        return false
    };
    this._obj.onmousemove = function(d) {
        scheduler._on_mouse_move(d || event)
    };
    this._obj.onmousedown = function(d) {
        scheduler._on_mouse_down(d || event)
    };
    this._obj.onmouseup = function(d) {
        scheduler._on_mouse_up(d || event)
    };
    this._obj.ondblclick = function(d) {
        scheduler._on_dbl_click(d || event)
    }
};
scheduler.select = function(b) {
    if (this._table_view || !this.getEvent(b)._timed) {
        return
    }
    if (this._select_id == b) {
        return
    }
    this.editStop(false);
    this.unselect();
    this._select_id = b;
    this.updateEvent(b)
};
scheduler.unselect = function(c) {
    if (c && c != this._select_id) {
        return
    }
    var b = this._select_id;
    this._select_id = null;
    if (b) {
        this.updateEvent(b)
    }
};
scheduler.getState = function() {
    return {
        mode: this._mode,
        date: this._date,
        min_date: this._min_date,
        max_date: this._max_date,
        editor_id: this._edit_id,
        lightbox_id: this._lightbox_id
    }
};
scheduler._click = {
    dhx_cal_data: function(d) {
        var c = d ? d.target : event.srcElement;
        var f = scheduler._locate_event(c);
        d = d || event;
        if ((f && !scheduler.callEvent("onClick", [f, d])) || scheduler.config.readonly) {
            return
        }
        if (f) {
            scheduler.select(f);
            var b = c.className;
            if (b.indexOf("_icon") != -1) {
                scheduler._click.buttons[b.split(" ")[1].replace("icon_", "")](f)
            }
        } else {
            scheduler._close_not_saved()
        }
    },
    dhx_cal_prev_button: function() {
        scheduler._click.dhx_cal_next_button(0, -1)
    },
    dhx_cal_next_button: function(c, b) {
        scheduler.setCurrentView(scheduler.date.add(scheduler.date[scheduler._mode + "_start"](scheduler._date), (b || 1), scheduler._mode))
    },
    dhx_cal_today_button: function() {
        scheduler.setCurrentView(new Date())
    },
    dhx_cal_tab: function() {
        var b = this.getAttribute("name").split("_")[0];
        scheduler.setCurrentView(scheduler._date, b)
    },
    buttons: {
        "delete": function(d) {
            var b = scheduler.locale.labels.confirm_deleting;
            if (!b || confirm(b)) {
                scheduler.deleteEvent(d)
            }
        },
        edit: function(b) {
            scheduler.edit(b)
        },
        save: function(b) {
            scheduler.editStop(true)
        },
        details: function(b) {
            scheduler.showLightbox(b)
        },
        cancel: function(b) {
            scheduler.editStop(false)
        }
    }
};
scheduler.addEventNow = function(n, c, g) {
    var f = {};
    if (typeof n == "object") {
        f = n;
        n = null
    }
    var h = (this.config.event_duration || this.config.time_step) * 60000;
    if (!n) {
        n = Math.round((new Date()).valueOf() / h) * h
    }
    var b = new Date(n);
    if (!c) {
        var m = this.config.first_hour;
        if (m > b.getHours()) {
            b.setHours(m);
            n = b.valueOf()
        }
        c = n + h
    }
    f.start_date = f.start_date || b;
    f.end_date = f.end_date || new Date(c);
    f.text = f.text || this.locale.labels.new_event;
    f.id = this._drag_id = this.uid();
    this._drag_mode = "new-size";
    this._loading = true;
    this.addEvent(f);
    this.callEvent("onEventCreated", [this._drag_id, g]);
    this._loading = false;
    this._drag_event = {};
    this._on_mouse_up(g)
};
scheduler._on_dbl_click = function(d, f) {
    f = f || (d.target || d.srcElement);
    if (this.config.readonly) {
        return
    }
    var b = f.className.split(" ")[0];
    switch (b) {
        case "dhx_scale_holder":
        case "dhx_scale_holder_now":
        case "dhx_month_body":
            if (!scheduler.config.dblclick_create) {
                break
            }
            var m = this._mouse_coords(d);
            var h = this._min_date.valueOf() + (m.y * this.config.time_step + (this._table_view ? 0 : m.x) * 24 * 60) * 60000;
            h = this._correct_shift(h);
            this.addEventNow(h, null, d);
            break;
        case "dhx_body":
        case "dhx_cal_event_line":
        case "dhx_cal_event_clear":
            var g = this._locate_event(f);
            if (!this.callEvent("onDblClick", [g, d])) {
                return
            }
            if (this.config.details_on_dblclick || this._table_view || !this.getEvent(g)._timed) {
                this.showLightbox(g)
            } else {
                this.edit(g)
            }
            break;
        case "":
            if (f.parentNode) {
                return scheduler._on_dbl_click(d, f.parentNode)
            }
            default:
                var c = this["dblclick_" + b];
                if (c) {
                    c.call(this, d)
                }
                break
    }
};
scheduler._mouse_coords = function(g) {
    var m;
    var c = document.body;
    var h = document.documentElement;
    if (g.pageX || g.pageY) {
        m = {
            x: g.pageX,
            y: g.pageY
        }
    } else {
        m = {
            x: g.clientX + (c.scrollLeft || h.scrollLeft || 0) - c.clientLeft,
            y: g.clientY + (c.scrollTop || h.scrollTop || 0) - c.clientTop
        }
    }
    m.x -= getAbsoluteLeft(this._obj) + (this._table_view ? 0 : this.xy.scale_width);
    m.y -= getAbsoluteTop(this._obj) + this.xy.nav_height + (this._dy_shift || 0) + this.xy.scale_height - this._els.dhx_cal_data[0].scrollTop;
    m.ev = g;
    var f = this["mouse_" + this._mode];
    if (f) {
        return f.call(this, m)
    }
    if (!this._table_view) {
        m.x = Math.max(0, Math.ceil(m.x / this._cols[0]) - 1);
        m.y = Math.max(0, Math.ceil(m.y * 60 / (this.config.time_step * this.config.hour_size_px)) - 1) + this.config.first_hour * (60 / this.config.time_step)
    } else {
        var e = 0;
        for (e = 1; e < this._colsS.heights.length; e++) {
            if (this._colsS.heights[e] > m.y) {
                break
            }
        }
        m.y = (Math.max(0, Math.ceil(m.x / this._cols[0]) - 1) + Math.max(0, e - 1) * 7) * 24 * 60 / this.config.time_step;
        m.x = 0
    }
    return m
};
scheduler._close_not_saved = function() {
    if (new Date().valueOf() - (scheduler._new_event || 0) > 500 && scheduler._edit_id) {
        var b = scheduler.locale.labels.confirm_closing;
        if (!b || confirm(b)) {
            scheduler.editStop(scheduler.config.positive_closing)
        }
    }
};
scheduler._correct_shift = function(c, b) {
    return c -= ((new Date(scheduler._min_date)).getTimezoneOffset() - (new Date(c)).getTimezoneOffset()) * 60000 * (b ? -1 : 1)
};
scheduler._on_mouse_move = function(h) {
    if (this._drag_mode) {
        var m = this._mouse_coords(h);
        if (!this._drag_pos || this._drag_pos.x != m.x || this._drag_pos.y != m.y) {
            if (this._edit_id != this._drag_id) {
                this._close_not_saved()
            }
            this._drag_pos = m;
            if (this._drag_mode == "create") {
                this._close_not_saved();
                this._loading = true;
                var c = this._min_date.valueOf() + (m.y * this.config.time_step + (this._table_view ? 0 : m.x) * 24 * 60) * 60000;
                c = this._correct_shift(c);
                if (!this._drag_start) {
                    this._drag_start = c;
                    return
                }
                var g = c;
                if (g == this._drag_start) {
                    return
                }
                this._drag_id = this.uid();
                this.addEvent(new Date(this._drag_start), new Date(g), this.locale.labels.new_event, this._drag_id, m.fields);
                this.callEvent("onEventCreated", [this._drag_id, h]);
                this._loading = false;
                this._drag_mode = "new-size"
            }
            var n = this.getEvent(this._drag_id);
            var c, g;
            if (this._drag_mode == "move") {
                c = this._min_date.valueOf() + (m.y * this.config.time_step + m.x * 24 * 60) * 60000;
                if (!m.custom && this._table_view) {
                    c += this.date.time_part(n.start_date) * 1000
                }
                c = this._correct_shift(c);
                g = n.end_date.valueOf() - (n.start_date.valueOf() - c)
            } else {
                c = n.start_date.valueOf();
                if (this._table_view) {
                    g = this._min_date.valueOf() + m.y * this.config.time_step * 60000 + (m.custom ? 0 : 24 * 60 * 60000)
                } else {
                    g = this.date.date_part(new Date(n.end_date)).valueOf() + m.y * this.config.time_step * 60000;
                    this._els.dhx_cal_data[0].style.cursor = "s-resize";
                    if (this._mode == "week" || this._mode == "day") {
                        g = this._correct_shift(g)
                    }
                }
                if (this._drag_mode == "new-size") {
                    if (g <= this._drag_start) {
                        var f = m.shift || ((this._table_view && !m.custom) ? 24 * 60 * 60000 : 0);
                        c = g - f;
                        g = this._drag_start + (f || (this.config.time_step * 60000))
                    } else {
                        c = this._drag_start
                    }
                } else {
                    if (g <= c) {
                        g = c + this.config.time_step * 60000
                    }
                }
            }
            var o = new Date(g - 1);
            var d = new Date(c);
            if (this._table_view || (o.getDate() == d.getDate() && o.getHours() < this.config.last_hour)) {
                n.start_date = d;
                n.end_date = new Date(g);
                if (this.config.update_render) {
                    this.update_view()
                } else {
                    this.updateEvent(this._drag_id)
                }
            }
            if (this._table_view) {
                this.for_rendered(this._drag_id, function(e) {
                    e.className += " dhx_in_move"
                })
            }
        }
    } else {
        if (scheduler.checkEvent("onMouseMove")) {
            var b = this._locate_event(h.target || h.srcElement);
            this.callEvent("onMouseMove", [b, h])
        }
    }
};
scheduler._on_mouse_context = function(b, c) {
    return this.callEvent("onContextMenu", [this._locate_event(c), b])
};
scheduler._on_mouse_down = function(b, c) {
    if (this.config.readonly || this._drag_mode) {
        return
    }
    c = c || (b.target || b.srcElement);
    if (b.button == 2 || b.ctrlKey) {
        return this._on_mouse_context(b, c)
    }
    switch (c.className.split(" ")[0]) {
        case "dhx_cal_event_line":
        case "dhx_cal_event_clear":
            if (this._table_view) {
                this._drag_mode = "move"
            }
            break;
        case "dhx_header":
        case "dhx_title":
            this._drag_mode = "move";
            break;
        case "dhx_footer":
            this._drag_mode = "resize";
            break;
        case "dhx_scale_holder":
        case "dhx_scale_holder_now":
        case "dhx_month_body":
        case "dhx_matrix_cell":
            this._drag_mode = "create";
            break;
        case "":
            if (c.parentNode) {
                return scheduler._on_mouse_down(b, c.parentNode)
            }
            default:
                this._drag_mode = null;
                this._drag_id = null
    }
    if (this._drag_mode) {
        var d = this._locate_event(c);
        if (!this.config["drag_" + this._drag_mode] || !this.callEvent("onBeforeDrag", [d, this._drag_mode, b])) {
            this._drag_mode = this._drag_id = 0
        } else {
            this._drag_id = d;
            this._drag_event = this._copy_event(this.getEvent(this._drag_id) || {})
        }
    }
    this._drag_start = null
};
scheduler._on_mouse_up = function(c) {
    if (this._drag_mode && this._drag_id) {
        this._els.dhx_cal_data[0].style.cursor = "default";
        var b = this.getEvent(this._drag_id);
        if (this._drag_event._dhx_changed || !this._drag_event.start_date || b.start_date.valueOf() != this._drag_event.start_date.valueOf() || b.end_date.valueOf() != this._drag_event.end_date.valueOf()) {
            var d = (this._drag_mode == "new-size");
            if (!this.callEvent("onBeforeEventChanged", [b, c, d])) {
                if (d) {
                    this.deleteEvent(b.id, true)
                } else {
                    b.start_date = this._drag_event.start_date;
                    b.end_date = this._drag_event.end_date;
                    this.updateEvent(b.id)
                }
            } else {
                if (d && this.config.edit_on_create) {
                    this.unselect();
                    this._new_event = new Date();
                    if (this._table_view || this.config.details_on_create) {
                        this._drag_mode = null;
                        return this.showLightbox(this._drag_id)
                    }
                    this._drag_pos = true;
                    this._select_id = this._edit_id = this._drag_id
                } else {
                    if (!this._new_event) {
                        this.callEvent(d ? "onEventAdded" : "onEventChanged", [this._drag_id, this.getEvent(this._drag_id)])
                    }
                }
            }
        }
        if (this._drag_pos) {
            this.render_view_data()
        }
    }
    this._drag_mode = null;
    this._drag_pos = null
};
scheduler.update_view = function() {
    this._reset_scale();
    if (this._load_mode && this._load()) {
        return this._render_wait = true
    }
    this.render_view_data()
};
scheduler.setCurrentView = function(c, f) {
    if (!this.callEvent("onBeforeViewChange", [this._mode, this._date, f, c])) {
        return
    }
    if (this[this._mode + "_view"] && f && this._mode != f) {
        this[this._mode + "_view"](false)
    }
    this._close_not_saved();
    this._mode = f || this._mode;
    this._date = c;
    this._table_view = (this._mode == "month");
    var e = this._els.dhx_cal_tab;
    for (var d = 0; d < e.length; d++) {
        e[d].className = "dhx_cal_tab" + ((e[d].getAttribute("name") == this._mode + "_tab") ? " active" : "")
    }
    var b = this[this._mode + "_view"];
    b ? b(true) : this.update_view();
    this.callEvent("onViewChange", [this._mode, this._date])
};
scheduler._render_x_header = function(c, f, g, e) {
    var b = document.createElement("DIV");
    b.className = "dhx_scale_bar";
    this.set_xy(b, this._cols[c] - 1, this.xy.scale_height - 2, f, 0);
    b.innerHTML = this.templates[this._mode + "_scale_date"](g, this._mode);
    e.appendChild(b)
};
scheduler._reset_scale = function() {
    if (!this.templates[this._mode + "_date"]) {
        return
    }
    var z = this._els.dhx_cal_header[0];
    var H = this._els.dhx_cal_data[0];
    var E = this.config;
    z.innerHTML = "";
    H.scrollTop = 0;
    H.innerHTML = "";
    var v = ((E.readonly || (!E.drag_resize)) ? " dhx_resize_denied" : "") + ((E.readonly || (!E.drag_move)) ? " dhx_move_denied" : "");
    if (v) {
        H.className = "dhx_cal_data" + v
    }
    this._cols = [];
    this._colsS = {
        height: 0
    };
    this._dy_shift = 0;
    this.set_sizes();
    var r = parseInt(z.style.width);
    var g = 0;
    var D, G, e, C;
    G = this.date[this._mode + "_start"](new Date(this._date.valueOf()));
    D = e = this._table_view ? scheduler.date.week_start(G) : G;
    C = this.date.date_part(new Date());
    var m = scheduler.date.add(G, 1, this._mode);
    var n = 7;
    if (!this._table_view) {
        var p = this.date["get_" + this._mode + "_end"];
        if (p) {
            m = p(G)
        }
        n = Math.round((m.valueOf() - G.valueOf()) / (1000 * 60 * 60 * 24))
    }
    this._min_date = D;
    this._els.dhx_cal_date[0].innerHTML = this.templates[this._mode + "_date"](G, m, this._mode);
    for (var w = 0; w < n; w++) {
        this._cols[w] = Math.floor(r / (n - w));
        this._render_x_header(w, g, D, z);
        if (!this._table_view) {
            var o = document.createElement("DIV");
            var f = "dhx_scale_holder";
            if (D.valueOf() == C.valueOf()) {
                f = "dhx_scale_holder_now"
            }
            o.className = f + " " + this.templates.week_date_class(D, C);
            this.set_xy(o, this._cols[w] - 1, E.hour_size_px * (E.last_hour - E.first_hour), g + this.xy.scale_width + 1, 0);
            H.appendChild(o)
        }
        D = this.date.add(D, 1, "day");
        r -= this._cols[w];
        g += this._cols[w];
        this._colsS[w] = (this._cols[w - 1] || 0) + (this._colsS[w - 1] || (this._table_view ? 0 : this.xy.scale_width + 2))
    }
    this._max_date = D;
    this._colsS[n] = this._cols[n - 1] + this._colsS[n - 1];
    if (this._table_view) {
        this._reset_month_scale(H, G, e)
    } else {
        this._reset_hours_scale(H, G, e);
        if (E.multi_day) {
            var u = document.createElement("DIV");
            u.className = "dhx_multi_day";
            u.style.visibility = "hidden";
            this.set_xy(u, parseInt(z.style.width), 0, this.xy.scale_width, 0);
            H.appendChild(u);
            var q = u.cloneNode(true);
            q.className = "dhx_multi_day_icon";
            q.style.visibility = "hidden";
            this.set_xy(q, this.xy.scale_width - 1, 0, 0, 0);
            H.appendChild(q);
            this._els.dhx_multi_day = [u, q]
        }
    }
};
scheduler._reset_hours_scale = function(e, d, h) {
    var n = document.createElement("DIV");
    n.className = "dhx_scale_holder";
    var f = new Date(1980, 1, 1, this.config.first_hour, 0, 0);
    for (var g = this.config.first_hour * 1; g < this.config.last_hour; g++) {
        var m = document.createElement("DIV");
        m.className = "dhx_scale_hour";
        m.style.height = this.config.hour_size_px - (this._quirks ? 0 : 1) + "px";
        m.style.width = this.xy.scale_width + "px";
        m.innerHTML = scheduler.templates.hour_scale(f);
        n.appendChild(m);
        f = this.date.add(f, 1, "hour")
    }
    e.appendChild(n);
    if (this.config.scroll_hour) {
        e.scrollTop = this.config.hour_size_px * (this.config.scroll_hour - this.config.first_hour)
    }
};
scheduler._reset_month_scale = function(q, r, p) {
    var o = scheduler.date.add(r, 1, "month");
    var c = new Date();
    this.date.date_part(c);
    this.date.date_part(p);
    var w = Math.ceil((o.valueOf() - p.valueOf()) / (60 * 60 * 24 * 1000 * 7));
    var d = [];
    var u = (Math.floor(q.clientHeight / w) - 22);
    this._colsS.height = u + 22;
    var n = this._colsS.heights = [];
    for (var g = 0; g <= 7; g++) {
        d[g] = " style='height:" + u + "px; width:" + ((this._cols[g] || 0) - 1) + "px;' "
    }
    var f = 0;
    this._min_date = p;
    var m = "<table cellpadding='0' cellspacing='0'>";
    for (var g = 0; g < w; g++) {
        m += "<tr>";
        for (var e = 0; e < 7; e++) {
            m += "<td";
            var v = "";
            if (p < r) {
                v = "dhx_before"
            } else {
                if (p >= o) {
                    v = "dhx_after"
                } else {
                    if (p.valueOf() == c.valueOf()) {
                        v = "dhx_now"
                    }
                }
            }
            m += " class='" + v + " " + this.templates.month_date_class(p, c) + "' ";
            m += "><div class='dhx_month_head'>" + this.templates.month_day(p) + "</div><div class='dhx_month_body' " + d[e] + "></div></td>";
            p = this.date.add(p, 1, "day")
        }
        m += "</tr>";
        n[g] = f;
        f += this._colsS.height
    }
    m += "</table>";
    this._max_date = p;
    q.innerHTML = m;
    return p
};
scheduler.getLabel = function(f, e) {
    var g = this.config.lightbox.sections;
    for (var d = 0; d < g.length; d++) {
        if (g[d].map_to == f) {
            var c = g[d].options;
            for (var b = 0; b < c.length; b++) {
                if (c[b].key == e) {
                    return c[b].label
                }
            }
        }
    }
    return ""
};
scheduler.date = {
    date_part: function(b) {
        b.setHours(0);
        b.setMinutes(0);
        b.setSeconds(0);
        b.setMilliseconds(0);
        return b
    },
    time_part: function(b) {
        return (b.valueOf() / 1000 - b.getTimezoneOffset() * 60) % 86400
    },
    week_start: function(c) {
        var b = c.getDay();
        if (scheduler.config.start_on_monday) {
            if (b == 0) {
                b = 6
            } else {
                b--
            }
        }
        return this.date_part(this.add(c, -1 * b, "day"))
    },
    month_start: function(b) {
        b.setDate(1);
        return this.date_part(b)
    },
    year_start: function(b) {
        b.setMonth(0);
        return this.month_start(b)
    },
    day_start: function(b) {
        return this.date_part(b)
    },
    add: function(c, d, e) {
        var b = new Date(c.valueOf());
        switch (e) {
            case "day":
                b.setDate(b.getDate() + d);
                break;
            case "week":
                b.setDate(b.getDate() + 7 * d);
                break;
            case "month":
                b.setMonth(b.getMonth() + d);
                break;
            case "year":
                b.setYear(b.getFullYear() + d);
                break;
            case "hour":
                b.setHours(b.getHours() + d);
                break;
            case "minute":
                b.setMinutes(b.getMinutes() + d);
                break;
            default:
                return scheduler.date["add_" + e](c, d, e)
        }
        return b
    },
    to_fixed: function(b) {
        if (b < 10) {
            return "0" + b
        }
        return b
    },
    copy: function(b) {
        return new Date(b.valueOf())
    },
    date_to_str: function(c, b) {
        c = c.replace(/%[a-zA-Z]/g, function(d) {
            switch (d) {
                case "%d":
                    return '"+scheduler.date.to_fixed(date.getDate())+"';
                case "%m":
                    return '"+scheduler.date.to_fixed((date.getMonth()+1))+"';
                case "%j":
                    return '"+date.getDate()+"';
                case "%n":
                    return '"+(date.getMonth()+1)+"';
                case "%y":
                    return '"+scheduler.date.to_fixed(date.getFullYear()%100)+"';
                case "%Y":
                    return '"+date.getFullYear()+"';
                case "%D":
                    return '"+scheduler.locale.date.day_short[date.getDay()]+"';
                case "%l":
                    return '"+scheduler.locale.date.day_full[date.getDay()]+"';
                case "%M":
                    return '"+scheduler.locale.date.month_short[date.getMonth()]+"';
                case "%F":
                    return '"+scheduler.locale.date.month_full[date.getMonth()]+"';
                case "%h":
                    return '"+scheduler.date.to_fixed((date.getHours()+11)%12+1)+"';
                case "%g":
                    return '"+((date.getHours()+11)%12+1)+"';
                case "%G":
                    return '"+date.getHours()+"';
                case "%H":
                    return '"+scheduler.date.to_fixed(date.getHours())+"';
                case "%i":
                    return '"+scheduler.date.to_fixed(date.getMinutes())+"';
                case "%a":
                    return '"+(date.getHours()>11?"pm":"am")+"';
                case "%A":
                    return '"+(date.getHours()>11?"PM":"AM")+"';
                case "%s":
                    return '"+scheduler.date.to_fixed(date.getSeconds())+"';
                case "%W":
                    return '"+scheduler.date.to_fixed(scheduler.date.getISOWeek(date))+"';
                default:
                    return d
            }
        });
        if (b) {
            c = c.replace(/date\.get/g, "date.getUTC")
        }
        return new Function("date", 'return "' + c + '";')
    },
    str_to_date: function(f, d) {
        var g = "var temp=date.split(/[^0-9a-zA-Z]+/g);";
        var b = f.match(/%[a-zA-Z]/g);
        for (var c = 0; c < b.length; c++) {
            switch (b[c]) {
                case "%j":
                case "%d":
                    g += "set[2]=temp[" + c + "]||1;";
                    break;
                case "%n":
                case "%m":
                    g += "set[1]=(temp[" + c + "]||1)-1;";
                    break;
                case "%y":
                    g += "set[0]=temp[" + c + "]*1+(temp[" + c + "]>50?1900:2000);";
                    break;
                case "%g":
                case "%G":
                case "%h":
                case "%H":
                    g += "set[3]=temp[" + c + "]||0;";
                    break;
                case "%i":
                    g += "set[4]=temp[" + c + "]||0;";
                    break;
                case "%Y":
                    g += "set[0]=temp[" + c + "]||0;";
                    break;
                case "%a":
                case "%A":
                    g += "set[3]=set[3]%12+((temp[" + c + "]||'').toLowerCase()=='am'?0:12);";
                    break;
                case "%s":
                    g += "set[5]=temp[" + c + "]||0;";
                    break
            }
        }
        var e = "set[0],set[1],set[2],set[3],set[4],set[5]";
        if (d) {
            e = " Date.UTC(" + e + ")"
        }
        return new Function("date", "var set=[0,0,1,0,0,0]; " + g + " return new Date(" + e + ");")
    },
    getISOWeek: function(d) {
        if (!d) {
            return false
        }
        var c = d.getDay();
        if (c == 0) {
            c = 7
        }
        var e = new Date(d.valueOf());
        e.setDate(d.getDate() + (4 - c));
        var b = e.getFullYear();
        var g = Math.floor((e.getTime() - new Date(b, 0, 1).getTime()) / 86400000);
        var f = 1 + Math.floor(g / 7);
        return f
    },
    getUTCISOWeek: function(b) {
        return this.getISOWeek(b)
    }
};
scheduler.locale = {
    date: {
        month_full: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
        month_short: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
        day_full: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"],
        day_short: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"]
    },
    labels: {
        dhx_cal_today_button: "Today",
        day_tab: "Day",
        week_tab: "Week",
        month_tab: "Month",
        new_event: "New event",
        icon_save: "Save",
        icon_cancel: "Cancel",
        icon_details: "Details",
        icon_edit: "Edit",
        icon_delete: "Delete",
        confirm_closing: "",
        confirm_deleting: "Event will be deleted permanently, are you sure?",
        section_description: "Description",
        section_time: "Time period",
        full_day: "Full day",
        confirm_recurring: "Do you want to edit the whole set of repeated events?",
        section_recurring: "Repeat event",
        button_recurring: "Disabled",
        button_recurring_open: "Enabled",
        agenda_tab: "Agenda",
        date: "Date",
        description: "Description",
        year_tab: "Year"
    }
};
scheduler.config = {
    default_date: "%j %M %Y",
    month_date: "%F %Y",
    load_date: "%Y-%m-%d",
    week_date: "%l",
    day_date: "%D, %F %j",
    hour_date: "%H:%i",
    month_day: "%d",
    xml_date: "%m/%d/%Y %H:%i",
    api_date: "%d-%m-%Y %H:%i",
    hour_size_px: 42,
    time_step: 5,
    start_on_monday: 1,
    first_hour: 0,
    last_hour: 24,
    readonly: false,
    drag_resize: 1,
    drag_move: 1,
    drag_create: 1,
    dblclick_create: 1,
    edit_on_create: 1,
    details_on_create: 0,
    click_form_details: 0,
    server_utc: false,
    positive_closing: false,
    icons_edit: ["icon_save", "icon_cancel"],
    icons_select: ["icon_details", "icon_edit", "icon_delete"],
    lightbox: {
        sections: [{
            name: "description",
            height: 200,
            map_to: "text",
            type: "textarea",
            focus: true
        }, {
            name: "time",
            height: 72,
            type: "time",
            map_to: "auto"
        }]
    }
};
scheduler.templates = {};
scheduler.init_templates = function() {
    var e = scheduler.date.date_to_str;
    var g = scheduler.config;
    var b = function(f, d) {
        for (var h in d) {
            if (!f[h]) {
                f[h] = d[h]
            }
        }
    };
    b(scheduler.templates, {
        day_date: e(g.default_date),
        month_date: e(g.month_date),
        week_date: function(d, c) {
            return scheduler.templates.day_date(d) + " &ndash; " + scheduler.templates.day_date(scheduler.date.add(c, -1, "day"))
        },
        day_scale_date: e(g.default_date),
        month_scale_date: e(g.week_date),
        week_scale_date: e(g.day_date),
        hour_scale: e(g.hour_date),
        time_picker: e(g.hour_date),
        event_date: e(g.hour_date),
        month_day: e(g.month_day),
        xml_date: scheduler.date.str_to_date(g.xml_date, g.server_utc),
        load_format: e(g.load_date, g.server_utc),
        xml_format: e(g.xml_date, g.server_utc),
        api_date: scheduler.date.str_to_date(g.api_date),
        event_header: function(f, c, d) {
            return scheduler.templates.event_date(f) + " - " + scheduler.templates.event_date(c)
        },
        event_text: function(f, c, d) {
            return d.text
        },
        event_class: function(f, c, d) {
            return ""
        },
        month_date_class: function(c) {
            return ""
        },
        week_date_class: function(c) {
            return ""
        },
        event_bar_date: function(f, c, d) {
            return scheduler.templates.event_date(f) + " "
        },
        event_bar_text: function(f, c, d) {
            return d.text
        }
    });
    this.callEvent("onTemplatesReady", [])
};
scheduler.uid = function() {
    if (!this._seed) {
        this._seed = (new Date).valueOf()
    }
    return this._seed++
};
scheduler._events = {};
scheduler.clearAll = function() {
    this._events = {};
    this._loaded = {};
    this.clear_view()
};
scheduler.addEvent = function(b, h, e, g, c) {
    var d = b;
    if (arguments.length != 1) {
        d = c || {};
        d.start_date = b;
        d.end_date = h;
        d.text = e;
        d.id = g
    }
    d.id = d.id || scheduler.uid();
    d.text = d.text || "";
    if (typeof d.start_date == "string") {
        d.start_date = this.templates.api_date(d.start_date)
    }
    if (typeof d.end_date == "string") {
        d.end_date = this.templates.api_date(d.end_date)
    }
    d._timed = this.is_one_day_event(d);
    var f = !this._events[d.id];
    this._events[d.id] = d;
    this.event_updated(d);
    if (!this._loading) {
        this.callEvent(f ? "onEventAdded" : "onEventChanged", [d.id, d])
    }
};
scheduler.deleteEvent = function(d, b) {
    var c = this._events[d];
    if (!b && !this.callEvent("onBeforeEventDelete", [d, c])) {
        return
    }
    if (c) {
        delete this._events[d];
        this.unselect(d);
        this.event_updated(c)
    }
};
scheduler.getEvent = function(b) {
    return this._events[b]
};
scheduler.setEvent = function(c, b) {
    this._events[c] = b
};
scheduler.for_rendered = function(d, c) {
    for (var b = this._rendered.length - 1; b >= 0; b--) {
        if (this._rendered[b].getAttribute("event_id") == d) {
            c(this._rendered[b], b)
        }
    }
};
scheduler.changeEventId = function(d, b) {
    if (d == b) {
        return
    }
    var c = this._events[d];
    if (c) {
        c.id = b;
        this._events[b] = c;
        delete this._events[d]
    }
    this.for_rendered(d, function(e) {
        e.setAttribute("event_id", b)
    });
    if (this._select_id == d) {
        this._select_id = b
    }
    if (this._edit_id == d) {
        this._edit_id = b
    }
    this.callEvent("onEventIdChange", [d, b])
};
(function() {
    var b = ["text", "Text", "start_date", "StartDate", "end_date", "EndDate"];
    var d = function(f) {
        return function(g) {
            return (scheduler.getEvent(g))[f]
        }
    };
    var e = function(f) {
        return function(m, h) {
            var g = scheduler.getEvent(m);
            g[f] = h;
            g._changed = true;
            g._timed = this.is_one_day_event(g);
            scheduler.event_updated(g, true)
        }
    };
    for (var c = 0; c < b.length; c += 2) {
        scheduler["getEvent" + b[c + 1]] = d(b[c]);
        scheduler["setEvent" + b[c + 1]] = e(b[c])
    }
})();
scheduler.event_updated = function(b, c) {
    if (this.is_visible_events(b)) {
        this.render_view_data()
    } else {
        this.clear_event(b.id)
    }
};
scheduler.is_visible_events = function(b) {
    if (b.start_date < this._max_date && this._min_date < b.end_date) {
        return true
    }
    return false
};
scheduler.is_one_day_event = function(b) {
    var c = b.end_date.getDate() - b.start_date.getDate();
    if (!c) {
        return b.start_date.getMonth() == b.end_date.getMonth() && b.start_date.getFullYear() == b.end_date.getFullYear()
    } else {
        if (c < 0) {
            c = Math.ceil((b.end_date.valueOf() - b.start_date.valueOf()) / (24 * 60 * 60 * 1000))
        }
        return (c == 1 && !b.end_date.getHours() && !b.end_date.getMinutes() && (b.start_date.getHours() || b.start_date.getMinutes()))
    }
};
scheduler.get_visible_events = function() {
    var b = [];
    var c = this["filter_" + this._mode];
    for (var d in this._events) {
        if (this.is_visible_events(this._events[d])) {
            if (this._table_view || this.config.multi_day || this._events[d]._timed) {
                if (!c || c(d, this._events[d])) {
                    b.push(this._events[d])
                }
            }
        }
    }
    return b
};
scheduler.render_view_data = function() {
    if (this._not_render) {
        this._render_wait = true;
        return
    }
    this._render_wait = false;
    this.clear_view();
    var c = this.get_visible_events();
    if (this.config.multi_day && !this._table_view) {
        var e = [];
        var b = [];
        for (var d = 0; d < c.length; d++) {
            if (c[d]._timed) {
                e.push(c[d])
            } else {
                b.push(c[d])
            }
        }
        this._table_view = true;
        this.render_data(b);
        this._table_view = false;
        this.render_data(e)
    } else {
        this.render_data(c)
    }
};
scheduler.render_data = function(b, d) {
    b = this._pre_render_events(b, d);
    for (var c = 0; c < b.length; c++) {
        if (this._table_view) {
            this.render_event_bar(b[c])
        } else {
            this.render_event(b[c])
        }
    }
};
scheduler._pre_render_events = function(u, b) {
    var m = this.xy.bar_height;
    var e = this._colsS.heights;
    var g = this._colsS.heights = [0, 0, 0, 0, 0, 0, 0];
    if (!this._table_view) {
        u = this._pre_render_events_line(u, b)
    } else {
        u = this._pre_render_events_table(u, b)
    }
    if (this._table_view) {
        if (b) {
            this._colsS.heights = e
        } else {
            var c = this._els.dhx_cal_data[0].firstChild;
            if (c.rows) {
                for (var f = 0; f < c.rows.length; f++) {
                    g[f]++;
                    if ((g[f]) * m > this._colsS.height - 22) {
                        var v = c.rows[f].cells;
                        for (var d = 0; d < v.length; d++) {
                            v[d].childNodes[1].style.height = g[f] * m + "px"
                        }
                        g[f] = (g[f - 1] || 0) + v[0].offsetHeight
                    }
                    g[f] = (g[f - 1] || 0) + c.rows[f].cells[0].offsetHeight
                }
                g.unshift(0);
                if (c.parentNode.offsetHeight < c.parentNode.scrollHeight && !c._h_fix) {
                    for (var f = 0; f < c.rows.length; f++) {
                        var r = c.rows[f].cells[6].childNodes[0];
                        var p = r.offsetWidth - scheduler.xy.scroll_width + "px";
                        r.style.width = p;
                        r.nextSibling.style.width = p
                    }
                    c._h_fix = true
                }
            } else {
                if (!u.length && this._els.dhx_multi_day[0].style.visibility == "visible") {
                    g[0] = -1
                }
                if (u.length || g[0] == -1) {
                    var n = c.parentNode.childNodes;
                    var o = (g[0] + 1) * m + "px";
                    for (var f = 0; f < n.length; f++) {
                        if (this._colsS[f]) {
                            n[f].style.top = o
                        }
                    }
                    var q = this._els.dhx_multi_day[0];
                    q.style.top = "0px";
                    q.style.height = o;
                    q.style.visibility = (g[0] == -1 ? "hidden" : "visible");
                    q = this._els.dhx_multi_day[1];
                    q.style.height = o;
                    q.style.visibility = (g[0] == -1 ? "hidden" : "visible");
                    q.className = g[0] ? "dhx_multi_day_icon" : "dhx_multi_day_icon_small";
                    this._dy_shift = (g[0] + 1) * m;
                    g[0] = 0
                }
            }
        }
    }
    return u
};
scheduler._get_event_sday = function(b) {
    return Math.floor((b.start_date.valueOf() - this._min_date.valueOf()) / (24 * 60 * 60 * 1000))
};
scheduler._pre_render_events_line = function(m, b) {
    m.sort(function(p, o) {
        return p.start_date > o.start_date ? 1 : -1
    });
    var h = [];
    var n = [];
    for (var d = 0; d < m.length; d++) {
        var g = m[d];
        var e = g.start_date.getHours();
        var c = g.end_date.getHours();
        g._sday = this._get_event_sday(g);
        if (!h[g._sday]) {
            h[g._sday] = []
        }
        if (!b) {
            g._inner = false;
            var f = h[g._sday];
            while (f.length && f[f.length - 1].end_date <= g.start_date) {
                f.splice(f.length - 1, 1)
            }
            if (f.length) {
                f[f.length - 1]._inner = true
            }
            g._sorder = f.length;
            f.push(g);
            if (f.length > (f.max_count || 0)) {
                f.max_count = f.length
            }
        }
        if (e < this.config.first_hour || c >= this.config.last_hour) {
            n.push(g);
            m[d] = g = this._copy_event(g);
            if (e < this.config.first_hour) {
                g.start_date.setHours(this.config.first_hour);
                g.start_date.setMinutes(0)
            }
            if (c >= this.config.last_hour) {
                g.end_date.setMinutes(0);
                g.end_date.setHours(this.config.last_hour)
            }
            if (g.start_date > g.end_date || e == this.config.last_hour) {
                m.splice(d, 1);
                d--;
                continue
            }
        }
    }
    if (!b) {
        for (var d = 0; d < m.length; d++) {
            m[d]._count = h[m[d]._sday].max_count
        }
        for (var d = 0; d < n.length; d++) {
            n[d]._count = h[n[d]._sday].max_count
        }
    }
    return m
};
scheduler._time_order = function(b) {
    b.sort(function(d, c) {
        if (d.start_date.valueOf() == c.start_date.valueOf()) {
            if (d._timed && !c._timed) {
                return 1
            }
            if (!d._timed && c._timed) {
                return -1
            }
            return 0
        }
        return d.start_date > c.start_date ? 1 : -1
    })
};
scheduler._pre_render_events_table = function(w, d) {
    this._time_order(w);
    var g = [];
    var b = [
        [],
        [],
        [],
        [],
        [],
        [],
        []
    ];
    var u = this._colsS.heights;
    var n;
    var r = this._cols.length;
    for (var h = 0; h < w.length; h++) {
        var q = w[h];
        var o = (n || q.start_date);
        var m = q.end_date;
        if (o < this._min_date) {
            o = this._min_date
        }
        if (m > this._max_date) {
            m = this._max_date
        }
        var f = this.locate_holder_day(o, false, q);
        q._sday = f % r;
        var v = this.locate_holder_day(m, true, q) || r;
        q._eday = (v % r) || r;
        q._length = v - f;
        q._sweek = Math.floor((this._correct_shift(o.valueOf(), 1) - this._min_date.valueOf()) / (60 * 60 * 1000 * 24 * r));
        var p = b[q._sweek];
        var e;
        for (e = 0; e < p.length; e++) {
            if (p[e]._eday <= q._sday) {
                break
            }
        }
        q._sorder = e;
        if (q._sday + q._length <= r) {
            n = null;
            g.push(q);
            p[e] = q;
            u[q._sweek] = p.length - 1
        } else {
            var c = this._copy_event(q);
            c._length = r - q._sday;
            c._eday = r;
            c._sday = q._sday;
            c._sweek = q._sweek;
            c._sorder = q._sorder;
            c.end_date = this.date.add(o, c._length, "day");
            g.push(c);
            p[e] = c;
            n = c.end_date;
            u[q._sweek] = p.length - 1;
            h--;
            continue
        }
    }
    return g
};
scheduler._copy_dummy = function() {
    this.start_date = new Date(this.start_date);
    this.end_date = new Date(this.end_date)
};
scheduler._copy_event = function(b) {
    this._copy_dummy.prototype = b;
    return new this._copy_dummy()
};
scheduler._rendered = [];
scheduler.clear_view = function() {
    for (var b = 0; b < this._rendered.length; b++) {
        var c = this._rendered[b];
        if (c.parentNode) {
            c.parentNode.removeChild(c)
        }
    }
    this._rendered = []
};
scheduler.updateEvent = function(c) {
    var b = this.getEvent(c);
    this.clear_event(c);
    if (b && this.is_visible_events(b)) {
        this.render_data([b], true)
    }
};
scheduler.clear_event = function(b) {
    this.for_rendered(b, function(d, c) {
        if (d.parentNode) {
            d.parentNode.removeChild(d)
        }
        scheduler._rendered.splice(c, 1)
    })
};
scheduler.render_event = function(r) {
    var f = scheduler.xy.menu_width;
    if (r._sday < 0) {
        return
    }
    var u = scheduler.locate_holder(r._sday);
    if (!u) {
        return
    }
    var h = r.start_date.getHours() * 60 + r.start_date.getMinutes();
    var e = (r.end_date.getHours() * 60 + r.end_date.getMinutes()) || (scheduler.config.last_hour * 60);
    var q = (Math.round((h * 60 * 1000 - this.config.first_hour * 60 * 60 * 1000) * this.config.hour_size_px / (60 * 60 * 1000))) % (this.config.hour_size_px * 24) + 1;
    var w = Math.max(scheduler.xy.min_event_height, (e - h) * this.config.hour_size_px / 60) + 1;
    var c = Math.floor((u.clientWidth - f) / r._count);
    var g = r._sorder * c + 1;
    if (!r._inner) {
        c = c * (r._count - r._sorder)
    }
    var p = this._render_v_bar(r.id, f + g, q, c, w, r._text_style, scheduler.templates.event_header(r.start_date, r.end_date, r), scheduler.templates.event_text(r.start_date, r.end_date, r));
    this._rendered.push(p);
    u.appendChild(p);
    g = g + parseInt(u.style.left, 10) + f;
    q += this._dy_shift;
    if (this._edit_id == r.id) {
        p.style.zIndex = 1;
        c = Math.max(c - 4, scheduler.xy.editor_width);
        var p = document.createElement("DIV");
        p.setAttribute("event_id", r.id);
        this.set_xy(p, c, w - 20, g, q + 14);
        p.className = "dhx_cal_editor";
        var b = document.createElement("DIV");
        this.set_xy(b, c - 6, w - 26);
        b.style.cssText += ";margin:2px 2px 2px 2px;overflow:hidden;";
        p.appendChild(b);
        this._els.dhx_cal_data[0].appendChild(p);
        this._rendered.push(p);
        b.innerHTML = "<textarea class='dhx_cal_editor'>" + r.text + "</textarea>";
        if (this._quirks7) {
            b.firstChild.style.height = w - 12 + "px"
        }
        this._editor = b.firstChild;
        this._editor.onkeypress = function(z) {
            if ((z || event).shiftKey) {
                return true
            }
            var d = (z || event).keyCode;
            if (d == scheduler.keys.edit_save) {
                scheduler.editStop(true)
            }
            if (d == scheduler.keys.edit_cancel) {
                scheduler.editStop(false)
            }
        };
        this._editor.onselectstart = function(d) {
            return (d || event).cancelBubble = true
        };
        b.firstChild.focus();
        this._els.dhx_cal_data[0].scrollLeft = 0;
        b.firstChild.select()
    }
    if (this._select_id == r.id) {
        var v = this.config["icons_" + ((this._edit_id == r.id) ? "edit" : "select")];
        var o = "";
        for (var n = 0; n < v.length; n++) {
            o += "<div class='dhx_menu_icon " + v[n] + "' title='" + this.locale.labels[v[n]] + "'></div>"
        }
        var m = this._render_v_bar(r.id, g - f + 1, q, f, v.length * 20 + 26, "", "<div class='dhx_menu_head'></div>", o, true);
        m.style.left = g - f + 1;
        this._els.dhx_cal_data[0].appendChild(m);
        this._rendered.push(m)
    }
};
scheduler._render_v_bar = function(f, v, u, z, o, c, m, g, b) {
    var q = document.createElement("DIV");
    var r = this.getEvent(f);
    var p = "dhx_cal_event";
    var e = scheduler.templates.event_class(r.start_date, r.end_date, r);
    if (e) {
        p = p + " " + e
    }
    var n = '<div event_id="' + f + '" class="' + p + '" style="position:absolute; top:' + u + "px; left:" + v + "px; width:" + (z - 4) + "px; height:" + o + "px;" + (c || "") + '">';
    n += '<div class="dhx_header" style=" width:' + (z - 6) + 'px;" >&nbsp;</div>';
    n += '<div class="dhx_title">' + m + "</div>";
    n += '<div class="dhx_body" style=" width:' + (z - (this._quirks ? 4 : 14)) + "px; height:" + (o - (this._quirks ? 20 : 30)) + 'px;">' + g + "</div>";
    n += '<div class="dhx_footer" style=" width:' + (z - 8) + "px;" + (b ? " margin-top:-1px;" : "") + '" ></div></div>';
    q.innerHTML = n;
    return q.firstChild
};
scheduler.locate_holder = function(b) {
    if (this._mode == "day") {
        return this._els.dhx_cal_data[0].firstChild
    }
    return this._els.dhx_cal_data[0].childNodes[b]
};
scheduler.locate_holder_day = function(c, d) {
    var b = Math.floor((this._correct_shift(c, 1) - this._min_date) / (60 * 60 * 24 * 1000));
    if (d && this.date.time_part(c)) {
        b++
    }
    return b
};
scheduler.render_event_bar = function(n) {
    var p = this._els.dhx_cal_data[0];
    var o = this._colsS[n._sday];
    var b = this._colsS[n._eday];
    if (b == o) {
        b = this._colsS[n._eday + 1]
    }
    var f = this.xy.bar_height;
    var m = this._colsS.heights[n._sweek] + (this._colsS.height ? (this.xy.month_scale_height + 2) : 2) + n._sorder * f;
    var h = document.createElement("DIV");
    var g = n._timed ? "dhx_cal_event_clear" : "dhx_cal_event_line";
    var c = scheduler.templates.event_class(n.start_date, n.end_date, n);
    if (c) {
        g = g + " " + c
    }
    var e = '<div event_id="' + n.id + '" class="' + g + '" style="position:absolute; top:' + m + "px; left:" + o + "px; width:" + (b - o - 15) + "px;" + (n._text_style || "") + '">';
    if (n._timed) {
        e += scheduler.templates.event_bar_date(n.start_date, n.end_date, n)
    }
    e += scheduler.templates.event_bar_text(n.start_date, n.end_date, n) + "</div>";
    e += "</div>";
    h.innerHTML = e;
    this._rendered.push(h.firstChild);
    p.appendChild(h.firstChild)
};
scheduler._locate_event = function(b) {
    var c = null;
    while (b && !c && b.getAttribute) {
        c = b.getAttribute("event_id");
        b = b.parentNode
    }
    return c
};
scheduler.edit = function(b) {
    if (this._edit_id == b) {
        return
    }
    this.editStop(false, b);
    this._edit_id = b;
    this.updateEvent(b)
};
scheduler.editStop = function(c, d) {
    if (d && this._edit_id == d) {
        return
    }
    var b = this.getEvent(this._edit_id);
    if (b) {
        if (c) {
            b.text = this._editor.value
        }
        this._edit_id = null;
        this._editor = null;
        this.updateEvent(b.id);
        this._edit_stop_event(b, c)
    }
};
scheduler._edit_stop_event = function(b, c) {
    if (this._new_event) {
        if (!c) {
            this.deleteEvent(b.id, true)
        } else {
            this.callEvent("onEventAdded", [b.id, b])
        }
        this._new_event = null
    } else {
        if (c) {
            this.callEvent("onEventChanged", [b.id, b])
        }
    }
};
scheduler.getEvents = function(f, e) {
    var b = [];
    for (var c in this._events) {
        var d = this._events[c];
        if (d && d.start_date < e && d.end_date > f) {
            b.push(d)
        }
    }
    return b
};
scheduler._loaded = {};
scheduler._load = function(d, g) {
    d = d || this._load_url;
    d += (d.indexOf("?") == -1 ? "?" : "&") + "timeshift=" + (new Date()).getTimezoneOffset();
    if (this.config.prevent_cache) {
        d += "&uid=" + this.uid()
    }
    var f;
    g = g || this._date;
    if (this._load_mode) {
        var c = this.templates.load_format;
        g = this.date[this._load_mode + "_start"](new Date(g.valueOf()));
        while (g > this._min_date) {
            g = this.date.add(g, -1, this._load_mode)
        }
        f = g;
        var e = true;
        while (f < this._max_date) {
            f = this.date.add(f, 1, this._load_mode);
            if (this._loaded[c(g)] && e) {
                g = this.date.add(g, 1, this._load_mode)
            } else {
                e = false
            }
        }
        var b = f;
        do {
            f = b;
            b = this.date.add(f, -1, this._load_mode)
        } while (b > g && this._loaded[c(b)]);
        if (f <= g) {
            return false
        }
        dhtmlxAjax.get(d + "&from=" + c(g) + "&to=" + c(f), function(h) {
            scheduler.on_load(h)
        });
        while (g < f) {
            this._loaded[c(g)] = true;
            g = this.date.add(g, 1, this._load_mode)
        }
    } else {
        dhtmlxAjax.get(d, function(h) {
            scheduler.on_load(h)
        })
    }
    this.callEvent("onXLS", []);
    return true
};
scheduler.on_load = function(b) {
    this._loading = true;
    if (this._process) {
        var c = this[this._process].parse(b.xmlDoc.responseText)
    } else {
        var c = this._magic_parser(b)
    }
    this._not_render = true;
    for (var d = 0; d < c.length; d++) {
        if (!this.callEvent("onEventLoading", [c[d]])) {
            continue
        }
        this.addEvent(c[d])
    }
    this._not_render = false;
    if (this._render_wait) {
        this.render_view_data()
    }
    if (this._after_call) {
        this._after_call()
    }
    this._after_call = null;
    this._loading = false;
    this.callEvent("onXLE", [])
};
scheduler.json = {};
scheduler.json.parse = function(data) {
    if (typeof data == "string") {
        eval("scheduler._temp = " + data + ";");
        data = scheduler._temp
    }
    var evs = [];
    for (var i = 0; i < data.length; i++) {
        data[i].start_date = scheduler.templates.xml_date(data[i].start_date);
        data[i].end_date = scheduler.templates.xml_date(data[i].end_date);
        evs.push(data[i])
    }
    return evs
};
scheduler.parse = function(c, b) {
    this._process = b;
    this.on_load({
        xmlDoc: {
            responseText: c
        }
    })
};
scheduler.load = function(b, c) {
    if (typeof c == "string") {
        this._process = c;
        c = arguments[2]
    }
    this._load_url = b;
    this._after_call = c;
    this._load(b, this._date)
};
scheduler.setLoadMode = function(b) {
    if (b == "all") {
        b = ""
    }
    this._load_mode = b
};
scheduler.refresh = function(b) {
    alert("not implemented")
};
scheduler.serverList = function(b) {
    return this.serverList[b] = (this.serverList[b] || [])
};
scheduler._userdata = {};
scheduler._magic_parser = function(n) {
    if (!n.getXMLTopNode) {
        var c = n.xmlDoc.responseText;
        n = new dtmlXMLLoaderObject(function() {});
        n.loadXMLString(c)
    }
    var g = n.getXMLTopNode("data");
    if (g.tagName != "data") {
        return []
    }
    var b = n.doXPath("//coll_options");
    for (var f = 0; f < b.length; f++) {
        var m = b[f].getAttribute("for");
        var h = this.serverList[m];
        if (!h) {
            continue
        }
        h.splice(0, h.length);
        var p = n.doXPath(".//item", b[f]);
        for (var d = 0; d < p.length; d++) {
            h.push({
                key: p[d].getAttribute("value"),
                label: p[d].getAttribute("label")
            })
        }
    }
    if (b.length) {
        scheduler.callEvent("onOptionsLoad", [])
    }
    var q = n.doXPath("//userdata");
    for (var f = 0; f < q.length; f++) {
        var e = this.xmlNodeToJSON(q[f]);
        this._userdata[e.name] = e.text
    }
    var o = [];
    var g = n.doXPath("//event");
    for (var f = 0; f < g.length; f++) {
        o[f] = this.xmlNodeToJSON(g[f]);
        o[f].text = o[f].text || o[f]._tagvalue;
        o[f].start_date = this.templates.xml_date(o[f].start_date);
        o[f].end_date = this.templates.xml_date(o[f].end_date)
    }
    return o
};
scheduler.xmlNodeToJSON = function(d) {
    var c = {};
    for (var b = 0; b < d.attributes.length; b++) {
        c[d.attributes[b].name] = d.attributes[b].value
    }
    for (var b = 0; b < d.childNodes.length; b++) {
        var e = d.childNodes[b];
        if (e.nodeType == 1) {
            c[e.tagName] = e.firstChild ? e.firstChild.nodeValue : ""
        }
    }
    if (!c.text) {
        c.text = d.firstChild ? d.firstChild.nodeValue : ""
    }
    return c
};
scheduler.attachEvent("onXLS", function() {
    if (this.config.show_loading === true) {
        var b;
        b = this.config.show_loading = document.createElement("DIV");
        b.className = "dhx_loading";
        b.style.left = Math.round((this._x - 128) / 2) + "px";
        b.style.top = Math.round((this._y - 15) / 2) + "px";
        this._obj.appendChild(b)
    }
});
scheduler.attachEvent("onXLE", function() {
    var b;
    if (b = this.config.show_loading) {
        if (typeof b == "object") {
            this._obj.removeChild(b);
            this.config.show_loading = true
        }
    }
});
scheduler.ical = {
    parse: function(n) {
        var g = n.match(RegExp(this.c_start + "[^\f]*" + this.c_end, ""));
        if (!g.length) {
            return
        }
        g[0] = g[0].replace(/[\r\n]+(?=[a-z \t])/g, " ");
        g[0] = g[0].replace(/\;[^:\r\n]*/g, "");
        var c = [];
        var f;
        var d = RegExp("(?:" + this.e_start + ")([^\f]*?)(?:" + this.e_end + ")", "g");
        while (f = d.exec(g)) {
            var h = {};
            var m;
            var b = /[^\r\n]+[\r\n]+/g;
            while (m = b.exec(f[1])) {
                this.parse_param(m.toString(), h)
            }
            if (h.uid && !h.id) {
                h.id = h.uid
            }
            c.push(h)
        }
        return c
    },
    parse_param: function(g, e) {
        var f = g.indexOf(":");
        if (f == -1) {
            return
        }
        var b = g.substr(0, f).toLowerCase();
        var c = g.substr(f + 1).replace(/\\\,/g, ",").replace(/[\r\n]+$/, "");
        if (b == "summary") {
            b = "text"
        } else {
            if (b == "dtstart") {
                b = "start_date";
                c = this.parse_date(c, 0, 0)
            } else {
                if (b == "dtend") {
                    b = "end_date";
                    if (e.start_date && e.start_date.getHours() == 0) {
                        c = this.parse_date(c, 24, 0)
                    } else {
                        c = this.parse_date(c, 23, 59)
                    }
                }
            }
        }
        e[b] = c
    },
    parse_date: function(h, g, e) {
        var f = h.split("T");
        if (f[1]) {
            g = f[1].substr(0, 2);
            e = f[1].substr(2, 2)
        }
        var d = f[0].substr(0, 4);
        var c = parseInt(f[0].substr(4, 2), 10) - 1;
        var b = f[0].substr(6, 2);
        if (scheduler.config.server_utc && !f[1]) {
            return new Date(Date.UTC(d, c, b, g, e))
        }
        return new Date(d, c, b, g, e)
    },
    c_start: "BEGIN:VCALENDAR",
    e_start: "BEGIN:VEVENT",
    e_end: "END:VEVENT",
    c_end: "END:VCALENDAR"
};
scheduler.form_blocks = {
    textarea: {
        render: function(c) {
            var b = (c.height || "130") + "px";
            return "<div class='dhx_cal_ltext' style='height:" + b + ";'><textarea></textarea></div>"
        },
        set_value: function(c, d, b) {
            c.firstChild.value = d || ""
        },
        get_value: function(c, b) {
            return c.firstChild.value
        },
        focus: function(c) {
            var b = c.firstChild;
            b.select();
            b.focus()
        }
    },
    select: {
        render: function(e) {
            var b = (e.height || "23") + "px";
            var d = "<div class='dhx_cal_ltext' style='height:" + b + ";'><select style='width:552px;'>";
            for (var c = 0; c < e.options.length; c++) {
                d += "<option value='" + e.options[c].key + "'>" + e.options[c].label + "</option>"
            }
            d += "</select></div>";
            return d
        },
        set_value: function(c, d, b) {
            if (typeof d == "undefined") {
                d = (c.firstChild.options[0] || {}).value
            }
            c.firstChild.value = d || ""
        },
        get_value: function(c, b) {
            return c.firstChild.value
        },
        focus: function(c) {
            var b = c.firstChild;
            if (b.select) {
                b.select()
            }
            b.focus()
        }
    },
    time: {
        render: function() {
            var b = scheduler.config;
            var f = this.date.date_part(new Date());
            var e = 24 * 60,
                h = 0;
            if (scheduler.config.limit_time_select) {
                e = 60 * b.last_hour + 1;
                h = 60 * b.first_hour;
                f.setHours(b.first_hour)
            }
            var d = "<select>";
            for (var c = h; c < e; c += this.config.time_step * 1) {
                var g = this.templates.time_picker(f);
                d += "<option value='" + c + "'>" + g + "</option>";
                f = this.date.add(f, this.config.time_step, "minute")
            }
            d += "</select> <select>";
            for (var c = 1; c < 32; c++) {
                d += "<option value='" + c + "'>" + c + "</option>"
            }
            d += "</select> <select>";
            for (var c = 0; c < 12; c++) {
                d += "<option value='" + c + "'>" + this.locale.date.month_full[c] + "</option>"
            }
            d += "</select> <select>";
            f = f.getFullYear() - 5;
            for (var c = 0; c < 10; c++) {
                d += "<option value='" + (f + c) + "'>" + (f + c) + "</option>"
            }
            d += "</select> ";
            return "<div style='height:30px; padding-top:0px; font-size:inherit;' class='dhx_cal_lsection dhx_section_time'>" + d + "<span style='font-weight:normal; font-size:10pt;'> &nbsp;&ndash;&nbsp; </span>" + d + "</div>"
        },
        set_value: function(b, n, h) {
            var o = b.getElementsByTagName("select");
            if (scheduler.config.full_day) {
                if (!b._full_day) {
                    b.previousSibling.innerHTML += "<div class='dhx_fullday_checkbox'><label><input type='checkbox' name='full_day' value='true'> " + scheduler.locale.labels.full_day + "&nbsp;</label></input></div>";
                    b._full_day = true
                }
                var m = b.previousSibling.getElementsByTagName("input")[0];
                var g = (scheduler.date.time_part(h.start_date) == 0 && scheduler.date.time_part(h.end_date) == 0 && h.end_date.valueOf() - h.start_date.valueOf() < 2 * 24 * 60 * 60 * 1000);
                m.checked = g;
                for (var c in o) {
                    o[c].disabled = m.checked
                }
                m.onclick = function() {
                    if (m.checked) {
                        var p = new Date(h.start_date);
                        var r = new Date(h.end_date);
                        scheduler.date.date_part(p);
                        r = scheduler.date.add(p, 1, "day")
                    }
                    for (var q in o) {
                        o[q].disabled = m.checked
                    }
                    d(o, 0, p || h.start_date);
                    d(o, 4, r || h.end_date)
                }
            }
            if (scheduler.config.auto_end_date && scheduler.config.event_duration) {
                function f() {
                    h.start_date = new Date(o[3].value, o[2].value, o[1].value, 0, o[0].value);
                    h.end_date.setTime(h.start_date.getTime() + (scheduler.config.event_duration * 60 * 1000));
                    d(o, 4, h.end_date)
                }
                for (var e = 0; e < 4; e++) {
                    o[e].onchange = f
                }
            }

            function d(q, p, r) {
                q[p + 0].value = Math.round((r.getHours() * 60 + r.getMinutes()) / scheduler.config.time_step) * scheduler.config.time_step;
                q[p + 1].value = r.getDate();
                q[p + 2].value = r.getMonth();
                q[p + 3].value = r.getFullYear()
            }
            d(o, 0, h.start_date);
            d(o, 4, h.end_date)
        },
        get_value: function(c, b) {
            s = c.getElementsByTagName("select");
            b.start_date = new Date(s[3].value, s[2].value, s[1].value, 0, s[0].value);
            b.end_date = new Date(s[7].value, s[6].value, s[5].value, 0, s[4].value);
            if (b.end_date <= b.start_date) {
                b.end_date = scheduler.date.add(b.start_date, scheduler.config.time_step, "minute")
            }
        },
        focus: function(b) {
            b.getElementsByTagName("select")[0].focus()
        }
    }
};
scheduler.showCover = function(b) {
    this.show_cover();
    if (b) {
        b.style.display = "block";
        var c = getOffset(this._obj);
        b.style.top = Math.round(c.top + (this._obj.offsetHeight - b.offsetHeight) / 2) + "px";
        b.style.left = Math.round(c.left + (this._obj.offsetWidth - b.offsetWidth) / 2) + "px"
    }
};
scheduler.showLightbox = function(c) {
    if (!c) {
        return
    }
    if (!this.callEvent("onBeforeLightbox", [c])) {
        return
    }
    var b = this._get_lightbox();
    this.showCover(b);
    this._fill_lightbox(c, b);
    this.callEvent("onLightbox", [c])
};
scheduler._fill_lightbox = function(m, f) {
    var e = this.getEvent(m);
    var c = f.getElementsByTagName("span");
    if (scheduler.templates.lightbox_header) {
        c[1].innerHTML = "";
        c[2].innerHTML = scheduler.templates.lightbox_header(e.start_date, e.end_date, e)
    } else {
        c[1].innerHTML = this.templates.event_header(e.start_date, e.end_date, e);
        c[2].innerHTML = (this.templates.event_bar_text(e.start_date, e.end_date, e) || "").substr(0, 70)
    }
    var g = this.config.lightbox.sections;
    for (var b = 0; b < g.length; b++) {
        var d = document.getElementById(g[b].id).nextSibling;
        var h = this.form_blocks[g[b].type];
        h.set_value.call(this, d, e[g[b].map_to], e, g[b]);
        if (g[b].focus) {
            h.focus.call(this, d)
        }
    }
    scheduler._lightbox_id = m
};
scheduler._lightbox_out = function(e) {
    var f = this.config.lightbox.sections;
    for (var c = 0; c < f.length; c++) {
        var d = document.getElementById(f[c].id).nextSibling;
        var g = this.form_blocks[f[c].type];
        var b = g.get_value.call(this, d, e, f[c]);
        if (f[c].map_to != "auto") {
            e[f[c].map_to] = b
        }
    }
    return e
};
scheduler._empty_lightbox = function() {
    var d = scheduler._lightbox_id;
    var c = this.getEvent(d);
    var b = this._get_lightbox();
    this._lightbox_out(c);
    c._timed = this.is_one_day_event(c);
    this.setEvent(c.id, c);
    this._edit_stop_event(c, true);
    this.render_view_data()
};
scheduler.hide_lightbox = function(b) {
    this.hideCover(this._get_lightbox());
    this._lightbox_id = null;
    this.callEvent("onAfterLightbox", [])
};
scheduler.hideCover = function(b) {
    if (b) {
        b.style.display = "none"
    }
    this.hide_cover()
};
scheduler.hide_cover = function() {
    if (this._cover) {
        this._cover.parentNode.removeChild(this._cover)
    }
    this._cover = null
};
scheduler.show_cover = function() {
    this._cover = document.createElement("DIV");
    this._cover.className = "dhx_cal_cover";
    document.body.appendChild(this._cover)
};
scheduler.save_lightbox = function() {
    if (this.checkEvent("onEventSave") && !this.callEvent("onEventSave", [this._lightbox_id, this._lightbox_out({
            id: this._lightbox_id
        }), this._new_event])) {
        return
    }
    this._empty_lightbox();
    this.hide_lightbox()
};
scheduler.startLightbox = function(c, b) {
    this._lightbox_id = c;
    this.showCover(b)
};
scheduler.endLightbox = function(c, b) {
    this._edit_stop_event(scheduler.getEvent(this._lightbox_id), c);
    if (c) {
        scheduler.render_view_data()
    }
    this.hideCover(b)
};
scheduler.resetLightbox = function() {
    scheduler._lightbox = null
};
scheduler.cancel_lightbox = function() {
    this.callEvent("onEventCancel", [this._lightbox_id, this._new_event]);
    this.endLightbox(false);
    this.hide_lightbox()
};
scheduler._init_lightbox_events = function() {
    this._get_lightbox().onclick = function(f) {
        var h = f ? f.target : event.srcElement;
        if (!h.className) {
            h = h.previousSibling
        }
        if (h && h.className) {
            switch (h.className) {
                case "dhx_save_btn":
                    scheduler.save_lightbox();
                    break;
                case "dhx_delete_btn":
                    var m = scheduler.locale.labels.confirm_deleting;
                    if (!m || confirm(m)) {
                        scheduler.deleteEvent(scheduler._lightbox_id);
                        scheduler._new_event = null;
                        scheduler.hide_lightbox()
                    }
                    break;
                case "dhx_cancel_btn":
                    scheduler.cancel_lightbox();
                    break;
                default:
                    if (h.className.indexOf("dhx_custom_button_") != -1) {
                        var b = h.parentNode.getAttribute("index");
                        var g = scheduler.form_blocks[scheduler.config.lightbox.sections[b].type];
                        var d = h.parentNode.parentNode;
                        g.button_click(b, h, d, d.nextSibling)
                    }
            }
        }
    };
    this._get_lightbox().onkeypress = function(b) {
        switch ((b || event).keyCode) {
            case scheduler.keys.edit_save:
                if ((b || event).shiftKey) {
                    return
                }
                scheduler.save_lightbox();
                break;
            case scheduler.keys.edit_cancel:
                scheduler.cancel_lightbox();
                break
        }
    }
};
scheduler.setLightboxSize = function() {
    var c = this._lightbox;
    if (!c) {
        return
    }
    var b = c.childNodes[1];
    b.style.height = "0px";
    b.style.height = b.scrollHeight + "px";
    c.style.height = b.scrollHeight + 50 + "px";
    b.style.height = b.scrollHeight + "px"
};
scheduler._get_lightbox = function() {
    if (!this._lightbox) {
        var m = document.createElement("DIV");
        m.className = "dhx_cal_light";
        if (/msie|MSIE 6/.test(navigator.userAgent)) {
            m.className += " dhx_ie6"
        }
        m.style.visibility = "hidden";
        m.innerHTML = this._lightbox_template;
        document.body.insertBefore(m, document.body.firstChild);
        this._lightbox = m;
        var g = this.config.lightbox.sections;
        var e = "";
        for (var c = 0; c < g.length; c++) {
            var h = this.form_blocks[g[c].type];
            if (!h) {
                continue
            }
            g[c].id = "area_" + this.uid();
            var b = "";
            if (g[c].button) {
                b = "<div style='float:right;' class='dhx_custom_button' index='" + c + "'><div class='dhx_custom_button_" + g[c].name + "'></div><div>" + this.locale.labels["button_" + g[c].button] + "</div></div>"
            }
            e += "<div id='" + g[c].id + "' class='dhx_cal_lsection'>" + b + this.locale.labels["section_" + g[c].name] + "</div>" + h.render.call(this, g[c])
        }
        var f = m.getElementsByTagName("div");
        f[4].innerHTML = scheduler.locale.labels.icon_save;
        f[7].innerHTML = scheduler.locale.labels.icon_cancel;
        f[10].innerHTML = scheduler.locale.labels.icon_delete;
        f[1].innerHTML = e;
        this.setLightboxSize();
        this._init_lightbox_events(this);
        m.style.display = "none";
        m.style.visibility = "visible"
    }
    return this._lightbox
};
scheduler._lightbox_template = "<div class='dhx_cal_ltitle'><span class='dhx_mark'>&nbsp;</span><span class='dhx_time'></span><span class='dhx_title'></span></div><div class='dhx_cal_larea'></div><div class='dhx_btn_set'><div class='dhx_save_btn'></div><div>&nbsp;</div></div><div class='dhx_btn_set'><div class='dhx_cancel_btn'></div><div>&nbsp;</div></div><div class='dhx_btn_set' style='float:right;'><div class='dhx_delete_btn'></div><div>&nbsp;</div></div>";
scheduler._dp_init = function(b) {
    b._methods = ["setEventTextStyle", "", "changeEventId", "deleteEvent"];
    this.attachEvent("onEventAdded", function(c) {
        if (!this._loading && this.validId(c)) {
            b.setUpdated(c, true, "inserted")
        }
    });
    this.attachEvent("onBeforeEventDelete", function(d) {
        if (!this.validId(d)) {
            return
        }
        var c = b.getState(d);
        if (c == "inserted" || this._new_event) {
            b.setUpdated(d, false);
            return true
        }
        if (c == "deleted") {
            return false
        }
        if (c == "true_deleted") {
            return true
        }
        b.setUpdated(d, true, "deleted");
        return false
    });
    this.attachEvent("onEventChanged", function(c) {
        if (!this._loading && this.validId(c)) {
            b.setUpdated(c, true, "updated")
        }
    });
    b._getRowData = function(g, c) {
        var e = this.obj.getEvent(g);
        var f = {};
        for (var d in e) {
            if (d.indexOf("_") == 0) {
                continue
            }
            if (e[d] && e[d].getUTCFullYear) {
                f[d] = this.obj.templates.xml_format(e[d])
            } else {
                f[d] = e[d]
            }
        }
        return f
    };
    b._clearUpdateFlag = function() {};
    b.attachEvent("insertCallback", scheduler._update_callback);
    b.attachEvent("updateCallback", scheduler._update_callback);
    b.attachEvent("deleteCallback", function(c, d) {
        this.obj.setUserData(d, this.action_param, "true_deleted");
        this.obj.deleteEvent(d)
    })
};
scheduler.setUserData = function(d, b, c) {
    if (d) {
        this.getEvent(d)[b] = c
    } else {
        this._userdata[b] = c
    }
};
scheduler.getUserData = function(c, b) {
    return c ? this.getEvent(c)[b] : this._userdata[b]
};
scheduler.setEventTextStyle = function(d, b) {
    this.for_rendered(d, function(e) {
        e.style.cssText += ";" + b
    });
    var c = this.getEvent(d);
    c._text_style = b;
    this.event_updated(c)
};
scheduler.validId = function(b) {
    return true
};
scheduler._update_callback = function(c, d) {
    var b = scheduler.xmlNodeToJSON(c.firstChild);
    b.text = b.text || b._tagvalue;
    b.start_date = scheduler.templates.xml_date(b.start_date);
    b.end_date = scheduler.templates.xml_date(b.end_date);
    scheduler.addEvent(b)
};
scheduler.expand = function() {
    var b = scheduler._obj;
    do {
        b._position = b.style.position || "";
        b.style.position = "static"
    } while ((b = b.parentNode) && b.style);
    b = scheduler._obj;
    b.style.position = "absolute";
    b._width = b.style.width;
    b._height = b.style.height;
    b.style.width = b.style.height = "100%";
    b.style.top = b.style.left = "0px";
    var c = document.body;
    c.scrollTop = 0;
    c = c.parentNode;
    if (c) {
        c.scrollTop = 0
    }
    document.body._overflow = document.body.style.overflow || "";
    document.body.style.overflow = "hidden";
    scheduler._maximize()
};
scheduler.collapse = function() {
    var b = scheduler._obj;
    do {
        b.style.position = b._position
    } while ((b = b.parentNode) && b.style);
    b = scheduler._obj;
    b.style.width = b._width;
    b.style.height = b._height;
    document.body.style.overflow = document.body._overflow;
    scheduler._maximize()
};
scheduler.attachEvent("onTemplatesReady", function() {
    var b = document.createElement("DIV");
    b.className = "dhx_expand_icon";
    scheduler.toggleIcon = b;
    scheduler._obj.appendChild(b);
    b.onclick = function() {
        if (!scheduler.expanded) {
            scheduler.expand()
        } else {
            scheduler.collapse()
        }
    }
});
scheduler._maximize = function() {
    this.expanded = !this.expanded;
    this.toggleIcon.style.backgroundPosition = "0px " + (this._expand ? "0" : "18") + "px";
    if (scheduler.callEvent("onSchedulerResize", [])) {
        scheduler.update_view()
    }
};
scheduler.attachEvent("onTemplatesReady", function() {
    scheduler.attachEvent("onBeforeLightbox", function(f) {
        if (this.config.readonly_form || this.getEvent(f).readonly) {
            this.config.readonly_active = true
        } else {
            this.config.readonly_active = false;
            return true
        }
        for (var g = 0; g < this.config.lightbox.sections.length; g++) {
            this.config.lightbox.sections[g].focus = false
        }
        return true
    });

    function c(q, g, f, h) {
        var o = g.getElementsByTagName(q);
        var p = f.getElementsByTagName(q);
        for (var m = p.length - 1; m >= 0; m--) {
            var f = p[m];
            if (!h) {
                f.disabled = true
            } else {
                var n = document.createElement("SPAN");
                n.className = "dhx_text_disabled";
                n.innerHTML = h(o[m]);
                f.parentNode.insertBefore(n, f);
                f.parentNode.removeChild(f)
            }
        }
    }
    var e = scheduler._fill_lightbox;
    scheduler._fill_lightbox = function() {
        var h = this.config.lightbox.sections;
        if (this.config.readonly_active) {
            for (var n = 0; n < h.length; n++) {
                if (h[n].type == "recurring") {
                    var m = document.getElementById(h[n].id);
                    m.style.display = m.nextSibling.style.display = "none";
                    h.splice(n, 1);
                    n--
                }
            }
        }
        var o = e.apply(this, arguments);
        if (this.config.readonly_active) {
            var g = this._get_lightbox();
            var f = this._lightbox_r = g.cloneNode(true);
            c("textarea", g, f, function(p) {
                return p.value
            });
            c("input", g, f, false);
            c("select", g, f, function(p) {
                return p.options[Math.max((p.selectedIndex || 0), 0)].text
            });
            f.removeChild(f.childNodes[2]);
            f.removeChild(f.childNodes[3]);
            g.parentNode.insertBefore(f, g);
            b.call(this, f);
            this._lightbox = f;
            this.setLightboxSize();
            this._lightbox = null;
            f.onclick = function(q) {
                var p = q ? q.target : event.srcElement;
                if (!p.className) {
                    p = p.previousSibling
                }
                if (p && p.className) {
                    switch (p.className) {
                        case "dhx_cancel_btn":
                            scheduler.callEvent("onEventCancel", [scheduler._lightbox_id]);
                            scheduler._edit_stop_event(scheduler.getEvent(scheduler._lightbox_id), false);
                            scheduler.hide_lightbox();
                            break
                    }
                }
            }
        }
        return o
    };
    var b = scheduler.showCover;
    scheduler.showCover = function() {
        if (!this.config.readonly_active) {
            b.apply(this, arguments)
        }
    };
    var d = scheduler.hide_lightbox;
    scheduler.hide_lightbox = function() {
        if (this._lightbox_r) {
            this._lightbox_r.parentNode.removeChild(this._lightbox_r);
            this._lightbox_r = null
        }
        return d.apply(this, arguments)
    }
});
(function() {
    scheduler.matrix = {};
    scheduler._merge = function(r, q) {
        for (var u in q) {
            if (typeof r[u] == "undefined") {
                r[u] = q[u]
            }
        }
    };
    scheduler.createTimelineView = function(v) {
        scheduler._merge(v, {
            section_autoheight: true,
            name: "matrix",
            x: "time",
            y: "time",
            x_step: 1,
            x_unit: "hour",
            y_unit: "day",
            y_step: 1,
            x_start: 0,
            x_size: 24,
            y_start: 0,
            y_size: 7,
            render: "cell",
            dx: 200,
            dy: 50,
            fit_events: true,
            _logic: function(D, C, z) {
                var w = {};
                if (scheduler.checkEvent("onBeforeViewRender")) {
                    w = scheduler.callEvent("onBeforeViewRender", [D, C, z])
                }
                return w
            }
        });
        if (scheduler.checkEvent("onTimelineCreated")) {
            scheduler.callEvent("onTimelineCreated", [v])
        }
        var q = scheduler.render_data;
        scheduler.render_data = function(w, C) {
            if (this._mode == v.name) {
                if (C) {
                    for (var z = 0; z < w.length; z++) {
                        this.clear_event(w[z]);
                        this.render_timeline_event.call(this.matrix[this._mode], w[z], 0, true)
                    }
                } else {
                    d.call(v, true)
                }
            } else {
                return q.apply(this, arguments)
            }
        };
        scheduler.matrix[v.name] = v;
        scheduler.templates[v.name + "_cell_value"] = function(w) {
            return w ? w.length : ""
        };
        scheduler.templates[v.name + "_cell_class"] = function(w) {
            return ""
        };
        scheduler.templates[v.name + "_scalex_class"] = function(w) {
            return ""
        };
        scheduler.templates[v.name + "_scaley_class"] = function(z, C, w) {
            return ""
        };
        scheduler.templates[v.name + "_scale_label"] = function(z, C, w) {
            return C
        };
        scheduler.templates[v.name + "_tooltip"] = function(z, w, C) {
            return C.text
        };
        scheduler.templates[v.name + "_date"] = function(z, w) {
            if (z.getDay() == w.getDay() && w - z < (24 * 60 * 60 * 1000)) {
                return scheduler.templates.day_date(z)
            }
            return scheduler.templates.week_date(z, w)
        };
        scheduler.templates[v.name + "_scale_date"] = scheduler.date.date_to_str(v.x_date || scheduler.config.hour_date);
        scheduler.date["add_" + v.name] = function(z, w, C) {
            return scheduler.date.add(z, (v.x_length || v.x_size) * w * v.x_step, v.x_unit)
        };
        scheduler.date[v.name + "_start"] = scheduler.date[v.x_unit + "_start"] || scheduler.date.day_start;
        scheduler.attachEvent("onSchedulerResize", function() {
            if (this._mode == v.name) {
                d.call(v, true);
                return false
            }
            return true
        });
        scheduler.attachEvent("onOptionsLoad", function() {
            v.order = {};
            scheduler.callEvent("onOptionsLoadStart", []);
            for (var w = 0; w < v.y_unit.length; w++) {
                v.order[v.y_unit[w].key] = w
            }
            scheduler.callEvent("onOptionsLoadFinal", []);
            if (scheduler._date && v.name == scheduler._mode) {
                scheduler.setCurrentView(scheduler._date, scheduler._mode)
            }
        });
        scheduler.callEvent("onOptionsLoad", [v]);
        scheduler[v.name + "_view"] = function() {
            scheduler.renderMatrix.apply(v, arguments)
        };
        if (v.render != "cell") {
            var u = new Date();
            var r = (scheduler.date.add(u, 1, v.x_unit).valueOf() - u.valueOf());
            scheduler["mouse_" + v.name] = function(G) {
                var w = this._drag_event;
                if (this._drag_id) {
                    w = this.getEvent(this._drag_id);
                    this._drag_event._dhx_changed = true
                }
                G.x -= v.dx;
                var E = 0,
                    D = 0,
                    z = 0;
                for (D; D < this._cols.length - 1; D++) {
                    E += this._cols[D];
                    if (E > G.x) {
                        break
                    }
                }
                E = 0;
                for (z; z < this._colsS.heights.length; z++) {
                    E += this._colsS.heights[z];
                    if (E > G.y) {
                        break
                    }
                }
                G.fields = {};
                if (!v.y_unit[z]) {
                    z = v.y_unit.length - 1
                }
                G.fields[v.y_property] = w[v.y_property] = v.y_unit[z].key;
                G.x = 0;
                if (this._drag_mode == "new-size" && w.start_date * 1 == this._drag_start * 1) {
                    D++
                }
                if (D >= v._trace_x.length) {
                    var C = scheduler.date.add(v._trace_x[v._trace_x.length - 1], v.x_step, v.x_unit)
                } else {
                    var C = v._trace_x[D]
                }
                G.y = Math.round((C - this._min_date) / (1000 * 60 * this.config.time_step));
                G.custom = true;
                G.shift = r;
                return G
            }
        }
    };
    scheduler.render_timeline_event = function(H, I, D) {
        var u = f(H, false, this._step);
        var q = f(H, true, this._step);
        var C = scheduler.xy.bar_height;
        var G = 2 + I * C;
        var M = C + G - 2;
        var L = H[this.y_property];
        if (!this._events_height[L] || (this._events_height[L] < M)) {
            this._events_height[L] = M
        }
        var z = scheduler.templates.event_class(H.start_date, H.end_date, H);
        z = "dhx_cal_event_line " + (z || "");
        var J = (H.color ? ("background-color:" + H.color + ";") : "");
        var v = (H.textColor ? ("color:" + H.textColor + ";") : "");
        var w = '<div event_id="' + H.id + '" class="' + z + '" style="' + J + "" + v + "position:absolute; top:" + G + "px; left:" + u + "px; width:" + Math.max(0, q - u) + "px;" + (H._text_style || "") + '">' + scheduler.templates.event_bar_text(H.start_date, H.end_date, H) + "</div>";
        if (!D) {
            return w
        } else {
            var E = document.createElement("DIV");
            E.innerHTML = w;
            var r = this.order[L];
            var K = scheduler._els.dhx_cal_data[0].firstChild.rows[r].cells[1].firstChild;
            scheduler._rendered.push(E.firstChild);
            K.appendChild(E.firstChild)
        }
    };

    function p() {
        var u = scheduler.get_visible_events();
        var r = [];
        for (var v = 0; v < this.y_unit.length; v++) {
            r[v] = []
        }
        if (!r[w]) {
            r[w] = []
        }
        for (var v = 0; v < u.length; v++) {
            var w = this.order[u[v][this.y_property]];
            var q = 0;
            while (this._trace_x[q + 1] && u[v].start_date >= this._trace_x[q + 1]) {
                q++
            }
            while (this._trace_x[q] && u[v].end_date > this._trace_x[q]) {
                if (!r[w][q]) {
                    r[w][q] = []
                }
                r[w][q].push(u[v]);
                q++
            }
        }
        return r
    }

    function f(D, z, q) {
        var E = 0;
        var v = (z) ? D.end_date : D.start_date;
        if (v.valueOf() > scheduler._max_date.valueOf()) {
            v = scheduler._max_date
        }
        var G = v - scheduler._min_date_timeline;
        if (G < 0) {
            r = 0
        } else {
            var C = Math.round(G / (q * scheduler._cols[0]));
            if (C > scheduler._cols.length) {
                C = scheduler._cols.length
            }
            for (var w = 0; w < C; w++) {
                E += scheduler._cols[w]
            }
            var u = scheduler.date.add(scheduler._min_date_timeline, scheduler.matrix[scheduler._mode].x_step * C, scheduler.matrix[scheduler._mode].x_unit);
            G = v - u;
            var r = Math.floor(G / q)
        }
        E += (z) ? r - 14 : r + 1;
        return E
    }

    function b(G) {
        var E = "<table style='table-layout:fixed;' cellspacing='0' cellpadding='0'>";
        var N = [];
        if (scheduler._load_mode) {
            scheduler._load()
        }
        if (this.render == "cell") {
            N = p.call(this)
        } else {
            var H = scheduler.get_visible_events();
            for (var v = 0; v < H.length; v++) {
                var u = this.order[H[v][this.y_property]];
                if (!N[u]) {
                    N[u] = []
                }
                N[u].push(H[v])
            }
        }
        var M = 0;
        for (var C = 0; C < scheduler._cols.length; C++) {
            M += scheduler._cols[C]
        }
        var r = new Date();
        r = (scheduler.date.add(r, this.x_step * this.x_size, this.x_unit) - r) / M;
        this._step = r;
        this._summ = M;
        var J = scheduler._colsS.heights = [];
        this._events_height = {};
        for (var C = 0; C < this.y_unit.length; C++) {
            var D = this._logic(this.render, this.y_unit[C], this);
            scheduler._merge(D, {
                height: this.dy
            });
            if (this.section_autoheight) {
                if (this.y_unit.length * D.height < G.offsetHeight) {
                    D.height = Math.max(D.height, Math.floor((G.offsetHeight - 1) / this.y_unit.length))
                }
            }
            scheduler._merge(D, {
                tr_className: "",
                style_height: "height:" + D.height + "px;",
                style_width: "width:" + (this.dx - 1) + "px;",
                td_className: "dhx_matrix_scell" + ((scheduler.templates[this.name + "_scaley_class"](this.y_unit[C].key, this.y_unit[C].label, this)) ? " " + scheduler.templates[this.name + "_scaley_class"](this.y_unit[C].key, this.y_unit[C].label, this) : ""),
                td_content: scheduler.templates[this.name + "_scale_label"](this.y_unit[C].key, this.y_unit[C].label, this),
                summ_width: "width:" + M + "px;",
                table_className: ""
            });
            var z = "";
            if (N[C]) {
                N[C].sort(function(P, O) {
                    return P.start_date > O.start_date ? 1 : -1
                });
                var L = [];
                for (var v = 0; v < N[C].length; v++) {
                    var K = N[C][v];
                    var q = 0;
                    while (L[q] && L[q].end_date > K.start_date) {
                        q++
                    }
                    L[q] = K;
                    z += scheduler.render_timeline_event.call(this, K, q)
                }
            }
            if (this.fit_events) {
                var w = this._events_height[this.y_unit[C].key] || 0;
                D.height = (w > D.height) ? w : D.height;
                D.style_height = "height:" + D.height + "px;"
            }
            E += "<tr class='" + D.tr_className + "' style='" + D.style_height + "'><td class='" + D.td_className + "' style='" + D.style_width + " height:" + (D.height - 1) + "px;'>" + D.td_content + "</td>";
            if (this.render == "cell") {
                for (var v = 0; v < scheduler._cols.length; v++) {
                    E += "<td class='dhx_matrix_cell " + scheduler.templates[this.name + "_cell_class"](N[C][v], this._trace_x[v], this.y_unit[C]) + "' style='width:" + (scheduler._cols[v] - 1) + "px'><div style='width:" + (scheduler._cols[v] - 1) + "px'>" + scheduler.templates[this.name + "_cell_value"](N[C][v]) + "</div></td>"
                }
            } else {
                E += "<td><div style='" + D.summ_width + " " + D.style_height + " position:relative;' class='dhx_matrix_line'>";
                E += z;
                E += "<table class='" + D.table_className + "' cellpadding='0' cellspacing='0' style='" + D.summ_width + " " + D.style_height + "' >";
                for (var v = 0; v < scheduler._cols.length; v++) {
                    E += "<td class='dhx_matrix_cell " + scheduler.templates[this.name + "_cell_class"](N[C], this._trace_x[v], this.y_unit[C]) + "' style='width:" + (scheduler._cols[v] - 1) + "px'><div style='width:" + (scheduler._cols[v] - 1) + "px'><div></td>"
                }
                E += "</table>";
                E += "</div></td>"
            }
            E += "</tr>"
        }
        E += "</table>";
        this._matrix = N;
        G.innerHTML = E;
        scheduler._rendered = [];
        var I = document.getElementsByTagName("DIV");
        for (var C = 0; C < I.length; C++) {
            if (I[C].getAttribute("event_id")) {
                scheduler._rendered.push(I[C])
            }
        }
        for (var C = 0; C < G.firstChild.rows.length; C++) {
            J.push(G.firstChild.rows[C].offsetHeight)
        }
    }

    function e(u) {
        u.innerHTML = "<div></div>";
        u = u.firstChild;
        scheduler._cols = [];
        scheduler._colsS = {
            height: 0
        };
        this._trace_x = [];
        scheduler._min_date_timeline = scheduler._min_date;
        var C = scheduler._min_date;
        var z = scheduler._x - this.dx - 18;
        var w = this.dx;
        for (var q = 0; q < this.x_size; q++) {
            scheduler._cols[q] = Math.floor(z / (this.x_size - q));
            this._trace_x[q] = new Date(C);
            scheduler._render_x_header(q, w, C, u);
            var r = scheduler.templates[this.name + "_scalex_class"](C);
            if (r) {
                u.lastChild.className += " " + r
            }
            C = scheduler.date.add(C, this.x_step, this.x_unit);
            z -= scheduler._cols[q];
            w += scheduler._cols[q]
        }
        var v = this._trace_x;
        u.onclick = function(D) {
            var E = c(D);
            if (E) {
                scheduler.callEvent("onXScaleClick", [E.x, v[E.x], D || event])
            }
        };
        u.ondblclick = function(D) {
            var E = c(D);
            if (E) {
                scheduler.callEvent("onXScaleDblClick", [E.x, v[E.x], D || event])
            }
        }
    }

    function d(r) {
        if (r) {
            scheduler.set_sizes();
            g();
            var q = scheduler._min_date;
            e.call(this, scheduler._els.dhx_cal_header[0]);
            b.call(this, scheduler._els.dhx_cal_data[0]);
            scheduler._min_date = q;
            scheduler._els.dhx_cal_date[0].innerHTML = scheduler.templates[this.name + "_date"](scheduler._min_date, scheduler._max_date);
            scheduler._table_view = true
        }
    }

    function m() {
        if (scheduler._tooltip) {
            scheduler._tooltip.style.display = "none";
            scheduler._tooltip.date = ""
        }
    }

    function o(v, C, u) {
        if (v.render != "cell") {
            return
        }
        var r = C.x + "_" + C.y;
        var E = v._matrix[C.y][C.x];
        if (!E) {
            return m()
        }
        E.sort(function(I, H) {
            return I.start_date > H.start_date ? 1 : -1
        });
        if (scheduler._tooltip) {
            if (scheduler._tooltip.date == r) {
                return
            }
            scheduler._tooltip.innerHTML = ""
        } else {
            var G = scheduler._tooltip = document.createElement("DIV");
            G.className = "dhx_tooltip";
            document.body.appendChild(G);
            G.onclick = scheduler._click.dhx_cal_data
        }
        var z = "";
        for (var w = 0; w < E.length; w++) {
            var D = (E[w].color ? ("background-color:" + E[w].color + ";") : "");
            var q = (E[w].textColor ? ("color:" + E[w].textColor + ";") : "");
            z += "<div class='dhx_tooltip_line' event_id='" + E[w].id + "' style='" + D + "" + q + "'>";
            z += "<div class='dhx_tooltip_date'>" + (E[w]._timed ? scheduler.templates.event_date(E[w].start_date) : "") + "</div>";
            z += "<div class='dhx_event_icon icon_details'>&nbsp;</div>";
            z += scheduler.templates[v.name + "_tooltip"](E[w].start_date, E[w].end_date, E[w]) + "</div>"
        }
        scheduler._tooltip.style.display = "";
        scheduler._tooltip.style.top = "0px";
        if (document.body.offsetWidth - u.left - scheduler._tooltip.offsetWidth < 0) {
            scheduler._tooltip.style.left = u.left - scheduler._tooltip.offsetWidth + "px"
        } else {
            scheduler._tooltip.style.left = u.left + C.src.offsetWidth + "px"
        }
        scheduler._tooltip.date = r;
        scheduler._tooltip.innerHTML = z;
        if (document.body.offsetHeight - u.top - scheduler._tooltip.offsetHeight < 0) {
            scheduler._tooltip.style.top = u.top - scheduler._tooltip.offsetHeight + C.src.offsetHeight + "px"
        } else {
            scheduler._tooltip.style.top = u.top + "px"
        }
    }

    function g() {
        dhtmlxEvent(scheduler._els.dhx_cal_data[0], "mouseover", function(r) {
            var q = scheduler.matrix[scheduler._mode];
            if (q) {
                var v = scheduler._locate_cell_timeline(r);
                var r = r || event;
                var u = r.target || r.srcElement;
                if (v) {
                    return o(q, v, getOffset(v.src))
                }
            }
            m()
        });
        g = function() {}
    }
    scheduler.renderMatrix = function(r) {
        var q = scheduler.date[this.name + "_start"](scheduler._date);
        scheduler._min_date = scheduler.date.add(q, this.x_start * this.x_step, this.x_unit);
        scheduler._max_date = scheduler.date.add(scheduler._min_date, this.x_size * this.x_step, this.x_unit);
        scheduler._table_view = true;
        d.call(this, r)
    };

    function h(r) {
        var u = r.parentNode.childNodes;
        for (var q = 0; q < u.length; q++) {
            if (u[q] == r) {
                return q
            }
        }
        return -1
    }

    function c(u) {
        u = u || event;
        var q = u.target ? u.target : u.srcElement;
        while (q && q.tagName != "DIV") {
            q = q.parentNode
        }
        if (q && q.tagName == "DIV") {
            var r = q.className.split(" ")[0];
            if (r == "dhx_scale_bar") {
                return {
                    x: h(q),
                    y: -1,
                    src: q,
                    scale: true
                }
            }
        }
    }
    scheduler._locate_cell_timeline = function(v) {
        v = v || event;
        var q = v.target ? v.target : v.srcElement;
        while (q && q.tagName != "TD") {
            q = q.parentNode
        }
        if (q && q.tagName == "TD") {
            var u = q.className.split(" ")[0];
            if (u == "dhx_matrix_cell") {
                if (scheduler._isRender("cell")) {
                    return {
                        x: q.cellIndex - 1,
                        y: q.parentNode.rowIndex,
                        src: q
                    }
                } else {
                    var r = q.parentNode;
                    while (r && r.tagName != "TD") {
                        r = r.parentNode
                    }
                    return {
                        x: q.cellIndex,
                        y: r.parentNode.rowIndex,
                        src: q
                    }
                }
            } else {
                if (u == "dhx_matrix_scell") {
                    return {
                        x: -1,
                        y: q.parentNode.rowIndex,
                        src: q,
                        scale: true
                    }
                }
            }
        }
        return false
    };
    var n = scheduler._click.dhx_cal_data;
    scheduler._click.dhx_cal_data = function(u) {
        var q = n.apply(this, arguments);
        var r = scheduler.matrix[scheduler._mode];
        if (r) {
            var v = scheduler._locate_cell_timeline(u);
            if (v) {
                if (v.scale) {
                    scheduler.callEvent("onYScaleClick", [v.y, r.y_unit[v.y], u || event])
                } else {
                    scheduler.callEvent("onCellClick", [v.x, v.y, r._trace_x[v.x], (((r._matrix[v.y] || {})[v.x]) || []), u || event])
                }
            }
        }
        return q
    };
    scheduler.dblclick_dhx_matrix_cell = function(r) {
        var q = scheduler.matrix[scheduler._mode];
        if (q) {
            var u = scheduler._locate_cell_timeline(r);
            if (u) {
                if (u.scale) {
                    scheduler.callEvent("onYScaleDblClick", [u.y, q.y_unit[u.y], r || event])
                } else {
                    scheduler.callEvent("onCellDblClick", [u.x, u.y, q._trace_x[u.x], (((q._matrix[u.y] || {})[u.x]) || []), r || event])
                }
            }
        }
    };
    scheduler.dblclick_dhx_matrix_scell = function(q) {
        return scheduler.dblclick_dhx_matrix_cell(q)
    };
    scheduler._isRender = function(q) {
        return (scheduler.matrix[scheduler._mode] && scheduler.matrix[scheduler._mode].render == q)
    };
    scheduler.attachEvent("onCellDblClick", function(r, C, u, q, w) {
        if (this.config.readonly || (w.type == "dblclick" && !this.config.dblclick_create)) {
            return
        }
        var z = scheduler.matrix[scheduler._mode];
        var v = {};
        v.start_date = z._trace_x[r];
        v.end_date = (z._trace_x[r + 1]) ? z._trace_x[r + 1] : scheduler.date.add(z._trace_x[r], z.x_step, z.x_unit);
        v[scheduler.matrix[scheduler._mode].y_property] = z.y_unit[C].key;
        scheduler.addEventNow(v, null, w)
    });
    scheduler.attachEvent("onBeforeDrag", function(r, u, q) {
        if (scheduler._isRender("cell")) {
            return false
        }
        return true
    })
})();
window.dhtmlXTooltip = {
    version: 0.1
};
dhtmlXTooltip.config = {
    className: "dhtmlXTooltip tooltip",
    timeout_to_display: 50,
    delta_x: 15,
    delta_y: -20
};
dhtmlXTooltip.tooltip = document.createElement("div");
dhtmlXTooltip.tooltip.className = dhtmlXTooltip.config.className;
dhtmlXTooltip.show = function(b, p) {
    dhtmlXTooltip.tooltip.className = dhtmlXTooltip.config.className;
    var n = this.position(b);
    var g = b.target || b.srcElement;
    if (this.isTooltip(g)) {
        return
    }
    var o = 0;
    var c = 0;
    var e = scheduler._obj;
    if (e.offsetParent) {
        do {
            o += e.offsetLeft;
            c += e.offsetTop
        } while (e = e.offsetParent)
    }
    var m = n.x + (dhtmlXTooltip.config.delta_x || 0) - o;
    var h = n.y - (dhtmlXTooltip.config.delta_y || 0) - c;
    this.tooltip.style.visibility = "hidden";
    if (this.tooltip.style.removeAttribute) {
        this.tooltip.style.removeAttribute("right");
        this.tooltip.style.removeAttribute("bottom")
    } else {
        this.tooltip.style.removeProperty("right");
        this.tooltip.style.removeProperty("bottom")
    }
    this.tooltip.style.left = "0px";
    this.tooltip.style.top = "0px";
    this.tooltip.innerHTML = p;
    scheduler._obj.appendChild(this.tooltip);
    var f = this.tooltip.offsetWidth;
    var d = this.tooltip.offsetHeight;
    if ((scheduler._obj.offsetWidth - m - (scheduler.xy.margin_left || 0) - f) < 0) {
        if (this.tooltip.style.removeAttribute) {
            this.tooltip.style.removeAttribute("left")
        } else {
            this.tooltip.style.removeProperty("left")
        }
        this.tooltip.style.right = (scheduler._obj.offsetWidth - m + 2 * (dhtmlXTooltip.config.delta_x || 0)) + "px"
    } else {
        if (m < 0) {
            this.tooltip.style.left = (n.x + Math.abs(dhtmlXTooltip.config.delta_x || 0)) + "px"
        } else {
            this.tooltip.style.left = m + "px"
        }
    }
    if ((scheduler._obj.offsetHeight - h - (scheduler.xy.margin_top || 0) - d) < 0) {
        if (this.tooltip.style.removeAttribute) {
            this.tooltip.style.removeAttribute("top")
        } else {
            this.tooltip.style.removeProperty("top")
        }
        this.tooltip.style.bottom = (scheduler._obj.offsetHeight - h - 2 * (dhtmlXTooltip.config.delta_y || 0)) + "px"
    } else {
        if (h < 0) {
            this.tooltip.style.top = (n.y + Math.abs(dhtmlXTooltip.config.delta_y || 0)) + "px"
        } else {
            this.tooltip.style.top = h + "px"
        }
    }
    this.tooltip.style.visibility = "visible"
};
dhtmlXTooltip.hide = function() {
    if (this.tooltip.parentNode) {
        this.tooltip.parentNode.removeChild(this.tooltip)
    }
};
dhtmlXTooltip.delay = function(e, c, d, b) {
    if (this.tooltip._timeout_id) {
        window.clearTimeout(this.tooltip._timeout_id)
    }
    this.tooltip._timeout_id = setTimeout(function() {
        var f = e.apply(c, d);
        e = c = d = null;
        return f
    }, b || this.config.timeout_to_display)
};
dhtmlXTooltip.isTooltip = function(c) {
    var b = false;
    while (c && !b) {
        b = (c.className == this.tooltip.className);
        c = c.parentNode
    }
    return b
};
dhtmlXTooltip.position = function(b) {
    var b = b || window.event;
    if (b.pageX || b.pageY) {
        return {
            x: b.pageX,
            y: b.pageY
        }
    }
    var c = ((dhtmlx._isIE) && (document.compatMode != "BackCompat")) ? document.documentElement : document.body;
    return {
        x: b.clientX + c.scrollLeft - c.clientLeft,
        y: b.clientY + c.scrollTop - c.clientTop
    }
};
scheduler.attachEvent("onMouseMove", function(f, h) {
    var d = h || window.event;
    var g = d.target || d.srcElement;
    if (f || dhtmlXTooltip.isTooltip(g)) {
        var c = scheduler.getEvent(f) || scheduler.getEvent(dhtmlXTooltip.tooltip.event_id);
        dhtmlXTooltip.tooltip.event_id = c.id;
        var m = scheduler.templates.tooltip_text(c.start_date, c.end_date, c);
        if (_isIE) {
            var b = document.createEventObject(d)
        }
        dhtmlXTooltip.delay(dhtmlXTooltip.show, dhtmlXTooltip, [b || d, m])
    } else {
        dhtmlXTooltip.delay(dhtmlXTooltip.hide, dhtmlXTooltip, [])
    }
});
scheduler.attachEvent("onBeforeDrag", function() {
    dhtmlXTooltip.hide();
    return true
});
scheduler.templates.tooltip_date_format = scheduler.date.date_to_str("%Y-%m-%d %H:%i");
scheduler.templates.tooltip_text = function(d, b, c) {
    return "<b>Event:</b> " + c.text + "<br/><b>Start date:</b> " + scheduler.templates.tooltip_date_format(d) + "<br/><b>End date:</b> " + scheduler.templates.tooltip_date_format(b)
};
scheduler.attachEvent("onTimelineCreated", function(b) {
    if (b.render == "tree") {
        b.y_unit_original = b.y_unit;
        b.y_unit = scheduler._getArrayToDisplay(b.y_unit_original);
        scheduler.attachEvent("onOptionsLoadStart", function() {
            b.y_unit = scheduler._getArrayToDisplay(b.y_unit_original)
        });
        scheduler.form_blocks[b.name] = {
            render: function(d) {
                var c = "<div class='dhx_section_timeline' style='overflow: hidden; height: " + d.height + "px'></div>";
                return c
            },
            set_value: function(e, n, h, d) {
                var o = scheduler._getArrayForSelect(scheduler.matrix[d.type].y_unit_original, d.type);
                e.innerHTML = "";
                var g = document.createElement("select");
                e.appendChild(g);
                var m = e.getElementsByTagName("select")[0];
                for (var f = 0; f < o.length; f++) {
                    var c = document.createElement("option");
                    c.value = o[f].key;
                    if (c.value == h[scheduler.matrix[d.type].y_property]) {
                        c.selected = true
                    }
                    c.innerHTML = o[f].label;
                    m.appendChild(c)
                }
            },
            get_value: function(e, d, c) {
                return e.firstChild.value
            },
            focus: function(c) {}
        }
    }
});
scheduler.attachEvent("onBeforeViewRender", function(o, f, m) {
    var g = {};
    if (o == "tree") {
        var n;
        var e, b, c;
        var d;
        var h;
        if (f.children) {
            n = m.folder_dy || m.dy;
            if (m.folder_dy && !m.section_autoheight) {
                b = "height:" + m.folder_dy + "px;"
            }
            e = "dhx_row_folder";
            c = "dhx_matrix_scell folder";
            d = "<div class='dhx_scell_expand'>" + ((f.open) ? "-" : "+") + "</div>";
            h = (m.folder_events_available) ? "dhx_data_table folder_events" : "dhx_data_table folder"
        } else {
            n = m.dy;
            e = "dhx_row_item";
            c = "dhx_matrix_scell item";
            d = "";
            h = "dhx_data_table"
        }
        td_content = "<div class='dhx_scell_level" + f.level + "'>" + d + "<div class='dhx_scell_name'>" + (scheduler.templates[m.name + "_scale_label"](f.key, f.label, m) || f.label) + "</div></div>";
        g = {
            height: n,
            style_height: b,
            tr_className: e,
            td_className: c,
            td_content: td_content,
            table_className: h
        }
    }
    return g
});
var section_id_before;
scheduler.attachEvent("onBeforeEventChanged", function(e, b, d) {
    if (scheduler._isRender("tree")) {
        var c = scheduler.getSection(e[scheduler.matrix[scheduler._mode].y_property]);
        if (typeof c.children != "undefined" && !scheduler.matrix[scheduler._mode].folder_events_available) {
            if (!d) {
                e[scheduler.matrix[scheduler._mode].y_property] = section_id_before
            }
            return false
        }
    }
    return true
});
scheduler.attachEvent("onBeforeDrag", function(e, f, d) {
    var b = scheduler._locate_cell_timeline(d);
    if (b) {
        var c = scheduler.matrix[scheduler._mode].y_unit[b.y].key;
        if (typeof scheduler.matrix[scheduler._mode].y_unit[b.y].children != "undefined" && !scheduler.matrix[scheduler._mode].folder_events_available) {
            return false
        }
    }
    if (scheduler._isRender("tree")) {
        ev = scheduler.getEvent(e);
        section_id_before = c || ev[scheduler.matrix[scheduler._mode].y_property]
    }
    return true
});
scheduler._getArrayToDisplay = function(d) {
    var b = [];
    var c = function(h, e) {
        var g = e || 0;
        for (var f = 0; f < h.length; f++) {
            h[f].level = g;
            if (typeof h[f].children != "undefined" && typeof h[f].key == "undefined") {
                h[f].key = scheduler.uid()
            }
            b.push(h[f]);
            if (h[f].open && h[f].children) {
                c(h[f].children, g + 1)
            }
        }
    };
    c(d);
    return b
};
scheduler._getArrayForSelect = function(e, d) {
    var b = [];
    var c = function(g) {
        for (var f = 0; f < g.length; f++) {
            if (scheduler.matrix[d].folder_events_available) {
                b.push(g[f])
            } else {
                if (typeof g[f].children == "undefined") {
                    b.push(g[f])
                }
            }
            if (g[f].children) {
                c(g[f].children, d)
            }
        }
    };
    c(e);
    return b
};
scheduler._toggleFolderDisplay = function(f, c, b) {
    var e;
    var d = function(n, o, h, g) {
        for (var m = 0; m < o.length; m++) {
            if ((o[m].key == n || g) && o[m].children) {
                o[m].open = (typeof h != "undefined") ? h : !o[m].open;
                e = true;
                if (!g && e) {
                    break
                }
            }
            if (o[m].children) {
                d(n, o[m].children, h, g)
            }
        }
    };
    d(f, scheduler.matrix[scheduler._mode].y_unit_original, c, b);
    scheduler.matrix[scheduler._mode].y_unit = scheduler._getArrayToDisplay(scheduler.matrix[scheduler._mode].y_unit_original);
    scheduler.callEvent("onOptionsLoad", [])
};
scheduler.attachEvent("onCellClick", function(d, g, e, c, f) {
    if (scheduler._isRender("tree")) {
        if (!scheduler.matrix[scheduler._mode].folder_events_available) {
            if (typeof scheduler.matrix[scheduler._mode].y_unit[g].children != "undefined") {
                scheduler._toggleFolderDisplay(scheduler.matrix[scheduler._mode].y_unit[g].key)
            }
        }
    }
});
scheduler.attachEvent("onYScaleClick", function(b, d, c) {
    if (scheduler._isRender("tree")) {
        if (typeof d.children != "undefined") {
            scheduler._toggleFolderDisplay(d.key)
        }
    }
});
scheduler.getSection = function(d) {
    if (scheduler._isRender("tree")) {
        var c;
        var b = function(f, g) {
            for (var e = 0; e < g.length; e++) {
                if (g[e].key == f) {
                    c = g[e]
                }
                if (g[e].children) {
                    b(f, g[e].children)
                }
            }
        };
        b(d, scheduler.matrix[scheduler._mode].y_unit_original);
        return c || null
    }
};
scheduler.deleteSection = function(d) {
    if (scheduler._isRender("tree")) {
        var b = false;
        var c = function(f, g) {
            for (var e = 0; e < g.length; e++) {
                if (g[e].key == f) {
                    g.splice(e, 1);
                    b = true
                }
                if (b) {
                    break
                }
                if (g[e].children) {
                    c(f, g[e].children)
                }
            }
        };
        c(d, scheduler.matrix[scheduler._mode].y_unit_original);
        scheduler.matrix[scheduler._mode].y_unit = scheduler._getArrayToDisplay(scheduler.matrix[scheduler._mode].y_unit_original);
        scheduler.callEvent("onOptionsLoad", []);
        return b
    }
};
scheduler.deleteAllSections = function() {
    if (scheduler._isRender("tree")) {
        scheduler.matrix[scheduler._mode].y_unit_original = [];
        scheduler.matrix[scheduler._mode].y_unit = scheduler._getArrayToDisplay(scheduler.matrix[scheduler._mode].y_unit_original);
        scheduler.callEvent("onOptionsLoad", [])
    }
};
scheduler.addSection = function(e, c) {
    if (scheduler._isRender("tree")) {
        var b = false;
        var d = function(h, f, m) {
            if (!c) {
                m.push(h);
                b = true
            } else {
                for (var g = 0; g < m.length; g++) {
                    if (m[g].key == f && typeof m[g].children != "undefined") {
                        m[g].children.push(h);
                        b = true
                    }
                    if (b) {
                        break
                    }
                    if (m[g].children) {
                        d(h, f, m[g].children)
                    }
                }
            }
        };
        d(e, c, scheduler.matrix[scheduler._mode].y_unit_original);
        scheduler.matrix[scheduler._mode].y_unit = scheduler._getArrayToDisplay(scheduler.matrix[scheduler._mode].y_unit_original);
        scheduler.callEvent("onOptionsLoad", []);
        return b
    }
};
scheduler.openAllSections = function() {
    if (scheduler._isRender("tree")) {
        scheduler._toggleFolderDisplay(1, true, true)
    }
};
scheduler.closeAllSections = function() {
    if (scheduler._isRender("tree")) {
        scheduler._toggleFolderDisplay(1, false, true)
    }
};
scheduler.openSection = function(b) {
    if (scheduler._isRender("tree")) {
        scheduler._toggleFolderDisplay(b, true)
    }
};
scheduler.closeSection = function(b) {
    if (scheduler._isRender("tree")) {
        scheduler._toggleFolderDisplay(b, false)
    }
};
var JSON;
if (!JSON) {
    JSON = {}
}(function() {
    function f(n) {
        return n < 10 ? "0" + n : n
    }
    if (typeof Date.prototype.toJSON !== "function") {
        Date.prototype.toJSON = function(key) {
            return isFinite(this.valueOf()) ? this.getUTCFullYear() + "-" + f(this.getUTCMonth() + 1) + "-" + f(this.getUTCDate()) + "T" + f(this.getUTCHours()) + ":" + f(this.getUTCMinutes()) + ":" + f(this.getUTCSeconds()) + "Z" : null
        };
        String.prototype.toJSON = Number.prototype.toJSON = Boolean.prototype.toJSON = function(key) {
            return this.valueOf()
        }
    }
    var cx = /[\u0000\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        escapable = /[\\\"\x00-\x1f\x7f-\x9f\u00ad\u0600-\u0604\u070f\u17b4\u17b5\u200c-\u200f\u2028-\u202f\u2060-\u206f\ufeff\ufff0-\uffff]/g,
        gap, indent, meta = {
            "\b": "\\b",
            "\t": "\\t",
            "\n": "\\n",
            "\f": "\\f",
            "\r": "\\r",
            '"': '\\"',
            "\\": "\\\\"
        },
        rep;

    function quote(string) {
        escapable.lastIndex = 0;
        return escapable.test(string) ? '"' + string.replace(escapable, function(a) {
            var c = meta[a];
            return typeof c === "string" ? c : "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
        }) + '"' : '"' + string + '"'
    }

    function str(key, holder) {
        var i, k, v, length, mind = gap,
            partial, value = holder[key];
        if (value && typeof value === "object" && typeof value.toJSON === "function") {
            value = value.toJSON(key)
        }
        if (typeof rep === "function") {
            value = rep.call(holder, key, value)
        }
        switch (typeof value) {
            case "string":
                return quote(value);
            case "number":
                return isFinite(value) ? String(value) : "null";
            case "boolean":
            case "null":
                return String(value);
            case "object":
                if (!value) {
                    return "null"
                }
                gap += indent;
                partial = [];
                if (Object.prototype.toString.apply(value) === "[object Array]") {
                    length = value.length;
                    for (i = 0; i < length; i += 1) {
                        partial[i] = str(i, value) || "null"
                    }
                    v = partial.length === 0 ? "[]" : gap ? "[\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "]" : "[" + partial.join(",") + "]";
                    gap = mind;
                    return v
                }
                if (rep && typeof rep === "object") {
                    length = rep.length;
                    for (i = 0; i < length; i += 1) {
                        if (typeof rep[i] === "string") {
                            k = rep[i];
                            v = str(k, value);
                            if (v) {
                                partial.push(quote(k) + (gap ? ": " : ":") + v)
                            }
                        }
                    }
                } else {
                    for (k in value) {
                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                            v = str(k, value);
                            if (v) {
                                partial.push(quote(k) + (gap ? ": " : ":") + v)
                            }
                        }
                    }
                }
                v = partial.length === 0 ? "{}" : gap ? "{\n" + gap + partial.join(",\n" + gap) + "\n" + mind + "}" : "{" + partial.join(",") + "}";
                gap = mind;
                return v
        }
    }
    if (typeof JSON.stringify !== "function") {
        JSON.stringify = function(value, replacer, space) {
            var i;
            gap = "";
            indent = "";
            if (typeof space === "number") {
                for (i = 0; i < space; i += 1) {
                    indent += " "
                }
            } else {
                if (typeof space === "string") {
                    indent = space
                }
            }
            rep = replacer;
            if (replacer && typeof replacer !== "function" && (typeof replacer !== "object" || typeof replacer.length !== "number")) {
                throw new Error("JSON.stringify")
            }
            return str("", {
                "": value
            })
        }
    }
    if (typeof JSON.parse !== "function") {
        JSON.parse = function(text, reviver) {
            var j;

            function walk(holder, key) {
                var k, v, value = holder[key];
                if (value && typeof value === "object") {
                    for (k in value) {
                        if (Object.prototype.hasOwnProperty.call(value, k)) {
                            v = walk(value, k);
                            if (v !== undefined) {
                                value[k] = v
                            } else {
                                delete value[k]
                            }
                        }
                    }
                }
                return reviver.call(holder, key, value)
            }
            text = String(text);
            cx.lastIndex = 0;
            if (cx.test(text)) {
                text = text.replace(cx, function(a) {
                    return "\\u" + ("0000" + a.charCodeAt(0).toString(16)).slice(-4)
                })
            }
            if (/^[\],:{}\s]*$/.test(text.replace(/\\(?:["\\\/bfnrt]|u[0-9a-fA-F]{4})/g, "@").replace(/"[^"\\\n\r]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g, "]").replace(/(?:^|:|,)(?:\s*\[)+/g, ""))) {
                j = eval("(" + text + ")");
                return typeof reviver === "function" ? walk({
                    "": j
                }, "") : j
            }
            throw new SyntaxError("JSON.parse")
        }
    }
}());
jQuery.bt = {
    version: "0.9.5-rc1"
};
(function($) {
    jQuery.fn.bt = function(content, options) {
        if (typeof content != "string") {
            var contentSelect = true;
            options = content;
            content = false
        } else {
            var contentSelect = false
        }
        if (jQuery.fn.hoverIntent && jQuery.bt.defaults.trigger == "hover") {
            jQuery.bt.defaults.trigger = "hoverIntent"
        }
        return this.each(function(index) {
            var opts = jQuery.extend(false, jQuery.bt.defaults, jQuery.bt.options, options);
            opts.spikeLength = numb(opts.spikeLength);
            opts.spikeGirth = numb(opts.spikeGirth);
            opts.overlap = numb(opts.overlap);
            var ajaxTimeout = false;
            if (opts.killTitle) {
                $(this).find("[title]").andSelf().each(function() {
                    if (!$(this).attr("bt-xTitle")) {
                        $(this).attr("bt-xTitle", $(this).attr("title")).attr("title", "")
                    }
                })
            }
            if (typeof opts.trigger == "string") {
                opts.trigger = [opts.trigger]
            }
            if (opts.trigger[0] == "hoverIntent") {
                var hoverOpts = jQuery.extend(opts.hoverIntentOpts, {
                    over: function() {
                        this.btOn()
                    },
                    out: function() {
                        this.btOff()
                    }
                });
                $(this).hoverIntent(hoverOpts)
            } else {
                if (opts.trigger[0] == "hover") {
                    $(this).hover(function() {
                        this.btOn()
                    }, function() {
                        this.btOff()
                    })
                } else {
                    if (opts.trigger[0] == "now") {
                        if ($(this).hasClass("bt-active")) {
                            this.btOff()
                        } else {
                            this.btOn()
                        }
                    } else {
                        if (opts.trigger[0] == "none") {} else {
                            if (opts.trigger.length > 1 && opts.trigger[0] != opts.trigger[1]) {
                                $(this).bind(opts.trigger[0], function() {
                                    this.btOn()
                                }).bind(opts.trigger[1], function() {
                                    this.btOff()
                                })
                            } else {
                                $(this).bind(opts.trigger[0], function() {
                                    if ($(this).hasClass("bt-active")) {
                                        this.btOff()
                                    } else {
                                        this.btOn()
                                    }
                                })
                            }
                        }
                    }
                }
            }
            this.btOn = function() {
                if (typeof $(this).data("bt-box") == "object") {
                    this.btOff()
                }
                opts.preBuild.apply(this);
                $(jQuery.bt.vars.closeWhenOpenStack).btOff();
                $(this).addClass("bt-active " + opts.activeClass);
                if (contentSelect && opts.ajaxPath == null) {
                    if (opts.killTitle) {
                        $(this).attr("title", $(this).attr("bt-xTitle"))
                    }
                    content = $.isFunction(opts.contentSelector) ? opts.contentSelector.apply(this) : eval(opts.contentSelector);
                    if (opts.killTitle) {
                        $(this).attr("title", "")
                    }
                }
                if (opts.ajaxPath != null && content == false) {
                    if (typeof opts.ajaxPath == "object") {
                        var url = eval(opts.ajaxPath[0]);
                        url += opts.ajaxPath[1] ? " " + opts.ajaxPath[1] : ""
                    } else {
                        var url = opts.ajaxPath
                    }
                    var off = url.indexOf(" ");
                    if (off >= 0) {
                        var selector = url.slice(off, url.length);
                        url = url.slice(0, off)
                    }
                    var cacheData = opts.ajaxCache ? $(document.body).data("btCache-" + url.replace(/\./g, "")) : null;
                    if (typeof cacheData == "string") {
                        content = selector ? $("<div/>").append(cacheData.replace(/<script(.|\s)*?\/script>/g, "")).find(selector) : cacheData
                    } else {
                        var target = this;
                        var ajaxOpts = jQuery.extend(false, {
                            type: opts.ajaxType,
                            data: opts.ajaxData,
                            cache: opts.ajaxCache,
                            url: url,
                            complete: function(XMLHttpRequest, textStatus) {
                                if (textStatus == "success" || textStatus == "notmodified") {
                                    if (opts.ajaxCache) {
                                        $(document.body).data("btCache-" + url.replace(/\./g, ""), XMLHttpRequest.responseText)
                                    }
                                    ajaxTimeout = false;
                                    content = selector ? $("<div/>").append(XMLHttpRequest.responseText.replace(/<script(.|\s)*?\/script>/g, "")).find(selector) : XMLHttpRequest.responseText
                                } else {
                                    if (textStatus == "timeout") {
                                        ajaxTimeout = true
                                    }
                                    content = opts.ajaxError.replace(/%error/g, XMLHttpRequest.statusText)
                                }
                                if ($(target).hasClass("bt-active")) {
                                    target.btOn()
                                }
                            }
                        }, opts.ajaxOpts);
                        jQuery.ajax(ajaxOpts);
                        content = opts.ajaxLoading
                    }
                }
                var shadowMarginX = 0;
                var shadowMarginY = 0;
                var shadowShiftX = 0;
                var shadowShiftY = 0;
                if (opts.shadow && !shadowSupport()) {
                    opts.shadow = false;
                    jQuery.extend(opts, opts.noShadowOpts)
                }
                if (opts.shadow) {
                    if (opts.shadowBlur > Math.abs(opts.shadowOffsetX)) {
                        shadowMarginX = opts.shadowBlur * 2
                    } else {
                        shadowMarginX = opts.shadowBlur + Math.abs(opts.shadowOffsetX)
                    }
                    shadowShiftX = (opts.shadowBlur - opts.shadowOffsetX) > 0 ? opts.shadowBlur - opts.shadowOffsetX : 0;
                    if (opts.shadowBlur > Math.abs(opts.shadowOffsetY)) {
                        shadowMarginY = opts.shadowBlur * 2
                    } else {
                        shadowMarginY = opts.shadowBlur + Math.abs(opts.shadowOffsetY)
                    }
                    shadowShiftY = (opts.shadowBlur - opts.shadowOffsetY) > 0 ? opts.shadowBlur - opts.shadowOffsetY : 0
                }
                if (opts.offsetParent) {
                    var offsetParent = $(opts.offsetParent);
                    var offsetParentPos = offsetParent.offset();
                    var pos = $(this).offset();
                    var top = numb(pos.top) - numb(offsetParentPos.top) + numb($(this).css("margin-top")) - shadowShiftY;
                    var left = numb(pos.left) - numb(offsetParentPos.left) + numb($(this).css("margin-left")) - shadowShiftX
                } else {
                    var offsetParent = ($(this).css("position") == "absolute") ? $(this).parents().eq(0).offsetParent() : $(this).offsetParent();
                    var pos = $(this).btPosition();
                    var top = numb(pos.top) + numb($(this).css("margin-top")) - shadowShiftY;
                    var left = numb(pos.left) + numb($(this).css("margin-left")) - shadowShiftX
                }
                var width = $(this).btOuterWidth();
                var height = $(this).outerHeight();
                if (typeof content == "object") {
                    var original = content;
                    var clone = $(original).clone(true).show();
                    var origClones = $(original).data("bt-clones") || [];
                    origClones.push(clone);
                    $(original).data("bt-clones", origClones);
                    $(clone).data("bt-orig", original);
                    $(this).data("bt-content-orig", {
                        original: original,
                        clone: clone
                    });
                    content = clone
                }
                if (typeof content == "null" || content == "") {
                    return
                }
                var $text = $('<div class="bt-content"></div>').append(content).css({
                    padding: opts.padding,
                    position: "absolute",
                    width: (opts.shrinkToFit ? "auto" : opts.width),
                    zIndex: opts.textzIndex,
                    left: shadowShiftX,
                    top: shadowShiftY
                }).css(opts.cssStyles);
                var $box = $('<div class="bt-wrapper"></div>').append($text).addClass(opts.cssClass).css({
                    position: "absolute",
                    width: opts.width,
                    zIndex: opts.wrapperzIndex,
                    visibility: "hidden"
                }).appendTo(offsetParent);
                if (jQuery.fn.bgiframe) {
                    $text.bgiframe();
                    $box.bgiframe()
                }
                $(this).data("bt-box", $box);
                var scrollTop = numb($(document).scrollTop());
                var scrollLeft = numb($(document).scrollLeft());
                var docWidth = numb($(window).width());
                var docHeight = numb($(window).height());
                var winRight = scrollLeft + docWidth;
                var winBottom = scrollTop + docHeight;
                var space = new Object();
                var thisOffset = $(this).offset();
                space.top = thisOffset.top - scrollTop;
                space.bottom = docHeight - ((thisOffset + height) - scrollTop);
                space.left = thisOffset.left - scrollLeft;
                space.right = docWidth - ((thisOffset.left + width) - scrollLeft);
                var textOutHeight = numb($text.outerHeight());
                var textOutWidth = numb($text.btOuterWidth());
                if (opts.positions.constructor == String) {
                    opts.positions = opts.positions.replace(/ /, "").split(",")
                }
                if (opts.positions[0] == "most") {
                    var position = "top";
                    for (var pig in space) {
                        position = space[pig] > space[position] ? pig : position
                    }
                } else {
                    for (var x in opts.positions) {
                        var position = opts.positions[x];
                        if ((position == "left" || position == "right") && space[position] > textOutWidth + opts.spikeLength) {
                            break
                        } else {
                            if ((position == "top" || position == "bottom") && space[position] > textOutHeight + opts.spikeLength) {
                                break
                            }
                        }
                    }
                }
                var horiz = left + ((width - textOutWidth) * 0.5);
                var vert = top + ((height - textOutHeight) * 0.5);
                var points = new Array();
                var textTop, textLeft, textRight, textBottom, textTopSpace, textBottomSpace, textLeftSpace, textRightSpace, crossPoint, textCenter, spikePoint;
                switch (position) {
                    case "top":
                        $text.css("margin-bottom", opts.spikeLength + "px");
                        $box.css({
                            top: (top - $text.outerHeight(true)) + opts.overlap,
                            left: horiz
                        });
                        textRightSpace = (winRight - opts.windowMargin) - ($text.offset().left + $text.btOuterWidth(true));
                        var xShift = shadowShiftX;
                        if (textRightSpace < 0) {
                            $box.css("left", (numb($box.css("left")) + textRightSpace) + "px");
                            xShift -= textRightSpace
                        }
                        textLeftSpace = ($text.offset().left + numb($text.css("margin-left"))) - (scrollLeft + opts.windowMargin);
                        if (textLeftSpace < 0) {
                            $box.css("left", (numb($box.css("left")) - textLeftSpace) + "px");
                            xShift += textLeftSpace
                        }
                        textTop = $text.btPosition().top + numb($text.css("margin-top"));
                        textLeft = $text.btPosition().left + numb($text.css("margin-left"));
                        textRight = textLeft + $text.btOuterWidth();
                        textBottom = textTop + $text.outerHeight();
                        textCenter = {
                            x: textLeft + ($text.btOuterWidth() * opts.centerPointX),
                            y: textTop + ($text.outerHeight() * opts.centerPointY)
                        };
                        points[points.length] = spikePoint = {
                            y: textBottom + opts.spikeLength,
                            x: ((textRight - textLeft) * 0.5) + xShift,
                            type: "spike"
                        };
                        crossPoint = findIntersectX(spikePoint.x, spikePoint.y, textCenter.x, textCenter.y, textBottom);
                        crossPoint.x = crossPoint.x < textLeft + opts.spikeGirth / 2 + opts.cornerRadius ? textLeft + opts.spikeGirth / 2 + opts.cornerRadius : crossPoint.x;
                        crossPoint.x = crossPoint.x > (textRight - opts.spikeGirth / 2) - opts.cornerRadius ? (textRight - opts.spikeGirth / 2) - opts.CornerRadius : crossPoint.x;
                        points[points.length] = {
                            x: crossPoint.x - (opts.spikeGirth / 2),
                            y: textBottom,
                            type: "join"
                        };
                        points[points.length] = {
                            x: textLeft,
                            y: textBottom,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textLeft,
                            y: textTop,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textRight,
                            y: textTop,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textRight,
                            y: textBottom,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: crossPoint.x + (opts.spikeGirth / 2),
                            y: textBottom,
                            type: "join"
                        };
                        points[points.length] = spikePoint;
                        break;
                    case "left":
                        $text.css("margin-right", opts.spikeLength + "px");
                        $box.css({
                            top: vert + "px",
                            left: ((left - $text.btOuterWidth(true)) + opts.overlap) + "px"
                        });
                        textBottomSpace = (winBottom - opts.windowMargin) - ($text.offset().top + $text.outerHeight(true));
                        var yShift = shadowShiftY;
                        if (textBottomSpace < 0) {
                            $box.css("top", (numb($box.css("top")) + textBottomSpace) + "px");
                            yShift -= textBottomSpace
                        }
                        textTopSpace = ($text.offset().top + numb($text.css("margin-top"))) - (scrollTop + opts.windowMargin);
                        if (textTopSpace < 0) {
                            $box.css("top", (numb($box.css("top")) - textTopSpace) + "px");
                            yShift += textTopSpace
                        }
                        textTop = $text.btPosition().top + numb($text.css("margin-top"));
                        textLeft = $text.btPosition().left + numb($text.css("margin-left"));
                        textRight = textLeft + $text.btOuterWidth();
                        textBottom = textTop + $text.outerHeight();
                        textCenter = {
                            x: textLeft + ($text.btOuterWidth() * opts.centerPointX),
                            y: textTop + ($text.outerHeight() * opts.centerPointY)
                        };
                        points[points.length] = spikePoint = {
                            x: textRight + opts.spikeLength,
                            y: ((textBottom - textTop) * 0.5) + yShift,
                            type: "spike"
                        };
                        crossPoint = findIntersectY(spikePoint.x, spikePoint.y, textCenter.x, textCenter.y, textRight);
                        crossPoint.y = crossPoint.y < textTop + opts.spikeGirth / 2 + opts.cornerRadius ? textTop + opts.spikeGirth / 2 + opts.cornerRadius : crossPoint.y;
                        crossPoint.y = crossPoint.y > (textBottom - opts.spikeGirth / 2) - opts.cornerRadius ? (textBottom - opts.spikeGirth / 2) - opts.cornerRadius : crossPoint.y;
                        points[points.length] = {
                            x: textRight,
                            y: crossPoint.y + opts.spikeGirth / 2,
                            type: "join"
                        };
                        points[points.length] = {
                            x: textRight,
                            y: textBottom,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textLeft,
                            y: textBottom,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textLeft,
                            y: textTop,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textRight,
                            y: textTop,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textRight,
                            y: crossPoint.y - opts.spikeGirth / 2,
                            type: "join"
                        };
                        points[points.length] = spikePoint;
                        break;
                    case "bottom":
                        $text.css("margin-top", opts.spikeLength + "px");
                        $box.css({
                            top: (top + height) - opts.overlap,
                            left: horiz
                        });
                        textRightSpace = (winRight - opts.windowMargin) - ($text.offset().left + $text.btOuterWidth(true));
                        var xShift = shadowShiftX;
                        if (textRightSpace < 0) {
                            $box.css("left", (numb($box.css("left")) + textRightSpace) + "px");
                            xShift -= textRightSpace
                        }
                        textLeftSpace = ($text.offset().left + numb($text.css("margin-left"))) - (scrollLeft + opts.windowMargin);
                        if (textLeftSpace < 0) {
                            $box.css("left", (numb($box.css("left")) - textLeftSpace) + "px");
                            xShift += textLeftSpace
                        }
                        textTop = $text.btPosition().top + numb($text.css("margin-top"));
                        textLeft = $text.btPosition().left + numb($text.css("margin-left"));
                        textRight = textLeft + $text.btOuterWidth();
                        textBottom = textTop + $text.outerHeight();
                        textCenter = {
                            x: textLeft + ($text.btOuterWidth() * opts.centerPointX),
                            y: textTop + ($text.outerHeight() * opts.centerPointY)
                        };
                        points[points.length] = spikePoint = {
                            x: ((textRight - textLeft) * 0.5) + xShift,
                            y: shadowShiftY,
                            type: "spike"
                        };
                        crossPoint = findIntersectX(spikePoint.x, spikePoint.y, textCenter.x, textCenter.y, textTop);
                        crossPoint.x = crossPoint.x < textLeft + opts.spikeGirth / 2 + opts.cornerRadius ? textLeft + opts.spikeGirth / 2 + opts.cornerRadius : crossPoint.x;
                        crossPoint.x = crossPoint.x > (textRight - opts.spikeGirth / 2) - opts.cornerRadius ? (textRight - opts.spikeGirth / 2) - opts.cornerRadius : crossPoint.x;
                        points[points.length] = {
                            x: crossPoint.x + opts.spikeGirth / 2,
                            y: textTop,
                            type: "join"
                        };
                        points[points.length] = {
                            x: textRight,
                            y: textTop,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textRight,
                            y: textBottom,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textLeft,
                            y: textBottom,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textLeft,
                            y: textTop,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: crossPoint.x - (opts.spikeGirth / 2),
                            y: textTop,
                            type: "join"
                        };
                        points[points.length] = spikePoint;
                        break;
                    case "right":
                        $text.css("margin-left", (opts.spikeLength + "px"));
                        $box.css({
                            top: vert + "px",
                            left: ((left + width) - opts.overlap) + "px"
                        });
                        textBottomSpace = (winBottom - opts.windowMargin) - ($text.offset().top + $text.outerHeight(true));
                        var yShift = shadowShiftY;
                        if (textBottomSpace < 0) {
                            $box.css("top", (numb($box.css("top")) + textBottomSpace) + "px");
                            yShift -= textBottomSpace
                        }
                        textTopSpace = ($text.offset().top + numb($text.css("margin-top"))) - (scrollTop + opts.windowMargin);
                        if (textTopSpace < 0) {
                            $box.css("top", (numb($box.css("top")) - textTopSpace) + "px");
                            yShift += textTopSpace
                        }
                        textTop = $text.btPosition().top + numb($text.css("margin-top"));
                        textLeft = $text.btPosition().left + numb($text.css("margin-left"));
                        textRight = textLeft + $text.btOuterWidth();
                        textBottom = textTop + $text.outerHeight();
                        textCenter = {
                            x: textLeft + ($text.btOuterWidth() * opts.centerPointX),
                            y: textTop + ($text.outerHeight() * opts.centerPointY)
                        };
                        points[points.length] = spikePoint = {
                            x: shadowShiftX,
                            y: ((textBottom - textTop) * 0.5) + yShift,
                            type: "spike"
                        };
                        crossPoint = findIntersectY(spikePoint.x, spikePoint.y, textCenter.x, textCenter.y, textLeft);
                        crossPoint.y = crossPoint.y < textTop + opts.spikeGirth / 2 + opts.cornerRadius ? textTop + opts.spikeGirth / 2 + opts.cornerRadius : crossPoint.y;
                        crossPoint.y = crossPoint.y > (textBottom - opts.spikeGirth / 2) - opts.cornerRadius ? (textBottom - opts.spikeGirth / 2) - opts.cornerRadius : crossPoint.y;
                        points[points.length] = {
                            x: textLeft,
                            y: crossPoint.y - opts.spikeGirth / 2,
                            type: "join"
                        };
                        points[points.length] = {
                            x: textLeft,
                            y: textTop,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textRight,
                            y: textTop,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textRight,
                            y: textBottom,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textLeft,
                            y: textBottom,
                            type: "corner"
                        };
                        points[points.length] = {
                            x: textLeft,
                            y: crossPoint.y + opts.spikeGirth / 2,
                            type: "join"
                        };
                        points[points.length] = spikePoint;
                        break
                }
                var canvas = document.createElement("canvas");
                $(canvas).attr("width", (numb($text.btOuterWidth(true)) + opts.strokeWidth * 2 + shadowMarginX)).attr("height", (numb($text.outerHeight(true)) + opts.strokeWidth * 2 + shadowMarginY)).appendTo($box).css({
                    position: "absolute",
                    zIndex: opts.boxzIndex
                });
                if (typeof G_vmlCanvasManager != "undefined") {
                    canvas = G_vmlCanvasManager.initElement(canvas)
                }
                if (opts.cornerRadius > 0) {
                    var newPoints = new Array();
                    var newPoint;
                    for (var i = 0; i < points.length; i++) {
                        if (points[i].type == "corner") {
                            newPoint = betweenPoint(points[i], points[(i - 1) % points.length], opts.cornerRadius);
                            newPoint.type = "arcStart";
                            newPoints[newPoints.length] = newPoint;
                            newPoints[newPoints.length] = points[i];
                            newPoint = betweenPoint(points[i], points[(i + 1) % points.length], opts.cornerRadius);
                            newPoint.type = "arcEnd";
                            newPoints[newPoints.length] = newPoint
                        } else {
                            newPoints[newPoints.length] = points[i]
                        }
                    }
                    points = newPoints
                }
                var ctx = canvas.getContext("2d");
                if (opts.shadow && opts.shadowOverlap !== true) {
                    var shadowOverlap = numb(opts.shadowOverlap);
                    switch (position) {
                        case "top":
                            if (opts.shadowOffsetX + opts.shadowBlur - shadowOverlap > 0) {
                                $box.css("top", (numb($box.css("top")) - (opts.shadowOffsetX + opts.shadowBlur - shadowOverlap)))
                            }
                            break;
                        case "right":
                            if (shadowShiftX - shadowOverlap > 0) {
                                $box.css("left", (numb($box.css("left")) + shadowShiftX - shadowOverlap))
                            }
                            break;
                        case "bottom":
                            if (shadowShiftY - shadowOverlap > 0) {
                                $box.css("top", (numb($box.css("top")) + shadowShiftY - shadowOverlap))
                            }
                            break;
                        case "left":
                            if (opts.shadowOffsetY + opts.shadowBlur - shadowOverlap > 0) {
                                $box.css("left", (numb($box.css("left")) - (opts.shadowOffsetY + opts.shadowBlur - shadowOverlap)))
                            }
                            break
                    }
                }
                drawIt.apply(ctx, [points], opts.strokeWidth);
                ctx.fillStyle = opts.fill;
                if (opts.shadow) {
                    ctx.shadowOffsetX = opts.shadowOffsetX;
                    ctx.shadowOffsetY = opts.shadowOffsetY;
                    ctx.shadowBlur = opts.shadowBlur;
                    ctx.shadowColor = opts.shadowColor
                }
                ctx.closePath();
                ctx.fill();
                if (opts.strokeWidth > 0) {
                    ctx.shadowColor = "rgba(0, 0, 0, 0)";
                    ctx.lineWidth = opts.strokeWidth;
                    ctx.strokeStyle = opts.strokeStyle;
                    ctx.beginPath();
                    drawIt.apply(ctx, [points], opts.strokeWidth);
                    ctx.closePath();
                    ctx.stroke()
                }
                opts.preShow.apply(this, [$box[0]]);
                $box.css({
                    display: "none",
                    visibility: "visible"
                });
                opts.showTip.apply(this, [$box[0]]);
                if (opts.overlay) {
                    var overlay = $('<div class="bt-overlay"></div>').css({
                        position: "absolute",
                        backgroundColor: "blue",
                        top: top,
                        left: left,
                        width: width,
                        height: height,
                        opacity: ".2"
                    }).appendTo(offsetParent);
                    $(this).data("overlay", overlay)
                }
                if ((opts.ajaxPath != null && opts.ajaxCache == false) || ajaxTimeout) {
                    content = false
                }
                if (opts.clickAnywhereToClose) {
                    jQuery.bt.vars.clickAnywhereStack.push(this);
                    $(document).click(jQuery.bt.docClick)
                }
                if (opts.closeWhenOthersOpen) {
                    jQuery.bt.vars.closeWhenOpenStack.push(this)
                }
                opts.postShow.apply(this, [$box[0]])
            };
            this.btOff = function() {
                var box = $(this).data("bt-box");
                opts.preHide.apply(this, [box]);
                var i = this;
                i.btCleanup = function() {
                    var box = $(i).data("bt-box");
                    var contentOrig = $(i).data("bt-content-orig");
                    var overlay = $(i).data("bt-overlay");
                    if (typeof box == "object") {
                        $(box).remove();
                        $(i).removeData("bt-box")
                    }
                    if (typeof contentOrig == "object") {
                        var clones = $(contentOrig.original).data("bt-clones");
                        $(contentOrig).data("bt-clones", arrayRemove(clones, contentOrig.clone))
                    }
                    if (typeof overlay == "object") {
                        $(overlay).remove();
                        $(i).removeData("bt-overlay")
                    }
                    jQuery.bt.vars.clickAnywhereStack = arrayRemove(jQuery.bt.vars.clickAnywhereStack, i);
                    jQuery.bt.vars.closeWhenOpenStack = arrayRemove(jQuery.bt.vars.closeWhenOpenStack, i);
                    $(i).removeClass("bt-active " + opts.activeClass);
                    opts.postHide.apply(i)
                };
                opts.hideTip.apply(this, [box, i.btCleanup])
            };
            var refresh = this.btRefresh = function() {
                this.btOff();
                this.btOn()
            }
        });

        function drawIt(points, strokeWidth) {
            this.moveTo(points[0].x, points[0].y);
            for (i = 1; i < points.length; i++) {
                if (points[i - 1].type == "arcStart") {
                    this.quadraticCurveTo(round5(points[i].x, strokeWidth), round5(points[i].y, strokeWidth), round5(points[(i + 1) % points.length].x, strokeWidth), round5(points[(i + 1) % points.length].y, strokeWidth));
                    i++
                } else {
                    this.lineTo(round5(points[i].x, strokeWidth), round5(points[i].y, strokeWidth))
                }
            }
        }

        function round5(num, strokeWidth) {
            var ret;
            strokeWidth = numb(strokeWidth);
            if (strokeWidth % 2) {
                ret = num
            } else {
                ret = Math.round(num - 0.5) + 0.5
            }
            return ret
        }

        function numb(num) {
            return parseInt(num) || 0
        }

        function arrayRemove(arr, elem) {
            var x, newArr = new Array();
            for (x in arr) {
                if (arr[x] != elem) {
                    newArr.push(arr[x])
                }
            }
            return newArr
        }

        function canvasSupport() {
            var canvas_compatible = false;
            try {
                canvas_compatible = !!(document.createElement("canvas").getContext("2d"))
            } catch (e) {
                canvas_compatible = !!(document.createElement("canvas").getContext)
            }
            return canvas_compatible
        }

        function shadowSupport() {
            try {
                var userAgent = navigator.userAgent.toLowerCase();
                if (/webkit/.test(userAgent)) {
                    return true
                } else {
                    if (/gecko|mozilla/.test(userAgent) && parseFloat(userAgent.match(/firefox\/(\d+(?:\.\d+)+)/)[1]) >= 3.1) {
                        return true
                    }
                }
            } catch (err) {}
            return false
        }

        function betweenPoint(point1, point2, dist) {
            var y, x;
            if (point1.x == point2.x) {
                y = point1.y < point2.y ? point1.y + dist : point1.y - dist;
                return {
                    x: point1.x,
                    y: y
                }
            } else {
                if (point1.y == point2.y) {
                    x = point1.x < point2.x ? point1.x + dist : point1.x - dist;
                    return {
                        x: x,
                        y: point1.y
                    }
                }
            }
        }

        function centerPoint(arcStart, corner, arcEnd) {
            var x = corner.x == arcStart.x ? arcEnd.x : arcStart.x;
            var y = corner.y == arcStart.y ? arcEnd.y : arcStart.y;
            var startAngle, endAngle;
            if (arcStart.x < arcEnd.x) {
                if (arcStart.y > arcEnd.y) {
                    startAngle = (Math.PI / 180) * 180;
                    endAngle = (Math.PI / 180) * 90
                } else {
                    startAngle = (Math.PI / 180) * 90;
                    endAngle = 0
                }
            } else {
                if (arcStart.y > arcEnd.y) {
                    startAngle = (Math.PI / 180) * 270;
                    endAngle = (Math.PI / 180) * 180
                } else {
                    startAngle = 0;
                    endAngle = (Math.PI / 180) * 270
                }
            }
            return {
                x: x,
                y: y,
                type: "center",
                startAngle: startAngle,
                endAngle: endAngle
            }
        }

        function findIntersect(r1x1, r1y1, r1x2, r1y2, r2x1, r2y1, r2x2, r2y2) {
            if (r2x1 == r2x2) {
                return findIntersectY(r1x1, r1y1, r1x2, r1y2, r2x1)
            }
            if (r2y1 == r2y2) {
                return findIntersectX(r1x1, r1y1, r1x2, r1y2, r2y1)
            }
            var r1m = (r1y1 - r1y2) / (r1x1 - r1x2);
            var r1b = r1y1 - (r1m * r1x1);
            var r2m = (r2y1 - r2y2) / (r2x1 - r2x2);
            var r2b = r2y1 - (r2m * r2x1);
            var x = (r2b - r1b) / (r1m - r2m);
            var y = r1m * x + r1b;
            return {
                x: x,
                y: y
            }
        }

        function findIntersectY(r1x1, r1y1, r1x2, r1y2, x) {
            if (r1y1 == r1y2) {
                return {
                    x: x,
                    y: r1y1
                }
            }
            var r1m = (r1y1 - r1y2) / (r1x1 - r1x2);
            var r1b = r1y1 - (r1m * r1x1);
            var y = r1m * x + r1b;
            return {
                x: x,
                y: y
            }
        }

        function findIntersectX(r1x1, r1y1, r1x2, r1y2, y) {
            if (r1x1 == r1x2) {
                return {
                    x: r1x1,
                    y: y
                }
            }
            var r1m = (r1y1 - r1y2) / (r1x1 - r1x2);
            var r1b = r1y1 - (r1m * r1x1);
            var x = (y - r1b) / r1m;
            return {
                x: x,
                y: y
            }
        }
    };
    jQuery.fn.btPosition = function() {
        function num(elem, prop) {
            return elem[0] && parseInt(jQuery.curCSS(elem[0], prop, true), 10) || 0
        }
        var left = 0,
            top = 0,
            results;
        if (this[0]) {
            var offsetParent = this.offsetParent(),
                offset = this.offset(),
                parentOffset = /^body|html$/i.test(offsetParent[0].tagName) ? {
                    top: 0,
                    left: 0
                } : offsetParent.offset();
            offset.top -= num(this, "marginTop");
            offset.left -= num(this, "marginLeft");
            parentOffset.top += num(offsetParent, "borderTopWidth");
            parentOffset.left += num(offsetParent, "borderLeftWidth");
            results = {
                top: offset.top - parentOffset.top,
                left: offset.left - parentOffset.left
            }
        }
        return results
    };
    jQuery.fn.btOuterWidth = function(margin) {
        function num(elem, prop) {
            return elem[0] && parseInt(jQuery.curCSS(elem[0], prop, true), 10) || 0
        }
        return this["innerWidth"]() + num(this, "borderLeftWidth") + num(this, "borderRightWidth") + (margin ? num(this, "marginLeft") + num(this, "marginRight") : 0)
    };
    jQuery.fn.btOn = function() {
        return this.each(function(index) {
            if (jQuery.isFunction(this.btOn)) {
                this.btOn()
            }
        })
    };
    jQuery.fn.btOff = function() {
        return this.each(function(index) {
            if (jQuery.isFunction(this.btOff)) {
                this.btOff()
            }
        })
    };
    jQuery.bt.vars = {
        clickAnywhereStack: [],
        closeWhenOpenStack: []
    };
    jQuery.bt.docClick = function(e) {
        if (!e) {
            var e = window.event
        }
        if (!$(e.target).parents().andSelf().filter(".bt-wrapper, .bt-active").length && jQuery.bt.vars.clickAnywhereStack.length) {
            $(jQuery.bt.vars.clickAnywhereStack).btOff();
            $(document).unbind("click", jQuery.bt.docClick)
        }
    };
    jQuery.bt.defaults = {
        trigger: "hover",
        clickAnywhereToClose: true,
        closeWhenOthersOpen: false,
        shrinkToFit: false,
        width: "200px",
        padding: "10px",
        spikeGirth: 10,
        spikeLength: 15,
        overlap: 0,
        overlay: false,
        killTitle: true,
        textzIndex: 9999,
        boxzIndex: 9998,
        wrapperzIndex: 9997,
        offsetParent: null,
        positions: ["most"],
        fill: "rgb(255, 255, 102)",
        windowMargin: 10,
        strokeWidth: 1,
        strokeStyle: "#000",
        cornerRadius: 5,
        centerPointX: 0.5,
        centerPointY: 0.5,
        shadow: false,
        shadowOffsetX: 2,
        shadowOffsetY: 2,
        shadowBlur: 3,
        shadowColor: "#000",
        shadowOverlap: false,
        noShadowOpts: {
            strokeStyle: "#999"
        },
        cssClass: "",
        cssStyles: {},
        activeClass: "bt-active",
        contentSelector: "$(this).attr('title')",
        ajaxPath: null,
        ajaxError: "<strong>ERROR:</strong> <em>%error</em>",
        ajaxLoading: "<blink>Loading...</blink>",
        ajaxData: {},
        ajaxType: "GET",
        ajaxCache: true,
        ajaxOpts: {},
        preBuild: function() {},
        preShow: function(box) {},
        showTip: function(box) {
            $(box).show()
        },
        postShow: function(box) {},
        preHide: function(box) {},
        hideTip: function(box, callback) {
            $(box).hide();
            callback()
        },
        postHide: function() {},
        hoverIntentOpts: {
            interval: 300,
            timeout: 500
        }
    };
    jQuery.bt.options = {}
})(jQuery);
jQuery.betterTooltip = {
    version: "1.0"
};
(function(b) {
    jQuery.fn.betterTooltip = function(f, c) {
        var e = function(m) {
            var n = b(this);
            var g = n.add(b(m));
            var o;
            n.data("btdelay.hover", true).data("btdelay.delay", 0);
            var h = function() {
                var q = n.data("btdelay.hover");
                if (q) {
                    n.data("btdelay.delay", 0)
                } else {
                    var p = n.data("btdelay.delay");
                    if (p < 5) {
                        n.data("btdelay.delay", p + 1)
                    } else {
                        clearInterval(o);
                        n.unbind(".btdelay");
                        n.btOff()
                    }
                }
            };
            g.bind("mouseover.btdelay", function() {
                n.data("btdelay.hover", true)
            }).bind("mouseleave.btdelay", function() {
                n.data("btdelay.hover", false)
            });
            o = setInterval(h, 100)
        };
        var d = (typeof f == "string") ? c : f;
        d = jQuery.extend(d, {
            trigger: "none",
            postShow: e
        });
        return this.each(function(g) {
            var h = {
                over: function() {
                    b(this).btOn()
                },
                out: function() {}
            };
            b(this).bt(f, d).hoverIntent(h)
        })
    }
})(jQuery);
(function(b) {
    b.fn.hoverIntent = function(p, o) {
        var q = {
            sensitivity: 7,
            interval: 100,
            timeout: 0
        };
        q = b.extend(q, o ? {
            over: p,
            out: o
        } : p);
        var u, r, m, e;
        var h = function(f) {
            u = f.pageX;
            r = f.pageY
        };
        var d = function(g, f) {
            f.hoverIntent_t = clearTimeout(f.hoverIntent_t);
            if ((Math.abs(m - u) + Math.abs(e - r)) < q.sensitivity) {
                b(f).unbind("mousemove", h);
                f.hoverIntent_s = 1;
                return q.over.apply(f, [g])
            } else {
                m = u;
                e = r;
                f.hoverIntent_t = setTimeout(function() {
                    d(g, f)
                }, q.interval)
            }
        };
        var n = function(g, f) {
            f.hoverIntent_t = clearTimeout(f.hoverIntent_t);
            f.hoverIntent_s = 0;
            return q.out.apply(f, [g])
        };
        var c = function(v) {
            var g = jQuery.extend({}, v);
            var f = this;
            if (f.hoverIntent_t) {
                f.hoverIntent_t = clearTimeout(f.hoverIntent_t)
            }
            if (v.type == "mouseenter") {
                m = g.pageX;
                e = g.pageY;
                b(f).bind("mousemove", h);
                if (f.hoverIntent_s != 1) {
                    f.hoverIntent_t = setTimeout(function() {
                        d(g, f)
                    }, q.interval)
                }
            } else {
                b(f).unbind("mousemove", h);
                if (f.hoverIntent_s == 1) {
                    f.hoverIntent_t = setTimeout(function() {
                        n(g, f)
                    }, q.timeout)
                }
            }
        };
        return this.bind("mouseenter", c).bind("mouseleave", c)
    }
})(jQuery);
(function(b) {
    b.jGrowl = function(c, d) {
        if (b("#jGrowl").size() == 0) {
            b('<div id="jGrowl"></div>').addClass((d && d.position) ? d.position : b.jGrowl.defaults.position).appendTo("body")
        }
        b("#jGrowl").jGrowl(c, d)
    };
    b.fn.jGrowl = function(c, e) {
        if (b.isFunction(this.each)) {
            var d = arguments;
            return this.each(function() {
                var f = this;
                if (b(this).data("jGrowl.instance") == undefined) {
                    b(this).data("jGrowl.instance", b.extend(new b.fn.jGrowl(), {
                        notifications: [],
                        element: null,
                        interval: null
                    }));
                    b(this).data("jGrowl.instance").startup(this)
                }
                if (b.isFunction(b(this).data("jGrowl.instance")[c])) {
                    b(this).data("jGrowl.instance")[c].apply(b(this).data("jGrowl.instance"), b.makeArray(d).slice(1))
                } else {
                    b(this).data("jGrowl.instance").create(c, e)
                }
            })
        }
    };
    b.extend(b.fn.jGrowl.prototype, {
        defaults: {
            pool: 0,
            header: "",
            group: "",
            sticky: false,
            position: "top-right",
            glue: "after",
            theme: "default",
            themeState: "highlight",
            corners: "10px",
            check: 250,
            life: 3000,
            closeDuration: "normal",
            openDuration: "normal",
            easing: "swing",
            closer: true,
            closeTemplate: "&times;",
            closerTemplate: "<div>[ close all ]</div>",
            log: function(d, c, f) {},
            beforeOpen: function(d, c, f) {},
            afterOpen: function(d, c, f) {},
            open: function(d, c, f) {},
            beforeClose: function(d, c, f) {},
            close: function(d, c, f) {},
            animateOpen: {
                opacity: "show"
            },
            animateClose: {
                opacity: "hide"
            }
        },
        notifications: [],
        element: null,
        interval: null,
        create: function(c, d) {
            var d = b.extend({}, this.defaults, d);
            if (typeof d.speed !== "undefined") {
                d.openDuration = d.speed;
                d.closeDuration = d.speed
            }
            this.notifications.push({
                message: c,
                options: d
            });
            d.log.apply(this.element, [this.element, c, d])
        },
        render: function(e) {
            var c = this;
            var d = e.message;
            var f = e.options;
            var e = b('<div class="jGrowl-notification ' + f.themeState + " ui-corner-all" + ((f.group != undefined && f.group != "") ? " " + f.group : "") + '"><div class="jGrowl-close">' + f.closeTemplate + '</div><div class="jGrowl-header">' + f.header + '</div><div class="jGrowl-message">' + d + "</div></div>").data("jGrowl", f).addClass(f.theme).children("div.jGrowl-close").bind("click.jGrowl", function() {
                b(this).parent().trigger("jGrowl.close")
            }).parent();
            b(e).bind("mouseover.jGrowl", function() {
                b("div.jGrowl-notification", c.element).data("jGrowl.pause", true)
            }).bind("mouseout.jGrowl", function() {
                b("div.jGrowl-notification", c.element).data("jGrowl.pause", false)
            }).bind("jGrowl.beforeOpen", function() {
                if (f.beforeOpen.apply(e, [e, d, f, c.element]) != false) {
                    b(this).trigger("jGrowl.open")
                }
            }).bind("jGrowl.open", function() {
                if (f.open.apply(e, [e, d, f, c.element]) != false) {
                    if (f.glue == "after") {
                        b("div.jGrowl-notification:last", c.element).after(e)
                    } else {
                        b("div.jGrowl-notification:first", c.element).before(e)
                    }
                    b(this).animate(f.animateOpen, f.openDuration, f.easing, function() {
                        if (b.browser.msie && (parseInt(b(this).css("opacity"), 10) === 1 || parseInt(b(this).css("opacity"), 10) === 0)) {
                            this.style.removeAttribute("filter")
                        }
                        b(this).data("jGrowl").created = new Date();
                        b(this).trigger("jGrowl.afterOpen")
                    })
                }
            }).bind("jGrowl.afterOpen", function() {
                f.afterOpen.apply(e, [e, d, f, c.element])
            }).bind("jGrowl.beforeClose", function() {
                if (f.beforeClose.apply(e, [e, d, f, c.element]) != false) {
                    b(this).trigger("jGrowl.close")
                }
            }).bind("jGrowl.close", function() {
                b(this).data("jGrowl.pause", true);
                b(this).animate(f.animateClose, f.closeDuration, f.easing, function() {
                    b(this).remove();
                    var g = f.close.apply(e, [e, d, f, c.element]);
                    if (b.isFunction(g)) {
                        g.apply(e, [e, d, f, c.element])
                    }
                })
            }).trigger("jGrowl.beforeOpen");
            if (f.corners != "" && b.fn.corner != undefined) {
                b(e).corner(f.corners)
            }
            if (b("div.jGrowl-notification:parent", c.element).size() > 1 && b("div.jGrowl-closer", c.element).size() == 0 && this.defaults.closer != false) {
                b(this.defaults.closerTemplate).addClass("jGrowl-closer ui-state-highlight ui-corner-all").addClass(this.defaults.theme).appendTo(c.element).animate(this.defaults.animateOpen, this.defaults.speed, this.defaults.easing).bind("click.jGrowl", function() {
                    b(this).siblings().trigger("jGrowl.beforeClose");
                    if (b.isFunction(c.defaults.closer)) {
                        c.defaults.closer.apply(b(this).parent()[0], [b(this).parent()[0]])
                    }
                })
            }
        },
        update: function() {
            b(this.element).find("div.jGrowl-notification:parent").each(function() {
                if (b(this).data("jGrowl") != undefined && b(this).data("jGrowl").created != undefined && (b(this).data("jGrowl").created.getTime() + parseInt(b(this).data("jGrowl").life)) < (new Date()).getTime() && b(this).data("jGrowl").sticky != true && (b(this).data("jGrowl.pause") == undefined || b(this).data("jGrowl.pause") != true)) {
                    b(this).trigger("jGrowl.beforeClose")
                }
            });
            if (this.notifications.length > 0 && (this.defaults.pool == 0 || b(this.element).find("div.jGrowl-notification:parent").size() < this.defaults.pool)) {
                this.render(this.notifications.shift())
            }
            if (b(this.element).find("div.jGrowl-notification:parent").size() < 2) {
                b(this.element).find("div.jGrowl-closer").animate(this.defaults.animateClose, this.defaults.speed, this.defaults.easing, function() {
                    b(this).remove()
                })
            }
        },
        startup: function(c) {
            this.element = b(c).addClass("jGrowl").append('<div class="jGrowl-notification"></div>');
            this.interval = setInterval(function() {
                b(c).data("jGrowl.instance").update()
            }, parseInt(this.defaults.check));
            if (b.browser.msie && parseInt(b.browser.version) < 7 && !window.XMLHttpRequest) {
                b(this.element).addClass("ie6")
            }
        },
        shutdown: function() {
            b(this.element).removeClass("jGrowl").find("div.jGrowl-notification").remove();
            clearInterval(this.interval)
        },
        close: function() {
            b(this.element).find("div.jGrowl-notification").each(function() {
                b(this).trigger("jGrowl.beforeClose")
            })
        }
    });
    b.jGrowl.defaults = b.fn.jGrowl.prototype.defaults
})(jQuery);

function dt_fnServerData(n, p, f) {
    $("#stk_example_previous, #stk_example_next").hide();
    var b = $("#stk_company").val(),
        o = $("#stk_type_depot").val(),
        e = $("#stk_id_depot").val();
    if (oTable) {
        $(oTable).find("tbody").hide()
    }
    blockAllUI();
    var c = 1;
    var g = 0;
    var m = "";
    var d = "";
    var h = "";
    $.grep(p, function(q) {
        switch (q.name) {
            case "sSearch":
                h = q.value;
                break;
            case "iSortingCols":
                c = q.value;
                m = q;
                break;
            case "iSortCol_0":
                g = q.value;
                d = q;
                break
        }
    });
    if (this.fnSettings().fnRecordsTotal() > 250 && (this.fnSettings().fnRecordsDisplay() > 250 || h == "")) {
        if (parseInt(c) > 1 || parseInt(g) != 0) {
            $.jGrowl(lang_stk_too_many, {
                glue: "before",
                easing: "swing",
                header: "Important"
            });
            this.fnSort([]);
            if (m != "") {
                m.value = 1
            }
            if (d != "") {
                d.value = 0
            }
        }
    }
    p.push({
        name: "total_records",
        value: this.fnSettings().fnRecordsTotal()
    });
    p.push({
        name: "total_display",
        value: this.fnSettings().fnRecordsDisplay()
    });
    p.push({
        name: "id_societe",
        value: b
    });
    p.push({
        name: "type_depot",
        value: o
    });
    p.push({
        name: "id_depot",
        value: e
    });
    stk_get_filters(p);
    $.grep(p, function(q) {
        if (q.name == "iDisplayLength") {
            sessionStorage.iLength = q.value
        }
        return false
    });
    $.getJSON(n, p, function(q) {
        q.aaData = q.aaData.sort(sortGroupAsc);
        if (oTable) {
            $(oTable).find("tbody").show()
        }
        f(q);
        $("#stk_dynamic").show();
        UNblockAllUI()
    })
}

function dt_fnInitComplete() {
    if (this.fnSettings().fnRecordsTotal() > 250) {
        $.jGrowl(lang_stk_not_sorted.replace(/\|1/gi, this.fnSettings().fnRecordsTotal()), {
            life: 7000,
            glue: "before",
            easing: "swing",
            header: lang_stk_important
        });
        this.fnSort([])
    }
    oTable.find("tbody").show("fast", function() {
        $("#stk_btn_actions").show("fast")
    });
    $.jGrowl(this.fnPagingInfo().iTotal + " " + lang_stk_records_found + ".<hr>" + this.fnPagingInfo().iTotalPages + " " + lang_stk_pages_of + " " + this.fnPagingInfo().iLength + " " + lang_stk_items + ".", {
        theme: "jGrowlInfo"
    });
    UNblockAllUI()
}

function dt_fnDrawCallback(b) {
    if (b.aiDisplay.length == 0) {
        return
    }
    var u = $("#stk_example tbody tr");
    var v = u[0].getElementsByTagName("td").length;
    var f = "";
    var c = "";
    var h = 0;
    var o = 0;
    for (var g = 0; g < u.length; g++) {
        var n = b._iDisplayStart + g;
        try {
            var r = b.aoData[g]._aData.etat_action;
            var q = b.aoData[g]._aData.code_action;
            var m = b.aoData[g]._aData.nb;
            if (r != f) {
                var e = document.createElement("tr");
                var p = document.createElement("td");
                p.colSpan = v;
                p.className = "group";
                if (parseInt(q) > 0) {
                    p.innerHTML = "<b>" + r + '</b><input type="checkbox" class="stk_ck_group" data-code_action="' + q + '" align=right/>'
                } else {
                    p.innerHTML = "<b>" + r + "</b>"
                }
                e.appendChild(p);
                u[g].parentNode.insertBefore(e, u[g]);
                f = r;
                if (c != "") {
                    c.innerHTML += " (<i>" + h + " " + lang_stk_displayed_items + ")</i>";
                    if (h != o) {
                        c.innerHTML += " [<i>" + o + " " + lang_stk_total_displayed + "]</i>"
                    }
                }
                c = p;
                h = 0;
                o = 0
            }
            h += 1;
            o += parseInt(m)
        } catch (d) {}
    }
    checkBoxes.length = 0;
    reset_action_buttons();
    if (c != "") {
        c.innerHTML += " (<i>" + h + " " + lang_stk_displayed_items + ")</i>";
        if (h != o) {
            c.innerHTML += " [<i>" + o + " " + lang_stk_total_displayed + "]</i>"
        }
    }
}

function dt_fnRowCallback(d, e, g, z) {
    var p = 0,
        c = 0,
        h = 0,
        o = 0,
        f = 0,
        n = 0;
    $.grep(this.fnSettings().aoColumns, function(C, D) {
        if (C.mDataProp == "id_inter") {
            h = D
        } else {
            if (C.mDataProp == "SN") {
                n = D
            } else {
                if (C.mDataProp == "ref_bl") {
                    p = D
                } else {
                    if (C.mDataProp == "etat_piece") {
                        c = D
                    } else {
                        if (C.mDataProp == "location_short") {
                            o = D
                        } else {
                            if (C.mDataProp == "etat_logistique_short") {
                                f = D
                            }
                        }
                    }
                }
            }
        }
    });
    var r = "";
    switch (e.etat_piece) {
        case "GOOD":
            r = "green";
            break;
        case "BAD":
            r = "orange";
            break;
        case "DOA":
            r = "yellow";
            break;
        default:
    }
    if (r != "") {
        var u = e.etat_logistique_short;
        if (!u == null) {
            u = lang_stk_logistic_state + " : " + u.replace(/"/gi, "'")
        }
        $("td:eq(" + c + ")", d).addClass(r).css("cursor", "help").tooltip({
            bodyHandler: function() {
                return "<span class=''>" + u + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (parseInt(e.nb) == 1) {
        $("td:eq(" + f + ")", d).css("font-size", "smaller");
        $("img.tdopen", d).css("cursor", "pointer").tooltip({
            bodyHandler: function() {
                return "<span class=''>" + $(this).attr("tip") + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        });
        if (e.id_inter) {
            var q = createTipInter(e);
            q = q.replace(/"/gi, "'");
            var b = '<a href="#" class=stk_show_inter tip="' + q + '">' + e.id_inter + "</a>";
            $("td:eq(" + h + ")", d).html(b).addClass("etat" + e.id_etat).find("a").tooltip({
                bodyHandler: function() {
                    return "<span class=''>" + $(this).attr("tip") + "</span>"
                },
                track: true,
                delay: 0,
                showURL: false,
                fade: 250
            })
        }
        if (parseInt(e.etat_mvt) != 2) {
            var w = "";
            switch (parseInt(e.etat_mvt)) {
                case 2:
                    w = "green";
                    break;
                case 1:
                    w = "orange";
                    break;
                default:
                    w = "yellow"
            }
            var v = "";
            var b = e.location_short;
            var m = $("td:eq(" + o + ")", d);
            m.addClass(w);
            if (e.dst_location != "" || e.src_location != "") {
                if (e.dst_location != "") {
                    v = lang_stk_moving_to + " " + e.dst_location;
                    m.html(b + ' <img src="/var/themes/default/img/moving.gif" />')
                } else {
                    v = lang_stk_moving_from + " " + e.src_location;
                    m.html('<img src="/var/themes/default/img/moving.gif" /> ' + b)
                }
                v = v.replace(/"/gi, "'");
                m.tooltip({
                    bodyHandler: function() {
                        return "<span class=''>" + v + "</span>"
                    },
                    track: true,
                    delay: 0,
                    showURL: false,
                    fade: 250
                });
                m.css("cursor", "help")
            } else {
                m.html(b)
            }
        }
        if (e.bl_url && e.ref_bl) {
            $("td:eq(" + p + ")", d).html('<a href="#" class=stk_show_bl><u><b>' + e.ref_bl + "</b></u></a>")
        }
        if (regional_version == "IT01" || regional_version == "BN01" || regional_version == "IB01") {
            if (user_group_id == 1 || user_group_id == 3) {
                if (e.SN != "" && e.SN != null) {
                    $("td:eq(" + n + ")", d).html('<a class="stk_edit_sn">' + e.SN + "</a>")
                } else {
                    $("td:eq(" + n + ")", d).html('<a class="stk_edit_sn">Edit</a>')
                }
            }
        } else {
            if (user_group_id == 1 || user_group_id == 3) {
                if (e.SN != "" && e.SN != null) {
                    $("td:eq(" + n + ")", d).html('<a href="#" class="stk_edit_sn">' + e.SN + "</a>")
                } else {
                    $("td:eq(" + n + ")", d).html('<a href="#" class="stk_edit_sn">Edit</a>')
                }
            }
        }
    }
    return d
}

function dt_FormatDetails(c) {
    var b = oTable.fnGetData(c);
    var e = oTable.fnGetPosition(c);
    var d = '<div class="innerDetails"><div style="width:100%;background-color:white;opacity: 0.5;">';
    d += createTipInfo(b);
    d += '</div><br><div id="stkrow' + e + '"><img src="/var/themes/default/img/loader.gif"> ' + lang_stk_loading_history + "</div><br></div>";
    $.post("stock/get_mvts", {
        id_piece: b.id_piece,
        id_piece_inter: b.id_piece_inter
    }, function(f) {
        $("#stkrow" + e).hide().html(f).fadeIn("fast")
    });
    return d
}

function stk_init_panel() {
    $("#stk_filter_partner > select:eq(1)").append($("#partners_list_any").html());
    $("#stk_filter_partner > select:eq(1)").find("option:eq(0)").remove();
    $("#stk_filter_partner > select:eq(3)").append($("#intervention_states_list_any").html());
    $("#stk_filter_partner > select:eq(3)").find("option:eq(0)").remove().end().prepend("<option value='-1'>" + lang_intervention_canceled + "</option>");
    $("#stk_filter_partner > select:first").bind("click", function() {
        switch (parseInt($(this).val())) {
            case 1:
            case 2:
                $("#stk_filter_partner > select:eq(1)").hide().nextAll().show();
                $("#stk_filter_partner > select:eq(3)").hide();
                break;
            case 3:
                $("#stk_filter_partner > select:eq(0)").nextAll().hide();
                $("#stk_filter_partner > select:eq(3)").show();
                break;
            default:
                $("#stk_filter_partner > select:eq(1)").show().nextAll().hide()
        }
    });
    $("#stk_filter_date > select").empty().append("<option value='0' selected>" + lang_stk_last_move + "</option>").append("<option value='1'>" + lang_stk_creation + "</option>").append("<option value='2'>" + lang_stk_inter_date + "</option>");
    $("#stk_filter_sortie > select").empty().append("<option value='0'>" + lang_stk_under + "</option>").append("<option value='1'>" + lang_stk_out_of + "</option>").append("<option value='-1' selected>" + lang_stk_under_and_out + "</option>");
    blockAllUI();
    $.post("stock/get_id_depot_from_type", {
        type_depot: 1,
        id_societe: ""
    }, function(b) {
        $("#stk_filter_supplier > select").empty();
        $.each(b.result, function() {
            $("#stk_filter_supplier > select").append("<option value='" + this.value + "'>" + this.name + "</option>")
        });
        UNblockAllUI();
        $(this).val(0)
    }, "json");
    $.post("stock/get_logistic_states", {}, function(b) {
        $("#stk_filter_state > select").empty();
        $.each(b.result, function() {
            $("#stk_filter_state > select").append("<option value='" + this.value + "'>" + this.name + "</option>")
        });
        UNblockAllUI();
        $(this).val(0)
    }, "json");
    if (regional_version == "IT01") {
        $.post("stock/get_loader_partner", {}, function(b) {
            $("#select_partner > select").empty();
            $.each(b.result, function() {
                $("#select_partner > select").append("<option value='" + this.value + "'>" + this.name + "</option>")
            });
            UNblockAllUI();
            $(this).val(0)
        }, "json")
    }
    $.post("stock/get_part_states", {}, function(b) {
        $("#stk_filter_partstate > select").empty();
        $.each(b.result, function() {
            $("#stk_filter_partstate > select").append("<option value='" + this.value + "'>" + this.name + "</option>")
        });
        UNblockAllUI();
        $(this).val(0)
    }, "json");
    blockAllUI();
    $.post("stock/get_visible_companies", {}, function(c) {
        $("#stk_company").empty();
        var b = [];
        $.each(c.result, function() {
            $("#stk_company").append("<option value='" + this.s_id + "'>" + this.s_name + "</option>");
            b.push(this.s_id)
        });
        $("#stk_company").prepend("<option value='" + b.join(", ") + "' selected>== " + lang_stk_ignored + " ==</option>");
        $("#stk_company").bind("change", function() {
            $("#stk_id_depot option:first").attr("selected", "selected");
            blockAllUI();
            $.post("stock/get_id_depot_from_type", {
                type_depot: $("#stk_type_depot").val(),
                id_societe: $(this).val()
            }, function(d) {
                $("#stk_id_depot").empty().append("<option value='' selected>== " + lang_stk_ignored + " ==</option>");
                $.each(d.result, function() {
                    $("#stk_id_depot").append("<option value='" + this.value + "'>" + this.name + "</option>")
                });
                if ($("#stk_id_depot option").length == 2 || parseInt($("#stk_type_depot").val()) == 5) {
                    $("#stk_id_depot").val($("#stk_id_depot option:eq(1)").val())
                }
                UNblockAllUI()
            }, "json")
        });
        UNblockAllUI();
        if ($("#stk_company option").length == 2) {
            $("#stk_company").val($("#stk_company option:eq(1)").val()).change()
        }
    }, "json");
    blockAllUI();
    $.post("stock/get_types_depot", {
        for_action: true
    }, function(b) {
        $.each(b.result, function() {
            $("#stk_modal_dest_type").append("<option value='" + this.value + "'>" + this.name + "</option>")
        });
        $("#stk_modal_dest_type").change(function() {
            blockAllUI();
            $.post("stock/get_id_depot_from_type", {
                type_depot: $(this).val(),
                id_societe: "",
                for_action: "1"
            }, function(c) {
                $("#stk_modal_dest_id").empty();
                $.each(c.result, function() {
                    $("#stk_modal_dest_id").append("<option value='" + this.value + "'>" + this.name + "</option>")
                });
                $("#stk_modal_dest_id").val(0);
                UNblockAllUI()
            }, "json")
        });
        UNblockAllUI()
    }, "json");
    blockAllUI();
    $.post("stock/get_types_depot", {}, function(c) {
        $("#stk_type_depot").empty();
        var b = [];
        $.each(c.result, function() {
            $("#stk_type_depot").append("<option value='" + this.value + "'>" + this.name + "</option>");
            if (this.value == 3 || this.value == 5 || this.value == 6) {
                $("#stk_manager_type").append("<option value='" + this.value + "'>" + this.name + "</option>")
            }
            b.push(this.value)
        });
        $("#stk_type_depot").prepend("<option value='" + b.join(", ") + "' selected>== " + lang_stk_ignored + " ==</option>");
        $("#stk_type_depot").bind("change", function() {
            var d = $(this).val();
            if (d.indexOf(",") != -1) {
                $(this).parent().next().find("select").attr("disabled", true);
                $("#stk_company option:first").attr("selected", "selected")
            } else {
                switch (parseInt(d)) {
                    case 0:
                    case 1:
                    case 2:
                    case 4:
                        $(this).parent().next().find("select").attr("disabled", true);
                        $("#stk_company option:first").attr("selected", "selected");
                        break;
                    default:
                        $(this).parent().next().find("select").removeAttr("disabled")
                }
            }
            blockAllUI();
            $.post("stock/get_id_depot_from_type", {
                type_depot: $(this).val(),
                id_societe: $("#stk_company").val()
            }, function(e) {
                $("#stk_id_depot").empty().append("<option value='' selected>== " + lang_stk_ignored + " ==</option>");
                $.each(e.result, function() {
                    $("#stk_id_depot").append("<option value='" + this.value + "'>" + this.name + "</option>")
                });
                if ($("#stk_id_depot option").length == 2 || parseInt($("#stk_type_depot").val()) == 5) {
                    $("#stk_id_depot").val($("#stk_id_depot option:eq(1)").val())
                }
                UNblockAllUI()
            }, "json");
            $("#stk_id_depot option:first").attr("selected", "selected")
        });
        if ($("#stk_type_depot option").length == 2) {
            $("#stk_type_depot").val($("#stk_type_depot option:eq(1)").val()).change()
        }
        $("#stk_manager_type", "#stk_tab_manager").linkselect({
            init: function() {
                $("#stk_manager_id", "#stk_tab_manager").linkselect({
                    change: function(d, e, f) {
                        if (e != "" && $("#stk_manager_type", "#stk_tab_manager").linkselect("val") != "") {
                            $("#stk_manager_btn_search").removeAttr("disabled")
                        } else {
                            $("#stk_manager_btn_search", "#stk_tab_manager").attr("disabled", "disabled")
                        }
                    },
                    fixedWidth: false
                })
            },
            change: function(d, e, f) {
                if (e > 0) {
                    blockAllUI();
                    $.post("stock/get_stock_visu", {
                        type_depot: e
                    }, function(h) {
                        var g = "<option value=''> [...]</option>";
                        $.each(h.result, function() {
                            g += "<option value='" + this.value + "'>" + this.name + "</option>"
                        });
                        $("#stk_manager_id_clone", "#stk_tab_manager").html(g);
                        $("#stk_manager_id", "#stk_tab_manager").linkselect("replaceOptionsCustom", $("#stk_manager_id_clone", "#stk_tab_manager").html());
                        $("#stk_manager_id", "#stk_tab_manager").linkselect("open");
                        UNblockAllUI()
                    }, "json")
                } else {
                    $("#stk_manager_btn_search", "#stk_tab_manager").attr("disabled", "disabled");
                    $("#stk_manager_id_clone", "#stk_tab_manager").html("");
                    $("#stk_manager_id", "#stk_tab_manager").linkselect("replaceOptionsCustom", $("#stk_manager_id_clone", "#stk_tab_manager").html())
                }
            },
            fixedWidth: false
        });
        UNblockAllUI()
    }, "json");
    if (regional_version == "IT01") {
        $("#form_loader").submit(function(f) {
            f.stopImmediatePropagation();
            var c = 0;
            var g = "";
            var d = ($("#form_loader").serializeArray());
            c = d[0].value;
            if (c === "0") {
                g = "Pianificazione interventi"
            } else {
                g = "Movimentazione Parti"
            }
            var b = {
                url: "stock/upload_loader_file",
                type: "post",
                data: {
                    formData: c
                },
                beforeSubmit: function(n, h, e) {
                    var m = h[0];
                    if (m.file.value == "") {
                        return false
                    }
                    blockAllUI();
                    return true
                },
                error: function() {
                    tabs_delimiter_height();
                    $("#form_loader").resetForm();
                    UNblockAllUI()
                },
                success: function(h, e) {
                    UNblockAllUI();
                    $.modal('<div>\n		                                            <table  cellpadding="3" cellspacing="0" bordercolor="#FFFFFF" width="100%" >\n		                                                <thead class="ui-widget-header ui-state-default" style="font-variant:small-caps">\n		                                                    <tr>\n		                                                    <th style="text-align: center; color:#000000" font-weight: bold;>Loader - Elaborazione completata</th>\n		                                                    </tr>\n		                                                </thead>\n		                                            </table><br>\n		                                            <a style="color:#000000">Azione: ' + g + '</a><br><br><br>\n		                                            <div style="text-align: center"><fieldset class="field_set"><legend>ESITO</legend><a style="color:#000000">' + h + '</a><br></fieldset></div>\n		                                            <hr><div><input class="button_left contact-log" style="margin-left:37px" value="Scarica Log" type="button"><input id="btn_close" class="button_right modal-close simplemodal-close" style="margin-right:35px;" value="Annulla" type="button"></div></div><br><br><hr>', {
                        opacity: 30,
                        minHeight: 200,
                        minWidth: 200,
                        containerCss: {
                            height: 600,
                            padding: 2,
                            backgroundColor: "#FFFFFF",
                            width: 750,
                            fontSize: 15,
                            borderRadius: 10,
                            border: 1
                        },
                        overlayClose: true,
                        onOpen: function(m) {
                            m.overlay.fadeIn("fast", function() {
                                m.data.hide();
                                m.container.fadeIn("fast", function() {
                                    m.data.fadeIn("fast")
                                })
                            })
                        },
                        onClose: function(m) {
                            m.data.hide();
                            m.container.fadeOut("fast", function() {
                                m.overlay.fadeOut("fast", function() {
                                    $.modal.close()
                                })
                            })
                        },
                        onShow: function(m) {
                            $(".contact-log").click(function(o) {
                                var n = document.createElement("a");
                                h = h.replace(new RegExp("</p>", "g"), "\r\n");
                                h = h.replace(new RegExp("<p>", "g"), "");
                                n.setAttribute("href", "data:text/plain;charset=utf-8," + encodeURIComponent(h));
                                n.setAttribute("download", "LogFile");
                                n.style.display = "none";
                                document.body.appendChild(n);
                                n.click();
                                document.body.removeChild(n)
                            })
                        }
                    })
                }
            };
            $("#form_loader").ajaxSubmit(b);
            return false
        })
    }
}

function stk_init_interface_tab() {
    $("#stk_manager_btn_search").click(function() {
        $("#stk_dynamic, #stk_btn_actions").hide();
        blockAllUI();
        var n = $("#stk_manager_type", "#stk_tab_manager").linkselect("val");
        var h = $("#stk_manager_id", "#stk_tab_manager").linkselect("val");
        var m = $("#div_manager_ck_grouped", "#stk_tab_manager").is(":checked");
        $("#stk_dynamic2").load("stock/report_stock_manager", {
            inside: "yes",
            type_depot: n,
            id_depot: h,
            grouped: m
        }, function(q, o, p) {
            $("#stk_dynamic2").show();
            UNblockAllUI()
        })
    });
    $("#stk_tab_search input").keypress(function(h) {
        code = (h.keyCode ? h.keyCode : h.which);
        if (code == 13) {
            $("#stk_btn_search").click();
            h.preventDefault()
        }
    });
    var d = 0;
    var f = new ZeroClipboard($(".stk_memory"));
    f.on("ready", function(h) {
        f.on("copy", function(n) {
            var m = dt_prepare_export(oTable, $(n.target).attr("data-type"), $(n.target).attr("data-selected"));
            d = m.count;
            n.clipboardData.setData("text/plain", m.text)
        });
        f.on("aftercopy", function(m) {
            $.jGrowl(d + lang_stk_clipboard_rows, {
                glue: "before",
                easing: "swing",
                header: "Export in memory",
                like: 10000
            });
            d = 0
        })
    });
    f.on("error", function(h) {
        ZeroClipboard.destroy()
    });
    var c = new ZeroClipboard($(".stk_manager_memory"));
    d = 0;
    c.on("ready", function(h) {
        c.on("copy", function(n) {
            var m = dt_prepare_export(oTableReportMNG, $(n.target).attr("data-type"), $(n.target).attr("data-selected"));
            d = m.count;
            n.clipboardData.setData("text/plain", m.text)
        });
        c.on("aftercopy", function(m) {
            $.jGrowl(d + lang_stk_clipboard_rows, {
                glue: "before",
                easing: "swing",
                header: "Export in memory",
                like: 10000
            });
            d = 0
        })
    });
    c.on("error", function(h) {
        ZeroClipboard.destroy()
    });
    $("#stk_btn_actions input[name=stk_btn_cancelpart]").click(function() {
        if (confirm(lang_stk_cancelpart_msg)) {
            blockAllUI();
            var m = [];

            function h() {
                var o = m.pop();
                $.post("stock/set_part_cancel", {
                    id_piece: o
                }, function() {
                    if (m.length > 0) {
                        h()
                    } else {
                        UNblockAllUI();
                        $.jGrowl(lang_stk_process_end, {
                            header: lang_stk_information,
                            theme: "jGrowlInfo"
                        });
                        $("#stk_btn_search").click()
                    }
                })
            }
            $("input[type=checkbox]:checked", oTable.fnGetNodes()).each(function() {
                var p = this.parentNode.parentNode;
                var o = oTable.fnGetData(p);
                m.push(o.id_piece)
            });
            h();
            $.modal.close();
            var n = (m.length > 15) ? 10000 : 3000;
            $.jGrowl(lang_stk_process_run, {
                header: lang_stk_information,
                theme: "jGrowlInfo",
                life: n
            })
        }
    });
    $("#stk_btn_regenerate").click(function() {
        if (confirm("Etes-vous sÃ»r de vouloir rÃ©gÃ©nÃ©rer la commande ?")) {
            blockAllUI();
            var h = $("#stk_regenerate_list").val();
            var n = [];

            function m() {
                var p = n.pop();
                $.post("stock/set_part_regenerate", {
                    id_piece: p,
                    id_nomenclature: h
                }, function() {
                    if (n.length > 0) {
                        m()
                    } else {
                        UNblockAllUI();
                        $.jGrowl(lang_stk_process_end, {
                            header: lang_stk_information,
                            theme: "jGrowlInfo"
                        });
                        $("#stk_btn_search").click()
                    }
                })
            }
            $("input[type=checkbox]:checked", oTable.fnGetNodes()).each(function() {
                var q = this.parentNode.parentNode;
                var p = oTable.fnGetData(q);
                n.push(p.id_piece)
            });
            m();
            $.modal.close();
            var o = (n.length > 15) ? 10000 : 3000;
            $.jGrowl(lang_stk_process_run, {
                header: lang_stk_information,
                theme: "jGrowlInfo",
                life: o
            })
        }
    });
    $("#stk_btn_actions input[name=stk_btn_instock]").click(function() {
        if (confirm(lang_stk_put_instock_msg)) {
            blockAllUI();
            var h = [];

            function m() {
                var o = h.pop();
                $.post("stock/set_part_instock", {
                    id_piece: o
                }, function() {
                    if (h.length > 0) {
                        m()
                    } else {
                        UNblockAllUI();
                        $.jGrowl(lang_stk_process_end, {
                            header: lang_stk_information,
                            theme: "jGrowlInfo"
                        });
                        $("#stk_btn_search").click()
                    }
                })
            }
            $("input[type=checkbox]:checked", oTable.fnGetNodes()).each(function() {
                var p = this.parentNode.parentNode;
                var o = oTable.fnGetData(p);
                h.push(o.id_piece)
            });
            m();
            $.modal.close();
            var n = (h.length > 15) ? 10000 : 3000;
            $.jGrowl(lang_stk_process_run, {
                header: lang_stk_information,
                theme: "jGrowlInfo",
                life: n
            })
        }
    });
    $("#stk_btn_pickup").click(function(m) {
        blockAllUI();
        var z = [];
        var q = $("#stk_pickup_seltypedepot").val();
        var C = $("#stk_pickup_seliddepot").val();
        var n = $("#stk_parcels_number").val();
        var h = $("#stk_parcels_number_medium").val();
        var o = $("#stk_parcels_number_large").val();
        var u = $("#stk_pickup_seliddeparture").val();
        var r;
        if (u == "t") {
            r = 1
        } else {
            r = 2
        }
        var p = m.timeStamp;

        function w() {
            var E = z.pop();
            var G = z.pop();
            var J = z.pop();
            var I = z.pop();
            var D = z.pop();
            var H = z.pop();
            var K = 0;
            K = parseInt(n) + parseInt(h) + parseInt(o);
            if (n == 0 && h == 0 && o == 0) {
                alert("Incongruenza tra i colli selezionati ed il numero di parti da inviare. #PartToSend: " + D + " - #NColli: " + K);
                UNblockAllUI();
                $.load("stock/load_stock_view", {
                    inside: "yes"
                })
            } else {
                $.post("stock/ask_part_pickup", {
                    id_piece: E,
                    type_depot: q,
                    id_depot: C,
                    parcels_number: n,
                    parcels_number_medium: h,
                    parcels_number_large: o,
                    pickup_id: p,
                    id_agence: G,
                    id_nomenclature: H,
                    partsToSend: D,
                    partStateID: J,
                    interventionid: I,
                    dIdDeparture: u,
                    dTypeDeparture: r
                }, function() {
                    if (z.length > 0) {
                        w()
                    } else {
                        UNblockAllUI();
                        $.jGrowl(lang_stk_process_end, {
                            header: lang_stk_information,
                            theme: "jGrowlInfo"
                        });
                        $("#stk_btn_search").click()
                    }
                })
            }
        }
        if (C == null || q == null) {
            UNblockAllUI();
            alert(lang_stk_error_destination)
        } else {
            $("input[type=checkbox]:checked", oTable.fnGetNodes()).each(function() {
                var E = this.parentNode.parentNode;
                var D = oTable.fnGetData(E);
                console.log(D);
                z.push(D.id_nomenclature);
                z.push(D.nb);
                z.push(D.id_piece_inter);
                switch (D.etat_piece) {
                    case "GOOD":
                        z.push("1");
                        break;
                    case "BAD":
                        z.push("2");
                        break;
                    case "DOA":
                        z.push("3");
                        break
                }
                z.push(D.id_depot);
                z.push(D.id_piece)
            });
            w();
            $.modal.close();
            var v = (z.length > 15) ? 10000 : 3000;
            $.jGrowl(lang_stk_process_run, {
                header: lang_stk_information,
                theme: "jGrowlInfo",
                life: v
            })
        }
    });
    $("#stk_btn_receive").click(function() {
        blockAllUI();
        var h = [];
        var m = $("#stk_bl_aller").val();

        function n() {
            var p = h.pop();
            $.post("stock/set_part_received", {
                id_piece: p,
                bl: m
            }, function() {
                if (h.length > 0) {
                    n()
                } else {
                    UNblockAllUI();
                    $.jGrowl(lang_stk_process_end, {
                        header: lang_stk_information,
                        theme: "jGrowlInfo"
                    });
                    $("#stk_btn_search").click()
                }
            })
        }
        $("input[type=checkbox]:checked", oTable.fnGetNodes()).each(function() {
            var q = this.parentNode.parentNode;
            var p = oTable.fnGetData(q);
            h.push(p.id_piece)
        });
        n();
        $.modal.close();
        var o = (h.length > 15) ? 10000 : 3000;
        $.jGrowl(lang_stk_process_run, {
            header: lang_stk_information,
            theme: "jGrowlInfo",
            life: o
        })
    });
    $("#stk_btn_ready_confirm").click(function() {
        blockAllUI();
        var n = [];
        var m = $("#stk_ready_confirm_bl").val();

        function h() {
            var p = n.pop();
            $.post("stock/set_part_ready_confirm", {
                id_piece: p,
                bl: m
            }, function() {
                if (n.length > 0) {
                    h()
                } else {
                    UNblockAllUI();
                    $.jGrowl(lang_stk_process_end, {
                        header: lang_stk_information,
                        theme: "jGrowlInfo"
                    });
                    $("#stk_btn_search").click()
                }
            })
        }
        $("input[type=checkbox]:checked", oTable.fnGetNodes()).each(function() {
            var q = this.parentNode.parentNode;
            var p = oTable.fnGetData(q);
            n.push(p.id_piece)
        });
        h();
        $.modal.close();
        var o = (n.length > 15) ? 10000 : 3000;
        $.jGrowl(lang_stk_process_run, {
            header: lang_stk_information,
            theme: "jGrowlInfo",
            life: o
        })
    });
    $("#stk_btn_send").click(function() {
        blockAllUI();
        var m = 0;
        var r = [];
        var h = $("#stk_send_bl").val();
        var p = $("#stk_send_seltypedepot").val();
        var o = $("#stk_send_seliddepot").val();

        function n() {
            var u = r.pop();
            $.post("stock/set_part_sent", {
                id_piece: u,
                type_depot: p,
                id_depot: o,
                bl: h
            }, function() {
                if (r.length > 0) {
                    n()
                } else {
                    UNblockAllUI();
                    $.jGrowl(lang_stk_process_end, {
                        header: lang_stk_information,
                        theme: "jGrowlInfo"
                    });
                    $("#stk_btn_search").click()
                }
            })
        }
        if (p == null || (o == null && p != 4)) {
            UNblockAllUI();
            alert(lang_stk_error_destination)
        } else {
            if (m != 1 || $("#stk_bl_retour").val() != "") {
                $("input[type=checkbox]:checked", oTable.fnGetNodes()).each(function() {
                    var v = this.parentNode.parentNode;
                    var u = oTable.fnGetData(v);
                    r.push(u.id_piece)
                });
                n();
                $.modal.close();
                var q = (r.length > 15) ? 10000 : 3000;
                $.jGrowl(lang_stk_process_run, {
                    header: lang_stk_information,
                    theme: "jGrowlInfo",
                    life: q
                })
            } else {
                alert(lang_stk_mandatory_bl_back);
                $("#stk_bl_retour").focus();
                UNblockAllUI()
            }
        }
    });

    function e(m, h, n) {
        $(m).find("PART").each(function() {
            var q = parseInt($(this).find("QUANTITY").text()),
                o = $(this).find("NAME").text(),
                p = $(this).find("NUMBER").text();
            $.jGrowl("<strong>" + q + " piÃ¨ce(s) disponible(s)</strong> pour :<hr>" + p + "<hr>[" + o + "]", {
                life: 10000,
                header: "RÃ©sultat dispo stock",
                theme: "jGrowlInfo"
            });
            $("#resultat", h).html("<br><i>" + q + " piÃ¨ce(s) disponible(s) pour " + p + " [" + o + "]</i>")
        });
        if ($(m).find("PART").text() == "") {
            $.jGrowl("<strong>PiÃ¨ce inconnue</strong>:<hr>" + n, {
                life: 10000,
                header: "RÃ©sultat dispo stock",
                theme: "jGrowlInfo"
            });
            $("#resultat", h).html("<br><i>PiÃ¨ce inconnue : " + n + "</i>")
        }
        UNblockAllUI()
    }

    function b(n, h, o, m) {
        $(n).find("ROW").each(function() {
            var r = parseInt($(this).find("QUANTITY").text()),
                p = $(this).find("NAME").text(),
                q = $(this).find("NUMBER").text();
            $.jGrowl("<strong>" + r + " piÃ¨ce(s) disponible(s)</strong> pour :<hr>" + q + "<hr>[" + p + "]", {
                life: 10000,
                header: "RÃ©sultat dispo stock",
                theme: "jGrowlInfo"
            });
            $("#resultat", h).html("<br><i>" + r + " piÃ¨ce(s) disponible(s) pour " + q + " [" + p + "]</i>");
            if (p != "") {
                $.post("stock/check_part_exists", {
                    ref: q,
                    libelle: p,
                    "do": m
                }, function(u) {
                    if (u != "") {
                        $.jGrowl("<strong>" + u + "</strong>", {
                            life: 50000,
                            header: "",
                            theme: "jGrowlInfo"
                        })
                    }
                })
            }
        });
        if ($(n).find("ROW").text() == "") {
            $.jGrowl("<strong>PiÃ¨ce inconnue</strong>:<hr>" + o, {
                life: 10000,
                header: "RÃ©sultat dispo stock",
                theme: "jGrowlInfo"
            });
            $("#resultat", h).html("<br><i>PiÃ¨ce inconnue : " + o + "</i>")
        }
        UNblockAllUI()
    }

    function g(n, h, o, m) {
        $(n).find("ROW").each(function() {
            var r = parseInt($(this).find("QUANTITY").text()),
                p = $(this).find("NAME").text(),
                q = $(this).find("NUMBER").text();
            $.jGrowl("<strong>" + r + " piÃ¨ce(s) disponible(s)</strong> pour :<hr>" + q + "<hr>[" + p + "]", {
                life: 10000,
                header: "RÃ©sultat dispo stock",
                theme: "jGrowlInfo"
            })
        });
        if ($(n).find("ROW").text() == "") {
            $.jGrowl("<strong>PiÃ¨ce inconnue</strong>:<hr>" + o, {
                life: 10000,
                header: "RÃ©sultat dispo stock",
                theme: "jGrowlInfo"
            });
            $("#resultatBEXT", h).html("<br><i>PiÃ¨ce inconnue : " + o + "</i>")
        }
        UNblockAllUI()
    }
    $("input[type=text]", "#stk_check_stock_partner").keyup(function(h) {
        if (h.keyCode == 13) {
            $("input[name=check]", "#stk_check_stock_partner").click()
        }
    });
    $("input[name=check]", "#stk_check_stock_partner").click(function() {
        var h = "#stk_check_stock_partner";
        $("#resultat", h).html("");
        var m = $("input[name=ref]", h).val().replace(/\//g, "~~");
        if (m == "") {
            alert(lang_stk_alert_input_ref);
            return false
        }
        blockAllUI();
        $.post("EDI/sbo/stock_ref_from_user/" + m, function(n) {
            e(n, h, m)
        }, "xml")
    });
    $("input[name=export]", "#stk_check_stock_partner").click(function() {
        var h = "#stk_check_stock_partner";
        var m = $("select[name=do_export] option:selected", h).val();
        var n = $("input[type=checkbox]", h).is(":checked");
        $.jGrowl("Ouvrir le fichier avec Excel et choisir : ouvrir en tant que Tableau XML.", {
            glue: "before",
            easing: "swing",
            header: "Instructions",
            theme: "jGrowlInfo",
            life: 10000
        });
        $("#secretIFrame").attr("src", "EDI/sbo/stock_listing_from_user_download/" + n)
    });
    $("input[name=ref]", "#stk_check_stock_internal").keyup(function(h) {
        if (h.keyCode == 13) {
            $("input[name=check]", "#stk_check_stock_internal").click()
        }
    });
    $("input[name=refBEXT]", "#stk_check_stock_internal").keyup(function(h) {
        if (h.keyCode == 13) {
            $("input[name=checkBEXT]", "#stk_check_stock_internal").click()
        }
    });
    $("#sbo_btn_3csarts").click(function() {
        if ($("#3csafrom").val() == "") {
            $("#3csafrom, #3csato").datepicker("setDate", new Date())
        }
        var h = $("#3csafrom").val(),
            m = $("#3csato").val(),
            n = $("select[name=rdo] option:selected", "#stk_check_stock_internal").val().replace("C", "F"),
            p = $("input[name=magasin]", "#stk_check_stock_internal").val(),
            o = $("input[name=dizlib]", "#stk_check_stock_internal").val();
        $.jGrowl("Ouvrir le fichier avec Excel et choisir : ouvrir en tant que Tableau XML.", {
            glue: "before",
            easing: "swing",
            header: "Instructions",
            theme: "jGrowlInfo",
            life: 10000
        });
        $("#secretIFrame").attr("src", "EDI/sbo/stock_get_entries/" + n + "/" + h + "/" + m + "/" + p + "/" + o + "/")
    });
    $("input[name=check]", "#stk_check_stock_internal").click(function() {
        var h = "#stk_check_stock_internal";
        $("#resultat", h).html("");
        var o = $("input[name=ref]", h).val().replace(/\//g, "~~");
        if (o == "") {
            alert("Veuillez saisir une rÃ©fÃ©rence piÃ¨ce !");
            return false
        }
        var m = $("select[name=do] option:selected", h).val();
        var n = $("select[name=rstock] option:selected", h).val();
        blockAllUI();
        $.post("EDI/sbo/get_stock_ref_custom/" + o + "/" + m + "/" + n, function(p) {
            b(p, h, o, m)
        }, "xml")
    });
    $("input[name=checkBEXT]", "#stk_check_stock_internal").click(function() {
        var h = "#stk_check_stock_internal";
        $("#resultatBEXT", h).html("");
        var o = $("input[name=refBEXT]", h).val().replace(/\//g, "~~");
        if (o == "") {
            alert("Veuillez saisir une rÃ©fÃ©rence piÃ¨ce !");
            return false
        }
        var m = $("input[name=doBEXT]", h).val();
        var n = $("select[name=rstockBEXT] option:selected", h).val();
        blockAllUI();
        $.post("EDI/bext/get_stock_availability2", {
            ref: o,
            "do": m,
            stock: n
        }, function(p) {
            g(p, h, o, m)
        }, "xml")
    });
    $("input[name=export]", "#stk_check_stock_internal").click(function() {
        var h = "#stk_check_stock_internal";
        var n = $("input[type=checkbox]", h).is(":checked");
        var m = $("select[name=do_export] option:selected", h).val();
        var o = $("select[name=tstock] option:selected", h).val();
        $.jGrowl("Ouvrir le fichier avec Excel et choisir : ouvrir en tant que Tableau XML.", {
            glue: "before",
            easing: "swing",
            header: "Instructions",
            theme: "jGrowlInfo",
            life: 10000
        });
        $("#secretIFrame").attr("src", "EDI/sbo/get_stock_listing_custom/" + m + "/" + o + "/" + n)
    })
}

function stk_init_live_events() {
    $("#stk_filter_action select").change(function() {
        if (user_group_id == 1 && $(this).val() == "1" && $("#stk_filter_moving input[type=checkbox]:checked").length == 0) {
            $("#stk_filter_moving input[type=checkbox]").attr("checked", "checked")
        }
    });
    $("#stk_filter_partner select").change(function() {
        if (user_group_id == 1 && $(this).val() == "1" && $("#stk_filter_moving input[type=checkbox]:checked").length == 0) {
            $("#stk_filter_moving input[type=checkbox]").attr("checked", "checked")
        }
    });
    $("#form_wrapper .columnright > div").each(function() {
        $(this).find("input, select, label").attr("disabled", true).end().prepend("<input type=checkbox class=ckfilter />")
    });
    if (regional_version == "IT01" || regional_version == "BN01") {
        $("#stk_filter_moving input.ckfilter").attr("checked", true)
    }
    $("#form_wrapper .columnright > div input[type=checkbox].ckfilter").bind("click", function() {
        if ($(this).is(":checked")) {
            $(this).parent().find("input, select, label").removeAttr("disabled")
        } else {
            $(this).parent().find("input, select, label").not(this).attr("disabled", true)
        }
    });
    $(".datefrom, .dateto", "#stk_tab_search").datepicker({
        firstDay: 1,
        changeFirstDay: true,
        changeYear: true,
        yearRange: "-1:+1",
        changeMonth: true,
        numberOfMonths: 3,
        dateFormat: "yy-mm-dd",
        onSelect: function(c) {
            var b = $(".datefrom", "#stk_tab_search").val().replace(/-/gi, "");
            var d = $(".dateto", "#stk_tab_search").val().replace(/-/gi, "");
            if (b != "") {
                $(".dateto", "#stk_tab_search").removeAttr("disabled")
            } else {
                $(".dateto", "#stk_tab_search").attr("disabled", "disabled")
            }
            if (d < b) {
                if (d != "") {
                    $.jGrowl(lang_stk_invalid_date, {
                        header: lang_stk_important
                    })
                }
                $(".dateto", "#stk_tab_search").val($(".datefrom", "#stk_tab_search").val())
            }
        }
    });
    $("#3csafrom, #3csato").datepicker({
        firstDay: 1,
        changeFirstDay: true,
        changeYear: true,
        yearRange: "-1:+1",
        changeMonth: true,
        numberOfMonths: 3,
        constrainInput: true,
        defaultDate: 0,
        dateFormat: "yy-mm-dd",
        onSelect: function(c) {
            var b = $("#3csafrom").val().replace(/-/gi, "");
            var d = $("#3csato").val().replace(/-/gi, "");
            if (b != "") {
                $("#3csato").removeAttr("disabled")
            } else {
                $("#3csato").attr("disabled", "disabled")
            }
            if (d < b) {
                if (d != "") {
                    $.jGrowl(lang_stk_invalid_date, {
                        header: lang_stk_important
                    })
                }
                $("#3csato").val($("#3csafrom").val())
            }
        }
    });
    $("#stk_example").parent().bind("resize", function() {
        $(".dataTables_wrapper").css("width", $(this).width() - 60);
        if (oTable) {
            oTable.fnDraw()
        }
    });
    $("a.stk_show_inter", "#stk_example").live("mousedown", function(c) {
        var d = this.parentNode.parentNode;
        var b = oTable.fnGetData(d);
        OpenClientTab(b.id_client, "", b.id_inter, -1);
        c.preventDefault()
    });
    if (regional_version !== "IT01" && regional_version !== "BN01" && regional_version !== "IB01") {
        $("a.stk_edit_sn", "#stk_example").live("mousedown", function(g) {
            var h = this.parentNode.parentNode;
            var f = oTable.fnGetData(h);
            var b = prompt(lang_stk_enter_new_serial, f.SN);
            if (b != null && b != "null" && b.trim() != "") {
                var d = b,
                    c = f.SN;
                if (d != c) {
                    $.post("/index.php/stock/update_sn", {
                        id_piece: f.id_piece,
                        sn: d,
                        old_sn: c
                    });
                    $(this).html(b)
                }
            }
            g.preventDefault()
        })
    }
    $("a.stk_show_bl", "#stk_example").live("mousedown", function(c) {
        c.preventDefault();
        var d = this.parentNode.parentNode;
        var b = oTable.fnGetData(d);
        $.modal('<a href="' + b.bl_url + '" target="_blank">Open in a new tab</a><br><iframe src="' + b.bl_url + '" height="400" width="750" style="border:0">', {
            opacity: 30,
            overlayCss: {
                backgroundColor: "#000"
            },
            minHeight: 200,
            minWidth: 200,
            containerCss: {
                height: 400,
                padding: 2,
                width: 750
            },
            overlayClose: true,
            onOpen: function(e) {
                e.overlay.fadeIn("fast", function() {
                    e.data.hide();
                    e.container.fadeIn("fast", function() {
                        e.data.fadeIn("fast")
                    })
                })
            },
            onClose: function(e) {
                e.data.hide();
                e.container.fadeOut("fast", function() {
                    e.overlay.fadeOut("fast", function() {
                        $.modal.close()
                    })
                })
            }
        })
    });
    $("#form_wrapper h3").bind("click", function() {
        $("#form_wrapper h3").nextAll().slideToggle("fast", function() {})
    });
    $("#stk_example tbody>tr").live("dblclick", function(d) {
        d.preventDefault();
        var f = this;
        var b = $("td.center>img", f);
        if (b.attr("src").match("elbow-minus-nl")) {
            b.attr("src", "/var/themes/default/extjs_images/elbow-plus-nl.gif");
            $(this).next("tr").find("table").slideUp("fast", function() {
                oTable.fnClose(f)
            })
        } else {
            b.attr("src", "/var/themes/default/extjs_images/elbow-minus-nl.gif");
            var c = oTable.fnOpen(f, dt_FormatDetails(f), "details");
            $("div.innerDetails", c).slideDown("fast")
        }
        return false
    });
    $("#stk_example tbody td img.tdopen").live("mousedown", function() {
        var c = this.parentNode.parentNode;
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            $(this).parent("td").parent("tr").next("tr").find("table").slideUp("fast", function() {
                oTable.fnClose(c)
            })
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            var b = oTable.fnOpen(c, dt_FormatDetails(c), "details");
            $("div.innerDetails", b).slideDown("fast")
        }
    });
    $("#stk_example tbody td img.stk_delmvt").live("mousedown", function() {
        var c = this.parentNode.parentNode;
        if (confirm(lang_stk_rollback_msg)) {
            blockAllUI();
            var d = $(this).attr("data-current");
            var b = $(this).attr("data-previous");
            $.post("stock/delete_mvt", {
                current: d,
                previous: b
            }, function() {
                UNblockAllUI();
                $.jGrowl(lang_stk_process_end, {
                    header: lang_stk_information,
                    theme: "jGrowlInfo"
                });
                $("#stk_btn_search").click()
            })
        }
    });
    $(".stk_ck", "#stk_example").live("change", function() {
        var e = this.parentNode.parentNode;
        var f = oTable.fnGetPosition(e);
        var c = oTable.fnGetData(e);

        function b(h, g, m) {
            return (h.code_action != c.code_action)
        }

        function d(h, g, m) {
            if (h.id_piece == c.id_piece) {
                m.splice(g, 1);
                return true
            }
        }
        if ($(this).is(":checked")) {
            if (checkBoxes.some(b)) {
                $.jGrowl(lang_stk_uncheckable_full, {
                    header: lang_stk_uncheckable,
                    life: 10000
                });
                $(e).removeClass("row_selected").removeClass("DTTT_selected");
                $(this).removeAttr("checked")
            } else {
                checkBoxes.push({
                    id_piece: c.id_piece,
                    code_action: c.code_action
                });
                if (!$(e).hasClass("row_selected")) {
                    $(e).addClass("row_selected").addClass("DTTT_selected")
                }
                update_action_buttons(c.code_action)
            }
        } else {
            $(e).removeClass("row_selected").removeClass("DTTT_selected");
            checkBoxes.some(d);
            set_action_title()
        }
        if (checkBoxes.length == 0) {
            reset_action_buttons()
        }
    });
    $(".stk_ck_group", "#stk_example").live("change", function() {
        var c = $(this).is(":checked");
        var b = $(this);
        $("INPUT[data-code_action='" + $(this).attr("data-code_action") + "']", oTable.fnGetNodes()).each(function() {
            var h = this.parentNode.parentNode;
            var m = oTable.fnGetPosition(h);
            var e = oTable.fnGetData(h);

            function d(o, n, p) {
                return (o.code_action != e.code_action)
            }

            function g(o, n, p) {
                if (o.id_piece == e.id_piece) {
                    p.splice(n, 1);
                    return true
                }
            }

            function f(o, n, p) {
                if (o.id_piece == e.id_piece) {
                    return true
                }
            }
            if (c) {
                if (checkBoxes.some(d)) {
                    $.jGrowl(lang_stk_uncheckable_full, {
                        header: lang_stk_uncheckable,
                        life: 10000
                    });
                    $(h).removeClass("row_selected").removeClass("DTTT_selected");
                    $(this).removeAttr("checked");
                    b.removeAttr("checked");
                    return false
                } else {
                    if (!checkBoxes.some(f)) {
                        checkBoxes.push({
                            id_piece: e.id_piece,
                            code_action: e.code_action
                        })
                    }
                    if (!$(h).hasClass("row_selected")) {
                        $(h).addClass("row_selected").addClass("DTTT_selected")
                    }
                    $(this).attr("checked", "checked")
                }
            } else {
                $(h).removeClass("row_selected").removeClass("DTTT_selected");
                $(this).removeAttr("checked");
                checkBoxes.some(g)
            }
        });
        if (checkBoxes.length == 0) {
            reset_action_buttons()
        } else {
            update_action_buttons($(this).attr("data-code_action"))
        }
    })
}

function stk_get_filters(b) {
    $("#form_wrapper .columnright > div input[type=checkbox].ckfilter:checked").each(function() {
        var c = $(this).parent("div"),
            o = $(c).attr("id");
        switch (o) {
            case "stk_filter_date":
                var h = $("select", c).val(),
                    e = $(".datefrom", c).val(),
                    n = $(".dateto", c).val();
                if (e != "" && n != "") {
                    b.push({
                        name: "f_date_type",
                        value: h
                    });
                    b.push({
                        name: "f_date_from",
                        value: e
                    });
                    b.push({
                        name: "f_date_to",
                        value: n
                    })
                }
                break;
            case "stk_filter_action":
                var h = $("select", c).val();
                b.push({
                    name: "f_action_type",
                    value: h
                });
                break;
            case "stk_filter_supplier":
                var h = $("select", c).val();
                b.push({
                    name: "f_supplier_type",
                    value: h
                });
                break;
            case "stk_filter_partner":
                var h = $("select:first", c).val();
                var g = $("select:eq(1)", c).val();
                var f = $("select[name=search]", c).val();
                var d = $("select:eq(3)", c).val();
                var m = $("input[type=text]", c).val();
                b.push({
                    name: "f_partner_type",
                    value: h
                });
                switch (parseInt(h)) {
                    case 0:
                        b.push({
                            name: "f_partner_id",
                            value: g
                        });
                        b.push({
                            name: "f_partner_search",
                            value: ""
                        });
                        b.push({
                            name: "f_partner_text",
                            value: ""
                        });
                        b.push({
                            name: "f_partner_state",
                            value: ""
                        });
                        break;
                    case 1:
                    case 2:
                        b.push({
                            name: "f_partner_id",
                            value: ""
                        });
                        b.push({
                            name: "f_partner_search",
                            value: f
                        });
                        b.push({
                            name: "f_partner_text",
                            value: m
                        });
                        b.push({
                            name: "f_partner_state",
                            value: ""
                        });
                        break;
                    case 3:
                        b.push({
                            name: "f_partner_id",
                            value: ""
                        });
                        b.push({
                            name: "f_partner_search",
                            value: ""
                        });
                        b.push({
                            name: "f_partner_text",
                            value: ""
                        });
                        b.push({
                            name: "f_partner_state",
                            value: d
                        });
                        break
                }
                break;
            case "stk_filter_sortie":
                var h = $("select", c).val();
                b.push({
                    name: "f_sortie_type",
                    value: h
                });
                break;
            case "stk_filter_state":
                var h = $("select", c).val();
                b.push({
                    name: "f_state_type",
                    value: h
                });
                break;
            case "stk_filter_partstate":
                var h = $("select", c).val();
                b.push({
                    name: "f_partstate_type",
                    value: h
                });
                break;
            case "stk_filter_check":
                b.push({
                    name: "f_check",
                    value: 1
                });
                break;
            case "stk_filter_moving":
                b.push({
                    name: "f_moving",
                    value: 1
                });
                break;
            case "stk_filter_part":
                var h = $("select", c).val(),
                    g = $("select[name=search]", c).val(),
                    m = $.trim($("input[type=text]", c).val());
                if (m != "" || g > 2) {
                    b.push({
                        name: "f_part_type",
                        value: h
                    });
                    b.push({
                        name: "f_part_search",
                        value: g
                    });
                    b.push({
                        name: "f_part_text",
                        value: m
                    })
                }
                break
        }
    })
}

function js_gettime() {
    var b = new Date();
    return b.getMinutes() + ":" + b.getSeconds()
}

function stk_init_table() {
    stk_init_live_events();
    stk_init_actions();
    $("#stk_btn_search").click(function() {
        $("#stk_dynamic2").hide();
        blockAllUI();
        $("div.DTTT_collection").remove();
        $("div.DTTT_container").remove();
        $("div.fixedHeader").remove();
        checkBoxes.length = 0;
        reset_action_buttons();
        if (oTable) {
            $(oTable).find("tbody").hide()
        }
        oTable = $("#stk_example").dataTable({
            fnServerData: dt_fnServerData,
            fnRowCallback: dt_fnRowCallback,
            fnInitComplete: dt_fnInitComplete,
            fnDrawCallback: dt_fnDrawCallback,
            bDestroy: true,
            bAutoWidth: false,
            bProcessing: true,
            bServerSide: true,
            bDeferRender: true,
            bStateSave: false,
            bUseRendered: true,
            sAjaxSource: "stock/stk_get_stock_entrepot",
            bJQueryUI: false,
            sPaginationType: "full_numbers",
            aLengthMenu: [
                [15, 25, 50, 100, 250, 500],
                [15, 25, 50, 100, 250, 500]
            ],
            iDisplayLength: (parseInt(sessionStorage.iLength) > 0) ? sessionStorage.iLength : 15,
            oLanguage: objLanguage,
            aoColumnDefs: objColumns
        });
        oTable.fnFilterOnReturn();
        $("#form_wrapper h3").nextAll().slideToggle("fast", function() {});
        $("#stk_btn_memory").removeAttr("disabled")
    })
}

function update_action_buttons(b) {
    $("#stk_btn_actions input[type='button']").attr("disabled", "disabled");
    $("#stk_btn_actions input[type='button'].action" + b).removeAttr("disabled");
    set_action_title()
}

function reset_action_buttons() {
    $("#stk_btn_actions input[type='button']").attr("disabled", "disabled");
    set_action_title()
}

function set_action_title() {
    if (checkBoxes.length) {
        $("#stk_btn_actions > h3").html(lang_stk_action_lines.replace(/\|1/gi, checkBoxes.length))
    } else {
        $("#stk_btn_actions > h3").html(lang_stk_action_info)
    }
}

function stk_init_actions() {
    $("input[type=number]", "#stk_part_pickup").numeric({
        allow: ".,"
    });
    $("#stk_btn_actions input[type=button]").live("mousedown", function() {
        var b = $(this).attr("name");
        blockAllUI();
        switch (b) {
            case "stk_btn_receive":
                var c = "stk_tab_receive";
                $("#stk_part_receive").modal({
                    autoResize: true,
                    minWidth: 800,
                    minHeight: 600,
                    containerCss: {
                        height: $("#" + c).height() + 20,
                        width: $("#" + c).width() + 20,
                        "border-radius": "20px 3px"
                    },
                    overlayClose: true,
                    onClose: function(d) {
                        d.data.fadeOut("fast", function() {
                            d.container.slideUp("fast", function() {
                                d.overlay.fadeOut("fast", function() {
                                    $.modal.close();
                                    $("#" + c).hide()
                                })
                            })
                        })
                    },
                    onOpen: function(d) {
                        d.overlay.fadeIn("fast", function() {
                            d.container.slideDown("fast", function() {
                                d.data.fadeIn("fast");
                                $("#" + c).fadeIn("fast");
                                $("#stk_bl_aller").val($("#logi_refbl").val())
                            })
                        })
                    },
                    onShow: function(d) {
                        $("a", d.data).click(function() {
                            return false
                        })
                    }
                });
                break;
            case "stk_btn_send":
                var c = "stk_tab_send";
                $("#stk_part_send").modal({
                    autoResize: true,
                    minWidth: 800,
                    minHeight: 600,
                    containerCss: {
                        height: $("#" + c).height() + 20,
                        width: $("#" + c).width() + 20,
                        "border-radius": "20px 3px"
                    },
                    overlayClose: true,
                    onClose: function(d) {
                        d.data.fadeOut("fast", function() {
                            d.container.slideUp("fast", function() {
                                d.overlay.fadeOut("fast", function() {
                                    $.modal.close();
                                    $("#" + c).hide()
                                })
                            })
                        })
                    },
                    onOpen: function(d) {
                        var e = this;
                        d.overlay.fadeIn("fast", function() {
                            d.container.slideDown("fast", function() {
                                d.data.fadeIn("fast");
                                d.container.height($("#" + c).height() + 20);
                                e.setPosition();
                                $("#" + c).fadeIn("fast");
                                $("#stk_send_bl").val($("#stk_refbl").val());
                                $.post("stock/get_types_depot", {
                                    for_action: true
                                }, function(f) {
                                    $("#stk_send_seltypedepot").empty();
                                    $.each(f.result, function() {
                                        $("#stk_send_seltypedepot").append("<option value='" + this.value + "'>" + this.name + "</option>")
                                    });
                                    $("#stk_send_seltypedepot").change(function() {
                                        blockAllUI();
                                        $.post("stock/get_id_depot_from_type", {
                                            type_depot: $(this).val(),
                                            id_societe: "",
                                            for_action: "1"
                                        }, function(g) {
                                            $("#stk_send_seliddepot").empty();
                                            $.each(g.result, function() {
                                                $("#stk_send_seliddepot").append("<option value='" + this.value + "'>" + this.name + "</option>")
                                            });
                                            $("#stk_send_seliddepot").val(0);
                                            UNblockAllUI()
                                        }, "json")
                                    });
                                    $("#stk_send_seltypedepot").change()
                                }, "json")
                            })
                        })
                    },
                    onShow: function(d) {
                        $("a", d.data).click(function() {
                            return false
                        })
                    }
                });
                break;
            case "stk_btn_ready_confirm":
                var c = "stk_tab_ready_confirm";
                $("#stk_part_ready_confirm").modal({
                    autoResize: true,
                    minWidth: 800,
                    minHeight: 600,
                    containerCss: {
                        height: $("#" + c).height() + 20,
                        width: $("#" + c).width() + 20,
                        "border-radius": "20px 3px"
                    },
                    overlayClose: true,
                    onClose: function(d) {
                        d.data.fadeOut("fast", function() {
                            d.container.slideUp("fast", function() {
                                d.overlay.fadeOut("fast", function() {
                                    $.modal.close();
                                    $("#" + c).hide()
                                })
                            })
                        })
                    },
                    onOpen: function(d) {
                        var e = this;
                        d.overlay.fadeIn("fast", function() {
                            d.container.slideDown("fast", function() {
                                d.data.fadeIn("fast");
                                d.container.height($("#" + c).height() + 20);
                                e.setPosition();
                                $("#" + c).fadeIn("fast");
                                $("#stk_ready_confirm_bl").val($("#stk_refbl").val())
                            })
                        })
                    },
                    onShow: function(d) {
                        $("a", d.data).click(function() {
                            return false
                        })
                    }
                });
                break;
            case "stk_btn_pickup":
                var c = "stk_tab_pickup";
                $("#stk_part_pickup").modal({
                    autoResize: true,
                    minWidth: 800,
                    minHeight: 600,
                    containerCss: {
                        height: $("#" + c).height() + 20,
                        width: $("#" + c).width() + 20,
                        "border-radius": "20px 3px"
                    },
                    overlayClose: true,
                    onClose: function(d) {
                        d.data.fadeOut("fast", function() {
                            d.container.slideUp("fast", function() {
                                d.overlay.fadeOut("fast", function() {
                                    $.modal.close();
                                    $("#" + c).hide()
                                })
                            })
                        })
                    },
                    onOpen: function(d) {
                        var e = this;
                        d.overlay.fadeIn("fast", function() {
                            d.container.slideDown("fast", function() {
                                d.data.fadeIn("fast");
                                d.container.height($("#" + c).height() + 20);
                                e.setPosition();
                                $("#" + c).fadeIn("fast");
                                $("#stk_pickup_bl").val("PICKUP");
                                $.post("stock/get_types_depot", {
                                    for_action: true
                                }, function(f) {
                                    $("#stk_pickup_seltypedepot").empty();
                                    $.each(f.result, function() {
                                        $("#stk_pickup_seltypedepot").append("<option value='" + this.value + "'>" + this.name + "</option>")
                                    });
                                    $("#stk_pickup_seltypedepot").change(function() {
                                        blockAllUI();
                                        $.post("stock/get_id_depot_from_type", {
                                            type_depot: $(this).val(),
                                            id_societe: ""
                                        }, function(g) {
                                            $("#stk_pickup_seliddepot").empty();
                                            if (regional_version == "IT01" || regional_version == "BN01" || regional_version == "IB01") {
                                                var h = 0;
                                                $("input[type=checkbox]:checked", oTable.fnGetNodes()).each(function() {
                                                    var n = this.parentNode.parentNode;
                                                    var m = oTable.fnGetData(n);
                                                    h = m.etat_piece
                                                });
                                                $.each(g.result, function() {
                                                    if ((h == "GOOD" && this.value == 4) || ((h == "BAD" || h == "DOA") && this.value == 5)) {
                                                        $("#stk_pickup_seliddepot").append("<option selected='selected' value='" + this.value + "'>" + this.name + "</option>")
                                                    } else {
                                                        $("#stk_pickup_seliddepot").append("<option value='" + this.value + "'>" + this.name + "</option>")
                                                    }
                                                })
                                            } else {
                                                $.each(g.result, function() {
                                                    $("#stk_pickup_seliddepot").append("<option value='" + this.value + "'>" + this.name + "</option>")
                                                })
                                            }
                                            UNblockAllUI()
                                        }, "json")
                                    });
                                    $("#stk_pickup_seltypedepot").val(2);
                                    $("#stk_pickup_seltypedepot").change()
                                }, "json");
                                if (regional_version == "IT01" || regional_version == "BN01" || regional_version == "IB01") {
                                    $.post("stock/get_departure_depot", {
                                        for_action: true
                                    }, function(f) {
                                        $("#stk_pickup_seliddeparture").empty();
                                        $.each(f.result, function() {
                                            $("#stk_pickup_seliddeparture").append("<option value='" + this.value + "'>" + this.name + "</option>")
                                        });
                                        UNblockAllUI();
                                        $("#stk_pickup_seliddeparture").val(0)
                                    }, "json")
                                }
                            })
                        })
                    },
                    onShow: function(d) {
                        $("a", d.data).click(function() {
                            return false
                        })
                    }
                });
                break;
            case "stk_btn_instock":
            case "stk_btn_cancelpart":
                break;
            case "stk_btn_regenerate":
                var c = "stk_tab_regenerate";
                $("#stk_part_regenerate").modal({
                    autoResize: true,
                    minWidth: 800,
                    minHeight: 600,
                    containerCss: {
                        height: $("#" + c).height() + 20,
                        width: $("#" + c).width() + 20,
                        "border-radius": "20px 3px"
                    },
                    overlayClose: true,
                    onClose: function(d) {
                        d.data.fadeOut("fast", function() {
                            d.container.slideUp("fast", function() {
                                d.overlay.fadeOut("fast", function() {
                                    $.modal.close();
                                    $("#" + c).hide()
                                })
                            })
                        })
                    },
                    onOpen: function(d) {
                        var e = this;
                        d.overlay.fadeIn("fast", function() {
                            d.container.slideDown("fast", function() {
                                d.data.fadeIn("fast");
                                d.container.height($("#" + c).height() + 20);
                                e.setPosition();
                                $("#" + c).fadeIn("fast");
                                $("input[type=checkbox]:checked:first", oTable.fnGetNodes()).each(function() {
                                    var g = this.parentNode.parentNode;
                                    var f = oTable.fnGetData(g);
                                    blockAllUI();
                                    $("#stk_regenerate_list").load("stock/get_references_from_supplier", {
                                        id_fournisseur: f.id_fournisseur
                                    }, function() {
                                        $("#stk_regenerate_list").val(f.id_nomenclature);
                                        $("#stk_regenerate_list").change();
                                        UNblockAllUI()
                                    })
                                })
                            })
                        })
                    },
                    onShow: function(d) {
                        $("a", d.data).click(function() {
                            return false
                        })
                    }
                });
                break;
            default:
                alert('you clicked unknown item "' + b)
        }
        UNblockAllUI()
    })
}

function stk_init_filter() {
    function b(f) {
        var h = $("#stk_filter_table tbody");
        var p = $("#stk_mc_category_menu li[data-key='" + f + "']");
        var n = p.attr("data-type");
        var o = $("select.clone_sel_operator").clone().removeClass();
        var m = $("select.clone_sel_andor").clone().removeClass();
        var u = $("span.clone_filter_date").clone().removeClass().show();
        h.append("<tr class='ui-widget-content' data-type='" + f + "'><td><input type='checkbox' checked></td><td width='100%'></td><td style='background-color: lightgray'><a href='#'>Supprimer</a></td></tr>");
        var r = $("tr:last", h);
        var e = $("td:eq(1)", r);
        e.append(m).append("<span style='font-weight: bold'>" + p.text() + "</span>");
        if (n == "date") {
            e.append(o).append(u);
            o.find("option:lt(5)").remove();
            o.val("7");
            $(".datefrom, .dateto", e).datepicker({
                firstDay: 1,
                changeFirstDay: true,
                changeYear: true,
                yearRange: "-3:+1",
                changeMonth: true,
                numberOfMonths: 3,
                showOtherMonths: true,
                showCurrentAtPos: 1,
                showButtonPanel: true,
                constrainInput: true,
                dateFormat: "yy-mm-dd",
                onSelect: function(w) {
                    var v = $(".datefrom", e).val().replace(/-/gi, "");
                    var z = $(".dateto", e).val().replace(/-/gi, "");
                    if (v != "") {
                        $(".dateto", e).removeAttr("disabled")
                    } else {
                        $(".dateto", e).attr("disabled", "disabled")
                    }
                    if (z < v) {
                        if (z != "") {
                            $.jGrowl(lang_stk_invalid_date, {
                                header: lang_stk_important
                            })
                        }
                        $(".dateto", e).val($(".datefrom", e).val())
                    }
                }
            }).datepicker("setDate", new Date())
        } else {
            if (n == "text") {
                e.append(o).append("&nbsp;<input type='text' />")
            } else {
                if (n == "number") {
                    e.append(o).append("&nbsp;<input type='number' />")
                } else {
                    if (n == "list") {
                        o.find("option:gt(1)").remove();
                        switch (f) {
                            case "stock":
                            case "moving":
                                var g = $("select.clone_sel_type_depot").clone();
                                e.append(g).append("<select id='filter_id_" + f + "' />");
                                break;
                            case "fournisseur":
                                e.append(o).append($("select.clone_sel_fournisseur").clone());
                                break;
                            case "generique":
                                e.append(o).append($("select.clone_sel_generique").clone());
                                break;
                            case "etat":
                                e.append(o).append($("select.clone_sel_part_states").clone());
                                break;
                            case "log_etat":
                                e.append(o).append($("select.clone_sel_logistic_states").clone());
                                break;
                            case "usage":
                                e.append(o).append($("select.clone_sel_usage").clone());
                                break;
                            case "transport":
                                e.append(o).append($("select.clone_sel_transport").clone());
                                break;
                            default:
                                e.append(o).append("<select><option>liste Ã  intÃ©grer</option></select>")
                        }
                    } else {
                        e.append("<span>inconnu</span>")
                    }
                }
            }
        }
        $("select:not(.getid)", r).show().linkselect({
            change: function(v, z, C) {
                var w = $("td:eq(1) input[type=hidden]:last", r);
                switch (parseInt(z)) {
                    case 5:
                    case 6:
                        w.nextUntil("td").hide();
                        break;
                    case 7:
                    case 8:
                        w.nextUntil("td").show().find("label").show();
                        break;
                    case 9:
                    case 10:
                        w.nextUntil("td").show().find("label").hide();
                        break;
                    default:
                        w.nextUntil("td").show()
                }
                $(this).blur()
            }
        });

        function q(v, z, D, C) {
            var w = $("td:eq(1) input[type=hidden]:last", C);
            if ($("select.clone_sel_id_" + z).length > 0) {
                w.show().linkselect("replaceOptionsCustom", $("select.clone_sel_id_" + z).html())
            } else {
                w.show().linkselect("replaceOptionsCustom", "")
            }
            switch (parseInt(z)) {
                case 0:
                case 4:
                    w.prev().prev().nextUntil("td").hide();
                    break;
                default:
                    w.prev().prev().nextUntil("td").show()
            }
        }
        $("select.getid", r).show().linkselect({
            change: function(v, w, z) {
                q(v, w, z, r);
                $(this).blur()
            },
            init: function(v, w, D, H, G, E, C, z) {
                q("", w.val(), "", r)
            }
        });
        $("td", r).css({
            "vertical-align": "middle",
            padding: "3px"
        });
        d(h);
        $("td:last a", r).bind("click", function() {
            r.remove();
            d(h)
        })
    }

    function d(e) {
        if ($("tr", e).length > 0) {
            $("#stk_filter_btn_search").show("fast")
        } else {
            $("#stk_filter_btn_search").hide("fast")
        }
    }
    $("#stk_filter_link_menu").jeegoocontext("stk_mc_category_menu", {
        widthOverflowOffset: 0,
        heightOverflowOffset: 1,
        submenuLeftOffset: -4,
        submenuTopOffset: -2,
        startTopOffset: 6,
        event: "click",
        openBelowContext: true,
        onSelect: function(g, f) {
            if ($(this).attr("data-key") != undefined) {
                b($(this).attr("data-key"))
            }
        }
    });
    $("#stk_tab_filter img.filter_help").tooltip({
        bodyHandler: function() {
            return "<span class=''>" + $(this).next("div").html() + "</span>"
        },
        track: true,
        delay: 0,
        showURL: false,
        fade: 250
    });

    function c() {
        $("select.clone_sel_id_6").load("stock/get_id_depot_from_type_list2", {
            type_depot: 6
        });
        $("select.clone_sel_id_3").load("stock/get_id_depot_from_type_list2", {
            type_depot: 3
        });
        $("select.clone_sel_id_2").load("stock/get_id_depot_from_type_list2", {
            type_depot: 2
        });
        $("select.clone_sel_id_5").load("stock/get_id_depot_from_type_list2", {
            type_depot: 5
        });
        $("select.clone_sel_id_1").load("stock/get_id_depot_from_type_list2", {
            type_depot: 1
        })
    }
    c()
}

function dt_prepare_export(J, n, D) {
    function I(K, M, L) {
        if (M === "") {
            return K
        } else {
            return M + K.replace(L, "\\" + M) + M
        }
    }

    function c(K) {
        if (K == "auto") {
            return navigator.userAgent.match(/Windows/) ? "\r\n" : "\n"
        } else {
            return K
        }
    }

    function w(K, M) {
        var N = [];
        var O = K.length;
        for (var L = 0; L < O; L += M) {
            if (L + M < O) {
                N.push(K.substring(L, L + M))
            } else {
                N.push(K.substring(L, O))
            }
        }
        return N
    }

    function o(L) {
        if (L.indexOf("&") == -1) {
            return L
        }
        var M = w(L, 2048),
            R = document.createElement("div"),
            N, K, P, Q = "",
            O;
        for (N = 0, K = M.length; N < K; N++) {
            P = M[N].lastIndexOf("&");
            if (P != -1 && M[N].length >= 8 && P > M[N].length - 8) {
                O = M[N].substr(P);
                M[N] = M[N].substr(0, P)
            }
            R.innerHTML = M[N];
            Q += R.childNodes[0].nodeValue
        }
        return Q
    }
    var q = [];
    var p = J.fnSettings();
    for (z = 0, u = p.aoColumns.length; z < u; z++) {
        q.push(p.aoColumns[z].bSortable ? true : false)
    }
    var z, u, v, G;
    var d = "",
        b = "";
    var m = true,
        g = false,
        f = "",
        C = "\t",
        H = "auto";
    switch (n) {
        case "csv":
            f = "'";
            C = ",";
            break;
        default:
            f = "";
            C = "\t"
    }
    var e = new RegExp(f, "g");
    sNewline = c(H);
    if (m) {
        for (z = 0, u = p.aoColumns.length; z < u; z++) {
            if (q[z]) {
                b = p.aoColumns[z].sTitle.replace(/\n/g, " ").replace(/<.*?>/g, "");
                b = o(b);
                d += I(b, f, e) + C
            }
        }
        d = d.slice(0, C.length * -1);
        d += sNewline
    }
    var E = 0;
    for (v = 0, G = p.aiDisplay.length; v < G; v++) {
        if (typeof D && D && !$(p.aoData[p.aiDisplay[v]].nTr).hasClass("DTTT_selected")) {
            continue
        }
        for (z = 0, u = p.aoColumns.length; z < u; z++) {
            if (q[z]) {
                var h = p.oApi._fnGetCellData(p, p.aiDisplay[v], z, "display");
                if (typeof h == "string") {
                    b = h.replace(/\n/g, " ");
                    b = b.replace(/<img.*?\s+alt\s*=\s*(?:"([^"]+)"|'([^']+)'|([^\s>]+)).*?>/gi, "$1$2$3");
                    b = b.replace(/<.*?>/g, "")
                } else {
                    b = h + ""
                }
                b = b.replace(/^\s+/, "").replace(/\s+$/, "");
                b = o(b);
                d += I(b, f, e) + C
            }
        }
        d = d.slice(0, C.length * -1);
        d += sNewline;
        E++
    }
    if (g) {
        for (z = 0, u = p.aoColumns.length; z < u; z++) {
            if (q[z] && p.aoColumns[z].nTf !== null) {
                b = p.aoColumns[z].nTf.replace(/\n/g, " ").replace(/<.*?>/g, "");
                b = o(b);
                d += I(b, f, e) + C
            }
        }
        d = d.slice(0, C.length * -1);
        d += sNewline
    }
    var r = {
        text: d,
        count: E
    };
    return r
}
var objColumns_hp_history = [{
    sTitle: "#",
    bVisible: true,
    bSortable: false,
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "MessageType",
    bVisible: true,
    mDataProp: "messagetype",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "Message",
    bVisible: true,
    mDataProp: "message",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "Date",
    bVisible: true,
    mDataProp: "date",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "event_id",
    bVisible: false,
    mDataProp: "event_id",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "note_id",
    bVisible: false,
    mDataProp: "note_id",
    sDefaultContent: "",
    aTargets: [5]
}, {
    sTitle: "operation_id",
    bVisible: false,
    mDataProp: "operation_id",
    sDefaultContent: "",
    aTargets: [6]
}, {
    sTitle: "part_order_line_event_id",
    bVisible: false,
    mDataProp: "part_order_line_event_id",
    sDefaultContent: "",
    aTargets: [7]
}, {
    sTitle: "service_incident_id",
    bVisible: false,
    mDataProp: "service_incident_id",
    sDefaultContent: "",
    aTargets: [8]
}];
var objColumns_hp_history_days = [{
    sTitle: "#",
    bVisible: true,
    bSortable: false,
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "PC30",
    bVisible: true,
    mDataProp: "id_inter",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "HP",
    bVisible: true,
    mDataProp: "requesterid",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "S30 Status",
    bVisible: true,
    mDataProp: "etat_name",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "Operator",
    bVisible: true,
    mDataProp: "operator",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "Type",
    bVisible: true,
    mDataProp: "from_hp",
    sDefaultContent: "",
    aTargets: [5]
}, {
    sTitle: "MessageType",
    bVisible: true,
    mDataProp: "messagetype",
    sDefaultContent: "",
    aTargets: [6]
}, {
    sTitle: "Message",
    bVisible: true,
    mDataProp: "message",
    sDefaultContent: "",
    aTargets: [7]
}, {
    sTitle: "Date",
    bVisible: true,
    mDataProp: "date",
    sDefaultContent: "",
    aTargets: [8]
}, {
    sTitle: "event_id",
    bVisible: false,
    mDataProp: "event_id",
    sDefaultContent: "",
    aTargets: [9]
}, {
    sTitle: "note_id",
    bVisible: false,
    mDataProp: "note_id",
    sDefaultContent: "",
    aTargets: [10]
}, {
    sTitle: "operation_id",
    bVisible: false,
    mDataProp: "operation_id",
    sDefaultContent: "",
    aTargets: [11]
}, {
    sTitle: "part_order_line_event_id",
    bVisible: false,
    mDataProp: "part_order_line_event_id",
    sDefaultContent: "",
    aTargets: [12]
}, {
    sTitle: "service_incident_id",
    bVisible: false,
    mDataProp: "service_incident_id",
    sDefaultContent: "",
    aTargets: [13]
}, {
    sTitle: "etat",
    bVisible: false,
    bSortable: false,
    mDataProp: "etat",
    sDefaultContent: "",
    aTargets: [14]
}, {
    sTitle: "id_client",
    bVisible: false,
    bSortable: false,
    mDataProp: "id_client",
    sDefaultContent: "",
    aTargets: [15]
}, {
    sTitle: "logo",
    bVisible: false,
    bSortable: false,
    mDataProp: "logo",
    sDefaultContent: "",
    aTargets: [16]
}, {
    sTitle: "logo_petit",
    bVisible: false,
    bSortable: false,
    mDataProp: "logo_petit",
    sDefaultContent: "",
    aTargets: [17]
}];
var oTableHistory = [];
var oTableHistoryDays = "";
var oTableReport = "";
var oTableReportHistory = [];
var inter_id;
var objColumns_hp_listing = [{
    sTitle: "#",
    bVisible: true,
    bSortable: false,
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "PC30",
    bVisible: true,
    mDataProp: "id_inter",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "HP",
    bVisible: true,
    mDataProp: "requesterid",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "Title",
    bVisible: true,
    mDataProp: "title",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "Partner",
    bVisible: true,
    mDataProp: "partenaire",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "SLA",
    bVisible: true,
    mDataProp: "label",
    sDefaultContent: "",
    aTargets: [5]
}, {
    sTitle: "SLA D/T",
    bVisible: true,
    mDataProp: "end_sla_current",
    sDefaultContent: "",
    aTargets: [6]
}, {
    sTitle: "S30 Status",
    bVisible: true,
    mDataProp: "etat_name",
    sDefaultContent: "",
    aTargets: [7]
}, {
    sTitle: "HP Status",
    bVisible: true,
    mDataProp: "currentstatus",
    sDefaultContent: "",
    aTargets: [8]
}, {
    sTitle: "Queue",
    bVisible: true,
    mDataProp: "queue",
    sDefaultContent: "",
    aTargets: [9]
}, {
    sTitle: "Inter Date",
    bVisible: true,
    mDataProp: "date_inter",
    sDefaultContent: "",
    aTargets: [10]
}, {
    sTitle: "Creation Date",
    bVisible: true,
    mDataProp: "creationdate",
    sDefaultContent: "",
    aTargets: [11]
}, {
    sTitle: "si",
    bVisible: false,
    mDataProp: "service_incident_id",
    sDefaultContent: "",
    aTargets: [12]
}, {
    sTitle: "id_client",
    bVisible: false,
    bSortable: false,
    mDataProp: "id_client",
    sDefaultContent: "",
    aTargets: [13]
}, {
    sTitle: "Etat",
    bVisible: false,
    mDataProp: "etat",
    sDefaultContent: "",
    aTargets: [14]
}, {
    sTitle: "logo",
    bVisible: false,
    bSortable: false,
    mDataProp: "logo",
    sDefaultContent: "",
    aTargets: [15]
}, {
    sTitle: "logo_petit",
    bVisible: false,
    bSortable: false,
    mDataProp: "logo_petit",
    sDefaultContent: "",
    aTargets: [16]
}, {
    sTitle: "sla_interval",
    bVisible: false,
    bSortable: false,
    mDataProp: "sla_interval",
    sDefaultContent: "",
    aTargets: [17]
}, {
    sTitle: "sn",
    bVisible: true,
    mDataProp: "sn",
    sDefaultContent: "",
    aTargets: [18]
}];
var objColumns_hp_listing_ext = [{
    sTitle: "#",
    bVisible: true,
    bSortable: false,
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "PC30",
    bVisible: true,
    mDataProp: "id_inter",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "HP",
    bVisible: true,
    mDataProp: "requesterid",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "Title",
    bVisible: true,
    mDataProp: "title",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "Partner",
    bVisible: true,
    mDataProp: "partenaire",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "SLA",
    bVisible: true,
    mDataProp: "label",
    sDefaultContent: "",
    aTargets: [5]
}, {
    sTitle: "SLA D/T",
    bVisible: true,
    mDataProp: "end_sla_current",
    sDefaultContent: "",
    aTargets: [6]
}, {
    sTitle: "S30 Status",
    bVisible: true,
    mDataProp: "etat_name",
    sDefaultContent: "",
    aTargets: [7]
}, {
    sTitle: "HP Status",
    bVisible: true,
    mDataProp: "currentstatus",
    sDefaultContent: "",
    aTargets: [8]
}, {
    sTitle: "Queue",
    bVisible: true,
    mDataProp: "queue",
    sDefaultContent: "",
    aTargets: [9]
}, {
    sTitle: "Inter Date",
    bVisible: true,
    mDataProp: "date_inter",
    sDefaultContent: "",
    aTargets: [10]
}, {
    sTitle: "Creation Date",
    bVisible: true,
    mDataProp: "creationdate",
    sDefaultContent: "",
    aTargets: [11]
}, {
    sTitle: "Info",
    bVisible: true,
    mDataProp: "info1",
    sDefaultContent: "",
    aTargets: [12]
}, {
    sTitle: "si",
    bVisible: false,
    mDataProp: "service_incident_id",
    sDefaultContent: "",
    aTargets: [13]
}, {
    sTitle: "id_client",
    bVisible: false,
    bSortable: false,
    mDataProp: "id_client",
    sDefaultContent: "",
    aTargets: [14]
}, {
    sTitle: "Etat",
    bVisible: false,
    bSortable: false,
    mDataProp: "etat",
    sDefaultContent: "",
    aTargets: [15]
}, {
    sTitle: "logo",
    bVisible: false,
    bSortable: false,
    mDataProp: "logo",
    sDefaultContent: "",
    aTargets: [16]
}, {
    sTitle: "logo_petit",
    bVisible: false,
    bSortable: false,
    mDataProp: "logo_petit",
    sDefaultContent: "",
    aTargets: [17]
}, {
    sTitle: "sla_interval",
    bVisible: false,
    bSortable: false,
    mDataProp: "sla_interval",
    sDefaultContent: "",
    aTargets: [18]
}, {
    sTitle: "sn",
    bVisible: true,
    mDataProp: "sn",
    sDefaultContent: "",
    aTargets: [19]
}];

function init_Intervention_Add_100(d, c, g, o, h, e, n, b, f) {
    var p = f + "_add";
    var m = $("#form" + f + "_add");
    HP_init_history_table(c);
    HP_init_history_events(c);
    $("a.hp_show_inter", m).die("mousedown").live("mousedown", function(q) {
        OpenClientTab($(this).attr("data-id_client"), "", $(this).attr("data-id_inter"), -1);
        q.preventDefault()
    })
}

function init_Intervention_Add_101(d, c, g, o, h, e, n, b, f) {
    var p = f + "_add";
    var m = $("#form" + f + "_add");
    HP_init_history_table(c);
    HP_init_history_events(c);
    $("a.hp_show_inter", m).die("mousedown").live("mousedown", function(q) {
        OpenClientTab($(this).attr("data-id_client"), "", $(this).attr("data-id_inter"), -1);
        q.preventDefault()
    })
}

function init_Intervention_Add_104(d, c, g, o, h, e, n, b, f) {
    var p = f + "_add";
    var m = $("#form" + f + "_add");
    HP_init_history_table(c);
    HP_init_history_events(c);
    $("a.hp_show_inter", m).die("mousedown").live("mousedown", function(q) {
        OpenClientTab($(this).attr("data-id_client"), "", $(this).attr("data-id_inter"), -1);
        q.preventDefault()
    })
}

function HP_init_history_table(b) {
    oTableHistory[b] = $("#hp_history_" + b).dataTable({
        bDestroy: true,
        bSortable: false,
        aoColumnDefs: objColumns_hp_history,
        aLengthMenu: [
            [15, 25, 50, 100, 250, 500],
            [15, 25, 50, 100, 250, 500]
        ],
        iDisplayLength: 50,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageHP,
        aaSorting: [
            [3, "desc"]
        ]
    })
}

function HP_init_report_history_table(b) {
    oTableReportHistory[b] = $("#report_history_" + b).dataTable({
        bDestroy: true,
        bSortable: false,
        aoColumnDefs: objColumns_hp_history,
        aLengthMenu: [
            [15, 25, 50, 100, 250, 500],
            [15, 25, 50, 100, 250, 500]
        ],
        iDisplayLength: 50,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageHP,
        aaSorting: [
            [3, "desc"]
        ]
    });
    $("#report_history_" + b + " tbody td img").css("cursor", "pointer");
    $("#report_history_" + b + " tbody td img").die("click").live("click", function() {
        var c = $(this).parents("tr")[0];
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            oTableReportHistory[b].fnClose(c)
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            oTableReportHistory[b].fnOpen(c, fnFormatDetails_history(oTableReportHistory[b], c), "details")
        }
    });
    $("#report_history_" + b + " tbody tr td").die("dblclick").live("dblclick", function(d) {
        d.preventDefault();
        var f = $(this).parents("tr")[0];
        var c = $("td.center>img", f);
        if (c.attr("src").match("elbow-minus-nl")) {
            c.attr("src", "/var/themes/default/extjs_images/elbow-plus-nl.gif");
            oTableReportHistory[b].fnClose(f)
        } else {
            c.attr("src", "/var/themes/default/extjs_images/elbow-minus-nl.gif");
            oTableReportHistory[b].fnOpen(f, fnFormatDetails_history(oTableReportHistory[b], f), "details")
        }
    })
}

function HP_init_report_history_days_table() {
    oTableReportHistoryDays = $("#report_history_days").dataTable({
        bDestroy: true,
        fnRowCallback: hp_listing_fnRowCallback,
        bSortable: false,
        aoColumnDefs: objColumns_hp_history_days,
        aLengthMenu: [
            [15, 25, 50, 100, 250, 500],
            [15, 25, 50, 100, 250, 500]
        ],
        iDisplayLength: 50,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageHP,
        aaSorting: [
            [8, "desc"]
        ]
    });
    $("#report_history_days tbody td img").css("cursor", "pointer");
    $("#report_history_days tbody td img").die("click").live("click", function() {
        var b = $(this).parents("tr")[0];
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            oTableReportHistoryDays.fnClose(b)
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            oTableReportHistoryDays.fnOpen(b, fnFormatDetails_history(oTableReportHistoryDays, b), "details")
        }
    });
    $("#report_history_days tbody tr td").die("dblclick").live("dblclick", function(c) {
        c.preventDefault();
        var d = $(this).parents("tr")[0];
        var b = $("td.center>img", d);
        if (b.attr("src").match("elbow-minus-nl")) {
            b.attr("src", "/var/themes/default/extjs_images/elbow-plus-nl.gif");
            oTableReportHistoryDays.fnClose(d)
        } else {
            b.attr("src", "/var/themes/default/extjs_images/elbow-minus-nl.gif");
            oTableReportHistoryDays.fnOpen(d, fnFormatDetails_history(oTableReportHistoryDays, d), "details")
        }
    })
}

function fnFormatDetails_history(e, f) {
    var c = e.fnGetData(f);
    var h = e.fnGetPosition(f);
    var d = $(e).attr("id");
    var g = "";
    var b = "";
    if (d == "hp_listing") {
        g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
        $.post("EDI/hp/get_messages", {
            id_inter: c.id_inter
        }, function(m) {
            $("#" + d + h).hide().html(m).fadeIn("fast")
        })
    } else {
        if (c.note_id != "") {
            g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
            $.post("EDI/hp/get_note", {
                note_id: c.note_id
            }, function(m) {
                $("#" + d + h).hide().html(m).fadeIn("fast")
            })
        } else {
            if (c.operation_id != "") {
                g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
                $.post("EDI/hp/get_operation", {
                    operation_id: c.operation_id
                }, function(m) {
                    $("#" + d + h).hide().html(m).fadeIn("fast")
                })
            } else {
                if (c.part_order_line_event_id != "") {
                    g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
                    $.post("EDI/hp/get_part_update", {
                        part_update_id: c.part_order_line_event_id
                    }, function(m) {
                        $("#" + d + h).hide().html(m).fadeIn("fast")
                    })
                } else {
                    if (c.messagetype == "PROBLEM_SUBMITTAL" || c.messagetype == "QUERY_INSERT_PROBLEM") {
                        g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
                        $.post("EDI/hp/get_problem", {
                            service_incident_id: c.service_incident_id
                        }, function(m) {
                            $("#" + d + h).hide().html(m).fadeIn("fast")
                        })
                    } else {
                        if (c.messagetype == "CONFIRM_CLOSE" || c.messagetype == "REQUEST_CLOSURE" || c.messagetype == "REJECT_RESOLUTION" || c.messagetype == "SEND_SOLUTION") {
                            g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
                            b = c.event_id;
                            $.post("EDI/hp/get_event", {
                                event_id: b
                            }, function(m) {
                                $("#" + d + h).hide().html(m).fadeIn("fast")
                            })
                        } else {
                            if (c.messagetype == "INTERNAL" || c.messagetype == "internal" || c.messagetype == "qualnote") {
                                g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
                                $.post("EDI/hp/get_internal", {
                                    event_id: c.event_id
                                }, function(m) {
                                    $("#" + d + h).hide().html(m).fadeIn("fast")
                                })
                            }
                        }
                    }
                }
            }
        }
    }
    return g
}

function HP_init_history_events(b) {
    $("#hp_history_" + b + " td img").css("cursor", "pointer");
    $("#hp_history_" + b + " td img").unbind("click").bind("click", function() {
        var c = $(this).parents("tr")[0];
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            oTableHistory[b].fnClose(c)
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            oTableHistory[b].fnOpen(c, fnFormatDetails_history(oTableHistory[b], c), "details")
        }
    });
    $("#hp_history_" + b + " tbody tr td").unbind("dblclick").bind("dblclick", function(d) {
        d.preventDefault();
        var f = $(this).parents("tr")[0];
        var c = $("td.center>img", f);
        if (c.attr("src").match("elbow-minus-nl")) {
            c.attr("src", "/var/themes/default/extjs_images/elbow-plus-nl.gif");
            oTableHistory[b].fnClose(f)
        } else {
            c.attr("src", "/var/themes/default/extjs_images/elbow-minus-nl.gif");
            oTableHistory[b].fnOpen(f, fnFormatDetails_history(oTableHistory[b], f), "details")
        }
    })
}

function HP_init_qualification(f, d, c, e, b) {
    $(".btn_open_qual", b).unbind("click").bind("click", function() {
        GoToTopOfPage(false);
        if (TopRightTabs) {
            TopRightTabs.tabs("select", "#RQualification")
        }
        var g = d;
        g = g.replace("|0|", f);
        g = g.replace("|1|", c);
        g = g.replace("|2|", e);
        $("#frameQualification").attr("src", g)
    })
}

function HP_init_qualnote(d, e, c, b) {
    if (regional_version === "IT01" || regional_version === "IB01") {
        $("#hpmodal_qualnote_tab").hide();
        $("#hpmodal_qualnote_send").unbind("click").bind("click", function() {
            var g = "#hpmodal_qualnote_tab";
            var v = "";
            var f = $("#hpselect-problemType option:selected").val();
            var o = $("#hpselect-when option:selected").val();
            var r = $("#hpselect-where option:selected").val();
            var D = $("#hpselect-s30-internal-code option:selected").val();
            var z = "";
            var n = $("#hpselect-serial-SDS option:selected").val();
            if (n === "1") {
                z = $("#hpselect-info-SDS option:selected").val()
            } else {
                z = "1"
            }
            var I = $("#hpmodal_se_note_autocomplete").val();
            d = $("#hp_inter_id").val();
            var m = [];
            $.each($(".hpmodal_qualnote_modal_qa_codes option:selected"), function() {
                if (($(this).text()) === "[...]") {} else {
                    m.push($(this).val())
                }
            });
            var h = JSON.stringify(m);
            var C = $("textarea#hpmodal_qualnote_description").val();
            var q = $("textarea[name='hptroubleshooting']").val();
            var w = $("textarea[name='hpdiagnosy']").val();
            var p = $("#hphistory_case_found_checkbox").is(":checked");
            if (p) {
                v = $("hp#history_case_note").val()
            }
            var G = $("#hpoverwrite_request_insert_checkbox").is(":checked");
            $.ajax({
                type: "POST",
                url: "interventions/qualification_note_save",
                data: {
                    inter_id: d,
                    problem_type: f,
                    history_case_note: v,
                    when: o,
                    where: r,
                    s30_internal_code: D,
                    se: I,
                    qa_codes: h,
                    description: C,
                    troubleshooting: q,
                    diagnosys: w,
                    history_checkbox: p,
                    overwrite_checkbox: G,
                    info_SDS: z,
                    serial_SDS: n
                },
                dataType: "JSON",
                success: function(J) {}
            });
            var u = $("#hpmodal_qualnote_msgtype").val();
            var H = $("#hp_si").val();
            var E = 0;
            blockAllUI();
            $.post("EDI/hp/qualification_note_hp_operation", {
                si: H,
                code: u,
                problem_type: f,
                history_case_note: v,
                when: o,
                where: r,
                s30_internal_code: D,
                se: I,
                qa_codes: h,
                description: C,
                troubleshooting: q,
                diagnosys: w,
                history_checkbox: p,
                overwrite_checkbox: G,
                info_SDS: z,
                serial_SDS: n
            }, function() {
                UNblockAllUI();
                salert = "The " + u + " is now in the queue and will be sent to HP in the next minutes !";
                $.jGrowl(salert, {
                    glue: "before",
                    easing: "swing",
                    header: "S30 Qualification Note",
                    theme: "jGrowlInfo",
                    life: 10000
                });
                if ($("#hp_client_id").val() > 0) {
                    client_details_refresh_internal2($("#hp_client_id").val(), $("#hp_inter_id").val())
                }
            });
            $.modal.close()
        })
    } else {
        $("#hpmodal_qualnote_tab").hide();
        $("#hpmodal_qualnote_send").unbind("click").bind("click", function() {
            var h = "#hpmodal_qualnote_tab";
            var f = $("#hpmodal_qualnote_msgtype").val();
            var g = $("#hp_si").val();
            var n = $("textarea", h).val();
            var m = 0;
            if (n == "") {
                alert("Please enter a comment !");
                return false
            }
            blockAllUI();
            $.post("EDI/hp/send_status_change", {
                si: g,
                code: f,
                comment: n
            }, function() {
                UNblockAllUI();
                salert = "The " + f + " is now in the queue and will be sent to HP in the next minutes !";
                $.jGrowl(salert, {
                    glue: "before",
                    easing: "swing",
                    header: "S30 Qualification Note",
                    theme: "jGrowlInfo",
                    life: 10000
                });
                client_details_refresh_internal2(e, d)
            });
            $.modal.close()
        })
    }
    if (regional_version === "IT01" || regional_version === "IB01") {
        $(".btn_add_qual", b).unbind("click").bind("click", function() {
            $("#hp_si").val($(this).parent().attr("data-service_incident_id"));
            $("#hp_inter_id").val($(this).parent().attr("data-inter_id"));
            $("#hp_client_id").val($(this).parent().attr("data-client_id"));
            d = $(this).parent().attr("data-inter_id");
            var f = "hpmodal_qualnote_tab";
            $("#hpmodal_qualnote").modal({
                autoResize: true,
                minWidth: 100,
                minHeight: 100,
                containerCss: {
                    height: $("#" + f).height() + 40,
                    width: $("#" + f).width() + 40,
                    "-moz-border-radius": "4em 1em 4em 1em"
                },
                overlayClose: true,
                onClose: function(g) {
                    g.data.fadeOut("fast", function() {
                        g.container.slideUp("fast", function() {
                            g.overlay.fadeOut("fast", function() {
                                $.modal.close();
                                $("#" + f).hide()
                            })
                        })
                    })
                },
                onOpen: function(g) {
                    var h = this;
                    g.overlay.fadeIn("fast", function() {
                        g.container.slideDown("fast", function() {
                            g.data.fadeIn("fast");
                            $("#" + f).fadeIn("fast");
                            $("#hpmodal_qualnote_msgtype").val("qualnote");
                            $("#" + f + " h1").text("S30 Qualification Note (InterID: " + $("#hp_inter_id").val() + ")");
                            $("#hpid_qa_codes").html($("#hp_qacode").html());
                            $("#hpselect-s30-internal-code").html($("#hp_internal_code").html());
                            $("label[for=hpselect-info-SDS], select#hplselect-info-SDS").attr("hidden", true);
                            $("#hpselect-info-SDS").attr("hidden", true);
                            $("#hpmodal_se_note_autocomplete").autocomplete("interventions/qualification_note_se_autocomplete", {
                                minChars: 3,
                                max: 100,
                                scrollHeight: 360,
                                scrollWidth: 360,
                                dataType: "json",
                                parse: function(o) {
                                    var m = [];
                                    if (o !== null) {
                                        o = o.result;
                                        for (var n = 0; n < o.length; n++) {
                                            m[m.length] = {
                                                data: o[n],
                                                result: o[n].se
                                            }
                                        }
                                    }
                                    return m
                                },
                                formatItem: function(m) {
                                    return "<div class='result_autocomplete'><b>" + m.se + "</b></div>"
                                }
                            });
                            $("#hphistory_case_found_checkbox").click(function() {
                                $("#hphistory_case_found_text").toggle(this.checked)
                            });
                            $("#hpoverwrite_request_insert_checkbox").attr("checked", "checked");
                            g.container.height($("#" + f).height() + 40);
                            h.setPosition();
                            $.ajax({
                                type: "POST",
                                url: "interventions/qualification_note_getData",
                                data: {
                                    inter_id: d
                                },
                                dataType: "JSON",
                                success: function(n) {
                                    fillSelect(n.qualificationProblemType, "hpselect-problemType", false);
                                    fillSelect(n.qualificationWhen, "hpselect-when", false);
                                    fillSelect(n.qualificationWhere, "hpselect-where", false);
                                    fillSelect(n.qualificationSerialSDS, "hpselect-serial-SDS", false);
                                    if (n.qualificationNoteData.serial_SDS === "1") {
                                        $("label[for=hpselect-info-SDS], select#hpselect-info-SDS").attr("hidden", false);
                                        $("#hpselect-info-SDS").attr("hidden", false);
                                        fillSelect(n.qualificationInfoSDS, "hpselect-info-SDS", false);
                                        $("#hpselect-info-SDS").val(n.qualificationNoteData.info_SDS)
                                    }
                                    if (n.qualificationNoteData !== null) {
                                        $("#hpselect-problemType").val(n.qualificationNoteData.problem_type);
                                        $("#hpselect-when").val(n.qualificationNoteData.when_note);
                                        $("#hpselect-where").val(n.qualificationNoteData.where_note);
                                        $("#hpmodal_se_note_autocomplete").val(n.qualificationNoteData.se);
                                        $("#hpmodal_qualnote_description").val(n.qualificationNoteData.description);
                                        $("#hpmodal_qualnote_troubleshooting").val(n.qualificationNoteData.troubleshooting);
                                        $("#hpmodal_qualnote_diagnosy").val(n.qualificationNoteData.diagnosys);
                                        $("#hpselect-s30-internal-code").val(n.qualificationNoteData.s30_internal_code);
                                        $("#hpselect-serial-SDS").val(n.qualificationNoteData.serial_SDS);
                                        if (parseInt(n.qualificationNoteData.checkbox_history_case_found_note) === 1) {
                                            $("#history_case_found_checkbox").attr("checked", "checked");
                                            $("#history_case_note").val(n.qualificationNoteData.history_case_found_note);
                                            $("#history_case_found_text").show()
                                        }
                                        if (parseInt(n.qualificationNoteData.checkbox_overwrite) === 0) {
                                            $("#overwrite_request_insert_checkbox").attr("checked", false)
                                        }
                                        if (n.qualificationNoteData.qa_codes.length > 0) {
                                            var m = [];
                                            m = n.qualificationNoteData.qa_codes.split(",");
                                            $("#hpid_qa_codes").val(m)
                                        }
                                    }
                                }
                            })
                        })
                    })
                },
                onShow: function(g) {
                    $("a", g.data).click(function() {
                        return false
                    })
                }
            });
            $("#hpselect-serial-SDS").change(function() {
                if ($(this).val() === "0") {
                    $("label[for=hpselect-info-SDS], select#hpselect-info-SDS").attr("hidden", true);
                    $("#hpselect-info-SDS").attr("hidden", true)
                } else {
                    $.ajax({
                        type: "POST",
                        url: "interventions/qualification_SDS",
                        data: {},
                        dataType: "JSON",
                        success: function(g) {
                            console.log(g);
                            fillSelect(g.qualificationInfoSDS, "hpselect-info-SDS", false)
                        }
                    });
                    $("label[for=hpselect-info-SDS], select#hpselect-info-SDS").attr("hidden", false);
                    $("#hpselect-info-SDS").attr("hidden", false)
                }
            })
        })
    } else {
        $(".btn_add_qual", b).unbind("click").bind("click", function() {
            $("#hp_si").val($(this).parent().attr("data-service_incident_id"));
            $("#hp_inter_id").val($(this).parent().attr("data-inter_id"));
            $("#hp_client_id").val($(this).parent().attr("data-client_id"));
            var f = "hpmodal_qualnote_tab";
            $("#hpmodal_qualnote").modal({
                autoResize: true,
                minWidth: 600,
                minHeight: 600,
                containerCss: {
                    height: $("#" + f).height() + 20,
                    width: $("#" + f).width() + 20,
                    "-moz-border-radius": "4em 1em 4em 1em"
                },
                overlayClose: true,
                onClose: function(g) {
                    g.data.fadeOut("fast", function() {
                        g.container.slideUp("fast", function() {
                            g.overlay.fadeOut("fast", function() {
                                $.modal.close();
                                $("#" + f).hide()
                            })
                        })
                    })
                },
                onOpen: function(g) {
                    var h = this;
                    g.overlay.fadeIn("fast", function() {
                        g.container.slideDown("fast", function() {
                            g.data.fadeIn("fast");
                            $("#" + f).fadeIn("fast");
                            $("#hpmodal_qualnote_msgtype").val("qualnote");
                            $("#" + f + " h1").text("S30 Qualification Note");
                            g.container.height($("#" + f).height() + 20);
                            h.setPosition()
                        })
                    })
                },
                onShow: function(g) {
                    $("a", g.data).click(function() {
                        return false
                    })
                }
            })
        })
    }
}

function HP_init_subcases(b, c) {
    $("#hpmodal_subcases_tab_" + b).hide();
    $("#hpmodal_subcases_apply_" + b).unbind("click").bind("click", function() {
        var f = "#hpmodal_subcases_tab_" + b;
        var d = $("#hp_si_" + b).val();
        var o = $("textarea", f).val();
        var h = $("#hpmodal_subcase_start_" + b, f).val();
        var g = h.split(/[- :]/);
        var n = $("#hpmodal_subcase_end_" + b, f).val();
        var m = n.split(/[- :]/);
        if (o == "") {
            alert("Please enter a comment !");
            return false
        }
        var e = "#hp_solution_div_" + b;
        $("textarea[name=hp_report]", e).html(o);
        $("input.datefrom:eq(0)", e).val(g[0] + "-" + g[1] + "-" + g[2]);
        $("input.datefrom:eq(1)", e).val(m[0] + "-" + m[1] + "-" + m[2]);
        $("select[name=hpmodal_beginning_hh]:eq(0)", e).val(parseInt(g[3]));
        $("select[name=hpmodal_beginning_hh]:eq(1)", e).val(parseInt(m[3]));
        $("select[name=hpmodal_beginning_mm]:eq(0)", e).val(parseInt(g[4]));
        $("select[name=hpmodal_beginning_mmh]:eq(1)", e).val(parseInt(m[4]));
        $.modal.close()
    });
    $("#btn_hpsubcases_" + b).unbind("click").bind("click", function() {
        var d = "hpmodal_subcases_tab_" + b;
        $("#hpmodal_subcases_" + b).modal({
            autoResize: true,
            minWidth: 600,
            minHeight: 600,
            containerCss: {
                height: $("#" + d).height() + 20,
                width: $("#" + d).width() + 20,
                "-moz-border-radius": "4em 1em 4em 1em"
            },
            overlayClose: true,
            onClose: function(e) {
                e.data.fadeOut("fast", function() {
                    e.container.slideUp("fast", function() {
                        e.overlay.fadeOut("fast", function() {
                            $.modal.close();
                            $("#" + d).hide()
                        })
                    })
                })
            },
            onOpen: function(e) {
                var f = this;
                e.overlay.fadeIn("fast", function() {
                    e.container.slideDown("fast", function() {
                        e.data.fadeIn("fast");
                        $("#" + d).fadeIn("fast");
                        $("#" + d + " h1").text("Subcases analysis");
                        e.container.height($("#" + d).height() + 20);
                        f.setPosition()
                    })
                })
            },
            onShow: function(e) {
                $("a", e.data).click(function() {
                    return false
                })
            }
        })
    })
}

function hp_listing_fnRowCallback(h, m, o, u) {
    var p = 0;
    var r = 0;
    var c = 0;
    var q = 0;
    var e = 0;
    var g = 0;
    $.grep(this.fnSettings().aoColumns, function(v, w) {
        if (v.mDataProp == "id_inter") {
            p = w
        } else {
            if (v.mDataProp == "etat_name") {
                r = w
            } else {
                if (v.mDataProp == "info1") {
                    c = w
                } else {
                    if (v.mDataProp == "currentstatus") {
                        q = w
                    } else {
                        if (v.mDataProp == "messagetype") {
                            e = w
                        } else {
                            if (v.mDataProp == "end_sla_current") {
                                g = w
                            }
                        }
                    }
                }
            }
        }
    });
    if (m.sla_interval) {
        var d = parseInt(m.sla_interval);
        if (d > 0) {
            $("td:eq(" + g + ")", h).attr("style", "color: red; font-weight: bold !important;")
        } else {
            if (d > -28800) {
                $("td:eq(" + g + ")", h).attr("style", "font-weight: bold !important;")
            }
        }
    }
    if (m.id_inter) {
        var f = "";
        if (m.logo) {
            f += "<img src='/var/themes/default/logos/" + m.logo + "' style='vertical-align:middle'/>"
        }
        f += "&nbsp;";
        var b = '<a href="#" class="hp_show_inter" data-id_client="' + m.id_client + '" data-id_inter="' + m.id_inter + '" style="text-decoration: underline;">' + f + m.id_inter + "</a>";
        var n = "";
        switch (parseInt(m.etat)) {
            case 0:
                n = "#FFCF52";
                break;
            case 1:
                n = "#F8DAF8";
                break;
            case 3:
                n = "#A4FFA8";
                break;
            case 4:
                n = "#FC8A8A";
                break;
            case 29:
                n = "#FFEC52";
                break;
            default:
                n = "#FFFFFF"
        }
        $("td:eq(" + p + ")", h).attr("style", "background: " + n + " !important;").html(b)
    }
    if (m.etat_name) {
        var n = "";
        switch (parseInt(m.etat)) {
            case 0:
                n = "#FFCF52";
                break;
            case 1:
                n = "#F8DAF8";
                break;
            case 3:
                n = "#A4FFA8";
                break;
            case 4:
                n = "#FC8A8A";
                break;
            case 29:
                n = "#FFEC52";
                break;
            default:
                n = "#FFFFFF"
        }
        $("td:eq(" + r + ")", h).attr("style", "background: " + n + " !important;")
    }
    if (m.currentstatus) {
        if (m.currentstatus == "5-REJECT_RESOLUTION") {
            $("td:eq(" + q + ")", h).attr("style", "background: Yellow !important;")
        }
    }
    if (m.messagetype) {
        if (m.messagetype == "REJECT_RESOLUTION") {
            $("td:eq(" + e + ")", h).attr("style", "background: Yellow !important;")
        }
    }
    if (m.info1) {
        $("td:eq(" + c + ")", h).attr("style", "background: Yellow !important;")
    }
    return h
}

function HP_init_report_table() {
    oTableReport = $("#hp_listing").dataTable({
        bDestroy: true,
        fnRowCallback: hp_listing_fnRowCallback,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: objColumns_hp_listing,
        aLengthMenu: [
            [15, 25, 50, 100, 250, 500],
            [15, 25, 50, 100, 250, 500]
        ],
        iDisplayLength: 50,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageHP,
        aaSorting: [
            [6, "asc"]
        ]
    })
}

function HP_init_report_ext_table() {
    oTableReport = $("#hp_listing").dataTable({
        bDestroy: true,
        fnRowCallback: hp_listing_fnRowCallback,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: objColumns_hp_listing_ext,
        aLengthMenu: [
            [15, 25, 50, 100, 250, 500],
            [15, 25, 50, 100, 250, 500]
        ],
        iDisplayLength: 50,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageHP,
        aaSorting: [
            [6, "asc"]
        ]
    })
}

function HP_init_report_listing_events() {
    $("#hp_listing td.tdopen_listing img").css("cursor", "pointer");
    $("#hp_listing td.tdopen_listing img").die("click").live("click", function() {
        var b = $(this).parents("tr")[0];
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            oTableReport.fnClose(b)
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            oTableReport.fnOpen(b, fnFormatDetails_history(oTableReport, b), "details")
        }
    });
    $("#hp_listing tbody tr.listing td").die("dblclick").live("dblclick", function(c) {
        c.preventDefault();
        var d = $(this).parents("tr")[0];
        var b = $("td.center>img", d);
        if (b.attr("src").match("elbow-minus-nl")) {
            b.attr("src", "/var/themes/default/extjs_images/elbow-plus-nl.gif");
            oTableReport.fnClose(d)
        } else {
            b.attr("src", "/var/themes/default/extjs_images/elbow-minus-nl.gif");
            oTableReport.fnOpen(d, fnFormatDetails_history(oTableReport, d), "details")
        }
    })
}

function HP_init_report_events() {
    $("a.hp_show_inter", "#hp_report_listing").die("mousedown").live("mousedown", function(b) {
        OpenClientTab($(this).attr("data-id_client"), "", $(this).attr("data-id_inter"), -1);
        b.preventDefault()
    })
}

function get_hp_mat_rdv_logo(c, b) {
    if ((c != null) || (b != null)) {
        if ((c == 1) && (b == 1)) {
            return "blanc.gif"
        }
        if ((c == 1) && (b == 0)) {
            return "blanc_noir.gif"
        }
        if ((c == 1) && (b == null)) {
            return "blanc_bleu.gif"
        }
        if ((c == 0) && (b == 1)) {
            return "noir_blanc.gif"
        }
        if ((c == 0) && (b == 0)) {
            return "noir.gif"
        }
        if ((c == 0) && (b == null)) {
            return "noir_bleu.gif"
        }
        if ((c == null) && (b == 0)) {
            return "bleu_noir.gif"
        }
        if ((c == null) && (b == 1)) {
            return "bleu_blanc.gif"
        }
        if ((c == 2) && (b == 1)) {
            return "vert_blanc.gif"
        }
        if ((c == 2) && (b == 0)) {
            return "vert_noir.gif"
        }
        if ((c == 2) && (b == null)) {
            return "vert_bleu.gif"
        }
        if ((c == 3) && (b == 1)) {
            return "rouge_blanc.gif"
        }
        if ((c == 3) && (b == 0)) {
            return "rouge_noir.gif"
        }
        if ((c == 3) && (b == null)) {
            return "rouge_bleu.gif"
        }
    } else {
        return ""
    }
}

function dt_hpTable_row_cb(f, q, h, z) {
    var Q = this.fnSettings().aoColumns;
    if (q.id_inter) {
        var m = $.grep(Q, function(X) {
            return X.mDataProp == "id_inter"
        })[0].nTh.cellIndex;
        var I = "";
        if (q.logo) {
            I += "<img src='/var/themes/default/logos/" + q.logo + "' style='vertical-align:middle'/>"
        }
        if (q.MATERIEL_OK || q.RDV_OK) {
            var v = get_hp_mat_rdv_logo(q.MATERIEL_OK, q.RDV);
            if (v != "") {
                I += "<img src='/var/themes/default/logos/" + v + "' style='vertical-align:middle'/>"
            }
        }
        I += "&nbsp;";
        var E = '<a href="#" class="hp_show_inter" data-id_client="' + q.id_client + '" data-id_inter="' + q.id_inter + '" style="text-decoration: underline;">' + I + q.id_inter + "</a>";
        var p = "";
        if (q.cancelled && parseInt(q.cancelled) == 1) {
            p = "#BDBDBD"
        } else {
            switch (parseInt(q.etat)) {
                case 0:
                    p = "#FFCF52";
                    break;
                case 1:
                    p = "#F8DAF8";
                    break;
                case 2:
                    p = "#81DAF5";
                    break;
                case 3:
                    p = "#A4FFA8";
                    break;
                case 4:
                    p = "#FC8A8A";
                    break;
                case 7:
                    p = "#E2A9F3";
                    break;
                case 29:
                    p = "#FFEC52";
                    break;
                default:
                    p = "#FFFFFF"
            }
        }
        $("td:eq(" + m + ")", f).attr("style", "background: " + p + " !important;").html(E);
        if (q.etat_name) {
            var T = $.grep(Q, function(X) {
                return X.mDataProp == "etat_name"
            })[0].nTh.cellIndex;
            $("td:eq(" + T + ")", f).attr("style", "background: " + p + " !important;")
        }
    }
    if (q.qacode) {
        var r = $.grep(Q, function(X) {
            return X.mDataProp == "qacode"
        })[0].nTh.cellIndex;
        $("td:eq(" + r + ")", f).html(q.qacode.replace(/;/g, " ").trim())
    }
    if (q.TAT) {
        var g = $.grep(Q, function(X) {
            return X.mDataProp == "TAT"
        })[0].nTh.cellIndex;
        $("td:eq(" + g + ")", f).css("cursor", "help").tooltip({
            bodyHandler: function() {
                return "<span class=''>" + q.TAT_range + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.IDLE) {
        var c = $.grep(Q, function(X) {
            return X.mDataProp == "IDLE"
        })[0].nTh.cellIndex;
        $("td:eq(" + c + ")", f).css("cursor", "help").tooltip({
            bodyHandler: function() {
                return "<span class=''>" + q.IDLE_range + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.title) {
        var U = $.grep(Q, function(X) {
            return X.mDataProp == "title"
        })[0].nTh.cellIndex;
        $("td:eq(" + U + ")", f).html(q.title).css({
            cursor: "help",
            "text-overflow": "ellipsis",
            overflow: "hidden",
            "white-space": "nowrap",
            "max-width": "200px"
        }).tooltip({
            bodyHandler: function() {
                return "<span class=''>" + q.title + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.auto) {
        var d = $.grep(Q, function(X) {
            return X.mDataProp == "checkbox"
        })[0].nTh.cellIndex;
        $("td:eq(" + d + ")", f).tooltip({
            bodyHandler: function() {
                return "<span class=''>" + q.auto + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.tech) {
        var u = $.grep(Q, function(X) {
            return X.mDataProp == "tech"
        })[0].nTh.cellIndex;
        $("td:eq(" + u + ")", f).html(q.tech).css({
            cursor: "help",
            "text-overflow": "ellipsis",
            overflow: "hidden",
            "white-space": "nowrap",
            "max-width": "50px"
        }).tooltip({
            bodyHandler: function() {
                return "<span class=''>" + q.tech + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.last_subcase) {
        var w = $.grep(Q, function(X) {
            return X.mDataProp == "last_subcase"
        })[0].nTh.cellIndex;
        var E = '<a href="#" class="hp_show_inter" data-id_client="' + q.rerepair_id_client + '" data-id_inter="' + q.rerepair_id_inter + '" style="text-decoration: underline;">' + q.last_subcase + "</a>";
        var e = (q.rework ? q.rework : "");
        var P = (q.snic90d ? "<br>SNIC:" + q.snic90d : "");
        var C = "";
        switch (parseInt(q.snic90d)) {
            case 0:
                break;
            case 1:
                C = "lemonchiffon";
                break;
            case 2:
                C = "gold";
                break;
            default:
                C = "salmon"
        }
        $("td:eq(" + w + ")", f).html(E).css({
            background: C,
            cursor: "help"
        }).tooltip({
            bodyHandler: function() {
                return "<span class=''>" + e + P + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.product_type) {
        var D = $.grep(Q, function(X) {
            return X.mDataProp == "product_type"
        })[0].nTh.cellIndex;
        $("td:eq(" + D + ")", f).html('<span class="edit_product_type" style="border-bottom: dashed 1px #069;color: #069;cursor: pointer;" data-id="' + q.product_id + '">&nbsp;' + q.product_type + "&nbsp;</span>");
        var M = $.grep(Q, function(X) {
            return X.mDataProp == "product_line"
        })[0].nTh.cellIndex;
        $("td:eq(" + M + ")", f).html('<span class="edit_product_line" style="border-bottom: dashed 1px #069;color: #069;cursor: pointer;" data-id="' + q.product_id + '">&nbsp;' + (q.product_line != "" ? q.product_line : "[...]") + "&nbsp;</span>")
    }
    if (q.anomaly) {
        var L = $.grep(Q, function(X) {
            return X.mDataProp == "anomaly"
        })[0].nTh.cellIndex;
        if (q.anomaly_color) {
            $("td:eq(" + L + ")", f).css({
                background: q.anomaly_color,
                "font-variant": "small-caps",
                "text-overflow": "ellipsis",
                overflow: "hidden",
                "white-space": "nowrap",
                "max-width": "200px"
            }).tooltip({
                bodyHandler: function() {
                    return "<span class=''>" + q.anomaly + "</span>"
                },
                track: true,
                delay: 0,
                showURL: false,
                fade: 250
            })
        } else {
            $("td:eq(" + L + ")", f).css({
                "font-weight": "bold",
                "font-variant": "small-caps",
                "text-overflow": "ellipsis",
                overflow: "hidden",
                "white-space": "nowrap",
                "max-width": "200px"
            }).tooltip({
                bodyHandler: function() {
                    return "<span class=''>" + q.anomaly + "</span>"
                },
                track: true,
                delay: 0,
                showURL: false,
                fade: 250
            })
        }
    }
    if (q.iwcase) {
        var S = $.grep(Q, function(X) {
            return X.mDataProp == "iwcase"
        })[0].nTh.cellIndex;
        $("td:eq(" + S + ")", f).css({
            background: "gold"
        })
    }
    if (q.messagetype) {
        var n = $.grep(Q, function(X) {
            return X.mDataProp == "messagetype"
        })[0].nTh.cellIndex;
        if (q.from_hp) {
            if (q.from_hp == "IN") {
                $("td:eq(" + n + ")", f).html('<i style="color: gray" class="fa fa-arrow-left"></i>&nbsp;' + q.messagetype)
            } else {
                $("td:eq(" + n + ")", f).html('<i style="color: blue" class="fa fa-arrow-right"></i>&nbsp;' + q.messagetype)
            }
        } else {
            $("td:eq(" + n + ")", f).html(q.messagetype)
        }
        $("td:eq(" + n + ")", f).css({
            background: "rgba(192, 192, 192, 0.2)"
        })
    }
    if (q.end_sla_current) {
        var R = $.grep(Q, function(X) {
            return X.mDataProp == "end_sla_current"
        })[0].nTh.cellIndex;
        var o = parseInt(new Date() - stringToDate(q.end_sla_current));
        if (o > 0) {
            $("td:eq(" + R + ")", f).attr("style", "color: red; font-weight: bold !important;")
        } else {
            if (o > -28800000) {
                $("td:eq(" + R + ")", f).attr("style", "font-weight: bold !important;")
            }
        }
        $("td:eq(" + R + ")", f).html(q.end_sla_current.substring(0, 16))
    }
    if (q.date_inter) {
        var V = $.grep(Q, function(X) {
            return X.mDataProp == "date_inter"
        })[0].nTh.cellIndex;
        var G = "";
        if (q.end_sla_current) {
            var N = parseInt(stringToDate(q.date_inter) - stringToDate(q.end_sla_current));
            if (N > 0) {
                $("td:eq(" + V + ")", f).attr("style", "color: red; font-weight: bold !important;");
                G = "color: red;"
            } else {
                if (N > -7200000) {
                    $("td:eq(" + V + ")", f).attr("style", "font-weight: bold !important;")
                }
            }
        }
        if (q.id_inter) {
            var E = '<a href="#" onclick="GoToAgency(' + q.id_inter + ');" style="text-decoration: underline;' + G + 'white-space: pre-wrap;">' + q.date_inter.substring(0, 16) + "</a>";
            $("td:eq(" + V + ")", f).html(E)
        } else {
            $("td:eq(" + V + ")", f).html(q.date_inter.substring(0, 16))
        }
    }
    if (q.inter_start) {
        var K = $.grep(Q, function(X) {
            return X.mDataProp == "inter_start"
        })[0].nTh.cellIndex;
        var G = "";
        if (q.end_sla_current) {
            var N = parseInt(stringToDate(q.inter_start) - stringToDate(q.end_sla_current));
            if (N > 0) {
                $("td:eq(" + K + ")", f).attr("style", "color: red; font-weight: bold !important;");
                G = "color: red;"
            } else {
                if (N > -7200000) {
                    $("td:eq(" + K + ")", f).attr("style", "font-weight: bold !important;")
                }
            }
        }
        $("td:eq(" + K + ")", f).html(q.inter_start.substring(0, 16))
    }
    if (q.inter_end) {
        var O = $.grep(Q, function(X) {
            return X.mDataProp == "inter_end"
        })[0].nTh.cellIndex;
        var G = "";
        if (q.end_sla_current) {
            var N = parseInt(stringToDate(q.inter_end) - stringToDate(q.end_sla_current));
            if (N > 0) {
                $("td:eq(" + O + ")", f).attr("style", "color: red; font-weight: bold !important;");
                G = "color: red;"
            } else {
                if (N > -7200000) {
                    $("td:eq(" + O + ")", f).attr("style", "font-weight: bold !important;")
                }
            }
        }
        $("td:eq(" + O + ")", f).html(q.inter_end.substring(0, 16))
    }
    if (q.sn) {
        var H = $.grep(Q, function(X) {
            return X.mDataProp == "sn"
        })[0].nTh.cellIndex;
        var E = '<a href="#" onclick="find_SN(\'' + q.sn + '\');" style="text-decoration: underline;white-space: pre-wrap;">' + q.sn + "</a>";
        $("td:eq(" + H + ")", f).html(E)
    }
    if (q.new_subcase) {
        var J = $.grep(Q, function(X) {
            return X.mDataProp == "new_subcase"
        })[0].nTh.cellIndex;
        var E = '<a href="#" onclick="find_subcase(\'' + q.new_subcase + '\');" style="text-decoration: underline;white-space: pre-wrap;">' + q.new_subcase + "</a>";
        $("td:eq(" + J + ")", f).html(E)
    }
    if (q.si_creation) {
        var b = $.grep(Q, function(X) {
            return X.mDataProp == "si_creation"
        })[0].nTh.cellIndex;
        $("td:eq(" + b + ")", f).html(q.si_creation.substring(0, 16))
    }
    if (q.grade) {
        $(f).addClass(q.grade)
    }
    return f
}

function dt_hpTable_draw_cb(oSettings) {
    if (oSettings.aiDisplay.length == 0) {
        return
    }
    var nTrs = $("tbody tr", "#" + oSettings.sTableId);
    var iColspan = nTrs[0].getElementsByTagName("td").length;
    var sLastGroup = "";
    var oLastCell = "";
    var count = 0;
    var count2 = 0;
    if (oSettings.aaSortingFixed) {
        for (var i = oSettings._iDisplayStart; i <= oSettings._iDisplayEnd - 1; i++) {
            try {
                var iDisplayIndex = oSettings.aiDisplay[i];
                var iTrIndex = i - oSettings._iDisplayStart;
                var iGroup = oSettings.aaSortingFixed[0][0];
                var sGroup = "";
                switch (oSettings.aoColumns[oSettings.aaSortingFixed[0][0]].mDataProp) {
                    case "timestamp":
                    case "date_only":
                    case "dateonly":
                    case "creationdate":
                    case "date_creation":
                    case "inter_date":
                    case "ev_dateonly":
                        var t = oSettings.aoData[iDisplayIndex]._aData[oSettings.aoColumns[oSettings.aaSortingFixed[0][0]].mDataProp].split(/[- :]/);
                        var d = new Date(t[0], t[1] - 1, t[2], 0, 0, 0);
                        var d_options = {
                            weekday: "long",
                            year: "numeric",
                            month: "short",
                            day: "numeric"
                        };
                        sGroup = d.toLocaleDateString(window.navigator.language, d_options);
                        break;
                    case "prodtype_id":
                        sGroup = oSettings.aoData[iDisplayIndex]._aData.product_type;
                        break;
                    default:
                        sGroup = oSettings.aoData[iDisplayIndex]._aData[oSettings.aoColumns[oSettings.aaSortingFixed[0][0]].mDataProp]
                }
                var iQt = 1;
                if (sGroup != sLastGroup) {
                    var nGroup = document.createElement("tr");
                    var nCell = document.createElement("td");
                    nCell.colSpan = iColspan;
                    nGroup.className = "group " + oSettings.sTableId;
                    nCell.className = "group " + oSettings.sTableId;
                    var has_ck = $.grep(oSettings.aoColumns, function(e) {
                        return e.mDataProp == "checkbox"
                    }).length;
                    if ((iGroup.length > 0 || parseInt(iGroup) > 0) && has_ck) {
                        nCell.innerHTML = '<span class="group ' + oSettings.sTableId + '" style="cursor: pointer; vertical-align: middle;"><i class="fa fa-sort fa-lg"></i>&nbsp;<b>' + sGroup + '</b></span><input type="checkbox" class="hp_ck_group" style="vertical-align: sub;" data-' + oSettings.aoColumns[oSettings.aaSortingFixed[0][0]].mDataProp + '="' + oSettings.aoData[iDisplayIndex]._aData[oSettings.aoColumns[oSettings.aaSortingFixed[0][0]].mDataProp] + '" align=right/>'
                    } else {
                        nCell.innerHTML = '<span class="group ' + oSettings.sTableId + '" style="cursor: pointer; vertical-align: middle;"><i class="fa fa-sort fa-lg"></i>&nbsp;<b>' + sGroup + "</b></span>"
                    }
                    nGroup.appendChild(nCell);
                    nTrs[iTrIndex].parentNode.insertBefore(nGroup, nTrs[iTrIndex]);
                    sLastGroup = sGroup;
                    if (oLastCell != "") {
                        oLastCell.innerHTML += " (<i>" + count + " " + lang_stk_displayed_items + ")</i>";
                        if (count != count2) {
                            oLastCell.innerHTML += " [<i>" + count2 + " " + lang_stk_total_displayed + "]</i>"
                        }
                    }
                    oLastCell = nCell;
                    count = 0;
                    count2 = 0
                }
                count += 1;
                count2 += iQt
            } catch (err) {}
        }
        if (oLastCell != "") {
            oLastCell.innerHTML += " (<i>" + count + " " + lang_stk_displayed_items + ")</i>";
            if (count != count2) {
                oLastCell.innerHTML += " [<i>" + count2 + " " + lang_stk_total_displayed + "]</i>"
            }
        }
    }
    if (oSettings.aiDisplay.length > 0) {
        if (oSettings.aiDisplay.length != oSettings.aiDisplayMaster.length) {
            $.jGrowl("<br><b>" + oSettings.aiDisplay.length + " items</b> out of " + oSettings.aiDisplayMaster.length + ".", {
                glue: "before",
                life: 750,
                header: $("#" + oSettings.sTableId).data("title")
            })
        } else {
            if (oSettings.sTableId == "hpTable" || oSettings.sTableId == "hpMessages" || oSettings.sTableId == "hpTools" || oSettings.sTableId == "hpParts" || oSettings.sTableId == "hpAnomalies" || oSettings.sTableId == "hpFind" || oSettings.sTableId == "hpCat") {
                $.jGrowl("<br><b>" + oSettings.aiDisplay.length + " items</b>.<hr>" + this.fnPagingInfo().iTotalPages + " " + lang_stk_pages_of + " " + this.fnPagingInfo().iLength + " " + lang_stk_items + ".", {
                    glue: "before",
                    life: 750,
                    header: $("#" + oSettings.sTableId).data("title")
                })
            }
        }
    }
    $("img.tdopen." + oSettings.sTableId, "#" + oSettings.sTableId).css("cursor", "pointer");
    var opts_machine_types = getSelectOptions("machine_types");
    $(".edit_product_type", "#" + oSettings.sTableId).editable(function(value, settings) {
        var nTr = $(this).parents("tr")[0];
        var oDT = oSettings.oInstance;
        var value_name = "";
        eval("var json_settings = " + settings.data);
        for (var key in json_settings) {
            if (key == value) {
                value_name = json_settings[key];
                break
            }
        }
        var aoCols = oSettings.aoColumns;
        var destCol = $.grep(aoCols, function(e) {
            return e.mDataProp == "product_type"
        })[0].aTargets[0];
        var destCol2 = $.grep(aoCols, function(e) {
            return e.mDataProp == "prodtype_id"
        })[0].aTargets[0];
        var myval = '<span class="edit_product_type" style="border-bottom: dashed 1px #069;color: #069;cursor: pointer;" data-id="' + $(this).data("id") + '">&nbsp;' + value_name + "&nbsp;</span>";
        oDT.fnUpdate(value_name, nTr, destCol, false, false);
        oDT.fnUpdate(value, nTr, destCol2);
        blockAllUI();
        $.post("/EDI/hp/update_product_type", {
            type: value,
            id: $(this).data("id")
        }, function(ret) {
            UNblockAllUI()
        });
        return (myval)
    }, {
        data: JSON.stringify(opts_machine_types),
        id: $(this).data("id"),
        tooltip: "Click to change product type...",
        type: "select",
        submit: "OK",
        sortselect: "text"
    });
    var opts_product_lines = getSelectOptions("hp_product_lines");
    $(".edit_product_line", "#" + oSettings.sTableId).editable(function(value, settings) {
        var nTr = $(this).parents("tr")[0];
        var oDT = oSettings.oInstance;
        var aoCols = oSettings.aoColumns;
        var destCol = $.grep(aoCols, function(e) {
            return e.mDataProp == "product_line"
        })[0].aTargets[0];
        var myval = '<span class="edit_product_line" style="border-bottom: dashed 1px #069;color: #069;cursor: pointer;" data-id="' + $(this).data("id") + '">&nbsp;' + value + "&nbsp;</span>";
        oDT.fnUpdate(value, nTr, destCol);
        blockAllUI();
        $.post("/EDI/hp/update_product_line", {
            line: value,
            id: $(this).data("id")
        }, function(ret) {
            UNblockAllUI()
        });
        return (myval)
    }, {
        data: JSON.stringify(opts_product_lines),
        id: $(this).data("id"),
        tooltip: "Click to change product line...",
        type: "select",
        submit: "OK"
    })
}

function dt_hpTable_init_cb(c, b) {
    $("#" + c.sTableId + "_wrapper").css("padding-bottom", "25px");
    HP_init_events(c.sTableId, c.oInstance)
}

function generate_columns_hp(c, e) {
    var f = [];
    var d = 0;
    var h = "";
    var g = "";

    function b(m) {
        if (h == e && e != "messagetype") {
            f.push({
                sTitle: m,
                bSortable: true,
                bSearchable: true,
                bSmart: false,
                bRegex: true,
                bVisible: false,
                mDataProp: h,
                aTargets: [d]
            })
        } else {
            f.push({
                sTitle: m,
                bSortable: true,
                bSearchable: true,
                bSmart: false,
                bRegex: true,
                bVisible: true,
                mDataProp: h,
                aTargets: [d]
            })
        }
    }
    $("th", "#" + c).each(function() {
        h = $(this).text();
        g = h;
        switch (h) {
            case "minus":
                f.push({
                    sTitle: "#",
                    sClass: "center",
                    sWidth: "15px",
                    bSortable: false,
                    bSearchable: false,
                    mDataProp: h,
                    fnRender: function(m) {
                        return '<img class="tdopen ' + c + '" src="/var/themes/default/extjs_images/elbow-plus-nl.gif" tip="">'
                    },
                    aTargets: [d]
                });
                break;
            case "checkbox":
                f.push({
                    sTitle: " x",
                    sClass: "center",
                    sWidth: "10px",
                    bSortable: true,
                    bVisible: true,
                    mDataProp: h,
                    sDefaultContent: "",
                    fnRender: function(m) {
                        var n = m.aData;
                        if (n.auto) {
                            if (n.auto == "Yes") {
                                return '<input type="checkbox" class="hp_ck" data-' + e + '="' + m.aData[e] + '" />'
                            } else {
                                return '<input type="checkbox" disabled class="hp_ck" data-' + e + '="' + m.aData[e] + '" />'
                            }
                        } else {
                            return '<input type="checkbox" class="hp_ck" data-' + e + '="' + m.aData[e] + '" />'
                        }
                    },
                    aTargets: [d]
                });
                break;
            case "id_inter":
                b("PC30");
                break;
            case "requesterid":
                b("HP");
                break;
            case "title":
                b("INTER");
                break;
            case "ref_partenaire":
                b("RMA");
                break;
            case "partenaire":
            case "partner":
                b("Partner");
                break;
            case "part":
                b("Part");
                break;
            case "etat_name":
                b("S30 State");
                break;
            case "currentstatus":
                b("HP State");
                break;
            case "sn":
                b("S/N");
                break;
            case "label":
            case "sla":
                b("SLA");
                break;
            case "end_sla_current":
                b("SLA D/T");
                break;
            case "date_inter":
                b("Planning");
                break;
            case "inter_start":
                b("Start");
                break;
            case "inter_end":
                b("End");
                break;
            case "queue":
                b("Queue");
                break;
            case "anomaly":
                b("Anomaly");
                break;
            case "anomaly_state":
                b("State");
                break;
            case "anomaly_comment":
                b("Comment");
                break;
            case "iwcase":
                b("IW Case");
                break;
            case "si_creation":
                b("Created");
                break;
            case "country":
                b("Country");
                break;
            case "subcountry":
                b("CT");
                break;
            case "TN":
                b("Tracking");
                break;
            case "TAT":
                b("TAT");
                break;
            case "IDLE":
                b("Idle");
                break;
            case "relog":
                b("Relog");
                break;
            case "operator":
                b("User");
                break;
            case "messagetype":
                b("Type");
                break;
            case "message":
                b("Message");
                break;
            case "product_number":
            case "product_name":
            case "product_type":
            case "product_model":
            case "product_family":
            case "product_line":
            case "product_segment":
                b(h.replace("product_", "").toUpperCase());
                break;
            case "part_number":
            case "part_description":
            case "part_usage":
                b(h.replace("part_", "").toUpperCase());
                break;
            case "inter_date":
                b("Inter D/T");
                break;
            case "ev_timestamp":
                b("Event D/T");
                break;
            case "tech":
                b("Technician");
                break;
            case "qacode":
                b("QA");
                break;
            case "failurecode":
                b("FC");
                break;
            case "synched":
                b("Sync");
                break;
            case "manual_reason":
                b("Manual");
                break;
            case "last_error":
                b("Last Error");
                break;
            case "sub":
                b("Sub");
                break;
            case "calls":
                b("Calls");
                break;
            case "ints":
                b("Ints");
                break;
            case "synched_datetime":
                b("Sync D/T");
                break;
            case "last_subcase":
                b("Last");
                break;
            case "repair":
                b("DC/RC");
                break;
            case "new_subcase":
                b("HP New");
                break;
            case "new_subcase_status":
                b("HP New Status");
                break;
            case "kci_eta":
                b("KCI Date");
                break;
            case "cat_agent":
                b("Agent");
                break;
            case "cat_manager":
                b("Manager");
                break;
            case "new_subcase_status":
                b("HP new status");
                break;
            case "logo":
            case "logo_petit":
            case "color":
            case "done":
            case "grade":
            case "service_incident_id":
                f.push({
                    sTitle: h,
                    bSortable: false,
                    bVisible: false,
                    bSearchable: false,
                    mDataProp: h,
                    aTargets: [d]
                });
                break;
            default:
                f.push({
                    sTitle: h,
                    bSortable: true,
                    bVisible: false,
                    bSearchable: false,
                    mDataProp: h,
                    aTargets: [d]
                })
        }
        d += 1
    });
    return f
}

function HP_init_events(g, f) {
    $("img.tdopen." + g, "#" + g).die("click").live("click", function() {
        var e = $(this).parents("tr")[0];
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            f.fnClose(e)
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            f.fnOpen(e, dt_hpTable_details(f, e), "details")
        }
    });
    $("tr.tr_" + g + ">td", "#" + g).die("dblclick").live("dblclick", function(p) {
        p.preventDefault();
        if ($("td.center>img", q).length) {
            if (p.ctrlKey) {
                $("td.details", "#" + g).each(function() {
                    var e = $(this).parent("tr").prev();
                    $("td:eq(0)", e).dblclick()
                })
            } else {
                var q = $(this).parents("tr")[0];
                var o = $("td.center>img", q);
                if (o.attr("src").match("elbow-minus-nl")) {
                    o.attr("src", "/var/themes/default/extjs_images/elbow-plus-nl.gif");
                    f.fnClose(q)
                } else {
                    o.attr("src", "/var/themes/default/extjs_images/elbow-minus-nl.gif");
                    f.fnOpen(q, dt_hpTable_details(f, q), "details")
                }
            }
        }
    });
    $("tr.group." + g, "#" + g).die("dblclick").live("dblclick", function(p) {
        var o = $(p.currentTarget).nextUntil("tr.group");
        o.toggle()
    });
    $("span.group." + g, "#" + g).die("click").live("click", function(o) {
        $(this).parents("tr.group:first").dblclick()
    });
    var b = "StickMeNot";
    if (typeof(localStorage) !== "undefined") {
        if (localStorage.enable_stick === "false") {
            $(".StickMe:not(label)").css({
                "z-index": "10"
            }).stickyScroll("clear")
        } else {
            if (g == "hpTable" || g == "hpMessages" || g == "hpTools" || g == "hpParts" || g == "hpAnomalies" || g == "hpFind" || g == "hpCat") {
                b = "StickMe"
            }
        }
    }
    $("#" + g + "_wrapper div.top").append('<div class="' + b + '" style="float: right"></div>').append('<div class="' + b + '" style="float: left">' + dt_create_display_length(g, f.fnSettings()._iDisplayLength) + "</div>").append('<div style="overflow: hidden;text-align: center;padding-top: 3px;font-weight: bold;font-variant: small-caps;text-shadow:-1px -1px 0 yellow ,1px -1px 0 yellow ,-1px 1px 0 yellow ,1px 1px 0 yellow">' + $("#" + g).attr("data-title") + "<span></span></div>");
    $("#" + g + "_wrapper div.top>div." + b + ":first").append(dt_create_filter_select(f, "subcountry", "All CT")).append(dt_create_filter_select(f, "part_usage", "All Usages")).append(dt_create_filter_select(f, "failurecode", "All FC")).append(dt_create_filter_select(f, "product_type", "All types")).append(dt_create_filter_select(f, "product_line", "All PL")).append(dt_create_filter_select(f, "product_segment", "All segments")).append(dt_create_filter_select(f, "anomaly", "All Anomaly Types")).append(dt_create_filter_select(f, "messagetype", "All Messages")).append(dt_create_filter_select(f, "operator", "All Users")).append(dt_create_filter_select(f, "cat_result", "All CAT results")).append(dt_create_filter_select(f, "new_subcase_status", "All CAT status")).append(dt_create_filter_select(f, "cat_agent", "All CAT agent")).append(dt_create_filter_select(f, "cat_manager", "All CAT manager")).append(dt_create_filter_select(f, "currentstatus", "All HP Status")).append(dt_create_filter_select(f, "partner", "All Partners")).append(dt_create_filter_select(f, "queue", "All Queues")).append(dt_create_filter_select(f, "etat_name", "All S30 States")).append(dt_create_filter_select(f, "tech", "All Technicians")).append(dt_create_filter_select(f, "qacode", "All QA")).append(dt_create_filter_select(f, "TAT_range", "All TAT")).append(dt_create_filter_select(f, "IDLE_range", "All IDLE")).append(dt_create_filter_select(f, "rework", "All classes")).append(dt_create_filter_select(f, "anomaly_state", "All Anomalies")).append(dt_create_filter_select(f, "synched", "Synchro")).append(dt_create_filter_select(f, "auto", "All AUTO")).append(dt_create_filter_select(f, "checkbox", "Show ALL")).append('<input type="text" style="border: 1px solid black; " size="30" placeholder="Search in results" value="" />').append('<button type="button" class="hp_memory_new_' + g + ' hp_button2"><i class="fa fa-clipboard"></i> <small>' + lang_stk_copy_for_excel + "</small></button>");
    $("select, input, button", "#" + g + "_wrapper div.top>div." + b).css({
        "box-shadow": "1px 1px 4px #555",
        "font-size": "smaller",
        "margin-right": "5px",
        width: "auto"
    });
    $("select", "#" + g + "_wrapper div.top>div." + b).resizeselect();
    $("label", "#" + g + "_wrapper div.top>div").css({
        "float": "initial",
        "font-size": "smaller",
        color: "black",
        "text-shadow": "-1px -1px 0 #FFF ,1px -1px 0 #FFF ,-1px 1px 0 #FFF ,1px 1px 0 #FFF"
    });
    if (b == "StickMe") {
        $(".StickMe:not(label)").css({
            "z-index": "10"
        }).stickyScroll("clear").stickyScroll({
            container: $("#" + g + "_wrapper")
        })
    }
    $("select", "#" + g + "_wrapper div.top>div." + b + ":last").change(function() {
        f.fnSettings()._iDisplayLength = parseInt($(this).val());
        f.fnDraw();
        if (typeof(localStorage) !== "undefined") {
            localStorage.hp_display_length = parseInt($(this).val())
        }
    });
    $("select", "#" + g + "_wrapper div.top>div." + b + ":first").change(function() {
        var e = f.fnSettings().aoColumns[$(this).attr("data-iCol")].mData;
        if ((e == "anomaly_state" || e == "part_usage") && $(this).val() != "") {
            f.fnFilter("^" + $(this).val() + "$", parseInt($(this).attr("data-iCol")), true, false)
        } else {
            f.fnFilter($(this).val(), parseInt($(this).attr("data-iCol")), false, false)
        }
        if ($(this).val() == "") {
            $(this).css({
                "background-color": "",
                border: ""
            })
        } else {
            $(this).css({
                "background-color": "yellow",
                border: "0"
            })
        }
        $("#" + g + "_filter input").focus()
    });
    $("input[type=text]", "#" + g + "_wrapper div.top>div." + b).die("keyup").keyup(function(p) {
        var o = $(this);
        input_delay(function() {
            if (o.val() != "") {
                o.css({
                    "background-color": "yellow"
                })
            } else {
                o.css({
                    "background-color": ""
                })
            }
            f.fnFilter(o.val())
        }, 750)
    }).die("focus").focus(function() {
        if ($(this).val() != "") {
            $(this).select().css({
                "background-color": "yellow"
            })
        } else {
            $(this).css({
                "background-color": ""
            })
        }
    }).die("blur").blur(function() {
        if ($(this).val() != "") {
            $(this).select().css({
                "background-color": "yellow"
            })
        } else {
            $(this).css({
                "background-color": ""
            })
        }
    });
    dt_init_Excel(f, "hp_memory_new_" + g);
    try {
        var n = $.grep(f.fnSettings().aoColumns, function(o) {
            return o.mDataProp == "checkbox"
        }).length;
        if (n) {
            f.data("checkboxes", [])
        }
    } catch (m) {
        console.log(m)
    }

    function h() {
        $("#hp_result_actions_" + g + " button").removeAttr("disabled");
        d()
    }

    function c() {
        $("#hp_result_actions_" + g + " button[type='button']").attr("disabled", "disabled");
        d()
    }

    function d() {
        if (f.data("checkboxes")) {
            $("#hp_result_actions_" + g + " > h3").html(lang_stk_action_lines.replace(/\|1/gi, f.data("checkboxes").length))
        } else {
            $("#hp_result_actions_" + g + " > h3").html(lang_stk_action_info)
        }
    }
    $(".hp_ck", "#" + g).die("change").live("change", function() {
        var u = this.parentNode.parentNode;
        var w = f.fnGetPosition(u);
        var o = f.fnGetData(u);
        var q = f.fnSettings();
        var p = q.aoColumns[q.aaSortingFixed[0][0]].mDataProp;
        var e = ($("#" + g).data("code") == "products" || $("#" + g).data("code") == "unreceived" || $("#" + g).data("code") == "follow") ? false : true;

        function v(C, z, D) {
            return (C[p] != o[p])
        }

        function r(C, z, D) {
            if (C[p] == o[p]) {
                D.splice(z, 1);
                return true
            }
        }
        if ($(this).is(":checked")) {
            if (e && f.data("checkboxes").some(v)) {
                $.jGrowl(lang_stk_uncheckable_full, {
                    header: lang_stk_uncheckable,
                    life: 10000
                });
                f.data("checkboxes").some(r);
                $(u).removeClass("row_selected").removeClass("DTTT_selected");
                $(this).removeAttr("checked")
            } else {
                o.checkbox = true;
                f.data("checkboxes").push(o);
                if (!$(u).hasClass("row_selected")) {
                    $(u).addClass("row_selected").addClass("DTTT_selected")
                }
                h()
            }
        } else {
            o.checkbox = false;
            $(u).removeClass("row_selected").removeClass("DTTT_selected");
            f.data("checkboxes").some(r);
            d()
        }
        if (f.data("checkboxes").length == 0) {
            c()
        }
    });
    $(".hp_ck_group", "#" + g).die("change").live("change", function() {
        var r = $(this).is(":checked");
        var e = $(this);
        var q = f.fnSettings();
        var p = q.aoColumns[q.aaSortingFixed[0][0]].mDataProp;
        var o = ($("#" + g).data("code") == "products" || $("#" + g).data("code") == "unreceived" || $("#" + g).data("code") == "follow") ? false : true;
        $("INPUT[data-" + p + '="' + $(this).data(p) + '"]:visible', f.fnGetNodes()).each(function() {
            var z = this.parentNode.parentNode;
            var D = f.fnGetPosition(z);
            var u = f.fnGetData(z);

            function C(G, E, H) {
                return (G[p] != u[p])
            }

            function w(G, E, H) {
                if (G[p] == u[p]) {
                    H.splice(E, 1);
                    return true
                }
            }

            function v(G, E, H) {
                switch ($("#" + q.sTableId).data("code")) {
                    case "unreceived":
                    case "follow":
                        if (G.anomaly_id == u.anomaly_id) {
                            return true
                        }
                        break
                }
            }
            if (r) {
                if (o && f.data("checkboxes").some(C)) {
                    $.jGrowl(lang_stk_uncheckable_full, {
                        header: lang_stk_uncheckable,
                        life: 10000
                    });
                    $(z).removeClass("row_selected").removeClass("DTTT_selected");
                    $(this).removeAttr("checked");
                    e.removeAttr("checked");
                    return false
                } else {
                    if (!$(this).is(":disabled")) {
                        if (!f.data("checkboxes").some(v)) {
                            u.checkbox = true;
                            f.data("checkboxes").push(u)
                        }
                        if (!$(z).hasClass("row_selected")) {
                            $(z).addClass("row_selected").addClass("DTTT_selected")
                        }
                        $(this).attr("checked", "checked")
                    }
                }
            } else {
                u.checkbox = false;
                $(z).removeClass("row_selected").removeClass("DTTT_selected");
                $(this).removeAttr("checked");
                f.data("checkboxes").some(w)
            }
        });
        if (f.data("checkboxes").length == 0) {
            c()
        } else {
            h()
        }
    })
}

function dt_hpTable_details(e, f) {
    var c = e.fnGetData(f);
    var h = e.fnGetPosition(f);
    var d = $(e).attr("id");
    var g = "";
    var b = "";
    if (d == "hpTable" || d == "hpFind") {
        g = '<div id="' + d + h + '" style="white-space:normal;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</div>";
        $.post("EDI/hp/get_case_details", {
            id_inter: c.id_inter
        }, function(m) {
            $("#" + d + h).hide().html(m).fadeIn("fast")
        })
    } else {
        if (d == "hpCat") {
            g = '<div id="' + d + h + '" style="white-space:normal;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</div>";
            $.post("EDI/hp/get_cat_details", {
                id_inter: c.id_inter
            }, function(m) {
                $("#" + d + h).hide().html(m).fadeIn("fast")
            })
        } else {
            if (d == "hpParts") {
                if (c.id_piece) {
                    g = '<div id="' + d + h + '" style="white-space: normal;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</div>";
                    $.post("stock/report_stock_manager_detail", {
                        id_piece: c.id_piece
                    }, function(m) {
                        $("#" + d + h).hide().html(m).fadeIn("fast")
                    })
                } else {
                    g = '<div id="' + d + h + '" style="white-space:normal;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</div>";
                    $.post("EDI/hp/get_case_details", {
                        id_inter: c.id_inter
                    }, function(m) {
                        $("#" + d + h).hide().html(m).fadeIn("fast")
                    })
                }
            } else {
                if (d == "hpAnomalies") {
                    if (c.id_piece) {
                        g = '<div id="' + d + h + '" style="white-space: normal;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</div>";
                        $.post("stock/report_stock_manager_detail", {
                            id_piece: c.id_piece
                        }, function(m) {
                            $("#" + d + h).hide().html(m).fadeIn("fast")
                        })
                    } else {
                        g = '<div id="' + d + h + '" style="white-space:normal;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</div>";
                        $.post("EDI/hp/get_case_details", {
                            id_inter: c.id_inter
                        }, function(m) {
                            $("#" + d + h).hide().html(m).fadeIn("fast")
                        })
                    }
                } else {
                    if (c.note_id != "") {
                        g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
                        $.post("EDI/hp/get_note", {
                            note_id: c.note_id
                        }, function(m) {
                            $("#" + d + h).hide().html(m).fadeIn("fast")
                        })
                    } else {
                        if (c.operation_id != "") {
                            g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
                            $.post("EDI/hp/get_operation", {
                                operation_id: c.operation_id
                            }, function(m) {
                                $("#" + d + h).hide().html(m).fadeIn("fast")
                            })
                        } else {
                            if (c.part_order_line_event_id != "") {
                                g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
                                $.post("EDI/hp/get_part_update", {
                                    part_update_id: c.part_order_line_event_id
                                }, function(m) {
                                    $("#" + d + h).hide().html(m).fadeIn("fast")
                                })
                            } else {
                                if (c.messagetype == "PROBLEM_SUBMITTAL" || c.messagetype == "QUERY_INSERT_PROBLEM") {
                                    g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
                                    $.post("EDI/hp/get_problem", {
                                        service_incident_id: c.service_incident_id
                                    }, function(m) {
                                        $("#" + d + h).hide().html(m).fadeIn("fast")
                                    })
                                } else {
                                    if (c.messagetype == "CONFIRM_CLOSE" || c.messagetype == "REQUEST_CLOSURE" || c.messagetype == "REJECT_RESOLUTION" || c.messagetype == "SEND_SOLUTION") {
                                        g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
                                        b = c.event_id;
                                        $.post("EDI/hp/get_event", {
                                            event_id: b
                                        }, function(m) {
                                            $("#" + d + h).hide().html(m).fadeIn("fast")
                                        })
                                    } else {
                                        if (c.messagetype == "INTERNAL" || c.messagetype == "internal" || c.messagetype == "qualnote") {
                                            g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
                                            $.post("EDI/hp/get_internal", {
                                                event_id: c.event_id
                                            }, function(m) {
                                                $("#" + d + h).hide().html(m).fadeIn("fast")
                                            })
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        }
    }
    return g
}

function find_SN(b) {
    blockAllUI();
    var c = new Array();
    c.push({
        field: "si.product_sn",
        value: b,
        operator: "="
    });
    c.push({
        field: "si.creationdate",
        value: "6 MONTH",
        operator: "INTERVAL"
    });
    $("#hp_report_listing").load("EDI/hp/report_find", {
        inside: "yes",
        type: "find",
        fields: c,
        title: "Find Serial Number"
    }, function(f, d, e) {
        UNblockAllUI()
    })
}

function find_subcase(b) {
    blockAllUI();
    var c = new Array();
    c.push({
        field: "si.requesterid",
        value: b,
        operator: "="
    });
    $("#hp_report_listing").load("EDI/hp/report_find", {
        inside: "yes",
        type: "find",
        fields: c,
        title: "Find Subcase"
    }, function(f, d, e) {
        UNblockAllUI()
    })
}

function fillSelect(c, b, e) {
    var d = $("#" + b);
    $("#" + b + " option").remove();
    if (e) {
        d.append($("<option/>").attr("value", "").text(""))
    }
    if (c != null) {
        $.each(c, function(f, g) {
            d.append($("<option/>").attr("value", g.id).text(g.name))
        })
    }
}
/*
 * Linkselect jQuery Plug-in
 *
 * Copyright 2011 Giva, Inc. (http://www.givainc.com/labs/)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * 	http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Date: 2011-08-08
 * Rev:  1.2.09
 */
(function(b) {
    b.linkselect = {
        version: "1.2.09"
    };
    b.fn.linkselect = function(f) {
        var g = typeof arguments[0] == "string" && arguments[0];
        var e = g && Array.prototype.slice.call(arguments, 1) || arguments;
        if (g && this.length) {
            var d = b.data(this[0], "linkselect");
            if (g.toLowerCase() == "object") {
                return d
            } else {
                if (d[g]) {
                    var c;
                    this.each(function(h) {
                        var m = b.data(this, "linkselect")[g].apply(d, e);
                        if (h == 0 && m) {
                            if (!!m.jquery) {
                                c = b([]).add(m)
                            } else {
                                c = m;
                                return false
                            }
                        } else {
                            if (!!m && !!m.jquery) {
                                c = c.add(m)
                            }
                        }
                    });
                    return c || this
                } else {
                    return this
                }
            }
        } else {
            return this.each(function() {
                new b.LinkSelect(this, f)
            })
        }
    };
    b.LinkSelect = function(X, C) {
        C = b.extend({}, b.LinkSelect.defaults, C);
        var o = this,
            R = X,
            Y = b(X),
            I = {},
            K = false,
            q = 0,
            J, g = false;
        this.id = Y.attr("id");
        this.val = function(ac, ab) {
            if (arguments.length > 0) {
                T(ac, ab);
                return p
            } else {
                return L.val()
            }
        };
        this.focus = function() {
            setTimeout(function() {
                p.focus()
            }, 1);
            return p
        };
        this.blur = function() {
            setTimeout(function() {
                p.blur()
            }, 1);
            return p
        };
        this.open = function(ac, ab) {
            if (K) {
                return p
            }
            b(document).triggerHandler("click.linkselect");
            if (ab !== false) {
                p.trigger("focus")
            }
            setTimeout(function() {
                S(ac)
            }, 1);
            return p
        };
        this.disable = function(ab) {
            K = ab;
            p.parent().find("span." + C.classDisabled).remove();
            p[K ? "hide" : "show"]();
            if (K) {
                p.after('<span class="' + C.classDisabled + '">' + p.html() + "</span>")
            }
            return p
        };
        this.replaceOptions = function(ab, ac) {
            Y.children("option").remove();
            b.each(ab, function(ad) {
                var ae = b("<option/>").attr("value", this.value).html(this.text);
                if (this.selected == true) {
                    ae.attr("selected", "selected")
                }
                if (this.className) {
                    ae.addClass(this.className)
                }
                ae.appendTo(Y)
            });
            v();
            d();
            z().trigger("click.linkselect", [true, ac])
        };
        this.replaceOptionsCustom = function(ab, ac) {
            Y.children("option").remove();
            b(ab).appendTo(Y);
            v();
            d();
            z().trigger("click.linkselect", [true, ac])
        };
        var M = Z();
        Y.after(M).remove();
        var L = M.filter("input");
        var p = M.filter("a");
        var m = M.filter("div");
        var w = M.find(".scrollable");
        var n = M.find(".title");
        var D = m.find("ul");
        var G;
        L.addClass(Y.attr("class"));
        b.data(L[0], "linkselect", this);
        m.appendTo("body").bind("mousemove.linkselect", function(ab) {
            G = ab
        });

        function d() {
            D.find("li").bind("mouseover.linkselect", function(ab) {
                if (G && G.type == "keydown") {
                    return
                }
                P(b(this));
                G = ab
            }).bind("click.linkselect", function(ag, ac, af) {
                ag.preventDefault();
                var ab = z().removeClass(C.classSelected);
                var ad = b(this).addClass(C.classSelected);
                var ae = ad.attr("rel") || "";
                var ah = ad.find("." + C.classValue).html();
                h(ac);
                if ((af !== false) && ((b.isFunction(C.change) && (C.change.apply(o, [this, ae, ah, af]) === false)) || (b.isFunction(Y[0].onchange) && (Y[0].onchange.apply(o, [this, ae, ah, af]) === false)))) {
                    ab.addClass(C.classSelected);
                    ad.removeClass(C.classSelected);
                    return
                }
                L.val(ae);
                p.html(ah)[(ac !== true) ? "trigger" : "triggerHandler"]("focus", [ac]);
                if (K) {
                    p.parent().find("span." + C.classDisabled).html(ah)
                }
            })
        }
        d();
        p.bind("click.linkselect", function(ab) {
            ab.preventDefault();
            Q();
            if (b.browser.msie) {
                setTimeout(function() {
                    p.trigger("focus.linkselect")
                }, 0)
            }
        }).bind("focus.linkselect", function(ac, ab) {
            if (!m.is(":visible") && (ab !== true)) {
                p.addClass(C.classLinkFocus)
            }
        }).bind("blur.linkselect", function(ab) {
            if (aa(ab)) {
                h()
            }
            p.removeClass(C.classLinkFocus)
        }).bind((b.browser.safari ? "keydown" : "keypress") + ".linkselect", function(ag, af) {
            if (!!af) {
                var ag = af
            }
            var ac = ag.keyCode || ag.charCode,
                ae = String.fromCharCode(ac).toLowerCase();
            switch (ac) {
                case 38:
                case 40:
                    ag.preventDefault();
                    N((ac == 38) ? -1 : 1);
                    G = ag;
                    break;
                case 13:
                    ag.preventDefault();
                    if (m.is(":visible")) {
                        m.find("li." + C.classCurrent).trigger("click.linkselect")
                    } else {
                        p.trigger("click.linkselect")
                    }
                    break;
                case 9:
                case 27:
                    h();
                    break;
                case 35:
                    ag.preventDefault();
                    r();
                    G = ag;
                    break;
                case 36:
                    ag.preventDefault();
                    H();
                    G = ag;
                    break;
                case 33:
                case 34:
                    ag.preventDefault();
                    var ab = m.is(":visible");
                    if (!ab) {
                        m.show()
                    }
                    var ad = parseInt(w.height() / D.find("li:first").outerHeight(), 10);
                    if (!ab) {
                        m.hide()
                    }
                    N((ac == 33) ? ad * -1 : ad);
                    break
            }
            if (ae != J) {
                q = 0
            }
            J = ae;
            if (typeof I[ae] != "undefined") {
                if (q >= I[ae].length) {
                    q = 0
                }
                D.find("#" + o.id + "_li_" + I[ae][q]).trigger("click.linkselect");
                ag.preventDefault();
                ag.stopPropagation();
                q++
            }
        });
        if (b.browser.msie) {
            p.bind("keydown.linkselect", function(ab) {
                if (",8,9,33,34,35,36,37,38,39,40,".indexOf("," + ab.keyCode + ",") > -1) {
                    return b(this).triggerHandler("keypress.linkselect", [ab])
                }
            })
        }
        b(document).bind("click.linkselect", function(ab) {
            if ((ab.target !== p[0]) && (ab.target !== w[0]) && m.is(":visible")) {
                h();
                p.removeClass(C.classLinkFocus)
            }
        });
        b(window).resize(function() {
            if (g) {
                u(p, m, true)
            }
        });

        function Z() {
            var ag = o.id;
            var af = Y.attr("title");
            var ae = R.selectedIndex == -1 ? "" : R[R.selectedIndex].text;
            var ad = R.selectedIndex == -1 ? "" : R[R.selectedIndex][(b.browser.msie && b.browser.version <= 7 && !(R[R.selectedIndex].attributes.value.specified)) ? "text" : "value"];
            var ac = Y.attr("tabindex");
            var ab = ['<a href="#' + o.id + '" id="' + o.id + '_link" class="' + C.classLink + '"' + (ac ? ' tabindex="' + ac + '"' : "") + ">" + ae + "</a>", '<input type="hidden" name="' + o.id + '" id="' + o.id + '" value="' + ad + '" />', '<div class="' + C.classContainer + '">', (af) ? '<div class="title"><span>' + af + "</span></div>" : "", '<div class="scrollable"><ul id="' + o.id + '_list">', U(Y.children("option")), "</ul></div>", "</div>"];
            return b(ab.join(""))
        }

        function U(ab) {
            I = [];
            var ac = [];
            ab.each(function(af) {
                var aj = b(this);
                var ah = aj.is(":selected");
                var ad = b.trim(aj.text());
                var ae = '<span class="' + C.classValue + '">' + ad + "</span>";
                var ai = b.browser.msie && b.browser.version <= 7 && !(this.attributes.value.specified) ? this.text : this.value;
                if (b.isFunction(C.format)) {
                    ae = C.format.apply(o, [ae, ai, ad, af, aj, C]) || ae
                }
                var ag = (ad.length > 1) ? ad.substring(0, 1).toLowerCase() : "";
                if (!I[ag]) {
                    I[ag] = []
                }
                I[ag].push(af);
                var ak = b.trim(this.className + " " + (ah ? C.classSelected : ""));
                ac.push('<li id="' + o.id + "_li_" + af + '" rel="' + ai + (ak.length > 0 ? '" class="' + ak : "") + '">' + ae + "</li>")
            });
            return ac.join("")
        }

        function v() {
            f = false;
            m[0].style.width = "";
            if (n.length) {
                n[0].style.width = "";
                n.css("float", "")
            }
            D.html(U(Y.children("option")))
        }

        function T(ad, ac) {
            var ab = D.find("li[rel=" + ad + "]");
            if (ab.length == 0) {
                ab = D.find("li:eq(0)")
            }
            return ab.trigger("click.linkselect", [true, ac])
        }

        function z() {
            var ab = D.find("li.selected");
            if (ab.length == 0) {
                ab = D.find("li:eq(0)")
            }
            return ab
        }

        function E() {
            var ab = D.find("li.current");
            if (ab.length == 0) {
                ab = z()
            }
            return ab
        }

        function P(ab) {
            m.find(".current").removeClass(C.classCurrent);
            ab.addClass(C.classCurrent);
            return ab
        }

        function N(ac) {
            var ab = E();
            var ad = parseInt(ab.attr("id").replace(/(.+)(_(\d+$))/gi, "$3"), 10);
            e(ad + ac)
        }

        function e(ae) {
            var ad = b("li", m),
                ab;
            if (!ad || ad.length == 0) {
                return false
            }
            var ac = E().removeClass(C.classCurrent);
            if (isNaN(ae) || ae < 0) {
                ab = ad.eq(0)
            } else {
                if (ae > ad.length - 1) {
                    ab = ad.eq(ad.length - 1)
                } else {
                    ab = ad.eq(ae)
                }
            }
            if (m.is(":visible")) {
                ab.addClass(C.classCurrent);
                c(ab)
            } else {
                if (ac[0] !== ab[0]) {
                    ab.trigger("click.linkselect")
                }
            }
        }

        function H() {
            e(0)
        }

        function r() {
            e(Y.children("option").length - 1)
        }

        function c(ac, ab) {
            var ae = ac[0];
            var af = w[0];
            var ad = {
                pTop: parseInt(w.css("paddingTop"), 10) || 0,
                pBottom: parseInt(w.css("paddingBottom"), 10) || 0,
                bTop: parseInt(w.css("borderTopWidth"), 10) || 0,
                bBottom: parseInt(w.css("borderBottomWidth"), 10) || 0
            };
            if ((ae.offsetTop + ae.offsetHeight) > (af.scrollTop + af.clientHeight)) {
                af.scrollTop = ac.offset().top + (af.scrollTop - w.offset().top) - ((af.clientHeight / ((ab == true) ? 2 : 1)) - (ac.outerHeight() + ad.pBottom))
            } else {
                if (ae.offsetTop - ad.bTop - ad.bBottom <= (af.scrollTop + ad.pTop + ad.pBottom)) {
                    af.scrollTop = ac.offset().top + (af.scrollTop - w.offset().top) - ad.pTop
                }
            }
        }

        function Q() {
            if (m.is(":visible")) {
                h()
            } else {
                S()
            }
        }
        var f = false;

        function S(ah) {
            var ac = z();
            p.removeClass(C.classLinkFocus).addClass(C.classLinkOpen);
            m.show();
            if (!f) {
                var ag = (p.css("display").indexOf("inline") > -1) ? p.parent().outerWidth() : p.outerWidth();
                var ad = C.fixedWidth ? ag : m.width();
                if (ad < ag) {
                    ad = ag
                }
                var af = parseInt(w.css("max-height"), 10);
                if (b.browser.msie && b.browser.version <= 6) {
                    if ((af > 0) && (w.height() > af)) {
                        w.height(af)
                    }
                }
                if (D.height() > af) {
                    ad += 25
                }
                var ae = parseInt("0" + m.css("max-width"), 10);
                if ((ae > 0) && (ad > ae)) {
                    ad = ag = ae
                }
                m.width(ad);
                if (b.browser.safari) {
                    var ab = m.width();
                    if (ag > ab) {
                        ad = ag = ab
                    }
                }
                n.width(ag);
                if (n.outerWidth() > ag) {
                    n.width(ag - (n.outerWidth() - ag))
                }
                if (C.titleAlign.toLowerCase() == "right" && !C.fixedWidth) {
                    n.css("float", "right")
                }
                f = true
            }
            u(p, m, true);
            if (!!b.fn.bgIframe) {
                m.bgIframe()
            }
            c(ac, true);
            P(ac);
            if (b.isFunction(C.open)) {
                C.open.apply(this, [m, p, ac, n])
            }
            if (b.isFunction(ah)) {
                ah.apply(this, [m, p, ac, n])
            }
            g = true
        }

        function h(ab) {
            if (ab !== true) {
                p.addClass(C.classLinkFocus).removeClass(C.classLinkOpen)
            }
            m.hide();
            if (b.isFunction(C.close)) {
                C.close.apply(this, [m, p, z(), n])
            }
            g = false
        }

        function O(ab) {
            var ac = false;
            if (ab.is(":hidden")) {
                ac = !!ab.css("visibility", "hidden").show()
            }
            var ad = b.extend(ab.offset(), {
                width: ab.outerWidth(),
                height: ab.outerHeight(),
                marginLeft: parseInt(b.curCSS(ab[0], "marginLeft", true), 10) || 0,
                marginRight: parseInt(b.curCSS(ab[0], "marginRight", true), 10) || 0,
                marginTop: parseInt(b.curCSS(ab[0], "marginTop", true), 10) || 0,
                marginBottom: parseInt(b.curCSS(ab[0], "marginBottom", true), 10) || 0
            });
            if (ad.marginTop < 0) {
                ad.top += ad.marginTop
            }
            if (ad.marginLeft < 0) {
                ad.left += ad.marginLeft
            }
            ad.bottom = ad.top + ad.height;
            ad.right = ad.left + ad.width;
            if (ac) {
                ab.hide().css("visibility", "visible")
            }
            return ad
        }

        function u(af, ab) {
            var ah = O(af);
            var ag = V();
            var ad = m.outerWidth() + ah.left;
            if (ad > ag.x) {
                ah.left = (ah.left - m.outerWidth()) + n.outerWidth()
            } else {
                var ae = m.outerWidth(),
                    ac = n.outerWidth();
                if (ae > ac) {
                    n.width(ae - (ac - n.width()))
                }
            }
            ab.css({
                position: "absolute",
                top: ah[C.yAxis],
                left: ah.left
            });
            return ah.bottom
        }

        function V() {
            var ab = {
                scrollLeft: b(window).scrollLeft(),
                scrollTop: b(window).scrollTop(),
                width: b("body").width(),
                height: b("body").height()
            };
            ab.x = ab.scrollLeft + ab.width;
            ab.y = ab.scrollTop + ab.height;
            return ab
        }

        function aa(ab) {
            return !("bubbles" in ab || "cancelBubble" in ab)
        }
        if (b.isFunction(C.init)) {
            C.init.apply(this, [Y, L, p, m, w, n, D])
        }
    };
    b.LinkSelect.defaults = {
        classLink: "linkselectLink",
        classLinkOpen: "linkselectLinkOpen",
        classLinkFocus: "linkselectLinkFocus",
        classContainer: "linkselectContainer",
        classSelected: "selected",
        classCurrent: "current",
        classDisabled: "linkselectDisabled",
        classValue: "linkselectValue",
        yAxis: "top",
        titleAlign: "right",
        fixedWidth: false,
        init: null,
        change: null,
        format: null,
        open: null,
        close: null
    }
})(jQuery);
(function(f) {
    var m;
    var c;
    var b = function(n, o) {
        return {
            width: n - f(window).width() - f(window).scrollLeft(),
            height: o - f(window).height() - f(window).scrollTop()
        }
    };
    var d = function(q) {
        if (c[m.activeId].currentHover) {
            var o = q ? c[m.activeId].currentHover.nextAll(":not(." + c[m.activeId].separatorClass + "):visible:first") : c[m.activeId].currentHover.prevAll(":not(." + c[m.activeId].separatorClass + "):visible:first");
            if (o.length == 0) {
                o = c[m.activeId].currentHover.parent().find("> li:visible");
                o = (q ? f(o[0]) : f(o[o.length - 1]))
            }
            o.mouseover()
        } else {
            var p = f("#" + m.activeId + ", #" + m.activeId + " ul").filter(function() {
                return (f(this).is(":visible") && f(this).parents(":hidden").length == 0)
            });
            if (p.length > 0) {
                var n = f(p[p.length - 1]).find("> li:visible");
                f(n[(q ? 0 : (n.length - 1))]).mouseover()
            }
        }
    };
    var g = function() {
        for (cm in c) {
            f(c[cm].allContext).removeClass(m.activeClass)
        }
    };
    var h = function() {
        if (m.activeId) {
            f("#" + m.activeId).add("#" + m.activeId + " ul").hide()
        }
        clearInterval(m.keyUpDown);
        m.keyUpDownStop = false;
        if (c[m.activeId]) {
            c[m.activeId].currentHover = null
        }
        m.activeId = null;
        f(document).unbind(".jeegoocontext");
        f(window).unbind("resize.jeegoocontext")
    };
    var e = function(n) {
        if (m.activeId && c[m.activeId].onHide) {
            if (c[m.activeId].onHide.apply(f("#" + m.activeId), [n, c[m.activeId].context]) == false) {
                return false
            }
        }
        g();
        h()
    };
    f.fn.jeegoocontext = function(r, n) {
        if (!m) {
            m = {}
        }
        if (!c) {
            c = {}
        }
        if (n && n.menuClass) {
            m.menuClass = n.menuClass
        }
        if (!m.menuClass) {
            m.menuClass = "jeegoocontext"
        }
        if (n && n.activeClass) {
            m.activeClass = n.activeClass
        }
        if (!m.activeClass) {
            m.activeClass = "active"
        }
        c[r] = f.extend({
            hoverClass: "hover",
            submenuClass: "submenu",
            separatorClass: "separator",
            operaEvent: "ctrl+click",
            fadeIn: 200,
            delay: 300,
            keyDelay: 100,
            widthOverflowOffset: 0,
            heightOverflowOffset: 0,
            submenuLeftOffset: 0,
            submenuTopOffset: 0,
            autoAddSubmenuArrows: true,
            startLeftOffset: 0,
            startTopOffset: 0,
            keyboard: true
        }, n || {});
        c[r].allContext = this.selector;
        f("#" + r).find("li")[c[r].livequery ? "expire" : "unbind"](".jeegoocontext")[c[r].livequery ? "livequery" : "bind"]("mouseover.jeegoocontext", function(D) {
            var E = c[r].currentHover = f(this);
            clearTimeout(c[r].show);
            clearTimeout(c[r].hide);
            f("#" + r).find("*").removeClass(c[r].hoverClass);
            var u = E.parents("li");
            E.add(E.find("> *")).add(u).add(u.find("> *")).addClass(c[r].hoverClass);
            var z = true;
            if (c[r].onHover) {
                if (c[r].onHover.apply(this, [D, c[r].context]) == false) {
                    z = false
                }
            }
            if (!c[r].proceed) {
                c[r].show = setTimeout(function() {
                    c[r].proceed = true;
                    E.mouseover()
                }, c[r].delay);
                return false
            }
            c[r].proceed = false;
            E.parent().find("ul").not(E.find("> ul")).hide();
            if (!z) {
                D.preventDefault();
                return false
            }
            var C = E.find("> ul");
            if (C.length != 0) {
                var w = E.offset();
                var v = b((w.left + E.parent().width() + c[r].submenuLeftOffset + C.width() + c[r].widthOverflowOffset), (w.top + c[r].submenuTopOffset + C.height() + c[r].heightOverflowOffset));
                var H = C.parent().parent().width();
                var G = w.top - E.parent().offset().top;
                C.css({
                    left: (v.width > 0 && !c[r].ignoreWidthOverflow) ? (-H - c[r].submenuLeftOffset + "px") : (H + c[r].submenuLeftOffset + "px"),
                    top: (v.height > 0 && !c[r].ignoreHeightOverflow) ? (G - v.height + c[r].submenuTopOffset) + "px" : G + c[r].submenuTopOffset + "px"
                });
                C.fadeIn(c[r].fadeIn)
            }
            D.stopPropagation()
        })[c[r].livequery ? "livequery" : "bind"]("click.jeegoocontext", function(u) {
            if (c[r].onSelect) {
                if (c[r].onSelect.apply(this, [u, c[r].context]) == false) {
                    return false
                }
            }
            h();
            f(c[r].context).removeClass(m.activeClass);
            u.stopPropagation()
        });
        var q = document.createElement("div");
        q.setAttribute("oncontextmenu", "");
        var o = c[r].event;
        if (!o) {
            o = (typeof q.oncontextmenu != "undefined") ? "contextmenu.jeegoocontext" : c[r].operaEvent + ".jeegoocontext"
        } else {
            o += ".jeegoocontext"
        }
        if (o.indexOf("+") != -1) {
            var p = o.split("+", 2);
            c[r].modifier = p[0] + "Key";
            o = p[1]
        }
        return this[c[r].livequery ? "livequery" : "bind"](o, function(C) {
            if (typeof c[r].modifier == "string" && !C[c[r].modifier]) {
                return
            }
            c[r].context = this;
            var z = f("#" + r);
            var w, v;
            if (c[r].openBelowContext) {
                var u = f(this).offset();
                w = u.left;
                v = u.top + f(this).outerHeight()
            } else {
                w = C.pageX;
                v = C.pageY
            }
            w += c[r].startLeftOffset;
            v += c[r].startTopOffset;
            var D = b((w + z.width() + c[r].widthOverflowOffset), (v + z.height() + c[r].heightOverflowOffset));
            if (!c[r].ignoreWidthOverflow && D.width > 0) {
                w -= D.width
            }
            if (!c[r].openBelowContext && !c[r].ignoreHeightOverflow && D.height > 0) {
                v -= D.height
            }
            if (c[r].onShow) {
                if (c[r].onShow.apply(z, [C, c[r].context, w, v]) == false) {
                    return false
                }
            }
            h();
            m.activeId = r;
            f("#" + m.activeId).add("#" + m.activeId + " ul").hide();
            g();
            f(c[r].context).addClass(m.activeClass);
            z.find("li, li > *").removeClass(c[r].hoverClass);
            if (c[r].autoAddSubmenuArrows) {
                z.find("li:has(ul)").not(":has(span." + c[r].submenuClass + ")").prepend('<span class="' + c[r].submenuClass + '"></span>');
                z.find("li").not(":has(ul)").find("> span." + c[r].submenuClass).remove()
            }
            z.css({
                left: w + "px",
                top: v + "px"
            }).fadeIn(c[r].fadeIn);
            if (c[r].openBelowContext) {
                f(window).bind("resize.jeegoocontext", function() {
                    f("#" + r).css("left", f(c[r].context).offset().left + c[r].startLeftOffset + "px")
                })
            }
            f(document).bind("mouseover.jeegoocontext", function(E) {
                if (f(E.relatedTarget).parents("#" + r).length > 0) {
                    clearTimeout(c[r].show);
                    var G = f(E.relatedTarget).parent().find("li");
                    G.add(G.find("> *")).removeClass(c[r].hoverClass);
                    c[m.activeId].currentHover = null;
                    c[r].hide = setTimeout(function() {
                        G.find("ul").hide();
                        if (c[r].autoHide) {
                            e(E)
                        }
                    }, c[r].delay)
                }
            }).bind("click.jeegoocontext", e);
            if (c[r].keyboard) {
                f(document).bind("keydown.jeegoocontext", function(H) {
                    switch (H.which) {
                        case 38:
                            if (m.keyUpDownStop) {
                                return false
                            }
                            d();
                            m.keyUpDown = setInterval(d, c[m.activeId].keyDelay);
                            m.keyUpDownStop = true;
                            return false;
                        case 39:
                            if (c[m.activeId].currentHover) {
                                c[m.activeId].currentHover.find("ul:visible:first li:visible:first").mouseover()
                            } else {
                                var G = f("#" + m.activeId + ", #" + m.activeId + " ul:visible");
                                if (G.length > 0) {
                                    f(G[G.length - 1]).find(":visible:first").mouseover()
                                }
                            }
                            return false;
                        case 40:
                            if (m.keyUpDownStop) {
                                return false
                            }
                            d(true);
                            m.keyUpDown = setInterval(function() {
                                d(true)
                            }, c[m.activeId].keyDelay);
                            m.keyUpDownStop = true;
                            return false;
                        case 37:
                            if (c[m.activeId].currentHover) {
                                f(c[m.activeId].currentHover.parents("li")[0]).mouseover()
                            } else {
                                var E = f("#" + m.activeId + " li." + c[m.activeId].hoverClass);
                                if (E.length > 0) {
                                    f(E[E.length - 1]).mouseover()
                                }
                            }
                            return false;
                        case 13:
                            if (c[m.activeId].currentHover) {
                                c[m.activeId].currentHover.click()
                            } else {
                                e(H)
                            }
                            break;
                        case 27:
                            e(H);
                            break;
                        default:
                            break
                    }
                }).bind("keyup.jeegoocontext", function(E) {
                    clearInterval(m.keyUpDown);
                    m.keyUpDownStop = false
                })
            }
            return false
        })
    };
    f.fn.nojeegoocontext = function() {
        this.unbind(".jeegoocontext")
    }
})(jQuery);

function get_cc_mat_rdv_logo(c, b) {
    if ((c != null) || (b != null)) {
        if ((c == 1) && (b == 1)) {
            return "blanc.gif"
        }
        if ((c == 1) && (b == 0)) {
            return "blanc_noir.gif"
        }
        if ((c == 1) && (b == null)) {
            return "blanc_bleu.gif"
        }
        if ((c == 0) && (b == 1)) {
            return "noir_blanc.gif"
        }
        if ((c == 0) && (b == 0)) {
            return "noir.gif"
        }
        if ((c == 0) && (b == null)) {
            return "noir_bleu.gif"
        }
        if ((c == null) && (b == 0)) {
            return "bleu_noir.gif"
        }
        if ((c == null) && (b == 1)) {
            return "bleu_blanc.gif"
        }
        if ((c == 2) && (b == 1)) {
            return "vert_blanc.gif"
        }
        if ((c == 2) && (b == 0)) {
            return "vert_noir.gif"
        }
        if ((c == 2) && (b == null)) {
            return "vert_bleu.gif"
        }
        if ((c == 3) && (b == 1)) {
            return "rouge_blanc.gif"
        }
        if ((c == 3) && (b == 0)) {
            return "rouge_noir.gif"
        }
        if ((c == 3) && (b == null)) {
            return "rouge_bleu.gif"
        }
    } else {
        return ""
    }
}

function dt_ccTable_row_cb(f, q, h, z) {
    var T = this.fnSettings().aoColumns;
    if (q.id_inter) {
        var m = $.grep(T, function(aa) {
            return aa.mDataProp == "id_inter"
        })[0].nTh.cellIndex;
        var I = "";
        if (q.logo) {
            I += "<img src='/var/themes/default/logos/" + q.logo + "' style='vertical-align:middle'/>"
        }
        if (q.MATERIEL_OK || q.RDV_OK) {
            var v = get_cc_mat_rdv_logo(q.MATERIEL_OK, q.RDV);
            if (v != "") {
                I += "<img src='/var/themes/default/logos/" + v + "' style='vertical-align:middle'/>"
            }
        }
        I += "&nbsp;";
        var E = '<a href="#" class="cc_show_inter" data-id_client="' + q.id_client + '" data-id_inter="' + q.id_inter + '" style="text-decoration: underline;">' + I + q.id_inter + "</a>";
        var p = "";
        if (q.cancelled && parseInt(q.cancelled) == 1) {
            p = "#BDBDBD"
        } else {
            switch (parseInt(q.etat)) {
                case 0:
                    p = "#FFCF52";
                    break;
                case 1:
                    p = "#F8DAF8";
                    break;
                case 2:
                    p = "#81DAF5";
                    break;
                case 3:
                    p = "#A4FFA8";
                    break;
                case 4:
                    p = "#FC8A8A";
                    break;
                case 7:
                    p = "#E2A9F3";
                    break;
                case 29:
                    p = "#FFEC52";
                    break;
                default:
                    p = "#FFFFFF"
            }
        }
        $("td:eq(" + m + ")", f).attr("style", "background: " + p + " !important;").html(E);
        if (q.etat_name) {
            var X = $.grep(T, function(aa) {
                return aa.mDataProp == "etat_name"
            })[0].nTh.cellIndex;
            $("td:eq(" + X + ")", f).attr("style", "background: " + p + " !important;")
        }
    }
    if (q.qacode) {
        var r = $.grep(T, function(aa) {
            return aa.mDataProp == "qacode"
        })[0].nTh.cellIndex;
        $("td:eq(" + r + ")", f).html(q.qacode.replace(/;/g, " ").trim())
    }
    if (q.TAT) {
        var g = $.grep(T, function(aa) {
            return aa.mDataProp == "TAT"
        })[0].nTh.cellIndex;
        $("td:eq(" + g + ")", f).css("cursor", "help").tooltip({
            bodyHandler: function() {
                return "<span class=''>" + q.TAT_range + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.IDLE) {
        var c = $.grep(T, function(aa) {
            return aa.mDataProp == "IDLE"
        })[0].nTh.cellIndex;
        $("td:eq(" + c + ")", f).css("cursor", "help").tooltip({
            bodyHandler: function() {
                return "<span class=''>" + q.IDLE_range + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.title) {
        var Y = $.grep(T, function(aa) {
            return aa.mDataProp == "title"
        })[0].nTh.cellIndex;
        $("td:eq(" + Y + ")", f).html(q.title).css({
            cursor: "help",
            "text-overflow": "ellipsis",
            overflow: "hidden",
            "white-space": "nowrap",
            "max-width": "200px"
        }).tooltip({
            bodyHandler: function() {
                return "<span class=''>" + q.title + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.auto) {
        var d = $.grep(T, function(aa) {
            return aa.mDataProp == "checkbox"
        })[0].nTh.cellIndex;
        $("td:eq(" + d + ")", f).tooltip({
            bodyHandler: function() {
                return "<span class=''>" + q.auto + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.tech) {
        var u = $.grep(T, function(aa) {
            return aa.mDataProp == "tech"
        })[0].nTh.cellIndex;
        $("td:eq(" + u + ")", f).html(q.tech).css({
            cursor: "help",
            "text-overflow": "ellipsis",
            overflow: "hidden",
            "white-space": "nowrap",
            "max-width": "50px"
        }).tooltip({
            bodyHandler: function() {
                return "<span class=''>" + q.tech + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.last_subcase) {
        var w = $.grep(T, function(aa) {
            return aa.mDataProp == "last_subcase"
        })[0].nTh.cellIndex;
        var E = '<a href="#" class="cc_show_inter" data-id_client="' + q.rerepair_id_client + '" data-id_inter="' + q.rerepair_id_inter + '" style="text-decoration: underline;">' + q.last_subcase + "</a>";
        var e = (q.rework ? q.rework : "");
        var O = (q.snic90d ? "<br>SNIC:" + q.snic90d : "");
        var C = "";
        switch (parseInt(q.snic90d)) {
            case 0:
                break;
            case 1:
                C = "lemonchiffon";
                break;
            case 2:
                C = "gold";
                break;
            default:
                C = "salmon"
        }
        $("td:eq(" + w + ")", f).html(E).css({
            background: C,
            cursor: "help"
        }).tooltip({
            bodyHandler: function() {
                return "<span class=''>" + e + O + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.product_type) {
        var D = $.grep(T, function(aa) {
            return aa.mDataProp == "product_type"
        })[0].nTh.cellIndex;
        $("td:eq(" + D + ")", f).html('<span class="edit_product_type" style="border-bottom: dashed 1px #069;color: #069;cursor: pointer;" data-id="' + q.product_id + '">&nbsp;' + q.product_type + "&nbsp;</span>");
        var L = $.grep(T, function(aa) {
            return aa.mDataProp == "product_line"
        })[0].nTh.cellIndex;
        $("td:eq(" + L + ")", f).html('<span class="edit_product_line" style="border-bottom: dashed 1px #069;color: #069;cursor: pointer;" data-id="' + q.product_id + '">&nbsp;' + (q.product_line != "" ? q.product_line : "[...]") + "&nbsp;</span>")
    }
    if (q.anomaly) {
        var K = $.grep(T, function(aa) {
            return aa.mDataProp == "anomaly"
        })[0].nTh.cellIndex;
        if (q.anomaly_color) {
            $("td:eq(" + K + ")", f).css({
                background: q.anomaly_color,
                "font-variant": "small-caps",
                "text-overflow": "ellipsis",
                overflow: "hidden",
                "white-space": "nowrap",
                "max-width": "200px"
            }).tooltip({
                bodyHandler: function() {
                    return "<span class=''>" + q.anomaly + "</span>"
                },
                track: true,
                delay: 0,
                showURL: false,
                fade: 250
            })
        } else {
            $("td:eq(" + K + ")", f).css({
                "font-weight": "bold",
                "font-variant": "small-caps",
                "text-overflow": "ellipsis",
                overflow: "hidden",
                "white-space": "nowrap",
                "max-width": "200px"
            }).tooltip({
                bodyHandler: function() {
                    return "<span class=''>" + q.anomaly + "</span>"
                },
                track: true,
                delay: 0,
                showURL: false,
                fade: 250
            })
        }
    }
    if (q.iwcase) {
        var V = $.grep(T, function(aa) {
            return aa.mDataProp == "iwcase"
        })[0].nTh.cellIndex;
        $("td:eq(" + V + ")", f).css({
            background: "gold"
        })
    }
    if (q.messagetype) {
        var n = $.grep(T, function(aa) {
            return aa.mDataProp == "messagetype"
        })[0].nTh.cellIndex;
        if (q.incoming) {
            if (q.incoming == "1") {
                $("td:eq(" + n + ")", f).html('<i style="color: gray" class="fa fa-arrow-left"></i>&nbsp;' + q.messagetype)
            } else {
                $("td:eq(" + n + ")", f).html('<i style="color: blue" class="fa fa-arrow-right"></i>&nbsp;' + q.messagetype)
            }
        } else {
            $("td:eq(" + n + ")", f).html(q.messagetype)
        }
        $("td:eq(" + n + ")", f).css({
            background: "rgba(192, 192, 192, 0.2)"
        })
    }
    if (q.end_sla_current) {
        var U = $.grep(T, function(aa) {
            return aa.mDataProp == "end_sla_current"
        })[0].nTh.cellIndex;
        var o = parseInt(new Date() - stringToDate(q.end_sla_current));
        var Q = '<i class="fa fa-circle-o text-green" style="color: green"></i>';
        var S = "";
        if (o > 0) {
            Q = '<i class="fa fa-circle text-red" style="color: red"></i>';
            S = "<br><i>Out of SLA</i>"
        } else {
            if (o > -28800000) {
                Q = '<i class="fa fa-circle text-yellow" style="color: orange"></i>';
                S = "<br><i>Close to SLA</i>"
            }
        }
        $("td:eq(" + U + ")", f).html(Q + "&nbsp;" + q.end_sla_current.substring(0, 16)).tooltip({
            bodyHandler: function() {
                return "<span class=''><strong>" + q.end_sla_current + "</strong><br>" + S + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.sla_s30_inc) {
        var U = $.grep(T, function(aa) {
            return aa.mDataProp == "sla_s30_inc"
        })[0].nTh.cellIndex;
        var o = parseInt(new Date() - stringToDate(q.sla_s30_inc));
        var Q = '<i class="fa fa-circle-o text-green" style="color: green"></i>';
        var S = "";
        if (o > 0) {
            Q = '<i class="fa fa-circle text-red" style="color: red"></i>';
            S = "<br><i>Out of SLA</i>"
        } else {
            if (o > -28800000) {
                Q = '<i class="fa fa-circle text-yellow" style="color: orange"></i>';
                S = "<br><i>Close to SLA</i>"
            }
        }
        $("td:eq(" + U + ")", f).html(Q + "&nbsp;" + q.sla_s30_inc.substring(0, 10)).tooltip({
            bodyHandler: function() {
                return "<span class=''><strong>" + q.sla_s30_inc + "</strong><br>" + S + "</span>"
            },
            track: true,
            delay: 0,
            showURL: false,
            fade: 250
        })
    }
    if (q.sla_class) {
        var R = $.grep(T, function(aa) {
            return aa.mDataProp == "sla_class"
        })[0].nTh.cellIndex;
        if (q.sla_class.startsWith("H")) {
            $("td:eq(" + R + ")", f).attr("style", "font-weight: bold !important;")
        }
    }
    if (q.reinter) {
        var P = $.grep(T, function(aa) {
            return aa.mDataProp == "reinter"
        })[0].nTh.cellIndex;
        if (parseInt(q.reinter) > 0) {
            $("td:eq(" + P + ")", f).attr("style", "color: red; font-weight: bold !important;")
        }
    }
    if (q.date_inter) {
        var Z = $.grep(T, function(aa) {
            return aa.mDataProp == "date_inter"
        })[0].nTh.cellIndex;
        var G = "";
        if (q.sla_s30_inc) {
            var M = parseInt(stringToDate(q.date_inter) - stringToDate(q.sla_s30_inc));
            if (M > 0) {
                $("td:eq(" + Z + ")", f).attr("style", "color: red; font-weight: bold !important;");
                G = "color: red;"
            } else {
                if (M > -7200000) {
                    $("td:eq(" + Z + ")", f).attr("style", "font-weight: bold !important;")
                }
            }
        } else {
            if (q.end_sla_current) {
                var M = parseInt(stringToDate(q.date_inter) - stringToDate(q.end_sla_current));
                if (M > 0) {
                    $("td:eq(" + Z + ")", f).attr("style", "color: red; font-weight: bold !important;");
                    G = "color: red;"
                } else {
                    if (M > -7200000) {
                        $("td:eq(" + Z + ")", f).attr("style", "font-weight: bold !important;")
                    }
                }
            }
        }
        if (q.id_inter) {
            var E = '<a href="#" onclick="GoToAgency(' + q.id_inter + ');" style="text-decoration: underline;' + G + 'white-space: pre-wrap;">' + q.date_inter.substring(0, 16) + "</a>";
            $("td:eq(" + Z + ")", f).html(E)
        } else {
            $("td:eq(" + Z + ")", f).html(q.date_inter.substring(0, 16))
        }
    }
    if (q.inter_start) {
        var J = $.grep(T, function(aa) {
            return aa.mDataProp == "inter_start"
        })[0].nTh.cellIndex;
        var G = "";
        if (q.end_sla_current) {
            var M = parseInt(stringToDate(q.inter_start) - stringToDate(q.end_sla_current));
            if (M > 0) {
                $("td:eq(" + J + ")", f).attr("style", "color: red; font-weight: bold !important;");
                G = "color: red;"
            } else {
                if (M > -7200000) {
                    $("td:eq(" + J + ")", f).attr("style", "font-weight: bold !important;")
                }
            }
        }
        $("td:eq(" + J + ")", f).html(q.inter_start.substring(0, 16))
    }
    if (q.inter_end) {
        var N = $.grep(T, function(aa) {
            return aa.mDataProp == "inter_end"
        })[0].nTh.cellIndex;
        var G = "";
        if (q.end_sla_current) {
            var M = parseInt(stringToDate(q.inter_end) - stringToDate(q.end_sla_current));
            if (M > 0) {
                $("td:eq(" + N + ")", f).attr("style", "color: red; font-weight: bold !important;");
                G = "color: red;"
            } else {
                if (M > -7200000) {
                    $("td:eq(" + N + ")", f).attr("style", "font-weight: bold !important;")
                }
            }
        }
        $("td:eq(" + N + ")", f).html(q.inter_end.substring(0, 16))
    }
    if (q.sn) {
        var H = $.grep(T, function(aa) {
            return aa.mDataProp == "sn"
        })[0].nTh.cellIndex;
        var E = '<a href="#" onclick="find_CC_SN(\'' + q.sn + '\');" style="text-decoration: underline;white-space: pre-wrap;">' + q.sn + "</a>";
        $("td:eq(" + H + ")", f).html(E)
    }
    if (q.si_creation) {
        var b = $.grep(T, function(aa) {
            return aa.mDataProp == "si_creation"
        })[0].nTh.cellIndex;
        $("td:eq(" + b + ")", f).html(q.si_creation.substring(0, 16))
    }
    if (q.grade) {
        $(f).addClass(q.grade)
    }
    return f
}

function dt_ccTable_draw_cb(oSettings) {
    if (oSettings.aiDisplay.length == 0) {
        return
    }
    var nTrs = $("tbody tr", "#" + oSettings.sTableId);
    var iColspan = nTrs[0].getElementsByTagName("td").length;
    var sLastGroup = "";
    var oLastCell = "";
    var count = 0;
    var count2 = 0;
    if (oSettings.aaSortingFixed) {
        for (var i = oSettings._iDisplayStart; i <= oSettings._iDisplayEnd - 1; i++) {
            try {
                var iDisplayIndex = oSettings.aiDisplay[i];
                var iTrIndex = i - oSettings._iDisplayStart;
                var iGroup = oSettings.aaSortingFixed[0][0];
                var sGroup = "";
                switch (oSettings.aoColumns[oSettings.aaSortingFixed[0][0]].mDataProp) {
                    case "timestamp":
                    case "date_only":
                    case "dateonly":
                    case "creationdate":
                    case "date_creation":
                    case "inter_date":
                    case "ev_dateonly":
                        var t = oSettings.aoData[iDisplayIndex]._aData[oSettings.aoColumns[oSettings.aaSortingFixed[0][0]].mDataProp].split(/[- :]/);
                        var d = new Date(t[0], t[1] - 1, t[2], 0, 0, 0);
                        var d_options = {
                            weekday: "long",
                            year: "numeric",
                            month: "short",
                            day: "numeric"
                        };
                        sGroup = d.toLocaleDateString(window.navigator.language, d_options);
                        break;
                    case "prodtype_id":
                        sGroup = oSettings.aoData[iDisplayIndex]._aData.product_type;
                        break;
                    default:
                        sGroup = oSettings.aoData[iDisplayIndex]._aData[oSettings.aoColumns[oSettings.aaSortingFixed[0][0]].mDataProp]
                }
                var iQt = 1;
                if (sGroup != sLastGroup) {
                    var nGroup = document.createElement("tr");
                    var nCell = document.createElement("td");
                    nCell.colSpan = iColspan;
                    nGroup.className = "group " + oSettings.sTableId;
                    nCell.className = "group " + oSettings.sTableId;
                    var has_ck = $.grep(oSettings.aoColumns, function(e) {
                        return e.mDataProp == "checkbox"
                    }).length;
                    if ((iGroup.length > 0 || parseInt(iGroup) > 0) && has_ck) {
                        nCell.innerHTML = '<span class="group ' + oSettings.sTableId + '" style="cursor: pointer; vertical-align: middle;"><i class="fa fa-sort fa-lg"></i>&nbsp;<b>' + sGroup + '</b></span><input type="checkbox" class="cc_ck_group" style="vertical-align: sub;" data-' + oSettings.aoColumns[oSettings.aaSortingFixed[0][0]].mDataProp + '="' + oSettings.aoData[iDisplayIndex]._aData[oSettings.aoColumns[oSettings.aaSortingFixed[0][0]].mDataProp] + '" align=right/>'
                    } else {
                        nCell.innerHTML = '<span class="group ' + oSettings.sTableId + '" style="cursor: pointer; vertical-align: middle;"><i class="fa fa-sort fa-lg"></i>&nbsp;<b>' + sGroup + "</b></span>"
                    }
                    nGroup.appendChild(nCell);
                    nTrs[iTrIndex].parentNode.insertBefore(nGroup, nTrs[iTrIndex]);
                    sLastGroup = sGroup;
                    if (oLastCell != "") {
                        oLastCell.innerHTML += " (<i>" + count + " " + lang_stk_displayed_items + ")</i>";
                        if (count != count2) {
                            oLastCell.innerHTML += " [<i>" + count2 + " " + lang_stk_total_displayed + "]</i>"
                        }
                    }
                    oLastCell = nCell;
                    count = 0;
                    count2 = 0
                }
                count += 1;
                count2 += iQt
            } catch (err) {}
        }
        if (oLastCell != "") {
            oLastCell.innerHTML += " (<i>" + count + " " + lang_stk_displayed_items + ")</i>";
            if (count != count2) {
                oLastCell.innerHTML += " [<i>" + count2 + " " + lang_stk_total_displayed + "]</i>"
            }
        }
    }
    if (oSettings.aiDisplay.length > 0) {
        if (oSettings.aiDisplay.length != oSettings.aiDisplayMaster.length) {
            $.jGrowl("<br><b>" + oSettings.aiDisplay.length + " items</b> out of " + oSettings.aiDisplayMaster.length + ".", {
                glue: "before",
                life: 750,
                header: $("#" + oSettings.sTableId).data("title")
            })
        } else {
            if (oSettings.sTableId == "ccTable" || oSettings.sTableId == "ccMessages" || oSettings.sTableId == "ccTools" || oSettings.sTableId == "ccParts" || oSettings.sTableId == "ccAnomalies" || oSettings.sTableId == "ccFind") {
                $.jGrowl("<br><b>" + oSettings.aiDisplay.length + " items</b>.<hr>" + this.fnPagingInfo().iTotalPages + " " + lang_stk_pages_of + " " + this.fnPagingInfo().iLength + " " + lang_stk_items + ".", {
                    glue: "before",
                    life: 750,
                    header: $("#" + oSettings.sTableId).data("title")
                })
            }
        }
    }
    $("img.tdopen." + oSettings.sTableId, "#" + oSettings.sTableId).css("cursor", "pointer");
    $("i.tdopen." + oSettings.sTableId, "#" + oSettings.sTableId).css({
        cursor: "pointer",
        "font-size": "larger"
    });
    var opts_machine_types = getSelectOptions("machine_types");
    $(".edit_product_type", "#" + oSettings.sTableId).editable(function(value, settings) {
        var nTr = $(this).parents("tr")[0];
        var oDT = oSettings.oInstance;
        var value_name = "";
        eval("var json_settings = " + settings.data);
        for (var key in json_settings) {
            if (key == value) {
                value_name = json_settings[key];
                break
            }
        }
        var aoCols = oSettings.aoColumns;
        var destCol = $.grep(aoCols, function(e) {
            return e.mDataProp == "product_type"
        })[0].aTargets[0];
        var destCol2 = $.grep(aoCols, function(e) {
            return e.mDataProp == "prodtype_id"
        })[0].aTargets[0];
        var myval = '<span class="edit_product_type" style="border-bottom: dashed 1px #069;color: #069;cursor: pointer;" data-id="' + $(this).data("id") + '">&nbsp;' + value_name + "&nbsp;</span>";
        oDT.fnUpdate(value_name, nTr, destCol, false, false);
        oDT.fnUpdate(value, nTr, destCol2);
        blockAllUI();
        $.post("/EDI/cc/update_product_type", {
            type: value,
            id: $(this).data("id")
        }, function(ret) {
            UNblockAllUI()
        });
        return (myval)
    }, {
        data: JSON.stringify(opts_machine_types),
        id: $(this).data("id"),
        tooltip: "Click to change product type...",
        type: "select",
        submit: "OK",
        sortselect: "text"
    });
    var opts_product_lines = getSelectOptions("cc_product_lines");
    $(".edit_product_line", "#" + oSettings.sTableId).editable(function(value, settings) {
        var nTr = $(this).parents("tr")[0];
        var oDT = oSettings.oInstance;
        var aoCols = oSettings.aoColumns;
        var destCol = $.grep(aoCols, function(e) {
            return e.mDataProp == "product_line"
        })[0].aTargets[0];
        var myval = '<span class="edit_product_line" style="border-bottom: dashed 1px #069;color: #069;cursor: pointer;" data-id="' + $(this).data("id") + '">&nbsp;' + value + "&nbsp;</span>";
        oDT.fnUpdate(value, nTr, destCol);
        blockAllUI();
        $.post("/EDI/cc/update_product_line", {
            line: value,
            id: $(this).data("id")
        }, function(ret) {
            UNblockAllUI()
        });
        return (myval)
    }, {
        data: JSON.stringify(opts_product_lines),
        id: $(this).data("id"),
        tooltip: "Click to change product line...",
        type: "select",
        submit: "OK"
    })
}

function dt_ccTable_init_cb(c, b) {
    $("#" + c.sTableId + "_wrapper").css("padding-bottom", "25px");
    cc_init_events(c.sTableId, c.oInstance)
}

function generate_columns_cc(c, e) {
    var f = [];
    var d = 0;
    var h = "";
    var g = "";

    function b(m) {
        if (h == e && e != "messagetype") {
            f.push({
                sTitle: m,
                bSortable: true,
                bSearchable: true,
                bSmart: false,
                bRegex: true,
                bVisible: false,
                mDataProp: h,
                aTargets: [d]
            })
        } else {
            f.push({
                sTitle: m,
                bSortable: true,
                bSearchable: true,
                bSmart: false,
                bRegex: true,
                bVisible: true,
                mDataProp: h,
                aTargets: [d]
            })
        }
    }
    $("th", "#" + c).each(function() {
        h = $(this).text();
        g = h;
        switch (h) {
            case "minus":
                f.push({
                    sTitle: "#",
                    sClass: "center",
                    sWidth: "15px",
                    bSortable: false,
                    bSearchable: false,
                    mDataProp: h,
                    fnRender: function(m) {
                        return '<i class="fa fa-plus-square tdopen ' + c + '"></i>'
                    },
                    aTargets: [d]
                });
                break;
            case "checkbox":
                f.push({
                    sTitle: " x",
                    sClass: "center",
                    sWidth: "10px",
                    bSortable: true,
                    bVisible: true,
                    mDataProp: h,
                    sDefaultContent: "",
                    fnRender: function(m) {
                        var n = m.aData;
                        if (n.auto) {
                            if (n.auto == "Yes") {
                                return '<input type="checkbox" class="cc_ck" data-' + e + '="' + m.aData[e] + '" />'
                            } else {
                                return '<input type="checkbox" disabled class="cc_ck" data-' + e + '="' + m.aData[e] + '" />'
                            }
                        } else {
                            return '<input type="checkbox" class="cc_ck" data-' + e + '="' + m.aData[e] + '" />'
                        }
                    },
                    aTargets: [d]
                });
                break;
            case "id_inter":
                b("PC30");
                break;
            case "task_ref":
                b("TASK");
                break;
            case "main_company":
                b("COMPANY");
                break;
            case "incident_ref":
                b("INCIDENT");
                break;
            case "title":
                b("INTER");
                break;
            case "ref_partenaire":
                b("RMA");
                break;
            case "partenaire":
            case "partner":
                b("Partner");
                break;
            case "part":
                b("Part");
                break;
            case "etat_name":
                b("S30 State");
                break;
            case "currentstatus":
                b("CC State");
                break;
            case "sn":
                b("S/N");
                break;
            case "reinter":
                b("RW");
                break;
            case "sla_class":
                b("SLA");
                break;
            case "sla_s30_inc":
                b("SLA S30");
                break;
            case "label":
            case "sla":
                b("Model");
                break;
            case "end_sla_current":
                b("SLA CC");
                break;
            case "date_inter":
                b("Planning");
                break;
            case "inter_start":
                b("Start");
                break;
            case "inter_end":
                b("End");
                break;
            case "queue":
                b("Queue");
                break;
            case "anomaly":
                b("Anomaly");
                break;
            case "anomaly_state":
                b("State");
                break;
            case "anomaly_comment":
                b("Comment");
                break;
            case "iwcase":
                b("IW Case");
                break;
            case "si_creation":
                b("Created");
                break;
            case "country":
                b("Country");
                break;
            case "subcountry":
                b("CT");
                break;
            case "TN":
                b("Tracking");
                break;
            case "TAT":
                b("TAT");
                break;
            case "IDLE":
                b("Idle");
                break;
            case "relog":
                b("Relog");
                break;
            case "operator":
                b("User");
                break;
            case "messagetype":
                b("Type");
                break;
            case "message":
                b("Message");
                break;
            case "product_number":
            case "product_name":
            case "product_type":
            case "product_model":
            case "product_family":
            case "product_line":
            case "product_segment":
                b(h.replace("product_", "").toUpperCase());
                break;
            case "part_number":
            case "part_description":
            case "part_usage":
                b(h.replace("part_", "").toUpperCase());
                break;
            case "inter_date":
                b("Inter D/T");
                break;
            case "ev_timestamp":
                b("Event D/T");
                break;
            case "delay_reason":
                b("Delay");
                break;
            case "tech":
                b("Technician");
                break;
            case "totalPGLDuration":
                b("PGL");
                break;
            case "synched":
                b("Sync");
                break;
            case "manual_reason":
                b("Manual");
                break;
            case "last_error":
                b("Last Error");
                break;
            case "sub":
                b("Sub");
                break;
            case "calls":
                b("Calls");
                break;
            case "ints":
                b("Ints");
                break;
            case "synched_datetime":
                b("Sync D/T");
                break;
            case "last_subcase":
                b("Last");
                break;
            case "repair":
                b("DC/RC");
                break;
            case "logo":
            case "logo_petit":
            case "color":
            case "done":
            case "grade":
            case "service_incident_id":
                f.push({
                    sTitle: h,
                    bSortable: false,
                    bVisible: false,
                    bSearchable: false,
                    mDataProp: h,
                    aTargets: [d]
                });
                break;
            default:
                f.push({
                    sTitle: h,
                    bSortable: true,
                    bVisible: false,
                    bSearchable: false,
                    mDataProp: h,
                    aTargets: [d]
                })
        }
        d += 1
    });
    return f
}

function cc_init_events(f, c) {
    $("i.tdopen." + f, "#" + f).die("click").live("click", function(o) {
        var q = $(this).closest("tr")[0];
        if (o.ctrlKey) {
            $("td.details", "#" + f).each(function() {
                var e = $(this).parent("tr").prev();
                $("td:eq(0)", e).dblclick()
            })
        } else {
            var p = $(this).hasClass("fa-plus-square");
            if (p) {
                $(this).removeClass("fa-plus-square");
                $(this).addClass("fa-minus-square-o");
                c.fnOpen(q, dt_ccTable_details(c, q), "details")
            } else {
                $(this).removeClass("fa-minus-square-o");
                $(this).addClass("fa-plus-square");
                c.fnClose(q)
            }
        }
    });
    $("tr.tr_" + f + ">td", "#" + f).die("dblclick").live("dblclick", function(p) {
        p.preventDefault();
        var r = $(this).closest("tr")[0];
        if ($("td.center>i", r).length) {
            if (p.ctrlKey) {
                $("td.details", "#" + f).each(function() {
                    var e = $(this).parent("tr").prev();
                    $("td:eq(0)", e).dblclick()
                })
            } else {
                var o = $("i:first", r);
                var q = o.hasClass("fa-plus-square");
                if (q) {
                    o.removeClass("fa-plus-square");
                    o.addClass("fa-minus-square-o");
                    c.fnOpen(r, dt_ccTable_details(c, r), "details")
                } else {
                    o.removeClass("fa-minus-square-o");
                    o.addClass("fa-plus-square");
                    c.fnClose(r)
                }
            }
        }
    });
    $("tr.group." + f, "#" + f).die("dblclick").live("dblclick", function(p) {
        var o = $(p.currentTarget).nextUntil("tr.group");
        o.toggle()
    });
    $("span.group." + f, "#" + f).die("click").live("click", function(o) {
        $(this).parents("tr.group:first").dblclick()
    });
    var b = "StickMeNot";
    if (typeof(localStorage) !== "undefined") {
        if (localStorage.enable_stick === "false") {
            $(".StickMe:not(label)").css({
                "z-index": "10"
            }).stickyScroll("clear")
        } else {
            if (f == "ccTable" || f == "ccMessages" || f == "ccTools" || f == "ccParts" || f == "ccAnomalies" || f == "ccFind") {
                b = "StickMe"
            }
        }
    }
    $("#" + f + "_wrapper div.top").append('<div class="' + b + '" style="float: right"></div>').append('<div class="' + b + '" style="float: left">' + dt_create_display_length(f, c.fnSettings()._iDisplayLength) + "</div>").append('<div style="overflow: hidden;text-align: center;padding-top: 3px;font-weight: bold;font-variant: small-caps;text-shadow:-1px -1px 0 yellow ,1px -1px 0 yellow ,-1px 1px 0 yellow ,1px 1px 0 yellow">' + $("#" + f).attr("data-title") + "<span></span></div>");
    $("#" + f + "_wrapper div.top>div." + b + ":first").append(dt_create_filter_select(c, "part_usage", "All Usages")).append(dt_create_filter_select(c, "product_type", "All types")).append(dt_create_filter_select(c, "anomaly", "All Anomaly Types")).append(dt_create_filter_select(c, "messagetype", "All Messages")).append(dt_create_filter_select(c, "operator", "All Users")).append(dt_create_filter_select(c, "currentstatus", "All CC Status")).append(dt_create_filter_select(c, "partner", "All Partners")).append(dt_create_filter_select(c, "main_company", "All Companies")).append(dt_create_filter_select(c, "queue", "All Queues")).append(dt_create_filter_select(c, "etat_name", "All S30 States")).append(dt_create_filter_select(c, "tech", "All Technicians")).append(dt_create_filter_select(c, "delay_reason", "All Delays")).append(dt_create_filter_select(c, "anomaly_state", "All Anomalies")).append(dt_create_filter_select(c, "label", "All Models")).append(dt_create_filter_select(c, "reason", "All Reasons")).append(dt_create_filter_select(c, "DropLocation", "All DropPoints")).append(dt_create_filter_select(c, "totalPGLDuration", "All PGL")).append(dt_create_filter_select(c, "sla_class", "All SLA classes")).append(dt_create_filter_select(c, "reinter", "All Rework")).append(dt_create_filter_select(c, "checkbox", "Show ALL")).append('<input type="text" style="border: 1px solid black; " size="30" placeholder="Search in results" value="" />').append('<button type="button" class="cc_memory_new_' + f + ' cc_button2"><i class="fa fa-clipboard"></i> <small>' + lang_stk_copy_for_excel + "</small></button>");
    $("select, input, button", "#" + f + "_wrapper div.top>div." + b).css({
        "box-shadow": "1px 1px 4px #555",
        "font-size": "smaller",
        "margin-right": "5px",
        width: "auto"
    });
    $("select", "#" + f + "_wrapper div.top>div." + b).resizeselect();
    $("label", "#" + f + "_wrapper div.top>div").css({
        "float": "initial",
        "font-size": "smaller",
        color: "black",
        "text-shadow": "-1px -1px 0 #FFF ,1px -1px 0 #FFF ,-1px 1px 0 #FFF ,1px 1px 0 #FFF"
    });
    if (b == "StickMe") {
        $(".StickMe:not(label)").css({
            "z-index": "10"
        }).stickyScroll("clear").stickyScroll({
            container: $("#" + f + "_wrapper")
        })
    }
    $("select", "#" + f + "_wrapper div.top>div." + b + ":last").change(function() {
        c.fnSettings()._iDisplayLength = parseInt($(this).val());
        c.fnDraw();
        if (typeof(localStorage) !== "undefined") {
            localStorage.cc_display_length = parseInt($(this).val())
        }
    });
    $("select", "#" + f + "_wrapper div.top>div." + b + ":first").change(function() {
        var e = c.fnSettings().aoColumns[$(this).attr("data-iCol")].mData;
        if ((e == "anomaly_state" || e == "part_usage") && $(this).val() != "") {
            c.fnFilter("^" + $(this).val() + "$", parseInt($(this).attr("data-iCol")), true, false)
        } else {
            c.fnFilter($(this).val(), parseInt($(this).attr("data-iCol")), false, false)
        }
        if ($(this).val() == "") {
            $(this).css({
                "background-color": "",
                border: ""
            })
        } else {
            $(this).css({
                "background-color": "yellow",
                border: "0"
            })
        }
        $("#" + f + "_filter input").focus()
    });
    $("input[type=text]", "#" + f + "_wrapper div.top>div." + b).die("keyup").keyup(function(p) {
        var o = $(this);
        input_delay(function() {
            if (o.val() != "") {
                o.css({
                    "background-color": "yellow"
                })
            } else {
                o.css({
                    "background-color": ""
                })
            }
            c.fnFilter(o.val())
        }, 750)
    }).die("focus").focus(function() {
        if ($(this).val() != "") {
            $(this).select().css({
                "background-color": "yellow"
            })
        } else {
            $(this).css({
                "background-color": ""
            })
        }
    }).die("blur").blur(function() {
        if ($(this).val() != "") {
            $(this).select().css({
                "background-color": "yellow"
            })
        } else {
            $(this).css({
                "background-color": ""
            })
        }
    });
    dt_init_Excel(c, "cc_memory_new_" + f);
    try {
        var n = $.grep(c.fnSettings().aoColumns, function(o) {
            return o.mDataProp == "checkbox"
        }).length;
        if (n) {
            c.data("checkboxes", [])
        }
    } catch (h) {
        console.log(h)
    }

    function m() {
        $("#cc_result_actions_" + f + " button").removeAttr("disabled");
        g()
    }

    function d() {
        $("#cc_result_actions_" + f + " button[type='button']").attr("disabled", "disabled");
        g()
    }

    function g() {
        if (c.data("checkboxes")) {
            $("#cc_result_actions_" + f + " > h3").html(lang_stk_action_lines.replace(/\|1/gi, c.data("checkboxes").length))
        } else {
            $("#cc_result_actions_" + f + " > h3").html(lang_stk_action_info)
        }
    }
    $(".cc_ck", "#" + f).die("change").live("change", function() {
        var u = this.parentNode.parentNode;
        var w = c.fnGetPosition(u);
        var o = c.fnGetData(u);
        var q = c.fnSettings();
        var p = q.aoColumns[q.aaSortingFixed[0][0]].mDataProp;
        var e = ($("#" + f).data("code") == "products" || $("#" + f).data("code") == "unreceived" || $("#" + f).data("code") == "follow") ? false : true;

        function v(C, z, D) {
            return (C[p] != o[p])
        }

        function r(C, z, D) {
            if (C[p] == o[p]) {
                D.splice(z, 1);
                return true
            }
        }
        if ($(this).is(":checked")) {
            if (e && c.data("checkboxes").some(v)) {
                $.jGrowl(lang_stk_uncheckable_full, {
                    header: lang_stk_uncheckable,
                    life: 10000
                });
                c.data("checkboxes").some(r);
                $(u).removeClass("row_selected").removeClass("DTTT_selected");
                $(this).removeAttr("checked")
            } else {
                o.checkbox = true;
                c.data("checkboxes").push(o);
                if (!$(u).hasClass("row_selected")) {
                    $(u).addClass("row_selected").addClass("DTTT_selected")
                }
                m()
            }
        } else {
            o.checkbox = false;
            $(u).removeClass("row_selected").removeClass("DTTT_selected");
            c.data("checkboxes").some(r);
            g()
        }
        if (c.data("checkboxes").length == 0) {
            d()
        }
    });
    $(".cc_ck_group", "#" + f).die("change").live("change", function() {
        var r = $(this).is(":checked");
        var e = $(this);
        var q = c.fnSettings();
        var p = q.aoColumns[q.aaSortingFixed[0][0]].mDataProp;
        var o = ($("#" + f).data("code") == "products" || $("#" + f).data("code") == "unreceived" || $("#" + f).data("code") == "follow") ? false : true;
        $("INPUT[data-" + p + '="' + $(this).data(p) + '"]:visible', c.fnGetNodes()).each(function() {
            var z = this.parentNode.parentNode;
            var D = c.fnGetPosition(z);
            var u = c.fnGetData(z);

            function C(G, E, H) {
                return (G[p] != u[p])
            }

            function w(G, E, H) {
                if (G[p] == u[p]) {
                    H.splice(E, 1);
                    return true
                }
            }

            function v(G, E, H) {
                switch ($("#" + q.sTableId).data("code")) {
                    case "unreceived":
                    case "follow":
                        if (G.anomaly_id == u.anomaly_id) {
                            return true
                        }
                        break
                }
            }
            if (r) {
                if (o && c.data("checkboxes").some(C)) {
                    $.jGrowl(lang_stk_uncheckable_full, {
                        header: lang_stk_uncheckable,
                        life: 10000
                    });
                    $(z).removeClass("row_selected").removeClass("DTTT_selected");
                    $(this).removeAttr("checked");
                    e.removeAttr("checked");
                    return false
                } else {
                    if (!$(this).is(":disabled")) {
                        if (!c.data("checkboxes").some(v)) {
                            u.checkbox = true;
                            c.data("checkboxes").push(u)
                        }
                        if (!$(z).hasClass("row_selected")) {
                            $(z).addClass("row_selected").addClass("DTTT_selected")
                        }
                        $(this).attr("checked", "checked")
                    }
                }
            } else {
                u.checkbox = false;
                $(z).removeClass("row_selected").removeClass("DTTT_selected");
                $(this).removeAttr("checked");
                c.data("checkboxes").some(w)
            }
        });
        if (c.data("checkboxes").length == 0) {
            d()
        } else {
            m()
        }
    })
}

function dt_ccTable_details(e, f) {
    var c = e.fnGetData(f);
    var h = e.fnGetPosition(f);
    var d = $(e).attr("id");
    var g = "";
    var b = "";
    if (parseInt(c.worklog_id) > 0) {
        g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
        $.post("EDI/cc/get_worklog", {
            worklog_id: c.worklog_id
        }, function(m) {
            $("#" + d + h).hide().html(m).fadeIn("fast")
        })
    } else {
        if (c.note_id > 0) {
            g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
            $.post("EDI/cc/get_note2", {
                note_id: c.note_id
            }, function(m) {
                $("#" + d + h).hide().html(m).fadeIn("fast")
            })
        } else {
            if (c.operation_id > 0) {
                g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
                $.post("EDI/cc/get_operation", {
                    operation_id: c.operation_id
                }, function(m) {
                    $("#" + d + h).hide().html(m).fadeIn("fast")
                })
            } else {
                if (d == "ccTable" || d == "ccFind" || d == "ccAnomalies" || d == "ccParts") {
                    g = '<div id="' + d + h + '" style="white-space:normal;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</div>";
                    $.post("EDI/cc/get_case_details", {
                        id_inter: c.id_inter
                    }, function(m) {
                        $("#" + d + h).hide().html(m).fadeIn("fast")
                    })
                } else {
                    if (c.messagetype == "TASK_CREATE" || c.messagetype.substring(0, 5) == "TASK_") {
                        g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
                        $.post("EDI/cc/get_xml", {
                            task_id: c.task_id,
                            event_id: c.event_id
                        }, function(m) {
                            $("#" + d + h).hide().html(m).fadeIn("fast")
                        })
                    } else {
                        if (c.messagetype == "CONFIRM_CLOSE" || c.messagetype == "REQUEST_CLOSURE" || c.messagetype == "REJECT_RESOLUTION" || c.messagetype == "SEND_SOLUTION") {
                            g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
                            b = c.event_id;
                            $.post("EDI/cc/get_event", {
                                event_id: b
                            }, function(m) {
                                $("#" + d + h).hide().html(m).fadeIn("fast")
                            })
                        } else {
                            if (c.messagetype.substr(0, 8) == "INTERNAL" || parseInt(c.event_id) > 0) {
                                g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><i class="fa fa-spinner fa-spin"></i> ' + lang_stk_process_run + "</pre>";
                                $.post("EDI/cc/get_internal", {
                                    event_id: c.event_id
                                }, function(m) {
                                    $("#" + d + h).hide().html(m).fadeIn("fast")
                                })
                            } else {
                                console.info("UNKNOWN", c.messagetype, c.messagetype.substr(0, 8))
                            }
                        }
                    }
                }
            }
        }
    }
    return g
}

function cc_init_report_events() {
    $("a.cc_show_inter", "#cc_report_listing").die("mousedown").live("mousedown", function(b) {
        OpenClientTab($(this).attr("data-id_client"), "", $(this).attr("data-id_inter"), -1);
        b.preventDefault()
    })
}

function find_CC_SN(b) {
    blockAllUI();
    var c = new Array();
    c.push({
        field: "pr.serial_number",
        value: b,
        operator: "="
    });
    c.push({
        field: "t.date_creation",
        value: "6 MONTH",
        operator: "INTERVAL"
    });
    $("#cc_report_listing").load("EDI/cc/report_find", {
        inside: "yes",
        type: "find",
        fields: c,
        title: "Find Serial Number"
    }, function(f, d, e) {
        UNblockAllUI()
    })
}
var oTableIntervention_UM = "";
var oTableSpin_UM = "";
var oTableReport_UM = "";
var oTableFlex_UM = "";
var oTableReportHistory_UM = [];
var objColumns_um_intervention = [{
    sTitle: "#",
    bVisible: true,
    bSortable: false,
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "PC30",
    bVisible: true,
    mDataProp: "id_inter",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "Typ",
    bVisible: true,
    mDataProp: "wo_typ",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "WO-Nr.",
    bVisible: true,
    mDataProp: "wonummer",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "Kd-Nr.",
    bVisible: true,
    mDataProp: "kdnr",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "StraÃŸe",
    bVisible: true,
    mDataProp: "strasse",
    sDefaultContent: "",
    aTargets: [5]
}, {
    sTitle: "Plz",
    bVisible: true,
    mDataProp: "code_postal",
    sDefaultContent: "",
    aTargets: [6]
}, {
    sTitle: "Ort",
    bVisible: true,
    mDataProp: "ville",
    sDefaultContent: "",
    aTargets: [7]
}, {
    sTitle: "we",
    bVisible: true,
    bSortable: true,
    mDataProp: "we",
    sDefaultContent: "",
    aTargets: [8]
}, {
    sTitle: "Partner",
    bVisible: true,
    mDataProp: "partenaire",
    sDefaultContent: "",
    aTargets: [9]
}, {
    sTitle: "L4",
    bVisible: true,
    mDataProp: "label",
    sDefaultContent: "",
    aTargets: [10]
}, {
    sTitle: "SLA D/T",
    bVisible: true,
    mDataProp: "end_sla_current",
    sDefaultContent: "",
    aTargets: [11]
}, {
    sTitle: "MTTI",
    bVisible: true,
    mDataProp: "mtti",
    sDefaultContent: "",
    aTargets: [12]
}, {
    sTitle: "Calls",
    bVisible: true,
    mDataProp: "num_calls",
    sDefaultContent: "",
    aTargets: [13]
}, {
    sTitle: "Letzter Call",
    bVisible: true,
    mDataProp: "last_call",
    sDefaultContent: "",
    aTargets: [14]
}, {
    sTitle: "T_Kd",
    bVisible: true,
    mDataProp: "t_client",
    sDefaultContent: "",
    aTargets: [15]
}, {
    sTitle: "T_WO",
    bVisible: true,
    mDataProp: "t_inter",
    sDefaultContent: "",
    aTargets: [16]
}, {
    sTitle: "S30 Status",
    bVisible: true,
    mDataProp: "etat_name",
    sDefaultContent: "",
    aTargets: [17]
}, {
    sTitle: "UM Status",
    bVisible: true,
    mDataProp: "currentstatus",
    sDefaultContent: "",
    aTargets: [18]
}, {
    sTitle: "Termin",
    bVisible: true,
    mDataProp: "date_inter",
    sDefaultContent: "",
    aTargets: [19]
}, {
    sTitle: "Eingang",
    bVisible: true,
    mDataProp: "creationdate",
    sDefaultContent: "",
    aTargets: [20]
}, {
    sTitle: "si",
    bVisible: false,
    mDataProp: "service_incident_id",
    sDefaultContent: "",
    aTargets: [21]
}, {
    sTitle: "id_client",
    bVisible: false,
    bSortable: false,
    mDataProp: "id_client",
    sDefaultContent: "",
    aTargets: [22]
}, {
    sTitle: "Etat",
    bVisible: false,
    mDataProp: "etat",
    sDefaultContent: "",
    aTargets: [23]
}, {
    sTitle: "logo",
    bVisible: false,
    bSortable: false,
    mDataProp: "logo",
    sDefaultContent: "",
    aTargets: [24]
}, {
    sTitle: "logo_petit",
    bVisible: false,
    bSortable: false,
    mDataProp: "logo_petit",
    sDefaultContent: "",
    aTargets: [25]
}, {
    sTitle: "sla_interval",
    bVisible: false,
    bSortable: false,
    mDataProp: "sla_interval",
    sDefaultContent: "",
    aTargets: [26]
}, {
    sTitle: "tk_hsi",
    bVisible: false,
    bSortable: false,
    mDataProp: "tk_hsi",
    sDefaultContent: "",
    aTargets: [27]
}, {
    sTitle: "l4",
    bVisible: false,
    bSortable: false,
    mDataProp: "ausbautyp",
    sDefaultContent: "",
    aTargets: [28]
}];
var objColumns_um_intervention_1 = [{
    sTitle: "#",
    bVisible: true,
    bSortable: false,
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "PC30",
    bVisible: true,
    mDataProp: "id_inter",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "Typ",
    bVisible: true,
    mDataProp: "wo_typ",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "WO-Nr.",
    bVisible: true,
    mDataProp: "wonummer",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "Kd-Nr.",
    bVisible: true,
    mDataProp: "kdnr",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "StraÃŸe",
    bVisible: true,
    mDataProp: "strasse",
    sDefaultContent: "",
    aTargets: [5]
}, {
    sTitle: "Plz",
    bVisible: true,
    mDataProp: "code_postal",
    sDefaultContent: "",
    aTargets: [6]
}, {
    sTitle: "Ort",
    bVisible: true,
    mDataProp: "ville",
    sDefaultContent: "",
    aTargets: [7]
}, {
    sTitle: "we",
    bVisible: true,
    bSortable: true,
    mDataProp: "we",
    sDefaultContent: "",
    aTargets: [8]
}, {
    sTitle: "Partner",
    bVisible: true,
    mDataProp: "partenaire",
    sDefaultContent: "",
    aTargets: [9]
}, {
    sTitle: "L4",
    bVisible: true,
    mDataProp: "label",
    sDefaultContent: "",
    aTargets: [10]
}, {
    sTitle: "SLA D/T",
    bVisible: true,
    mDataProp: "end_sla_current",
    sDefaultContent: "",
    aTargets: [11]
}, {
    sTitle: "MTTI",
    bVisible: true,
    mDataProp: "mtti",
    sDefaultContent: "",
    aTargets: [12]
}, {
    sTitle: "Calls",
    bVisible: true,
    mDataProp: "num_calls",
    sDefaultContent: "",
    aTargets: [13]
}, {
    sTitle: "Letzter Call",
    bVisible: true,
    mDataProp: "last_call",
    sDefaultContent: "",
    aTargets: [14]
}, {
    sTitle: "T_Kd",
    bVisible: true,
    mDataProp: "t_client",
    sDefaultContent: "",
    aTargets: [15]
}, {
    sTitle: "T_WO",
    bVisible: true,
    mDataProp: "t_inter",
    sDefaultContent: "",
    aTargets: [16]
}, {
    sTitle: "S30 Status",
    bVisible: true,
    mDataProp: "etat_name",
    sDefaultContent: "",
    aTargets: [17]
}, {
    sTitle: "UM Status",
    bVisible: true,
    mDataProp: "currentstatus",
    sDefaultContent: "",
    aTargets: [18]
}, {
    sTitle: "Termin",
    bVisible: true,
    mDataProp: "date_inter",
    sDefaultContent: "",
    aTargets: [19]
}, {
    sTitle: "Eingang",
    bVisible: true,
    mDataProp: "creationdate",
    sDefaultContent: "",
    aTargets: [20]
}, {
    sTitle: "si",
    bVisible: false,
    mDataProp: "service_incident_id",
    sDefaultContent: "",
    aTargets: [21]
}, {
    sTitle: "id_client",
    bVisible: false,
    bSortable: false,
    mDataProp: "id_client",
    sDefaultContent: "",
    aTargets: [22]
}, {
    sTitle: "Etat",
    bVisible: false,
    mDataProp: "etat",
    sDefaultContent: "",
    aTargets: [23]
}, {
    sTitle: "logo",
    bVisible: false,
    bSortable: false,
    mDataProp: "logo",
    sDefaultContent: "",
    aTargets: [24]
}, {
    sTitle: "logo_petit",
    bVisible: false,
    bSortable: false,
    mDataProp: "logo_petit",
    sDefaultContent: "",
    aTargets: [25]
}, {
    sTitle: "sla_interval",
    bVisible: false,
    bSortable: false,
    mDataProp: "sla_interval",
    sDefaultContent: "",
    aTargets: [26]
}, {
    sTitle: "tk_hsi",
    bVisible: true,
    bSortable: true,
    mDataProp: "tk_hsi",
    sDefaultContent: "",
    aTargets: [27]
}, {
    sTitle: "l4",
    bVisible: true,
    bSortable: true,
    mDataProp: "ausbautyp",
    sDefaultContent: "",
    aTargets: [28]
}];
var objColumns_um_spin = [{
    sTitle: "#",
    bVisible: true,
    bSortable: false,
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "PC30",
    bVisible: true,
    mDataProp: "id_inter",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "Typ",
    bVisible: true,
    mDataProp: "wo_typ",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "WO-Nr.",
    bVisible: true,
    mDataProp: "wo_num",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "checkin",
    bVisible: true,
    mDataProp: "checkin",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "KdNr.",
    bVisible: true,
    mDataProp: "kd_num",
    sDefaultContent: "",
    aTargets: [5]
}, {
    sTitle: "Fehler",
    bVisible: true,
    mDataProp: "fehler",
    sDefaultContent: "",
    aTargets: [6]
}, {
    sTitle: "Kum",
    bVisible: true,
    mDataProp: "kum",
    sDefaultContent: "",
    aTargets: [7]
}, {
    sTitle: "LPP",
    bVisible: true,
    mDataProp: "lpp",
    sDefaultContent: "",
    aTargets: [8]
}, {
    sTitle: "Korrektur",
    bVisible: true,
    mDataProp: "korrektur",
    sDefaultContent: "",
    aTargets: [9]
}, {
    sTitle: "Sob",
    bVisible: true,
    mDataProp: "sob",
    sDefaultContent: "",
    aTargets: [10]
}, {
    sTitle: "LTF",
    bVisible: true,
    mDataProp: "ltf",
    sDefaultContent: "",
    aTargets: [11]
}, {
    sTitle: "id_client",
    bVisible: false,
    mDataProp: "id_client",
    sDefaultContent: "",
    aTargets: [12]
}];
var objColumns_um_flex = [{
    sTitle: "PC30",
    bVisible: true,
    mDataProp: "id_inter",
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "Typ",
    bVisible: true,
    mDataProp: "wo_typ",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "WO-Nr.",
    bVisible: true,
    mDataProp: "wo_num",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "StraÃŸe",
    bVisible: true,
    mDataProp: "street",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "Plz",
    bVisible: true,
    mDataProp: "code_postal",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "Ort",
    bVisible: true,
    mDataProp: "city",
    sDefaultContent: "",
    aTargets: [5]
}, {
    sTitle: "WE",
    bVisible: true,
    mDataProp: "we",
    sDefaultContent: "",
    aTargets: [6]
}, {
    sTitle: "L4",
    bVisible: true,
    mDataProp: "l4_type",
    sDefaultContent: "",
    aTargets: [7]
}, {
    sTitle: "Partner",
    bVisible: true,
    mDataProp: "partenaire",
    sDefaultContent: "",
    aTargets: [8]
}, {
    sTitle: "Termin",
    bVisible: true,
    mDataProp: "date_inter",
    sDefaultContent: "",
    aTargets: [9]
}, {
    sTitle: "id_client",
    bVisible: false,
    mDataProp: "id_client",
    sDefaultContent: "",
    aTargets: [10]
}, {
    sTitle: "etat",
    bVisible: true,
    mDataProp: "etat",
    sDefaultContent: "",
    aTargets: [11]
}, {
    sTitle: "logo",
    bVisible: false,
    mDataProp: "logo",
    sDefaultContent: "",
    aTargets: [12]
}, {
    sTitle: "from_date",
    bVisible: true,
    mDataProp: "from_date",
    sDefaultContent: "",
    aTargets: [13]
}, {
    sTitle: "to_date",
    bVisible: true,
    mDataProp: "to_date",
    sDefaultContent: "",
    aTargets: [14]
}, {
    sTitle: "Zeit",
    bVisible: true,
    mDataProp: "from_to_time",
    sDefaultContent: "",
    aTargets: [15]
}, {
    sTitle: "comment",
    bVisible: true,
    mDataProp: "comment",
    sDefaultContent: "",
    aTargets: [16]
}];
var objColumns_um_report = [{
    sTitle: "#",
    bVisible: true,
    bSortable: false,
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "PC30",
    bVisible: true,
    mDataProp: "id_inter",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "WO-Typ",
    bVisible: true,
    mDataProp: "wo_typ",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "WO-Nr.",
    bVisible: true,
    mDataProp: "work_order_number",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "Checkin",
    bVisible: true,
    mDataProp: "checkin",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "MTTI",
    bVisible: true,
    mDataProp: "mtti",
    sDefaultContent: "",
    aTargets: [5]
}, {
    sTitle: "MTTI Plain",
    bVisible: false,
    mDataProp: "mtti_plain",
    sDefaultContent: "",
    aTargets: [6]
}, {
    sTitle: "id_client",
    bVisible: false,
    bSortable: false,
    mDataProp: "id_client",
    sDefaultContent: "",
    aTargets: [7]
}];

function round(d, c) {
    d = parseFloat(d);
    if (!d) {
        return 0
    }
    c = parseInt(c);
    if (!c) {
        c = 0
    }
    var b = Math.pow(10, c);
    return Math.round(d * b) / b
}

function fnFormatDetails_history_UM(e, f) {
    var c = e.fnGetData(f);
    var h = e.fnGetPosition(f);
    var d = $(e).attr("id");
    var g = "";
    var b = "";
    if (d == "um_intervention_table") {
        g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
        var g = "Coming Soon..."
    } else {
        if (c.note_id != "") {
            g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
            $.post("EDI/hp/get_note", {
                note_id: c.note_id
            }, function(m) {
                $("#" + d + h).hide().html(m).fadeIn("fast")
            })
        } else {
            if (c.operation_id != "") {
                g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
                $.post("EDI/hp/get_operation", {
                    operation_id: c.operation_id
                }, function(m) {
                    $("#" + d + h).hide().html(m).fadeIn("fast")
                })
            } else {
                if (c.part_order_line_event_id != "") {
                    g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
                    $.post("EDI/hp/get_part_update", {
                        part_update_id: c.part_order_line_event_id
                    }, function(m) {
                        $("#" + d + h).hide().html(m).fadeIn("fast")
                    })
                } else {
                    if (c.messagetype == "PROBLEM_SUBMITTAL" || c.messagetype == "QUERY_INSERT_PROBLEM") {
                        g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
                        $.post("EDI/hp/get_problem", {
                            service_incident_id: c.service_incident_id
                        }, function(m) {
                            $("#" + d + h).hide().html(m).fadeIn("fast")
                        })
                    } else {
                        if (c.messagetype == "CONFIRM_CLOSE" || c.messagetype == "REQUEST_CLOSURE" || c.messagetype == "REJECT_RESOLUTION" || c.messagetype == "SEND_SOLUTION") {
                            g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
                            b = c.event_id;
                            $.post("EDI/hp/get_event", {
                                event_id: b
                            }, function(m) {
                                $("#" + d + h).hide().html(m).fadeIn("fast")
                            })
                        } else {
                            if (c.messagetype == "INTERNAL" || c.messagetype == "internal" || c.messagetype == "qualnote") {
                                g = '<pre id="' + d + h + '" style="white-space:pre-wrap;background-color:white;opacity: .9;padding-left: 5px"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_stk_loading_history + "</pre>";
                                $.post("EDI/hp/get_internal", {
                                    event_id: c.event_id
                                }, function(m) {
                                    $("#" + d + h).hide().html(m).fadeIn("fast")
                                })
                            }
                        }
                    }
                }
            }
        }
    }
    return g
}

function um_intervention_fnRowCallback(h, m, o, u) {
    var p = 0;
    var r = 0;
    var c = 0;
    var q = 0;
    var e = 0;
    var g = 0;
    $.grep(this.fnSettings().aoColumns, function(v, w) {
        if (v.mDataProp == "id_inter") {
            p = w
        } else {
            if (v.mDataProp == "etat_name") {
                r = w
            } else {
                if (v.mDataProp == "info1") {
                    c = w
                } else {
                    if (v.mDataProp == "currentstatus") {
                        q = w
                    } else {
                        if (v.mDataProp == "messagetype") {
                            e = w
                        } else {
                            if (v.mDataProp == "end_sla_current") {
                                g = w
                            }
                        }
                    }
                }
            }
        }
    });
    if (m.sla_interval) {
        var d = parseInt(m.sla_interval);
        if (d > 0) {
            $("td:eq(" + g + ")", h).attr("style", "color: red; font-weight: bold !important;")
        } else {
            if (d > -28800) {
                $("td:eq(" + g + ")", h).attr("style", "font-weight: bold !important;")
            }
        }
    }
    if (m.id_inter) {
        var f = "";
        if (m.logo) {
            f += "<img src='/var/themes/default/logos/" + m.logo + "' style='vertical-align:middle'/>"
        }
        f += "&nbsp;";
        var b = '<a href="#" class="um_show_inter" style="text-decoration: underline;">' + f + m.id_inter + "</a>";
        var n = "";
        switch (parseInt(m.etat)) {
            case 0:
                n = "#FFCF52";
                break;
            case 1:
                n = "#F8DAF8";
                break;
            case 3:
                n = "#A4FFA8";
                break;
            case 4:
                n = "#FC8A8A";
                break;
            case 29:
                n = "#FFEC52";
                break;
            default:
                n = "#FFFFFF"
        }
        $("td:eq(" + p + ")", h).attr("style", "background: " + n + " !important;").html(b)
    }
    if (m.etat_name) {
        var n = "";
        switch (parseInt(m.etat)) {
            case 0:
                n = "#FFCF52";
                break;
            case 1:
                n = "#F8DAF8";
                break;
            case 3:
                n = "#A4FFA8";
                break;
            case 4:
                n = "#FC8A8A";
                break;
            case 29:
                n = "#FFEC52";
                break;
            default:
                n = "#FFFFFF"
        }
        $("td:eq(" + r + ")", h).attr("style", "background: " + n + " !important;")
    }
    if (m.currentstatus) {
        if (m.currentstatus == "5-REJECT_RESOLUTION") {
            $("td:eq(" + q + ")", h).attr("style", "background: Yellow !important;")
        }
    }
    if (m.messagetype) {
        if (m.messagetype == "REJECT_RESOLUTION") {
            $("td:eq(" + e + ")", h).attr("style", "background: Yellow !important;")
        }
    }
    if (m.info1) {
        $("td:eq(" + c + ")", h).attr("style", "background: Yellow !important;")
    }
    return h
}

function um_report_fnRowCallback(e, f, g, n) {
    var h = 0;
    var c = 0;
    $.grep(this.fnSettings().aoColumns, function(o, p) {
        if (o.mDataProp == "id_inter") {
            h = p
        } else {
            if (o.mDataProp == "mtti") {
                c = p
            }
        }
    });
    if (f.id_inter) {
        var d = "";
        if (f.logo) {
            d += "<img src='/var/themes/default/logos/" + f.logo + "' style='vertical-align:middle'/>"
        }
        d += "&nbsp;";
        var b = '<a href="#" class="um_show_inter" style="text-decoration: underline;">' + d + f.id_inter + "</a>";
        $("td:eq(" + h + ")", e).html(b)
    }
    if (f.mtti) {
        var m = parseInt(f.mtti);
        if (m <= 12) {
            $("td:eq(" + c + ")", e).attr("style", "background: lightgreen !important;")
        } else {
            if (m >= -13) {
                $("td:eq(" + c + ")", e).attr("style", "background: #FF5555  !important;")
            }
        }
    }
    return e
}

function um_spin_fnRowCallback(h, f, e, d) {
    var c = 0;
    $.grep(this.fnSettings().aoColumns, function(m, o) {
        if (m.mDataProp == "id_inter") {
            c = o
        }
    });
    if (f.id_inter) {
        var g = "";
        if (f.logo) {
            g += "<img src='/var/themes/default/logos/" + f.logo + "' style='vertical-align:middle'/>"
        }
        g += "&nbsp;";
        var b = '<a href="#" class="um_show_inter" style="text-decoration: underline;">' + g + f.id_inter + "</a>";
        $("td:eq(" + c + ")", h).html(b)
    }
    return h
}

function um_flex_fnRowCallback(h, f, e, d) {
    var c = 0;
    $.grep(this.fnSettings().aoColumns, function(m, o) {
        if (m.mDataProp == "id_inter") {
            c = o
        }
    });
    if (f.id_inter) {
        var g = "";
        if (f.logo) {
            g += "<img src='/var/themes/default/logos/" + f.logo + "' style='vertical-align:middle'/>"
        }
        g += "&nbsp;";
        var b = '<a href="#" class="um_show_inter" style="text-decoration: underline;">' + g + f.id_inter + "</a>";
        $("td:eq(" + c + ")", h).html(b)
    }
    return h
}

function um_report_fnFooterCallback(e, c, f, b, d) {
    mtti_sum = 0;
    mtti_count = 0;
    $("#um_listing").dataTable()._("td:nth-child(6)", {
        filter: "applied"
    }).forEach(function(g) {
        mtti_count++;
        mtti_sum += parseInt(g)
    });
    console.log(mtti_sum / mtti_count);
    $("#um_monitoring_report_mtti").html("<b>MTTI: " + round(mtti_sum / mtti_count, 1) + "</b>")
}

function UM_init_intervention_table(b) {
    $.fn.dataTableExt.afnFiltering.push(function(d, e, c) {
        if (d.nTable == document.getElementById("um_intervention_table")) {
            if ((b == 0) && (e[1].toUpperCase().indexOf($("#um_custom_filter_id_inter").val().toUpperCase()) >= 0 || $("#um_custom_filter_id_inter").val().toUpperCase() == "") && (e[2].toUpperCase().indexOf($("#um_custom_filter_wo_typ").val().toUpperCase()) >= 0 || $("#um_custom_filter_wo_typ").val().toUpperCase() == "") && (e[3].toUpperCase().indexOf($("#um_custom_filter_wo_nummer").val().toUpperCase()) >= 0 || $("#um_custom_filter_wo_nummer").val().toUpperCase() == "") && (e[4].toUpperCase().indexOf($("#um_custom_filter_kd_nummer").val().toUpperCase()) >= 0 || $("#um_custom_filter_kd_nummer").val().toUpperCase() == "") && (e[6].toUpperCase().indexOf($("#um_custom_filter_plz").val().toUpperCase()) >= 0 || $("#um_custom_filter_plz").val().toUpperCase() == "") && (e[7].toUpperCase().indexOf($("#um_custom_filter_ort").val().toUpperCase()) >= 0 || $("#um_custom_filter_ort").val().toUpperCase() == "") && (e[9].toUpperCase().indexOf($("#um_custom_filter_partenaire").val().toUpperCase()) >= 0 || $("#um_custom_filter_partenaire").val().toUpperCase() == "") && (e[10].toUpperCase().indexOf($("#um_custom_filter_l4").val().toUpperCase()) >= 0 || $("#um_custom_filter_l4").val().toUpperCase() == "") && (e[11].toUpperCase().indexOf($("#um_custom_filter_sla").val().toUpperCase()) >= 0 || $("#um_custom_filter_sla").val().toUpperCase() == "") && (e[17].toUpperCase().indexOf($("#um_custom_filter_etat").val().toUpperCase()) >= 0 || $("#um_custom_filter_etat").val().toUpperCase() == "") && (e[18].toUpperCase().indexOf($("#um_custom_filter_activitie").val().toUpperCase()) >= 0 || $("#um_custom_filter_activitie").val().toUpperCase() == "") && (e[19].indexOf($("#um_custom_filter_date_inter").val()) >= 0 || $("#um_custom_filter_date_inter").val() == "")) {
                return true
            } else {
                if ((b == 1) && (e[1].toUpperCase().indexOf($("#um_custom_filter_id_inter").val().toUpperCase()) >= 0 || $("#um_custom_filter_id_inter").val().toUpperCase() == "") && (e[2].toUpperCase().indexOf($("#um_custom_filter_wo_typ").val().toUpperCase()) >= 0 || $("#um_custom_filter_wo_typ").val().toUpperCase() == "") && (e[3].toUpperCase().indexOf($("#um_custom_filter_wo_nummer").val().toUpperCase()) >= 0 || $("#um_custom_filter_wo_nummer").val().toUpperCase() == "") && (e[4].toUpperCase().indexOf($("#um_custom_filter_kd_nummer").val().toUpperCase()) >= 0 || $("#um_custom_filter_kd_nummer").val().toUpperCase() == "") && (e[6].toUpperCase().indexOf($("#um_custom_filter_plz").val().toUpperCase()) >= 0 || $("#um_custom_filter_plz").val().toUpperCase() == "") && (e[7].toUpperCase().indexOf($("#um_custom_filter_ort").val().toUpperCase()) >= 0 || $("#um_custom_filter_ort").val().toUpperCase() == "") && (e[9].toUpperCase().indexOf($("#um_custom_filter_partenaire").val().toUpperCase()) >= 0 || $("#um_custom_filter_partenaire").val().toUpperCase() == "") && (e[10].toUpperCase().indexOf($("#um_custom_filter_l4").val().toUpperCase()) >= 0 || $("#um_custom_filter_l4").val().toUpperCase() == "") && (e[11].toUpperCase().indexOf($("#um_custom_filter_sla").val().toUpperCase()) >= 0 || $("#um_custom_filter_sla").val().toUpperCase() == "") && (e[17].toUpperCase().indexOf($("#um_custom_filter_etat").val().toUpperCase()) >= 0 || $("#um_custom_filter_etat").val().toUpperCase() == "") && (e[18].toUpperCase().indexOf($("#um_custom_filter_activitie").val().toUpperCase()) >= 0 || $("#um_custom_filter_activitie").val().toUpperCase() == "") && (e[19].indexOf($("#um_custom_filter_date_inter").val()) >= 0 || $("#um_custom_filter_date_inter").val() == "") && (e[27].toUpperCase().indexOf($("#um_custom_filter_tk_hsi").val().toUpperCase()) >= 0 || $("#um_custom_filter_tk_hsi").val().toUpperCase() == "") && (e[28].toUpperCase().indexOf($("#um_custom_filter_ausbautyp").val().toUpperCase()) >= 0 || $("#um_custom_filter_ausbautyp").val().toUpperCase() == "") && (e[8].toUpperCase().indexOf($("#um_custom_filter_we").val().toUpperCase()) >= 0 || $("#um_custom_filter_we").val().toUpperCase() == "")) {
                    return true
                } else {
                    return false
                }
            }
        } else {
            return true
        }
    });
    if (b == 0) {
        oTableIntervention_UM = $("#um_intervention_table").dataTable({
            bDestroy: true,
            fnRowCallback: um_intervention_fnRowCallback,
            bSortable: false,
            autoWidth: false,
            aoColumnDefs: objColumns_um_intervention,
            aLengthMenu: [
                [15, 25, 50, 100, 250, 500, -1],
                [15, 25, 50, 100, 250, 500, "Alle"]
            ],
            iDisplayLength: 50,
            bJQueryUI: false,
            sPaginationType: "full_numbers",
            oLanguage: objLanguageUM,
            aaSorting: [
                [9, "asc"],
                [7, "asc"]
            ],
            bStateSave: true,
            fnStateSave: function(c, d) {
                localStorage.setItem("DataTables", JSON.stringify(d))
            },
            fnStateLoad: function(c) {
                return JSON.parse(localStorage.getItem("DataTables"))
            }
        })
    } else {
        if (b == 1) {
            oTableIntervention_UM = $("#um_intervention_table").dataTable({
                bDestroy: true,
                fnRowCallback: um_intervention_fnRowCallback,
                bSortable: false,
                autoWidth: false,
                aoColumnDefs: objColumns_um_intervention_1,
                aLengthMenu: [
                    [15, 25, 50, 100, 250, 500, -1],
                    [15, 25, 50, 100, 250, 500, "Alle"]
                ],
                iDisplayLength: 50,
                bJQueryUI: false,
                sPaginationType: "full_numbers",
                oLanguage: objLanguageUM,
                aaSorting: [
                    [9, "asc"],
                    [7, "asc"]
                ],
                bStateSave: true,
                fnStateSave: function(c, d) {
                    localStorage.setItem("DataTables", JSON.stringify(d))
                },
                fnStateLoad: function(c) {
                    return JSON.parse(localStorage.getItem("DataTables"))
                }
            })
        }
    }
}

function UM_init_flex_table() {
    oTableFlex_UM = $("#um_flex_table").dataTable({
        bDestroy: true,
        fnRowCallback: um_flex_fnRowCallback,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: objColumns_um_flex,
        aLengthMenu: [
            [15, 25, 50, 100, 250, 500, -1],
            [15, 25, 50, 100, 250, 500, "Alle"]
        ],
        iDisplayLength: 50,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageUM,
        aaSorting: [
            [9, "asc"],
            [7, "asc"]
        ],
        bStateSave: true,
        fnStateSave: function(b, c) {
            localStorage.setItem("DataTables", JSON.stringify(c))
        },
        fnStateLoad: function(b) {
            return JSON.parse(localStorage.getItem("DataTables"))
        }
    })
}

function UM_init_spin_table() {
    oTableSpin_UM = $("#um_spin_table").dataTable({
        bDestroy: true,
        fnRowCallback: um_spin_fnRowCallback,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: objColumns_um_spin,
        aLengthMenu: [
            [15, 25, 50, 100, 250, 500, -1],
            [15, 25, 50, 100, 250, 500, "Alle"]
        ],
        iDisplayLength: 50,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageUM,
        aaSorting: [
            [4, "asc"],
            [2, "asc"]
        ],
        bStateSave: true,
        fnStateSave: function(b, c) {
            localStorage.setItem("DataTables", JSON.stringify(c))
        },
        fnStateLoad: function(b) {
            return JSON.parse(localStorage.getItem("DataTables"))
        }
    })
}

function UM_init_report_table() {
    oTableReport_UM = $("#um_listing").dataTable({
        bDestroy: true,
        fnRowCallback: um_report_fnRowCallback,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: objColumns_um_report,
        aLengthMenu: [
            [15, 25, 50, 100, 250, 500, -1],
            [15, 25, 50, 100, 250, 500, "Alle"]
        ],
        iDisplayLength: 50,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageUM,
        aaSorting: [
            [3, "asc"],
            [1, "asc"]
        ],
        fnFooterCallback: um_report_fnFooterCallback,
        bStateSave: true,
        fnStateSave: function(b, c) {
            localStorage.setItem("DataTables", JSON.stringify(c))
        },
        fnStateLoad: function(b) {
            return JSON.parse(localStorage.getItem("DataTables"))
        }
    })
}

function UM_init_intervention_listing_events() {
    $("#um_intervention_table td.tdopen_listing img").css("cursor", "pointer");
    $("#um_intervention_table td.tdopen_listing img").die("click").live("click", function() {
        var b = $(this).parents("tr")[0];
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            oTableIntervention_UM.fnClose(b)
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            oTableIntervention_UM.fnOpen(b, fnFormatDetails_history_UM(oTableIntervention_UM, b), "details")
        }
    });
    $("#um_intervention_table tbody tr.listing td").die("dblclick").live("dblclick", function(c) {
        c.preventDefault();
        var d = $(this).parents("tr")[0];
        var b = $("td.center>img", d);
        if (b.attr("src").match("elbow-minus-nl")) {
            b.attr("src", "/var/themes/default/extjs_images/elbow-plus-nl.gif");
            oTableIntervention_UM.fnClose(d)
        } else {
            b.attr("src", "/var/themes/default/extjs_images/elbow-minus-nl.gif");
            oTableIntervention_UM.fnOpen(d, fnFormatDetails_history_UM(oTableIntervention_UM, d), "details")
        }
    })
}

function UM_init_spin_listing_events() {
    $("a.um_show_inter", "#um_spin_table").die("mousedown").live("mousedown", function(c) {
        var d = this.parentNode.parentNode;
        var b = "";
        try {
            b = oTableSpin_UM.fnGetData(d);
            Clear_Get_Interventions_Form();
            $("input[name=int_plan_inter_number]").val(b.id_inter);
            $("input[name=int_plan_inter_number]").focus();
            SubmitGetInterventions();
            OpenClientTab(b.id_client, "", b.id_inter, -1)
        } catch (c) {
            b = oTableIntervention_UM.fnGetData(d);
            OpenClientTab(b.id_client, "", b.id_inter, -1)
        }
        c.preventDefault()
    })
}

function UM_init_flex_listing_events() {
    $("a.um_show_inter", "#um_flex_table").die("mousedown").live("mousedown", function(c) {
        var d = this.parentNode.parentNode;
        var b = "";
        try {
            b = oTableFlex_UM.fnGetData(d);
            Clear_Get_Interventions_Form();
            $("input[name=int_plan_inter_number]").val(b.id_inter);
            $("input[name=int_plan_inter_number]").focus();
            SubmitGetInterventions();
            OpenClientTab(b.id_client, "", b.id_inter, -1)
        } catch (c) {
            b = oTableIntervention_UM.fnGetData(d);
            OpenClientTab(b.id_client, "", b.id_inter, -1)
        }
        c.preventDefault()
    })
}

function UM_init_report_listing_events() {}

function UM_init_intervention_events() {
    $("a.um_show_inter", "#um_intervention_table").die("mousedown").live("mousedown", function(c) {
        var d = this.parentNode.parentNode;
        var b = "";
        try {
            b = oTableIntervention_UM.fnGetData(d);
            Clear_Get_Interventions_Form();
            $("input[name=int_plan_inter_number]").val(b.id_inter);
            $("input[name=int_plan_inter_number]").focus();
            SubmitGetInterventions();
            OpenClientTab(b.id_client, "", b.id_inter, -1)
        } catch (c) {
            b = oTableIntervention_UM.fnGetData(d);
            OpenClientTab(b.id_client, "", b.id_inter, -1)
        }
        c.preventDefault()
    });
    $("a.um_show_inter", "#um_listing").die("mousedown").live("mousedown", function(c) {
        var d = this.parentNode.parentNode;
        var b = "";
        try {
            b = oTableReport_UM.fnGetData(d);
            $("input[name=int_plan_inter_number]").val(b.id_inter);
            $("input[name=int_plan_inter_number]").focus();
            SubmitGetInterventions();
            OpenClientTab(b.id_client, "", b.id_inter, -1)
        } catch (c) {
            b = oTableReport_UM.fnGetData(d);
            OpenClientTab(b.id_client, "", b.id_inter, -1)
        }
        c.preventDefault()
    });
    $("#um_monitoring_intervention_btn").click(function() {
        $("p[name=um_monitoring_filter_auswahl]").show();
        $("#um_report_filter").hide();
        $("#um_intervention_listing").show("fast");
        $("#um_monitoring_submenu_intervention").show("fast");
        $("#um_monitoring_report_menu").hide();
        $("#um_report_listing").hide();
        $("#um_intervention_flex_filter").hide();
        $("#um_spin_filter").hide();
        $("#um_ista_listing").hide()
    });
    $("#um_monitoring_intervention_filter_btn").click(function() {
        $("p[name=um_monitoring_filter_auswahl]").show();
        $("#um_monitoring_submenu_intervention").hide();
        $("#um_intervention_listing").hide();
        $("#um_report_filter").show("fast");
        $("#um_monitoring_report_menu").hide();
        $("#um_intervention_flex_filter").hide();
        $("#um_spin_filter").hide();
        $("#um_ista_listing").hide()
    });
    $("#um_report_all_intervention_btn").click(function() {
        if ($("#um_monitoring_filter_auswahl").val() == "") {
            alert("Bitte einen Filter auswÃ¤hlen!")
        } else {
            $("#um_monitoring_submenu_intervention").show("fast");
            blockAllUI();
            $("#um_monitoring_filter_auswahl").load("EDI/unitymedia/report_get_filter_names", {
                inside: "yes",
                id_filter_name: $("#um_monitoring_filter_auswahl").val()
            }, function(d, b, c) {});
            $("#um_intervention_listing").load("EDI/unitymedia/report_all_intervention", {
                inside: "yes",
                id_filter_name: $("#um_monitoring_filter_auswahl").val()
            }, function(d, b, c) {
                UNblockAllUI()
            })
        }
    });
    $("#um_monitoring_activity_btn").click(function() {
        $("#um_monitoring_submenu_intervention").hide();
        $("#um_report_listing").hide();
        blockAllUI();
        $("#um_intervention_listing").load("EDI/unitymedia/wisp_activitie", {
            inside: "yes"
        }, function(d, b, c) {
            UNblockAllUI()
        })
    });
    $("#um_report_force_filter_save_btn").click(function() {
        blockAllUI();
        $("#um_report_filter_force_employes").load("EDI/unitymedia/report_filter_force_employes_save", {
            inside: "yes",
            id_filter_name: filterName,
            id_filter_range: $("#um_report_range").val(),
            id_employe: $("#um_report_force_filter").val()
        }, function(d, b, c) {
            bind_um_report_delete_force_employe();
            UNblockAllUI()
        })
    });
    $("#um_report_societe").change(function() {
        blockAllUI();
        $("#um_report_partenaire").load("EDI/unitymedia/get_partenaires", {
            inside: "yes",
            id_societe: $("#um_report_societe").val()
        }, function(d, b, c) {
            UNblockAllUI()
        })
    });
    $("#um_report_filter_save_btn").click(function() {
        if ($("#um_report_partenaire").val() && $("#um_report_etat").val() && $("#um_report_activities").val() && $("#um_report_filter_name").val() != "") {
            blockAllUI();
            $("#um_monitoring_filter_auswahl").load("EDI/unitymedia/report_save_filter", {
                inside: "yes",
                id_societe: $("#um_report_societe").val(),
                id_partenaire: $("#um_report_partenaire").val(),
                id_filter_name: $("#um_report_filter_name").val(),
                id_filter_range: $("#um_report_range").val(),
                id_etat: $("#um_report_etat").val(),
                id_activities: $("#um_report_activities").val(),
                auftragseingang_from: $("#um_report_filter_auftragseingang_from").val(),
                auftragseingang_to: $("#um_report_filter_auftragseingang_to").val(),
                sla_from: $("#um_report_filter_sla_from").val(),
                sla_to: $("#um_report_filter_sla_to").val(),
                termin_from: $("#um_report_filter_termin_from").val(),
                termin_to: $("#um_report_filter_termin_to").val()
            }, function(d, b, c) {
                UNblockAllUI()
            })
        } else {
            alert("nicht korrekte EintrÃ¤ge!")
        }
    });
    $("#um_report_filter_delete_btn").click(function() {
        blockAllUI();
        $("#um_monitoring_filter_auswahl").load("EDI/unitymedia/report_delete_filter", {
            inside: "yes",
            id_filter_name: $("#um_report_filter_name").val(),
            id_filter_range: $("#um_report_range").val()
        }, function(d, b, c) {
            UNblockAllUI()
        })
    });
    $("#um_monitoring_filter_auswahl").change(function() {
        blockAllUI();
        filterName = $("#um_monitoring_filter_auswahl").val();
        if (filterName.substr(0, 1) == "*") {
            filterName = filterName.substr(1)
        }
        $("#um_monitoring_filter_auswahl").load("EDI/unitymedia/report_get_filter_names", {
            inside: "yes",
            id_filter_name: $("#um_monitoring_filter_auswahl").val()
        }, function(d, b, c) {});
        $("#um_report_filter_name").val(filterName);
        $("#um_report_societe").val("");
        $("#um_report_partenaire").val("");
        $("#um_report_etat").val("");
        $("#um_report_activities").val("");
        $("#um_report_filter_auftragseingang_check").attr("checked", false);
        $("#um_report_filter_auftragseingang_from").attr("disabled", "disabled");
        $("#um_report_filter_auftragseingang_to").attr("disabled", "disabled");
        $("#um_report_filter_auftragseingang_from").val("");
        $("#um_report_filter_auftragseingang_to").val("");
        $("#um_report_filter_sla_check").attr("checked", false);
        $("#um_report_filter_sla_from").attr("disabled", "disabled");
        $("#um_report_filter_sla_to").attr("disabled", "disabled");
        $("#um_report_filter_sla_from").val("");
        $("#um_report_filter_sla_to").val("");
        $("#um_report_filter_termin_check").attr("checked", false);
        $("#um_report_filter_termin_from").attr("disabled", "disabled");
        $("#um_report_filter_termin_to").attr("disabled", "disabled");
        $("#um_report_filter_termin_from").val("");
        $("#um_report_filter_termin_to").val("");
        $("#um_report_range").val("");
        if ($("#um_monitoring_filter_auswahl").val() != "") {
            $("#div_force_filter").show()
        } else {
            $("#div_force_filter").hide()
        }
        if ($("#um_monitoring_filter_auswahl").val() != "") {
            $.post("EDI/unitymedia/report_get_filter", {
                inside: "yes",
                id_filter_name: $("#um_monitoring_filter_auswahl").val()
            }, function(b) {
                if (b) {
                    try {
                        $("#um_report_societe").val(b.id_societe);
                        $("#um_report_partenaire").load("EDI/unitymedia/get_partenaires", {
                            inside: "yes",
                            id_societe: $("#um_report_societe").val()
                        }, function(f, d, e) {
                            $.each(b.id_partenaire, function(g, h) {
                                $("#um_report_partenaire option[value='" + h + "']").prop("selected", true)
                            })
                        });
                        $.each(b.id_etat, function(d, f) {
                            $("#um_report_etat option[value='" + f + "']").prop("selected", true)
                        });
                        $.each(b.id_activities, function(d, f) {
                            $("#um_report_activities option[value='" + f + "']").prop("selected", true)
                        });
                        if (b.auftragseingang_from != "") {
                            $("#um_report_filter_auftragseingang_check").attr("checked", true);
                            $("#um_report_filter_auftragseingang_from").val(b.auftragseingang_from);
                            $("#um_report_filter_auftragseingang_to").val(b.auftragseingang_to);
                            $("#um_report_filter_auftragseingang_from").removeAttr("disabled");
                            $("#um_report_filter_auftragseingang_to").removeAttr("disabled")
                        }
                        if (b.sla_from != "") {
                            $("#um_report_filter_sla_check").attr("checked", true);
                            $("#um_report_filter_sla_from").val(b.sla_from);
                            $("#um_report_filter_sla_to").val(b.sla_to);
                            $("#um_report_filter_sla_from").removeAttr("disabled");
                            $("#um_report_filter_sla_to").removeAttr("disabled")
                        }
                        if (b.termin_from != "") {
                            $("#um_report_filter_termin_check").attr("checked", true);
                            $("#um_report_filter_termin_from").val(b.termin_from);
                            $("#um_report_filter_termin_to").val(b.termin_to);
                            $("#um_report_filter_termin_from").removeAttr("disabled");
                            $("#um_report_filter_termin_to").removeAttr("disabled")
                        }
                        if (b.id_filter_range == "System") {
                            $("#div_save").hide()
                        } else {
                            $("#um_report_range").val(b.id_filter_range);
                            $("#div_save").show()
                        }
                        if (b.canDeleteFilter == "yes") {
                            $("#um_report_filter_delete_btn").show()
                        } else {
                            $("#um_report_filter_delete_btn").hide()
                        }
                    } catch (c) {
                        alert(c)
                    }
                }
                UNblockAllUI()
            }, "json")
        } else {
            UNblockAllUI()
        }
    });
    $("#um_report_filter_auftragseingang_check").change(function() {
        if ($("#um_report_filter_auftragseingang_check").attr("checked")) {
            $("#um_report_filter_auftragseingang_from").removeAttr("disabled");
            $("#um_report_filter_auftragseingang_to").removeAttr("disabled")
        } else {
            $("#um_report_filter_auftragseingang_from").attr("disabled", "disabled");
            $("#um_report_filter_auftragseingang_to").attr("disabled", "disabled");
            $("#um_report_filter_auftragseingang_from").val("");
            $("#um_report_filter_auftragseingang_to").val("")
        }
    });
    $("#um_report_filter_sla_check").change(function() {
        if ($("#um_report_filter_sla_check").attr("checked")) {
            $("#um_report_filter_sla_from").removeAttr("disabled");
            $("#um_report_filter_sla_to").removeAttr("disabled")
        } else {
            $("#um_report_filter_sla_from").attr("disabled", "disabled");
            $("#um_report_filter_sla_to").attr("disabled", "disabled");
            $("#um_report_filter_sla_from").val("");
            $("#um_report_filter_sla_to").val("")
        }
    });
    $("#um_report_filter_termin_check").change(function() {
        if ($("#um_report_filter_termin_check").attr("checked")) {
            $("#um_report_filter_termin_from").removeAttr("disabled");
            $("#um_report_filter_termin_to").removeAttr("disabled")
        } else {
            $("#um_report_filter_termin_from").attr("disabled", "disabled");
            $("#um_report_filter_termin_to").attr("disabled", "disabled");
            $("#um_report_filter_termin_from").val("");
            $("#um_report_filter_termin_to").val("")
        }
    });
    $("#um_monitoring_report_btn").click(function() {
        $("#um_report_filter").hide();
        $("#um_intervention_listing").hide();
        $("p[name=um_monitoring_filter_auswahl]").hide();
        $("#um_monitoring_submenu_intervention").hide();
        $("#um_spin_filter").hide();
        $("#um_intervention_flex_filter").hide();
        $("#um_monitoring_report_menu").show("fast");
        $("#um_ista_listing").hide()
    });
    $("#um_monitoring_spin_btn").click(function() {
        $("#um_report_filter").hide();
        $("#um_intervention_listing").hide();
        $("p[name=um_monitoring_filter_auswahl]").hide();
        $("#um_monitoring_submenu_intervention").hide();
        $("#um_monitoring_report_menu").hide();
        $("#um_intervention_flex_filter").hide();
        $("#um_spin_filter").show("fast");
        $("#um_ista_listing").hide()
    });
    $("#um_spin_filter_btn").click(function() {
        var c = $("#um_monitoring_spin_firma").val().trim();
        var b = $("#um_monitoring_spin_status").val().trim();
        if (c != "" && b != "") {
            blockAllUI();
            $("#um_spin_listing").load("EDI/unitymedia/spin_list", {
                inside: "yes",
                bl: c,
                status: b
            }, function(f, d, e) {
                UNblockAllUI()
            })
        } else {
            alert("Bitte eine Firma und einen Status auswÃ¤hlen!")
        }
    });
    $("#um_minitoring_report_show_btn").click(function() {
        blockAllUI();
        $("#um_intervention_flex_filter").hide();
        $("#um_report_listing").show("fast");
        $("#um_report_listing").load("EDI/unitymedia/getUnitymediaLaufzeitenProvide", {
            inside: "yes",
            fromDatum: $("#um_monitoring_report_date_from").val(),
            toDatum: $("#um_monitoring_report_date_to").val(),
            id_partenaire: parseInt($("#um_monitoring_report_type").val()) + parseInt($("#um_monitoring_report_societe").val())
        }, function(d, b, c) {
            UNblockAllUI()
        })
    });
    $("#um_monitoring_flex_btn").click(function() {
        console.log("click um_monitoring_flex_btn");
        $("#um_report_filter").hide();
        $("p[name=um_monitoring_filter_auswahl]").hide();
        $("#um_monitoring_submenu_intervention").hide();
        $("#um_spin_filter").hide();
        $("#um_monitoring_report_menu").hide();
        $("#um_intervention_flex_filter").show();
        $("#um_intervention_listing").show();
        $("#um_intervention_listing").html("");
        $("#um_ista_listing").hide()
    });
    $("#um_monitoring_ista_btn").click(function() {
        console.log("click um_monitoring_ista_btn");
        $("#um_report_filter").hide();
        $("p[name=um_monitoring_filter_auswahl]").hide();
        $("#um_monitoring_submenu_intervention").hide();
        $("#um_spin_filter").hide();
        $("#um_monitoring_report_menu").hide();
        $("#um_intervention_flex_filter").hide();
        $("#um_intervention_listing").hide();
        $("#um_intervention_listing").html("");
        $("#um_ista_listing").show();
        blockAllUI();
        $("#um_ista_listing").load("EDI/unitymedia/ista_list", {
            inside: "yes"
        }, function(d, b, c) {
            UNblockAllUI()
        })
    });
    $("#um_monitoring_flex_btn_load").click(function() {
        if ($("#um_intervention_flex_filter_auswahl").val() != "" && $("#um_intervention_flex_filter_auswahl").val() != "-----") {
            blockAllUI();
            $("#um_intervention_listing").load("EDI/unitymedia/flex_list", {
                inside: "yes",
                filter: $("#um_intervention_flex_filter_auswahl").val()
            }, function(d, b, c) {
                UNblockAllUI()
            })
        } else {
            alert("Bitte eine gÃ¼ltige auswahl treffen!")
        }
    })
}

function bind_um_report_delete_force_employe() {
    $("img[name=delete_force_employe]").unbind();
    $("img[name=delete_force_employe]").click(function() {
        $("#um_report_filter_force_employes").load("EDI/unitymedia/report_filter_force_employes_delete", {
            inside: "yes",
            id_employe: $(this).attr("employe_id")
        }, function(d, b, c) {
            bind_um_report_delete_force_employe();
            UNblockAllUI()
        })
    })
}
var objColumns_um_history = [{
    sTitle: "#",
    bVisible: true,
    bSortable: false,
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "Id Inter",
    bVisible: true,
    mDataProp: "id_inter",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "Typ<br>Wo",
    bVisible: true,
    mDataProp: "wo_typ",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "Kunde",
    bVisible: true,
    mDataProp: "client",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "Termin",
    bVisible: true,
    mDataProp: "date_inter",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "Status",
    bVisible: true,
    mDataProp: "etat",
    sDefaultContent: "",
    aTargets: [5]
}, {
    sTitle: "TK<br>Diag",
    bVisible: true,
    mDataProp: "diagnostic",
    sDefaultContent: "",
    aTargets: [6]
}, {
    sTitle: "id_client",
    bVisible: false,
    mDataProp: "id_client",
    sDefaultContent: "",
    aTargets: [7]
}, {
    sTitle: "logo",
    bVisible: false,
    mDataProp: "logo",
    sDefaultContent: "",
    aTargets: [8]
}];

function um_history_fnRowCallback(m, f, e, d) {
    var c = 0;
    $.grep(this.fnSettings().aoColumns, function(o, p) {
        if (o.mDataProp == "id_inter") {
            c = p
        }
    });
    if (f.id_inter) {
        var h = "";
        if (f.logo) {
            h += "<img src='/var/themes/default/logos/" + f.logo + "' style='vertical-align:middle'/>"
        }
        h += "&nbsp;";
        var b = '<a href="#" class="um_show_inter" style="text-decoration: underline;">' + h + f.id_inter + "</a>";
        var g = "";
        switch (parseInt(f.etat)) {
            case 1:
                g = "#DADADA";
                break;
            case 2:
                g = "#63DBAF";
                break;
            case 5:
                g = "#63DBAF";
                break;
            case 11:
                g = "#FFFA2b";
                break;
            case 20:
            case 21:
            case 22:
            case 23:
                g = "#E12727";
                break;
            default:
                g = "#FFFFFF"
        }
        $("td:eq(" + c + ")", m).attr("style", "background: " + g + " !important;").html(b)
    }
    return m
}

function UM_init_history_table(c, d) {
    var b = $("#um_history_table_" + d + "_" + c).dataTable({
        bDestroy: true,
        fnRowCallback: um_history_fnRowCallback,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: objColumns_um_history,
        aLengthMenu: [
            [5, 10, 25, 50, 100, -1],
            [5, 10, 25, 50, 100, "Alle"]
        ],
        iDisplayLength: 10,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageUM,
        aaSorting: [
            [4, "desc"]
        ],
        bStateSave: true
    });
    $("a.um_show_inter", "#um_history_table_" + d + "_" + c).die("mousedown").live("mousedown", function(g) {
        var h = this.parentNode.parentNode;
        var f = "";
        try {
            f = b.fnGetData(h);
            OpenClientTab(f.id_client, "", f.id_inter, -1)
        } catch (g) {
            f = b.fnGetData(h);
            OpenClientTab(f.id_client, "", f.id_inter, -1)
        }
        g.preventDefault()
    })
}
var objColumns_um_objectdata = [{
    sTitle: "Id",
    bVisible: false,
    mDataProp: "id",
    sDefaultContent: "",
    aTargets: [0]
}, {
    sTitle: "Art",
    bVisible: true,
    mDataProp: "type",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: "key",
    bVisible: false,
    mDataProp: "key",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: "Mitarbeiter",
    bVisible: true,
    mDataProp: "employe",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: "Datum",
    bVisible: true,
    mDataProp: "date",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: "Kommentar",
    bVisible: true,
    mDataProp: "data",
    sDefaultContent: "",
    aTargets: [5]
}];

function um_objectdata_fnRowCallback(e, d, c, b) {
    return e
}

function UM_init_object_data_table(c) {
    var b = $("#um_object_data_table_" + c).dataTable({
        bDestroy: true,
        fnRowCallback: um_objectdata_fnRowCallback,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: objColumns_um_objectdata,
        aLengthMenu: [
            [5, 10, 25, 50, 100, -1],
            [5, 10, 25, 50, 100, "Alle"]
        ],
        iDisplayLength: 10,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageUM,
        aaSorting: [
            [0, "desc"],
            [5, "desc"]
        ],
        bStateSave: true
    })
}

function unitymedia_insert_object_comment(c) {
    blockAllUI();
    var b = $("select[name=unitymedia_object_type_" + c + "]").val();
    var d = $("textarea[name=unitymedia_object_comment_" + c + "]").val();
    if (b != "" && d != "") {
        $("div[name=unitymedia_object_information_" + c).load("interventions/add_unitymedia_object_data", {
            suff: c,
            type: b,
            comment: d
        }, function(g, e, f) {
            $("select[name=unitymedia_object_type_" + c + "]").val("");
            $("textarea[name=unitymedia_object_comment_" + c + "]").val("");
            UNblockAllUI()
        })
    } else {
        alert("Bitte Art und Kommentar eintragen!");
        UNblockAllUI()
    }
    return false
}

function unitymedia_delete_object_comment(c, b) {
    blockAllUI();
    $("div[name=unitymedia_object_information_" + c).load("interventions/del_unitymedia_object_data", {
        suff: c,
        id_object_data: b
    }, function(f, d, e) {
        UNblockAllUI()
    })
}
var notification_attachment_files;
var notification_dropZone;
var oTableNotification;
var objLanguageNotification = {
    sProcessing: objLanguage_sProcessing,
    sLengthMenu: objLanguage_sLengthMenu,
    sZeroRecords: objLanguage_sZeroRecords,
    sInfo: objLanguage_sInfo,
    sInfoEmpty: objLanguage_sInfoEmpty,
    sInfoFiltered: objLanguage_sInfoFiltered,
    sInfoPostFix: "",
    sSearch: objLanguage_sSearch,
    sUrl: "",
    oPaginate: {
        sFirst: objLanguage_sFirst,
        sPrevious: objLanguage_sPrevious,
        sNext: objLanguage_sNext,
        sLast: objLanguage_sLast
    }
};
var objColumns_notifications = [{
    sTitle: "#",
    bVisible: true,
    bSortable: false,
    sClass: "center",
    sWidth: "15px",
    sDefaultContent: "",
    aTargets: [0],
    fnRender: function(b) {
        return '<img class=tdopen src="/var/themes/default/extjs_images/elbow-plus-nl.gif">'
    }
}, {
    sTitle: "id",
    bVisible: true,
    bSortable: false,
    mDataProp: "id",
    sWidth: "5%",
    sDefaultContent: "",
    aTargets: [1]
}, {
    sTitle: lang_notification_subject,
    bVisible: true,
    bSortable: false,
    mDataProp: "subject",
    sDefaultContent: "",
    aTargets: [2]
}, {
    sTitle: lang_notification_creationDate,
    bVisible: true,
    bSortable: false,
    mDataProp: "creationDate",
    sWidth: "25%",
    sDefaultContent: "",
    aTargets: [3]
}, {
    sTitle: lang_notification_notificationUserCount,
    bVisible: true,
    bSortable: false,
    mDataProp: "notificationUserCount",
    sWidth: "5%",
    sClass: "center",
    sDefaultContent: "",
    aTargets: [4]
}, {
    sTitle: lang_notification_notificationUserReadCount,
    bVisible: true,
    bSortable: false,
    mDataProp: "notificationUserReadCount",
    sWidth: "5%",
    sClass: "center",
    sDefaultContent: "",
    aTargets: [5]
}, ];

function NotificationButton(b) {
    NotificationForm("button", 0, b, 100000)
}

function NotificationForm(b, e, c, d) {
    $("#notification_create").load("notifications/create_notification", {
        act: b,
        soc_id: e,
        emp_id: c,
        age_id: d
    }, function() {
        $("#notification_create").dialog({
            title: "Notification",
            width: 800,
            height: 600,
            minWidth: 800,
            minHeight: 600,
            modal: true,
            resizable: false,
            autoOpen: false,
        });
        $("#notification_create").dialog("open")
    })
}

function notification_file_select(b) {
    b.stopPropagation();
    b.preventDefault();
    notification_attachment_files = b.dataTransfer.files;
    var c = [];
    for (var d = 0, e; e = notification_attachment_files[d]; d++) {
        c.push("<li><strong>", e.name, "</strong> (", e.type || "n/a", ") - ", e.size, " bytes, last modified: ", e.lastModifiedDate.toLocaleDateString(), "</li>")
    }
    document.getElementById("notification_attachment_list").innerHTML = "<ul>" + c.join("") + "</ul>"
}

function notification_handleDragOver(b) {
    b.stopPropagation();
    b.preventDefault();
    b.dataTransfer.dropEffect = "copy"
}

function init_notification_popup_window() {
    notification_dropZone = document.getElementById("notification_attachment_list");
    notification_dropZone.addEventListener("dragover", notification_handleDragOver, false);
    notification_dropZone.addEventListener("drop", notification_file_select, false);
    $(".notification_editControls a").click(function(b) {
        switch ($(this).data("role")) {
            case "h1":
            case "h2":
            case "p":
                document.execCommand("formatBlock", false, $(this).data("role"));
                break;
            case "increaseFontSize":
                document.execCommand("increaseFontSize", false, true);
                break;
            case "decreaseFontSize":
                document.execCommand("decreaseFontSize", false, true);
                break;
            default:
                document.execCommand($(this).data("role"), false, null);
                break
        }
        return false
    });
    $("#notification_colorpick").change(function() {
        document.execCommand("ForeColor", false, $("#notification_colorpick").val());
        $("#notification_colorpick").val("")
    });
    $("#notification_publish").click(function() {
        if ($("#notification_subject").val().trim() == "" || $("#notification_editor").html().trim() == "") {
            alert(message_you_must_fill_fields)
        } else {
            blockAllUI();
            var d = new FormData();
            d.append("notification_act", $("#notification_act").val());
            d.append("notification_soc_id", $("#notification_soc_id").val());
            d.append("notification_age_id", $("#notification_age_id").val());
            d.append("notification_emp_id", $("#notification_emp_id").val());
            d.append("notification_severity", $("#notification_severity").val());
            d.append("notification_subject", $("#notification_subject").val());
            d.append("notification_editor", $("#notification_editor").html());
            if (notification_attachment_files !== undefined) {
                for (var c = 0; c < notification_attachment_files.length; c++) {
                    var b = notification_attachment_files[c];
                    d.append("files[]", b, b.name)
                }
            }
            var e = new XMLHttpRequest();
            e.open("POST", "notifications/publish", true);
            e.send(d);
            e.onreadystatechange = function() {
                if (e.readyState == 4 && e.status == 200) {
                    $.jGrowl(e.responseText, {
                        theme: "jGrowlInfo"
                    });
                    $("#notification_create").dialog("close");
                    UNblockAllUI()
                } else {
                    if (e.readyState == 4 && e.status != 200) {
                        $.jGrowl(e.responseText, {
                            theme: "jGrowlInfo"
                        });
                        UNblockAllUI()
                    }
                }
            }
        }
    });
    $("#notification_attachment_del_bt").click(function() {
        notification_attachment_files = FileList;
        document.getElementById("notification_attachment_list").innerHTML = "Attachment Dropzone"
    })
}

function fnFormatDetailsNotification(d, e) {
    var b = d.fnGetData(e);
    var g = d.fnGetPosition(e);
    var c = $(d).attr("id");
    var f = "";
    if (c == "notifications_table") {
        f = '<pre id="notification_detail_' + c + g + '" class="notification_details common_form_container"><img src="/var/themes/default/img/my_anim_idx.gif"> ' + lang_notification_loading_details + "</pre>";
        $.post("notifications/get_notification_id", {
            id: b.id
        }, function(h) {
            $("#notification_detail_" + c + g).hide().html(h).fadeIn("fast")
        })
    }
    return f
}

function init_notifications_table() {
    oTableNotification1 = $("#notifications_table").dataTable({
        bDestroy: true,
        fnRowCallback: um_intervention_fnRowCallback,
        bSortable: false,
        autoWidth: false,
        aoColumnDefs: objColumns_notifications,
        aLengthMenu: [
            [15, 25, 50, 100, 250, 500, -1],
            [15, 25, 50, 100, 250, 500, "Alle"]
        ],
        iDisplayLength: 15,
        bJQueryUI: false,
        sPaginationType: "full_numbers",
        oLanguage: objLanguageNotification,
        aaSorting: [
            [0, "asc"]
        ],
        bStateSave: false,
        sDom: 'T<"clear">lfrtip',
        oTableTools: {
            aButtons: [{
                sExtends: "text",
                sButtonText: "Reload",
                fnClick: function(b, c, d) {
                    blockAllUI();
                    $("#RNotificationTab").load("notifications/load_tab", {
                        inside: "yes"
                    }, function(g, e, f) {
                        UNblockAllUI()
                    })
                }
            }]
        }
    });
    $("#notifications_table img.tdopen").css("cursor", "pointer");
    $("#notifications_table img.tdopen").click(function() {
        var b = $(this).parents("tr")[0];
        if (this.src.match("elbow-minus-nl")) {
            this.src = "/var/themes/default/extjs_images/elbow-plus-nl.gif";
            oTableNotification1.fnClose(b)
        } else {
            this.src = "/var/themes/default/extjs_images/elbow-minus-nl.gif";
            oTableNotification1.fnOpen(b, fnFormatDetailsNotification(oTableNotification1, b), "details")
        }
    })
}
/*
 * jQuery Cookie Plugin v1.4.1
 * https://github.com/carhartl/jquery-cookie
 *
 * Copyright 2013 Klaus Hartl
 * Released under the MIT license
 */
(function(b) {
    if (typeof define === "function" && define.amd) {
        define(["jquery"], b)
    } else {
        if (typeof exports === "object") {
            b(require("jquery"))
        } else {
            b(jQuery)
        }
    }
}(function(g) {
    var b = /\+/g;

    function e(n) {
        return c.raw ? n : encodeURIComponent(n)
    }

    function h(n) {
        return c.raw ? n : decodeURIComponent(n)
    }

    function m(n) {
        return e(c.json ? JSON.stringify(n) : String(n))
    }

    function d(n) {
        if (n.indexOf('"') === 0) {
            n = n.slice(1, -1).replace(/\\"/g, '"').replace(/\\\\/g, "\\")
        }
        try {
            n = decodeURIComponent(n.replace(b, " "));
            return c.json ? JSON.parse(n) : n
        } catch (o) {}
    }

    function f(o, n) {
        var p = c.raw ? o : d(o);
        return g.isFunction(n) ? n(p) : p
    }
    var c = g.cookie = function(v, u, D) {
        if (u !== undefined && !g.isFunction(u)) {
            D = g.extend({}, c.defaults, D);
            if (typeof D.expires === "number") {
                var w = D.expires,
                    C = D.expires = new Date();
                C.setTime(+C + w * 86400000)
            }
            return (document.cookie = [e(v), "=", m(u), D.expires ? "; expires=" + D.expires.toUTCString() : "", D.path ? "; path=" + D.path : "", D.domain ? "; domain=" + D.domain : "", D.secure ? "; secure" : ""].join(""))
        }
        var E = v ? undefined : {};
        var z = document.cookie ? document.cookie.split("; ") : [];
        for (var r = 0, p = z.length; r < p; r++) {
            var q = z[r].split("=");
            var n = h(q.shift());
            var o = q.join("=");
            if (v && v === n) {
                E = f(o, u);
                break
            }
            if (!v && (o = f(o)) !== undefined) {
                E[n] = o
            }
        }
        return E
    };
    c.defaults = {};
    g.removeCookie = function(o, n) {
        if (g.cookie(o) === undefined) {
            return false
        }
        g.cookie(o, "", g.extend({}, n, {
            expires: -1
        }));
        return !g.cookie(o)
    }
}));

function isEmptyCtrl(b) {
    if (b == "" || b == "undefined" || b.trim() == "") {
        return true
    }
    return false
}

function intervention_add_main_control(e, b) {
    var d = regional_version;
    var c = {};
    switch (d) {
        case "FR01":
            c = fr_intervention_add_main_control(e, b);
            break;
        case "BN01":
            c = bn_intervention_add_main_control(e, b);
            break;
        case "IT01":
            c = it_intervention_add_main_control(e, b);
            break;
        case "DE01":
            c = de_intervention_add_main_control(e, b);
            break;
        default:
            break
    }
    return c
}

function intervention_add_specific_control(b) {
    var d = regional_version;
    var c;
    switch (d) {
        case "FR01":
            c = fr_intervention_add_specific_control(b);
            break;
        case "BN01":
            c = bn_intervention_add_specific_control(b);
            break;
        case "IT01":
            c = it_intervention_add_specific_control(b);
            break;
        case "DE01":
            c = de_intervention_add_specific_control(b);
            break;
        default:
            break
    }
    return c
}

function bn_intervention_add_main_control(m, b) {
    var c = $("#" + b + " select[name='inter_stat']").val();
    var g = $("#" + b + " select[name='type_inter_todo_id']").val();
    var f = $("#" + b + " [name='requst_details']").val();
    var e = $("#" + b + " [name='report_details']").val();
    var h = $("#" + b + " select[name='report_result_id']").val();
    var d = {};
    if (isEmptyCtrl(g) || g == "-1") {
        d = {
            result: false,
            msg: "Intervention type is empty"
        }
    } else {
        if (isEmptyCtrl(f)) {
            d = {
                result: false,
                msg: "Intervention request details is empty"
            }
        } else {
            switch (c) {
                case "3":
                case "4":
                    if (isEmptyCtrl(e)) {
                        d = {
                            result: false,
                            msg: "Intervention report details is empty"
                        }
                    } else {
                        if (isEmptyCtrl(h) || h == "-1" || h == "0") {
                            d = {
                                result: false,
                                msg: "Intervention resultat code is empty"
                            }
                        } else {
                            d = {
                                result: true,
                                msg: "success"
                            }
                        }
                    }
                    break;
                default:
                    d = {
                        result: true,
                        msg: "success"
                    };
                    break
            }
        }
    }
    return d
}

function fr_intervention_add_main_control(m, b) {
    var c = $("#" + b + " select[name='inter_stat']").val();
    var g = $("#" + b + " select[name='type_inter_todo_id']").val();
    var f = $("#" + b + " [name='requst_details']").val();
    var e = $("#" + b + " [name='report_details']").val();
    var h = $("#" + b + " select[name='report_result_id']").val();
    var d = {};
    if (isEmptyCtrl(g) || g == "-1") {
        d = {
            result: false,
            msg: "Le champ type d'intervention est vide"
        }
    } else {
        if (isEmptyCtrl(f)) {
            d = {
                result: false,
                msg: "Le champ dÃ©tail de l'intervention est vide"
            }
        } else {
            switch (c) {
                case "3":
                case "4":
                    if (isEmptyCtrl(e)) {
                        d = {
                            result: false,
                            msg: "Le champ dÃ©tail de compte rendu est vide"
                        }
                    } else {
                        if (isEmptyCtrl(h) || h == "-1" || h == "0") {
                            d = {
                                result: false,
                                msg: "Le champ code resultat est vide"
                            }
                        } else {
                            d = {
                                result: true,
                                msg: "success"
                            }
                        }
                    }
                    break;
                default:
                    d = {
                        result: true,
                        msg: "success"
                    };
                    break
            }
        }
    }
    return d
};
